import { OfficeExtension } from "../api-extractor-inputs-office/office"
import { Office as Outlook} from "../api-extractor-inputs-outlook/outlook"
////////////////////////////////////////////////////////////////
/////////////////////// Begin Word APIs ////////////////////////
////////////////////////////////////////////////////////////////

export declare namespace Word {
    /**
     * Represents the {@link Word.Editor | editors} in a protected (read-only) Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class EditorCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns an `Editor` object that represents a new permission for the specified user to modify a range within the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param editorId - The user's email alias (if in the same domain) or an email address.
         */
        addById(editorId: string): Word.Editor;
        /**
         * Returns an `Editor` object that represents a new permission for the specified group of users to modify a range within the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param editorType - An `EditorType` that represents a group of users.
         */
        addByType(editorType: Word.EditorType): Word.Editor;
        /**
         * Returns an `Editor` object that represents a new permission for the specified group of users to modify a range within the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param editorType - An `EditorType` that represents a group of users.
         */
        addByType(editorType: "Current" | "Editors" | "Everyone" | "Owners"): Word.Editor;
        /**
         * Returns the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Gets an `Editor` object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The index of the object in this collection.
         */
        getItemAt(index: number): Word.Editor;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.EditorCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.EditorCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.EditorCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.EditorCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.EditorCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.EditorCollectionData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): {
            [key: string]: string;
        };
    }
    /**
     * Represents a user with permissions to edit authorized portions of a protected (read-only) Word document. To learn more, see {@link https://support.microsoft.com/office/187ed01c-8795-43e1-9fd0-c9fca419dadf  | Allow changes to parts of a protected Word document}.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Editor extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets a `Range` object that represents the next range that the editor has permissions to modify.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly nextRange: Word.Range;
        /**
         * Gets a `Range` object that represents the portion of the document that's contained in the `Editor` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Gets the identifier for the `Editor` object when the parent document is saved as a webpage.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly id: string;
        /**
         * Gets the name of the editor.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly name: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.EditorUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Editor): void;
        /**
         * Deletes the `Editor` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Removes all editing permissions in the document for the editor. The editor will be deleted next time the document opens.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        removeAllPermissions(): void;
        /**
         * Selects all the shapes in the document that were inserted or edited by the editor.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        selectAllShapes(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.EditorLoadOptions): Word.Editor;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Editor;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Editor;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Editor;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Editor;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Editor` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.EditorData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.EditorData;
    }
    /**
     * Represents the coauthoring conflicts in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class ConflictCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Conflict[];
        /**
         * Accepts all of the user's changes, removes the conflicts, and merges the changes into the server copy of the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        acceptAll(): void;
        /**
         * Gets a `Conflict` object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - A number that identifies the index location of a `Conflict` object.
         */
        getItem(index: number): Word.Conflict;
        /**
         * Rejects all of the user's changes and retains the server copy of the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rejectAll(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ConflictCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ConflictCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ConflictCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.ConflictCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ConflictCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ConflictCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ConflictCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ConflictCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.ConflictCollectionData;
    }
    /**
     * Represents a coauthoring conflict in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Conflict extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets a `Range` object that represents the portion of the document that's contained in the `Conflict` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Gets the `RevisionType` for the `Conflict` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.RevisionType | "None" | "Insert" | "Delete" | "Property" | "ParagraphNumber" | "DisplayField" | "Reconcile" | "Conflict" | "Style" | "Replace" | "ParagraphProperty" | "TableProperty" | "SectionProperty" | "StyleDefinition" | "MovedFrom" | "MovedTo" | "CellInsertion" | "CellDeletion" | "CellMerge" | "CellSplit" | "ConflictInsert" | "ConflictDelete";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ConflictUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Conflict): void;
        /**
         * Accepts the user's change and removes the conflict.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        accept(): void;
        /**
         * Rejects the user's change, removes the conflict, and accepts the server copy of the change for the conflict.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        reject(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ConflictLoadOptions): Word.Conflict;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Conflict;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Conflict;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Conflict;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Conflict;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Conflict` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ConflictData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ConflictData;
    }
    /**
     * Represents the color scheme of a critique in the document, affecting underline and highlight.
     *
     * @remarks
     * [Api set: WordApi 1.7]
     */
    enum CritiqueColorScheme {
        /**
         * Red color.
         * @remarks
         * [Api set: WordApi 1.7]
         */
        red = "Red",
        /**
         * Green color.
         * @remarks
         * [Api set: WordApi 1.7]
         */
        green = "Green",
        /**
         * Blue color.
         * @remarks
         * [Api set: WordApi 1.7]
         */
        blue = "Blue",
        /**
         * Lavender color.
         * @remarks
         * [Api set: WordApi 1.7]
         */
        lavender = "Lavender",
        /**
         * Berry color.
         * @remarks
         * [Api set: WordApi 1.7]
         */
        berry = "Berry",
    }
    /**
     * Properties defining the behavior of the pop-up menu for a given critique.
     *
     * @remarks
     * [Api set: WordApi 1.8]
     */
    export interface CritiquePopupOptions {
        /**
         * Gets the manifest resource ID of the string to use for branding. This branding text appears next to your add-in icon in the pop-up menu.
         *
         * @remarks
         * [Api set: WordApi 1.8]
         */
        brandingTextResourceId: string;
        /**
         * Gets the manifest resource ID of the string to use as the subtitle.
         *
         * @remarks
         * [Api set: WordApi 1.8]
         */
        subtitleResourceId: string;
        /**
         * Gets the suggestions to display in the critique pop-up menu.
         *
         * @remarks
         * [Api set: WordApi 1.8]
         */
        suggestions: string[];
        /**
         * Gets the manifest resource ID of the string to use as the title.
         *
         * @remarks
         * [Api set: WordApi 1.8]
         */
        titleResourceId: string;
    }
    /**
     * Critique that will be rendered as underline for the specified part of paragraph in the document.
     *
     * @remarks
     * [Api set: WordApi 1.7]
     */
    export interface Critique {
        /**
         * Specifies the color scheme of the critique.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        colorScheme: Word.CritiqueColorScheme | "Red" | "Green" | "Blue" | "Lavender" | "Berry";
        /**
         * Specifies the length of the critique inside paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        length: number;
        /**
         * Specifies the behavior of the pop-up menu for the critique.
         *
         * @remarks
         * [Api set: WordApi 1.8]
         */
        popupOptions?: Word.CritiquePopupOptions;
        /**
         * Specifies the start index of the critique inside paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        start: number;
    }
    /**
     * Represents an annotation wrapper around critique displayed in the document.
     *
     * @remarks
     * [Api set: WordApi 1.7]
     */
    export class CritiqueAnnotation extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the range of text that is annotated.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        readonly range: Word.Range;
        /**
         * Gets the critique that was passed when the annotation was inserted.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        readonly critique: Word.Critique;
        /**
         * Accepts the critique. This will change the annotation state to `accepted`.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        accept(): void;
        /**
         * Rejects the critique. This will change the annotation state to `rejected`.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        reject(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CritiqueAnnotationLoadOptions): Word.CritiqueAnnotation;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CritiqueAnnotation;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.CritiqueAnnotation;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CritiqueAnnotation;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CritiqueAnnotation;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CritiqueAnnotation` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CritiqueAnnotationData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CritiqueAnnotationData;
    }
    /**
     * Represents the state of the annotation.
     *
     * @remarks
     * [Api set: WordApi 1.7]
     */
    enum AnnotationState {
        /**
         * Created.
         * @remarks
         * [Api set: WordApi 1.7]
         */
        created = "Created",
        /**
         * Accepted.
         * @remarks
         * [Api set: WordApi 1.7]
         */
        accepted = "Accepted",
        /**
         * Rejected.
         * @remarks
         * [Api set: WordApi 1.7]
         */
        rejected = "Rejected",
    }
    /**
     * Annotations set produced by the add-in. Currently supporting only critiques.
     *
     * @remarks
     * [Api set: WordApi 1.7]
     */
    export interface AnnotationSet {
        /**
         * Critiques.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        critiques: Word.Critique[];
    }
    /**
     * Represents an annotation attached to a paragraph.
     *
     * @remarks
     * [Api set: WordApi 1.7]
     */
    export class Annotation extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the critique annotation object.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        readonly critiqueAnnotation: Word.CritiqueAnnotation;
        /**
         * Gets the unique identifier, which is meant to be used for easier tracking of Annotation objects.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        readonly id: string;
        /**
         * Gets the state of the annotation.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        readonly state: Word.AnnotationState | "Created" | "Accepted" | "Rejected";
        /**
         * Deletes the annotation.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        delete(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.AnnotationLoadOptions): Word.Annotation;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Annotation;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Annotation;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Annotation;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Annotation;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Annotation` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.AnnotationData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.AnnotationData;
    }
    /**
     * Holds annotation information that is passed back on annotation added event.
     *
     * @remarks
     * [Api set: WordApi 1.7]
     */
    export interface AnnotationInsertedEventArgs {
        /**
         * Specifies the annotation IDs for which the event was fired.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        ids: string[];
    }
    /**
     * Holds annotation information that is passed back on annotation inserted event.
     *
     * @remarks
     * [Api set: WordApi 1.7]
     */
    export interface AnnotationClickedEventArgs {
        /**
         * Specifies the annotation ID for which the event was fired.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        id: string;
    }
    /**
     * Holds annotation information that is passed back on annotation removed event.
     *
     * @remarks
     * [Api set: WordApi 1.7]
     */
    export interface AnnotationRemovedEventArgs {
        /**
         * Specifies the annotation IDs for which the event was fired.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        ids: string[];
    }
    /**
     * Holds annotation information that is passed back on annotation hovered event.
     *
     * @remarks
     * [Api set: WordApi 1.7]
     */
    export interface AnnotationHoveredEventArgs {
        /**
         * Specifies the annotation ID for which the event was fired.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        id: string;
    }
    /**
     * Represents action information that's passed back on annotation pop-up action event.
     *
     * @remarks
     * [Api set: WordApi 1.8]
     */
    export interface AnnotationPopupActionEventArgs {
        /**
         * Specifies the chosen action in the pop-up menu.
         *
         * @remarks
         * [Api set: WordApi 1.8]
         */
        action: string;
        /**
         * Specifies the accepted suggestion (only populated when accepting a critique suggestion).
         *
         * @remarks
         * [Api set: WordApi 1.8]
         */
        critiqueSuggestion: string;
        /**
         * Specifies the annotation ID for which the event was fired.
         *
         * @remarks
         * [Api set: WordApi 1.8]
         */
        id: string;
    }
    /**
     * Contains a collection of {@link Word.Annotation} objects.
     *
     * @remarks
     * [Api set: WordApi 1.7]
     */
    export class AnnotationCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Annotation[];
        /**
         * Gets the first annotation in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        getFirst(): Word.Annotation;
        /**
         * Gets the first annotation in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`.
                    For further information,
                    see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        getFirstOrNullObject(): Word.Annotation;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.AnnotationCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.AnnotationCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.AnnotationCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.AnnotationCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.AnnotationCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.AnnotationCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.AnnotationCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.AnnotationCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.AnnotationCollectionData;
    }
    /**
     * Represents the application object.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class Application extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `Bibliography` object that represents the bibliography reference sources stored in Microsoft Word.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly bibliography: Word.Bibliography;
        /**
         * Returns a `FontNameCollection` object that represents all the available font names in Microsoft Word.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly fontNames: Word.FontNameCollection;
        /**
         * Returns a `ListTemplateGalleryCollection` object that represents all the list template galleries in Microsoft Word.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly listTemplateGalleries: Word.ListTemplateGalleryCollection;
        /**
         * Returns a `TemplateCollection` object that represents all the available templates: global templates and those attached to open documents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly templates: Word.TemplateCollection;
        /**
         * Specifies if Microsoft Word automatically detects the language you are using as you type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        checkLanguage: boolean;
        /**
         * Gets a `LanguageId` value that represents the language selected for the Microsoft Word user interface.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly language: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Application): void;
        /**
         * Creates a new document by using an optional Base64-encoded .docx file.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param base64File - Optional. The Base64-encoded .docx file. The default value is null.
         */
        createDocument(base64File?: string): Word.DocumentCreated;
        /**
         * Opens a document and displays it in a new tab or window.
                     The following are examples for the various supported clients and platforms.
                    
                     - Remote or cloud location example: `https://microsoft.sharepoint.com/some/path/Document.docx`
                    
                     - Local location examples for Windows: `C:\\Users\\Someone\\Documents\\Document.docx` (includes required escaped backslashes), `file://mycomputer/myfolder/Document.docx`
                    
                     - Local location example for Mac and iOS: `/User/someone/document.docx`
         *
         * @remarks
         * [Api set: WordApi 1.6]
         *
         * @param filePath - Required. The absolute path of the .docx file. Word on the web only supports remote (cloud) locations, while Word on Windows, on Mac, and on iOS support local and remote locations.
         */
        openDocument(filePath: string): void;
        /**
         * Parse styles from template Base64 file and return JSON format of retrieved styles as a string.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param base64File - Required. The template file.
         */
        retrieveStylesFromBase64(base64File: string): OfficeExtension.ClientResult<string>;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ApplicationLoadOptions): Word.Application;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Application;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Application;
        /**
         * Create a new instance of the `Word.Application` object.
         */
        static newObject(context: OfficeExtension.ClientRequestContext): Word.Application;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Application` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ApplicationData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ApplicationData;
    }
    /**
     * Represents the body of a document or a section.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class Body extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the collection of rich text content control objects in the body.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly contentControls: Word.ContentControlCollection;
        /**
         * Gets the collection of endnotes in the body.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly endnotes: Word.NoteItemCollection;
        /**
         * Gets the collection of field objects in the body.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly fields: Word.FieldCollection;
        /**
         * Gets the text format of the body. Use this to get and set font name, size, color and other properties.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly font: Word.Font;
        /**
         * Gets the collection of footnotes in the body.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly footnotes: Word.NoteItemCollection;
        /**
         * Gets the collection of InlinePicture objects in the body. The collection doesn't include floating images.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly inlinePictures: Word.InlinePictureCollection;
        /**
         * Gets the collection of list objects in the body.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly lists: Word.ListCollection;
        /**
         * Gets the collection of paragraph objects in the body.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * Important: Paragraphs in tables aren't returned for requirement sets 1.1 and 1.2. From requirement set 1.3, paragraphs in tables are also returned.
         */
        readonly paragraphs: Word.ParagraphCollection;
        /**
         * Gets the parent body of the body. For example, a table cell body's parent body could be a header. Throws an `ItemNotFound` error if there isn't a parent body.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentBody: Word.Body;
        /**
         * Gets the parent body of the body. For example, a table cell body's parent body could be a header. If there isn't a parent body, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentBodyOrNullObject: Word.Body;
        /**
         * Gets the content control that contains the body. Throws an `ItemNotFound` error if there isn't a parent content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly parentContentControl: Word.ContentControl;
        /**
         * Gets the content control that contains the body. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentContentControlOrNullObject: Word.ContentControl;
        /**
         * Gets the parent section of the body. Throws an `ItemNotFound` error if there isn't a parent section.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentSection: Word.Section;
        /**
         * Gets the parent section of the body. If there isn't a parent section, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentSectionOrNullObject: Word.Section;
        /**
         * Gets the collection of shape objects in the body, including both inline and floating shapes. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly shapes: Word.ShapeCollection;
        /**
         * Gets the collection of table objects in the body.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly tables: Word.TableCollection;
        /**
         * Specifies the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        style: string;
        /**
         * Specifies the built-in style name for the body. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        styleBuiltIn: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
        /**
         * Gets the text of the body. Use the insertText method to insert text.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly text: string;
        /**
         * Gets the type of the body. The type can be 'MainDoc', 'Section', 'Header', 'Footer', or 'TableCell'. Additional types ‘Footnote’, ‘Endnote’, and ‘NoteItem’ are supported in WordApiOnline 1.1 and later.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly type: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell" | "Footnote" | "Endnote" | "NoteItem" | "Shape";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.BodyUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Body): void;
        /**
         * Clears the contents of the body object. The user can perform the undo operation on the cleared content.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        clear(): void;
        /**
         * Gets comments associated with the body.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getComments(): Word.CommentCollection;
        /**
         * Gets the currently supported content controls in the body.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * Important: If specific types are provided in the options parameter, only content controls of supported types are returned.
         * Be aware that an exception will be thrown on using methods of a generic {@link Word.ContentControl} that aren't relevant for the specific type.
         * With time, additional types of content controls may be supported. Therefore, your add-in should request and handle specific types of content controls.
         *
         * @param options - Optional. Options that define which content controls are returned.
         */
        getContentControls(options?: Word.ContentControlOptions): Word.ContentControlCollection;
        /**
         * Gets an HTML representation of the body object. When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document. This method doesn't return the exact same HTML for the same document on different platforms (Windows, Mac, Word on the web, etc.). If you need exact fidelity, or consistency across platforms, use `Body.getOoxml()` and convert the returned XML to HTML.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        getHtml(): OfficeExtension.ClientResult<string>;
        /**
         * Gets the OOXML (Office Open XML) representation of the body object.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        getOoxml(): OfficeExtension.ClientResult<string>;
        /**
         * Gets the whole body, or the starting or ending point of the body, as a range.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rangeLocation - Optional. The range location must be 'Whole', 'Start', 'End', 'After', or 'Content'.
         */
        getRange(rangeLocation?: Word.RangeLocation.whole | Word.RangeLocation.start | Word.RangeLocation.end | Word.RangeLocation.after | Word.RangeLocation.content | "Whole" | "Start" | "End" | "After" | "Content"): Word.Range;
        /**
         * Gets reviewed text based on ChangeTrackingVersion selection.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param changeTrackingVersion - Optional. The value must be 'Original' or 'Current'. The default is 'Current'.
         */
        getReviewedText(changeTrackingVersion?: Word.ChangeTrackingVersion): OfficeExtension.ClientResult<string>;
        /**
         * Gets reviewed text based on ChangeTrackingVersion selection.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param changeTrackingVersion - Optional. The value must be 'Original' or 'Current'. The default is 'Current'.
         */
        getReviewedText(changeTrackingVersion?: "Original" | "Current"): OfficeExtension.ClientResult<string>;
        /**
         * Gets the collection of the TrackedChange objects in the body.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        getTrackedChanges(): Word.TrackedChangeCollection;
        /**
         * Inserts a break at the specified location in the main document.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param breakType - Required. The break type to add to the body.
         * @param insertLocation - Required. The value must be 'Start' or 'End'.
         */
        insertBreak(breakType: Word.BreakType | "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: Word.InsertLocation.start | Word.InsertLocation.end | "Start" | "End"): void;
        /**
         * Wraps the Body object with a content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * Note: The `contentControlType` parameter was introduced in WordApi 1.5. `PlainText` support was added in WordApi 1.5. `CheckBox` support was added in WordApi 1.7.
         * `DropDownList` and `ComboBox` support was added in WordApi 1.9.
         *
         * @param contentControlType - Optional. Content control type to insert. Must be 'RichText', 'PlainText', 'CheckBox', 'DropDownList', or 'ComboBox'. The default is 'RichText'.
         */
        insertContentControl(contentControlType?: Word.ContentControlType.richText | Word.ContentControlType.plainText | Word.ContentControlType.checkBox | Word.ContentControlType.dropDownList | Word.ContentControlType.comboBox | "RichText" | "PlainText" | "CheckBox" | "DropDownList" | "ComboBox"): Word.ContentControl;
        /**
         * Inserts a document into the body at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * Insertion isn't supported if the document being inserted contains an ActiveX control (likely in a form field). Consider replacing such a form field with a content control or other option appropriate for your scenario.
         *
         * @param base64File - Required. The Base64-encoded content of a .docx file.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'.
         */
        insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.Range;
        /**
         * Inserts HTML at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param html - Required. The HTML to be inserted in the document.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'.
         */
        insertHtml(html: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.Range;
        /**
         * Inserts a picture into the body at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         *
         * @param base64EncodedImage - Required. The Base64-encoded image to be inserted in the body.
         * @param insertLocation - Required. The value must be 'Start' or 'End'.
         */
        insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation.start | Word.InsertLocation.end | "Start" | "End"): Word.InlinePicture;
        /**
         * Inserts OOXML at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param ooxml - Required. The OOXML to be inserted.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'.
         */
        insertOoxml(ooxml: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.Range;
        /**
         * Inserts a paragraph at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param paragraphText - Required. The paragraph text to be inserted.
         * @param insertLocation - Required. The value must be 'Start' or 'End'.
         */
        insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation.start | Word.InsertLocation.end | "Start" | "End"): Word.Paragraph;
        /**
         * Inserts a table with the specified number of rows and columns.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rowCount - Required. The number of rows in the table.
         * @param columnCount - Required. The number of columns in the table.
         * @param insertLocation - Required. The value must be 'Start' or 'End'.
         * @param values - Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
         */
        insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation.start | Word.InsertLocation.end | "Start" | "End", values?: string[][]): Word.Table;
        /**
         * Inserts text into the body at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param text - Required. Text to be inserted.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'.
         */
        insertText(text: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.Range;
        /**
         * Performs a search with the specified SearchOptions on the scope of the body object. The search results are a collection of range objects.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param searchText - Required. The search text. Can be a maximum of 255 characters.
         * @param searchOptions - Optional. Options for the search.
         */
        search(searchText: string, searchOptions?: Word.SearchOptions | {
            ignorePunct?: boolean;
            ignoreSpace?: boolean;
            matchCase?: boolean;
            matchPrefix?: boolean;
            matchSuffix?: boolean;
            matchWholeWord?: boolean;
            matchWildcards?: boolean;
        }): Word.RangeCollection;
        /**
         * Selects the body and navigates the Word UI to it.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: Word.SelectionMode): void;
        /**
         * Selects the body and navigates the Word UI to it.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: "Select" | "Start" | "End"): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BodyLoadOptions): Word.Body;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Body;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Body;
        /**
         * Occurs when new comments are added.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentAdded: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when a comment or its reply is changed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentChanged: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when comments are deleted.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentDeleted: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when a comment is deselected.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentDeselected: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when a comment is selected.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentSelected: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Body;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Body;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Body` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BodyData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.BodyData;
    }
    /**
     * Represents the Border object for text, a paragraph, or a table.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.1]
     */
    export class Border extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the color for the border. Color is specified in ‘#RRGGBB’ format or by using the color name.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        color: string;
        /**
         * Gets the location of the border.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        readonly location: Word.BorderLocation | "Top" | "Left" | "Bottom" | "Right" | "InsideHorizontal" | "InsideVertical" | "Inside" | "Outside" | "All";
        /**
         * Specifies the border type for the border.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        type: Word.BorderType | "Mixed" | "None" | "Single" | "Double" | "Dotted" | "Dashed" | "DotDashed" | "Dot2Dashed" | "Triple" | "ThinThickSmall" | "ThickThinSmall" | "ThinThickThinSmall" | "ThinThickMed" | "ThickThinMed" | "ThinThickThinMed" | "ThinThickLarge" | "ThickThinLarge" | "ThinThickThinLarge" | "Wave" | "DoubleWave" | "DashedSmall" | "DashDotStroked" | "ThreeDEmboss" | "ThreeDEngrave";
        /**
         * Specifies whether the border is visible.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        visible: boolean;
        /**
         * Specifies the width for the border.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        width: Word.BorderWidth | "None" | "Pt025" | "Pt050" | "Pt075" | "Pt100" | "Pt150" | "Pt225" | "Pt300" | "Pt450" | "Pt600" | "Mixed";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.BorderUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Border): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BorderLoadOptions): Word.Border;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Border;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Border;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Border;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Border;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Border` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BorderData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.BorderData;
    }
    /**
     * Represents the `BorderUniversal` object, which manages borders for a range, paragraph, table, or frame.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class BorderUniversal extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the graphical page-border design for the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        artStyle: Word.PageBorderArt | "Apples" | "MapleMuffins" | "CakeSlice" | "CandyCorn" | "IceCreamCones" | "ChampagneBottle" | "PartyGlass" | "ChristmasTree" | "Trees" | "PalmsColor" | "Balloons3Colors" | "BalloonsHotAir" | "PartyFavor" | "ConfettiStreamers" | "Hearts" | "HeartBalloon" | "Stars3D" | "StarsShadowed" | "Stars" | "Sun" | "Earth2" | "Earth1" | "PeopleHats" | "Sombrero" | "Pencils" | "Packages" | "Clocks" | "Firecrackers" | "Rings" | "MapPins" | "Confetti" | "CreaturesButterfly" | "CreaturesLadyBug" | "CreaturesFish" | "BirdsFlight" | "ScaredCat" | "Bats" | "FlowersRoses" | "FlowersRedRose" | "Poinsettias" | "Holly" | "FlowersTiny" | "FlowersPansy" | "FlowersModern2" | "FlowersModern1" | "WhiteFlowers" | "Vine" | "FlowersDaisies" | "FlowersBlockPrint" | "DecoArchColor" | "Fans" | "Film" | "Lightning1" | "Compass" | "DoubleD" | "ClassicalWave" | "ShadowedSquares" | "TwistedLines1" | "Waveline" | "Quadrants" | "CheckedBarColor" | "Swirligig" | "PushPinNote1" | "PushPinNote2" | "Pumpkin1" | "EggsBlack" | "Cup" | "HeartGray" | "GingerbreadMan" | "BabyPacifier" | "BabyRattle" | "Cabins" | "HouseFunky" | "StarsBlack" | "Snowflakes" | "SnowflakeFancy" | "Skyrocket" | "Seattle" | "MusicNotes" | "PalmsBlack" | "MapleLeaf" | "PaperClips" | "ShorebirdTracks" | "People" | "PeopleWaving" | "EclipsingSquares2" | "Hypnotic" | "DiamondsGray" | "DecoArch" | "DecoBlocks" | "CirclesLines" | "Papyrus" | "Woodwork" | "WeavingBraid" | "WeavingRibbon" | "WeavingAngles" | "ArchedScallops" | "Safari" | "CelticKnotwork" | "CrazyMaze" | "EclipsingSquares1" | "Birds" | "FlowersTeacup" | "Northwest" | "Southwest" | "Tribal6" | "Tribal4" | "Tribal3" | "Tribal2" | "Tribal5" | "XIllusions" | "ZanyTriangles" | "Pyramids" | "PyramidsAbove" | "ConfettiGrays" | "ConfettiOutline" | "ConfettiWhite" | "Mosaic" | "Lightning2" | "HeebieJeebies" | "LightBulb" | "Gradient" | "TriangleParty" | "TwistedLines2" | "Moons" | "Ovals" | "DoubleDiamonds" | "ChainLink" | "Triangles" | "Tribal1" | "MarqueeToothed" | "SharksTeeth" | "Sawtooth" | "SawtoothGray" | "PostageStamp" | "WeavingStrips" | "ZigZag" | "CrossStitch" | "Gems" | "CirclesRectangles" | "CornerTriangles" | "CreaturesInsects" | "ZigZagStitch" | "Checkered" | "CheckedBarBlack" | "Marquee" | "BasicWhiteDots" | "BasicWideMidline" | "BasicWideOutline" | "BasicWideInline" | "BasicThinLines" | "BasicWhiteDashes" | "BasicWhiteSquares" | "BasicBlackSquares" | "BasicBlackDashes" | "BasicBlackDots" | "StarsTop" | "CertificateBanner" | "Handmade1" | "Handmade2" | "TornPaper" | "TornPaperBlack" | "CouponCutoutDashes" | "CouponCutoutDots";
        /**
         * Specifies the width (in points) of the graphical page border specified in the `artStyle` property.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        artWidth: number;
        /**
         * Specifies the color for the `BorderUniversal` object. You can provide the value in the '#RRGGBB' format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        color: string;
        /**
         * Specifies the color for the `BorderUniversal` or {@link Word.Font} object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        colorIndex: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
        /**
         * Returns `true` if an inside border can be applied to the specified object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly inside: boolean;
        /**
         * Specifies whether the border is visible.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isVisible: boolean;
        /**
         * Specifies the line style of the border.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lineStyle: Word.BorderLineStyle | "None" | "Single" | "Dot" | "DashSmallGap" | "DashLargeGap" | "DashDot" | "DashDotDot" | "Double" | "Triple" | "ThinThickSmallGap" | "ThickThinSmallGap" | "ThinThickThinSmallGap" | "ThinThickMedGap" | "ThickThinMedGap" | "ThinThickThinMedGap" | "ThinThickLargeGap" | "ThickThinLargeGap" | "ThinThickThinLargeGap" | "SingleWavy" | "DoubleWavy" | "DashDotStroked" | "Emboss3D" | "Engrave3D" | "Outset" | "Inset";
        /**
         * Specifies the line width of an object's border.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lineWidth: Word.LineWidth | "Pt025" | "Pt050" | "Pt075" | "Pt100" | "Pt150" | "Pt225" | "Pt300" | "Pt450" | "Pt600";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.BorderUniversalUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.BorderUniversal): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BorderUniversalLoadOptions): Word.BorderUniversal;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.BorderUniversal;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.BorderUniversal;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.BorderUniversal;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.BorderUniversal;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.BorderUniversal` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BorderUniversalData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.BorderUniversalData;
    }
    /**
     * Represents the collection of border styles.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.1]
     */
    export class BorderCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Border[];
        /**
         * Specifies the 24-bit color of the inside borders. Color is specified in ‘#RRGGBB’ format or by using the color name.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        insideBorderColor: string;
        /**
         * Specifies the border type of the inside borders.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        insideBorderType: Word.BorderType | "Mixed" | "None" | "Single" | "Double" | "Dotted" | "Dashed" | "DotDashed" | "Dot2Dashed" | "Triple" | "ThinThickSmall" | "ThickThinSmall" | "ThinThickThinSmall" | "ThinThickMed" | "ThickThinMed" | "ThinThickThinMed" | "ThinThickLarge" | "ThickThinLarge" | "ThinThickThinLarge" | "Wave" | "DoubleWave" | "DashedSmall" | "DashDotStroked" | "ThreeDEmboss" | "ThreeDEngrave";
        /**
         * Specifies the width of the inside borders.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        insideBorderWidth: Word.BorderWidth | "None" | "Pt025" | "Pt050" | "Pt075" | "Pt100" | "Pt150" | "Pt225" | "Pt300" | "Pt450" | "Pt600" | "Mixed";
        /**
         * Specifies the 24-bit color of the outside borders. Color is specified in ‘#RRGGBB’ format or by using the color name.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        outsideBorderColor: string;
        /**
         * Specifies the border type of the outside borders.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        outsideBorderType: Word.BorderType | "Mixed" | "None" | "Single" | "Double" | "Dotted" | "Dashed" | "DotDashed" | "Dot2Dashed" | "Triple" | "ThinThickSmall" | "ThickThinSmall" | "ThinThickThinSmall" | "ThinThickMed" | "ThickThinMed" | "ThinThickThinMed" | "ThinThickLarge" | "ThickThinLarge" | "ThinThickThinLarge" | "Wave" | "DoubleWave" | "DashedSmall" | "DashDotStroked" | "ThreeDEmboss" | "ThreeDEngrave";
        /**
         * Specifies the width of the outside borders.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        outsideBorderWidth: Word.BorderWidth | "None" | "Pt025" | "Pt050" | "Pt075" | "Pt100" | "Pt150" | "Pt225" | "Pt300" | "Pt450" | "Pt600" | "Mixed";
        /**
         * Gets the border that has the specified location.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        getByLocation(borderLocation: Word.BorderLocation.top | Word.BorderLocation.left | Word.BorderLocation.bottom | Word.BorderLocation.right | Word.BorderLocation.insideHorizontal | Word.BorderLocation.insideVertical | "Top" | "Left" | "Bottom" | "Right" | "InsideHorizontal" | "InsideVertical"): Word.Border;
        /**
         * Gets the first border in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        getFirst(): Word.Border;
        /**
         * Gets the first border in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        getFirstOrNullObject(): Word.Border;
        /**
         * Gets a Border object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         *
         * @param index - A number that identifies the index location of a Border object.
         */
        getItem(index: number): Word.Border;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BorderCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.BorderCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.BorderCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.BorderCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.BorderCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.BorderCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.BorderCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BorderCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.BorderCollectionData;
    }
    /**
     * Represents the collection of {@link Word.BorderUniversal} objects.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class BorderUniversalCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.BorderUniversal[];
        /**
         * Applies the specified page-border formatting to all sections in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyPageBordersToAllSections(): void;
        /**
         * Gets a `Border` object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The location of a `BorderUniversal` object.
         */
        getItem(index: number): Word.BorderUniversal;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BorderUniversalCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.BorderUniversalCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.BorderUniversalCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.BorderUniversalCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.BorderUniversalCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.BorderUniversalCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.BorderUniversalCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BorderUniversalCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.BorderUniversalCollectionData;
    }
    /**
     * Represents a break in a Word document. This could be a page, column, or section break.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Break extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `Range` object that represents the portion of the document that's contained in the break.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Returns the page number on which the break occurs.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly pageIndex: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.BreakUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Break): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BreakLoadOptions): Word.Break;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Break;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Break;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Break;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Break;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Break` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BreakData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.BreakData;
    }
    /**
     * Contains a collection of {@link Word.Break} objects.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class BreakCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Break[];
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BreakCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.BreakCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.BreakCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.BreakCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.BreakCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.BreakCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.BreakCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BreakCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.BreakCollectionData;
    }
    /**
     * Represents a building block in a template. A building block is pre-built content, similar to autotext, that may contain text, images, and formatting.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class BuildingBlock extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BuildingBlockCategory` object that represents the category for the building block.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly category: Word.BuildingBlockCategory;
        /**
         * Returns a `BuildingBlockTypeItem` object that represents the type for the building block.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.BuildingBlockTypeItem;
        /**
         * Specifies the description for the building block.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        description: string;
        /**
         * Returns the internal identification number for the building block.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly id: string;
        /**
         * Returns the position of this building block in a collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly index: number;
        /**
         * Specifies a `DocPartInsertType` value that represents how to insert the contents of the building block into the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insertType: Word.DocPartInsertType | "Content" | "Paragraph" | "Page";
        /**
         * Specifies the name of the building block.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        name: string;
        /**
         * Specifies the contents of the building block.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        value: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.BuildingBlockUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.BuildingBlock): void;
        /**
         * Deletes the building block.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Inserts the value of the building block into the document and returns a `Range` object that represents the contents of the building block within the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range where the building block should be inserted.
         * @param richText - Indicates whether to insert as rich text.
         */
        insert(range: Word.Range, richText: boolean): Word.Range;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BuildingBlockLoadOptions): Word.BuildingBlock;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.BuildingBlock;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.BuildingBlock;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.BuildingBlock;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.BuildingBlock;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.BuildingBlock` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BuildingBlockData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.BuildingBlockData;
    }
    /**
     * Represents a collection of {@link Word.BuildingBlock} objects for a specific building block type and category in a template.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class BuildingBlockCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Creates a new building block and returns a `BuildingBlock` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param name - The name of the building block.
         * @param range - The range to insert the building block.
         * @param description - The description of the building block.
         * @param insertType - How to insert the contents of the building block.
         */
        add(name: string, range: Word.Range, description: string, insertType: Word.DocPartInsertType): Word.BuildingBlock;
        /**
         * Creates a new building block and returns a `BuildingBlock` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param name - The name of the building block.
         * @param range - The range to insert the building block.
         * @param description - The description of the building block.
         * @param insertType - How to insert the contents of the building block.
         */
        add(name: string, range: Word.Range, description: string, insertType: "Content" | "Paragraph" | "Page"): Word.BuildingBlock;
        /**
         * Returns the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Returns a `BuildingBlock` object that represents the specified item in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The index of the item to retrieve.
         */
        getItemAt(index: number): Word.BuildingBlock;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.BuildingBlockCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.BuildingBlockCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.BuildingBlockCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.BuildingBlockCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.BuildingBlockCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BuildingBlockCollectionData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): {
            [key: string]: string;
        };
    }
    /**
     * Represents a collection of building block entries in a Word template.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class BuildingBlockEntryCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Creates a new building block entry in a template and returns a `BuildingBlock` object that represents the new building block entry.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param name - The name of the building block.
         * @param type - The type of the building block.
         * @param category - The category of the building block.
         * @param range - The range to insert the building block.
         * @param description - The description of the building block.
         * @param insertType - How to insert the contents of the building block.
         */
        add(name: string, type: Word.BuildingBlockType, category: string, range: Word.Range, description: string, insertType: Word.DocPartInsertType): Word.BuildingBlock;
        /**
         * Creates a new building block entry in a template and returns a `BuildingBlock` object that represents the new building block entry.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param name - The name of the building block.
         * @param type - The type of the building block.
         * @param category - The category of the building block.
         * @param range - The range to insert the building block.
         * @param description - The description of the building block.
         * @param insertType - How to insert the contents of the building block.
         */
        add(name: string, type: "QuickParts" | "CoverPage" | "Equations" | "Footers" | "Headers" | "PageNumber" | "Tables" | "Watermarks" | "AutoText" | "TextBox" | "PageNumberTop" | "PageNumberBottom" | "PageNumberPage" | "TableOfContents" | "CustomQuickParts" | "CustomCoverPage" | "CustomEquations" | "CustomFooters" | "CustomHeaders" | "CustomPageNumber" | "CustomTables" | "CustomWatermarks" | "CustomAutoText" | "CustomTextBox" | "CustomPageNumberTop" | "CustomPageNumberBottom" | "CustomPageNumberPage" | "CustomTableOfContents" | "Custom1" | "Custom2" | "Custom3" | "Custom4" | "Custom5" | "Bibliography" | "CustomBibliography", category: string, range: Word.Range, description: string, insertType: "Content" | "Paragraph" | "Page"): Word.BuildingBlock;
        /**
         * Returns the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Returns a `BuildingBlock` object that represents the specified item in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The index of the item to retrieve.
         */
        getItemAt(index: number): Word.BuildingBlock;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.BuildingBlockEntryCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.BuildingBlockEntryCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.BuildingBlockEntryCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.BuildingBlockEntryCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.BuildingBlockEntryCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BuildingBlockEntryCollectionData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): {
            [key: string]: string;
        };
    }
    /**
     * Represents a category of building blocks in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class BuildingBlockCategory extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BuildingBlockCollection` object that represents the building blocks for the category.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly buildingBlocks: Word.BuildingBlockCollection;
        /**
         * Returns a `BuildingBlockTypeItem` object that represents the type of building block for the building block category.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.BuildingBlockTypeItem;
        /**
         * Returns the position of the `BuildingBlockCategory` object in a collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly index: number;
        /**
         * Returns the name of the `BuildingBlockCategory` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly name: string;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BuildingBlockCategoryLoadOptions): Word.BuildingBlockCategory;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.BuildingBlockCategory;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.BuildingBlockCategory;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.BuildingBlockCategory;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.BuildingBlockCategory;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.BuildingBlockCategory` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BuildingBlockCategoryData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.BuildingBlockCategoryData;
    }
    /**
     * Represents a collection of {@link Word.BuildingBlockCategory} objects in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class BuildingBlockCategoryCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Returns a `BuildingBlockCategory` object that represents the specified item in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The index of the item to retrieve.
         */
        getItemAt(index: number): Word.BuildingBlockCategory;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.BuildingBlockCategoryCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.BuildingBlockCategoryCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.BuildingBlockCategoryCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.BuildingBlockCategoryCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.BuildingBlockCategoryCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BuildingBlockCategoryCollectionData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): {
            [key: string]: string;
        };
    }
    /**
     * Represents a type of building block in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class BuildingBlockTypeItem extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BuildingBlockCategoryCollection` object that represents the categories for a building block type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly categories: Word.BuildingBlockCategoryCollection;
        /**
         * Returns the position of an item in a collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly index: number;
        /**
         * Returns the localized name of a building block type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly name: string;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BuildingBlockTypeItemLoadOptions): Word.BuildingBlockTypeItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.BuildingBlockTypeItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.BuildingBlockTypeItem;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.BuildingBlockTypeItem;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.BuildingBlockTypeItem;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.BuildingBlockTypeItem` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BuildingBlockTypeItemData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.BuildingBlockTypeItemData;
    }
    /**
     * Represents a collection of building block types in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class BuildingBlockTypeItemCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets a `BuildingBlockTypeItem` object by its type in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param type - Specifies the building block type of the item in the collection.
         */
        getByType(type: Word.BuildingBlockType): Word.BuildingBlockTypeItem;
        /**
         * Gets a `BuildingBlockTypeItem` object by its type in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param type - Specifies the building block type of the item in the collection.
         */
        getByType(type: "QuickParts" | "CoverPage" | "Equations" | "Footers" | "Headers" | "PageNumber" | "Tables" | "Watermarks" | "AutoText" | "TextBox" | "PageNumberTop" | "PageNumberBottom" | "PageNumberPage" | "TableOfContents" | "CustomQuickParts" | "CustomCoverPage" | "CustomEquations" | "CustomFooters" | "CustomHeaders" | "CustomPageNumber" | "CustomTables" | "CustomWatermarks" | "CustomAutoText" | "CustomTextBox" | "CustomPageNumberTop" | "CustomPageNumberBottom" | "CustomPageNumberPage" | "CustomTableOfContents" | "Custom1" | "Custom2" | "Custom3" | "Custom4" | "Custom5" | "Bibliography" | "CustomBibliography"): Word.BuildingBlockTypeItem;
        /**
         * Returns the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.BuildingBlockTypeItemCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.BuildingBlockTypeItemCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.BuildingBlockTypeItemCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.BuildingBlockTypeItemCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.BuildingBlockTypeItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BuildingBlockTypeItemCollectionData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): {
            [key: string]: string;
        };
    }
    /**
     * The data specific to content controls of type CheckBox.
     *
     * @remarks
     * [Api set: WordApi 1.7]
     */
    export class CheckboxContentControl extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the current state of the checkbox.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        isChecked: boolean;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.CheckboxContentControlUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.CheckboxContentControl): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CheckboxContentControlLoadOptions): Word.CheckboxContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CheckboxContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.CheckboxContentControl;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CheckboxContentControl;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CheckboxContentControl;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CheckboxContentControl` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CheckboxContentControlData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CheckboxContentControlData;
    }
    /**
     * Represents a coauthoring lock in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class CoauthoringLock extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the owner of the lock.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly owner: Word.Coauthor;
        /**
         * Gets a `Range` object that represents the portion of the document that's contained in the `CoauthoringLock` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Gets a `CoauthoringLockType` value that represents the lock type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.CoauthoringLockType | "None" | "Reservation" | "Ephemeral" | "Changed";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.CoauthoringLockUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.CoauthoringLock): void;
        /**
         * Removes this lock, even if it belongs to a different user.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        unlock(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CoauthoringLockLoadOptions): Word.CoauthoringLock;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CoauthoringLock;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.CoauthoringLock;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CoauthoringLock;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CoauthoringLock;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CoauthoringLock` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CoauthoringLockData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CoauthoringLockData;
    }
    /**
     * Represents a collection of coauthoring locks in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class CoauthoringLockCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.CoauthoringLock[];
        /**
         * Returns a `CoauthoringLock` object that represents a lock added to a specified range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. The options to further configure the coauthoring lock.
         */
        add(options?: Word.CoauthoringLockAddOptions): Word.CoauthoringLock;
        /**
         * Removes all ephemeral locks from the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        unlockEphemeralLocks(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CoauthoringLockCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.CoauthoringLockCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CoauthoringLockCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.CoauthoringLockCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CoauthoringLockCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CoauthoringLockCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CoauthoringLockCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CoauthoringLockCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.CoauthoringLockCollectionData;
    }
    /**
     * Specifies the options for adding to a {@link Word.CoauthoringLockCollection} object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface CoauthoringLockAddOptions {
        /**
         * If provided, specifies the range to which the lock is added. If not provided, the new lock is placed on the paragraph that contains the insertion point.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        range?: Word.Range;
        /**
         * If provided, specifies the type of lock. If not provided, the lock type is set to `reservation`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type?: Word.CoauthoringLockType | "None" | "Reservation" | "Ephemeral" | "Changed";
    }
    /**
     * Represents a coauthor in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Coauthor extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets a `CoauthoringLockCollection` object that represents the locks in the document that are associated with this coauthor.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly locks: Word.CoauthoringLockCollection;
        /**
         * Gets the email address of the coauthor.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly emailAddress: string;
        /**
         * Gets the unique identifier for the `Coauthor` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly id: string;
        /**
         * Gets whether this author represents the current user.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isMe: boolean;
        /**
         * Gets the display name of the coauthor.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly name: string;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CoauthorLoadOptions): Word.Coauthor;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Coauthor;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Coauthor;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Coauthor;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Coauthor;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Coauthor` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CoauthorData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CoauthorData;
    }
    /**
     * Contains a collection of {@link Word.Coauthor} objects.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class CoauthorCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Coauthor[];
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CoauthorCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.CoauthorCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CoauthorCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.CoauthorCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CoauthorCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CoauthorCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CoauthorCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CoauthorCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.CoauthorCollectionData;
    }
    /**
     * Represents the `Coauthoring` object. This tracks the updates, changes, conflicts, and other interactions in the document done through coauthoring.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Coauthoring extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets a `CoauthorCollection` object that represents all the coauthors currently editing the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly authors: Word.CoauthorCollection;
        /**
         * Gets a `ConflictCollection` object that represents all the conflicts in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly conflicts: Word.ConflictCollection;
        /**
         * Gets a `CoauthoringLockCollection` object that represents the locks in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly locks: Word.CoauthoringLockCollection;
        /**
         * Gets a `Coauthor` object that represents the current user.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly me: Word.Coauthor;
        /**
         * Gets a `CoauthoringUpdateCollection` object that represents the most recent updates that were merged into the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly updates: Word.CoauthoringUpdateCollection;
        /**
         * Gets whether this document can be coauthored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly canCoauthor: boolean;
        /**
         * Gets whether the document can be automatically merged.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly canMerge: boolean;
        /**
         * Gets whether the document has pending updates that have not been accepted.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly pendingUpdates: boolean;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CoauthoringLoadOptions): Word.Coauthoring;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Coauthoring;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Coauthoring;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Coauthoring;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Coauthoring;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Coauthoring` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CoauthoringData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CoauthoringData;
    }
    /**
     * Represents a coauthoring update in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class CoauthoringUpdate extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets a `Range` object that represents the portion of the document that's contained in the `CoauthoringUpdate` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.CoauthoringUpdateUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.CoauthoringUpdate): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CoauthoringUpdateLoadOptions): Word.CoauthoringUpdate;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CoauthoringUpdate;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.CoauthoringUpdate;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CoauthoringUpdate;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CoauthoringUpdate;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CoauthoringUpdate` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CoauthoringUpdateData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CoauthoringUpdateData;
    }
    /**
     * Contains a collection of {@link Word.CoauthoringUpdate} objects.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class CoauthoringUpdateCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.CoauthoringUpdate[];
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CoauthoringUpdateCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.CoauthoringUpdateCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CoauthoringUpdateCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.CoauthoringUpdateCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CoauthoringUpdateCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CoauthoringUpdateCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CoauthoringUpdateCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CoauthoringUpdateCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.CoauthoringUpdateCollectionData;
    }
    /**
     * Represents a comment in the document.
     *
     * @remarks
     * [Api set: WordApi 1.4]
     */
    export class Comment extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the comment's content range.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        contentRange: Word.CommentContentRange;
        /**
         * Gets the collection of reply objects associated with the comment.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly replies: Word.CommentReplyCollection;
        /**
         * Gets the email of the comment's author.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly authorEmail: string;
        /**
         * Gets the name of the comment's author.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly authorName: string;
        /**
         * Specifies the comment's content as plain text.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        content: string;
        /**
         * Gets the creation date of the comment.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly creationDate: Date;
        /**
         * Gets the ID of the comment.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly id: string;
        /**
         * Specifies the comment thread's status. Setting to true resolves the comment thread. Getting a value of true means that the comment thread is resolved.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        resolved: boolean;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Comment): void;
        /**
         * Deletes the comment and its replies.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        delete(): void;
        /**
         * Gets the range in the main document where the comment is on.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getRange(): Word.Range;
        /**
         * Adds a new reply to the end of the comment thread.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param replyText - Required. Reply text.
         */
        reply(replyText: string): Word.CommentReply;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CommentLoadOptions): Word.Comment;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Comment;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Comment;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Comment;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Comment;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Comment` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CommentData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CommentData;
    }
    /**
     * Contains a collection of {@link Word.Comment} objects.
     *
     * @remarks
     * [Api set: WordApi 1.4]
     */
    export class CommentCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Comment[];
        /**
         * Gets the first comment in the collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getFirst(): Word.Comment;
        /**
         * Gets the first comment in the collection. If the collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getFirstOrNullObject(): Word.Comment;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CommentCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.CommentCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CommentCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.CommentCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CommentCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CommentCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CommentCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CommentCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.CommentCollectionData;
    }
    /**
     * @remarks
     * [Api set: WordApi 1.4]
     */
    export class CommentContentRange extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies a value that indicates whether the comment text is bold.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        bold: boolean;
        /**
         * Gets the first hyperlink in the range, or sets a hyperlink on the range. All hyperlinks in the range are deleted when you set a new hyperlink on the range.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        hyperlink: string;
        /**
         * Checks whether the range length is zero.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly isEmpty: boolean;
        /**
         * Specifies a value that indicates whether the comment text is italicized.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        italic: boolean;
        /**
         * Specifies a value that indicates whether the comment text has a strikethrough.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        strikeThrough: boolean;
        /**
         * Gets the text of the comment range.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly text: string;
        /**
         * Specifies a value that indicates the comment text's underline type. 'None' if the comment text isn't underlined.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        underline: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.CommentContentRangeUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.CommentContentRange): void;
        /**
         * Inserts text into at the specified location. **Note**: For the modern comment, the content range tracked across context turns to empty if any revision to the comment is posted through the UI.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param text - Required. The text to be inserted in to the CommentContentRange.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', 'End', 'Before', or 'After'.
         */
        insertText(text: string, insertLocation: Word.InsertLocation | "Replace" | "Start" | "End" | "Before" | "After"): Word.CommentContentRange;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CommentContentRangeLoadOptions): Word.CommentContentRange;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CommentContentRange;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.CommentContentRange;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CommentContentRange;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CommentContentRange;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CommentContentRange` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CommentContentRangeData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CommentContentRangeData;
    }
    /**
     * Represents a comment reply in the document.
     *
     * @remarks
     * [Api set: WordApi 1.4]
     */
    export class CommentReply extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the commentReply's content range.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        contentRange: Word.CommentContentRange;
        /**
         * Gets the parent comment of this reply.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly parentComment: Word.Comment;
        /**
         * Gets the email of the comment reply's author.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly authorEmail: string;
        /**
         * Gets the name of the comment reply's author.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly authorName: string;
        /**
         * Specifies the comment reply's content. The string is plain text.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        content: string;
        /**
         * Gets the creation date of the comment reply.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly creationDate: Date;
        /**
         * Gets the ID of the comment reply.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly id: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.CommentReplyUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.CommentReply): void;
        /**
         * Deletes the comment reply.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        delete(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CommentReplyLoadOptions): Word.CommentReply;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CommentReply;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.CommentReply;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CommentReply;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CommentReply;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CommentReply` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CommentReplyData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CommentReplyData;
    }
    /**
     * Contains a collection of {@link Word.CommentReply} objects. Represents all comment replies in one comment thread.
     *
     * @remarks
     * [Api set: WordApi 1.4]
     */
    export class CommentReplyCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.CommentReply[];
        /**
         * Gets the first comment reply in the collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getFirst(): Word.CommentReply;
        /**
         * Gets the first comment reply in the collection. If the collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getFirstOrNullObject(): Word.CommentReply;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CommentReplyCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.CommentReplyCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CommentReplyCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.CommentReplyCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CommentReplyCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CommentReplyCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CommentReplyCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CommentReplyCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.CommentReplyCollectionData;
    }
    /**
     * Represents special formatting applied to specified areas of a table when the selected table is formatted with a specified table style.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class ConditionalStyle extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BorderUniversalCollection` object that represents all the borders for the conditional style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly borders: Word.BorderUniversalCollection;
        /**
         * Returns a `Font` object that represents the font formatting for the conditional style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly font: Word.Font;
        /**
         * Returns a `ParagraphFormat` object that represents the paragraph formatting for the conditional style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly paragraphFormat: Word.ParagraphFormat;
        /**
         * Returns a `ShadingUniversal` object that represents the shading of the conditional style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly shading: Word.ShadingUniversal;
        /**
         * Specifies the amount of space (in points) to add below the contents of a single cell or all the cells in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottomPadding: number;
        /**
         * Specifies the amount of space (in points) to add to the left of the contents of a single cell or all the cells in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        leftPadding: number;
        /**
         * Specifies the amount of space (in points) to add to the right of the contents of a single cell or all the cells in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rightPadding: number;
        /**
         * Specifies the amount of space (in points) to add above the contents of a single cell or all the cells in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        topPadding: number;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ConditionalStyleLoadOptions): Word.ConditionalStyle;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ConditionalStyle;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ConditionalStyle;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ConditionalStyle;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ConditionalStyle;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ConditionalStyle` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ConditionalStyleData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ConditionalStyleData;
    }
    /**
     * Represents the XML mapping on a {@link Word.ContentControl} object between custom XML and that content control. An XML mapping is a link between the text in a content control and an XML element in the custom XML data store for this document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class XmlMapping extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `CustomXmlNode` object that represents the custom XML node in the data store that the content control in the document maps to.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly customXmlNode: Word.CustomXmlNode;
        /**
         * Returns a `CustomXmlPart` object that represents the custom XML part to which the content control in the document maps.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly customXmlPart: Word.CustomXmlPart;
        /**
         * Returns whether the content control in the document is mapped to an XML node in the document's XML data store.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isMapped: boolean;
        /**
         * Returns the prefix mappings used to evaluate the XPath for the current XML mapping.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly prefixMappings: string;
        /**
         * Returns the XPath for the XML mapping, which evaluates to the currently mapped XML node.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly xpath: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.XmlMappingUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.XmlMapping): void;
        /**
         * Deletes the XML mapping from the parent content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Allows creating or changing the XML mapping on the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param xPath - The XPath expression to evaluate.
         * @param options - Optional. The options available for setting the XML mapping.
         */
        setMapping(xPath: string, options?: Word.XmlSetMappingOptions): OfficeExtension.ClientResult<boolean>;
        /**
         * Allows creating or changing the XML data mapping on the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param node - The custom XML node to map.
         */
        setMappingByNode(node: Word.CustomXmlNode): OfficeExtension.ClientResult<boolean>;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.XmlMappingLoadOptions): Word.XmlMapping;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.XmlMapping;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.XmlMapping;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.XmlMapping;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.XmlMapping;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.XmlMapping` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.XmlMappingData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.XmlMappingData;
    }
    /**
     * The options that define the prefix mapping and the source of the custom XML data.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface XmlSetMappingOptions {
        /**
         * If provided, specifies the prefix mappings to use when querying the expression provided in the `xPath` parameter of the `XmlMapping.setMapping` calling method. If omitted, Word uses the set of prefix mappings for the specified custom XML part in the current document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        prefixMapping?: string;
        /**
         * If provided, specifies the desired custom XML data to map the content control to. If this property is omitted, the XPath is evaluated against all custom XML in the current document, and the mapping is established with the first `CustomXmlPart` where the XPath resolves to an XML node.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        source?: Word.CustomXmlPart;
    }
    /**
     * Represents a collection of {@link Word.CustomXmlPrefixMapping} objects.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class CustomXmlPrefixMappingCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.CustomXmlPrefixMapping[];
        /**
         * Adds a custom namespace/prefix mapping to use when querying an item.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param prefix - The prefix to associate with the namespace.
         * @param namespaceUri - The namespace URI to map.
         */
        addNamespace(prefix: string, namespaceUri: string): OfficeExtension.ClientResult<number>;
        /**
         * Returns the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Returns a `CustomXmlPrefixMapping` object that represents the specified item in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - A number that identifies the index location of a paragraph object.
         */
        getItem(index: number): Word.CustomXmlPrefixMapping;
        /**
         * Gets the namespace corresponding to the specified prefix.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param prefix - The prefix to look up.
         */
        lookupNamespace(prefix: string): OfficeExtension.ClientResult<string>;
        /**
         * Gets the prefix corresponding to the specified namespace.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param namespaceUri - The namespace URI to look up.
         */
        lookupPrefix(namespaceUri: string): OfficeExtension.ClientResult<string>;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CustomXmlPrefixMappingCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.CustomXmlPrefixMappingCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CustomXmlPrefixMappingCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.CustomXmlPrefixMappingCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CustomXmlPrefixMappingCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CustomXmlPrefixMappingCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CustomXmlPrefixMappingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CustomXmlPrefixMappingCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.CustomXmlPrefixMappingCollectionData;
    }
    /**
     * Represents a `CustomXmlPrefixMapping` object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class CustomXmlPrefixMapping extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the unique address identifier for the namespace of the `CustomXmlPrefixMapping` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly namespaceUri: string;
        /**
         * Gets the prefix for the `CustomXmlPrefixMapping` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly prefix: string;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CustomXmlPrefixMappingLoadOptions): Word.CustomXmlPrefixMapping;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CustomXmlPrefixMapping;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.CustomXmlPrefixMapping;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CustomXmlPrefixMapping;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CustomXmlPrefixMapping;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CustomXmlPrefixMapping` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CustomXmlPrefixMappingData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CustomXmlPrefixMappingData;
    }
    /**
     * Represents a schema in a {@link Word.CustomXmlSchemaCollection} object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class CustomXmlSchema extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the location of the schema on a computer.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly location: string;
        /**
         * Gets the unique address identifier for the namespace of the `CustomXmlSchema` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly namespaceUri: string;
        /**
         * Deletes this schema from the {@link Word.CustomXmlSchemaCollection} object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Reloads the schema from a file.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        reload(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CustomXmlSchemaLoadOptions): Word.CustomXmlSchema;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CustomXmlSchema;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.CustomXmlSchema;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CustomXmlSchema;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CustomXmlSchema;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CustomXmlSchema` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CustomXmlSchemaData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CustomXmlSchemaData;
    }
    /**
     * Represents a collection of {@link Word.CustomXmlSchema} objects attached to a data stream.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class CustomXmlSchemaCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.CustomXmlSchema[];
        /**
         * Adds one or more schemas to the schema collection that can then be added to a stream in the data store and to the schema library.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. The options that define the schema to be added.
         */
        add(options?: Word.CustomXmlAddSchemaOptions): Word.CustomXmlSchema;
        /**
         * Adds an existing schema collection to the current schema collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param schemaCollection - The schema collection to add.
         */
        addCollection(schemaCollection: Word.CustomXmlSchemaCollection): Word.CustomXmlSchemaCollection;
        /**
         * Returns the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Returns a `CustomXmlSchema` object that represents the specified item in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - A number that identifies the index location of a paragraph object.
         */
        getItem(index: number): Word.CustomXmlSchema;
        /**
         * Returns the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getNamespaceUri(): OfficeExtension.ClientResult<number>;
        /**
         * Specifies whether the schemas in the schema collection are valid (conforms to the syntactic rules of XML and the rules for a specified vocabulary).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        validate(): OfficeExtension.ClientResult<boolean>;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CustomXmlSchemaCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.CustomXmlSchemaCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CustomXmlSchemaCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.CustomXmlSchemaCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CustomXmlSchemaCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CustomXmlSchemaCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CustomXmlSchemaCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CustomXmlSchemaCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.CustomXmlSchemaCollectionData;
    }
    /**
     * Adds one or more schemas to a schema collection that can then be added to a stream in the data store and to the schema library.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface CustomXmlAddSchemaOptions {
        /**
         * If provided, specifies the alias of the schema to be added to the collection. However, if the alias already exists in the Schema Library, the schema can be found using this value.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        alias?: string;
        /**
         * If provided, specifies the location of the schema on a disk. If this property is specified, the schema is added to the collection and to the Schema Library.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fileName?: string;
        /**
         * If provided, specifies whether, in the case where the schema is being added to the Schema Library, the Schema Library keys should be written to the registry (`HKEY_LOCAL_MACHINE` for all users or `HKEY_CURRENT_USER` for just the current user). The property defaults to `false` and writes to `HKEY_CURRENT_USER`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        installForAllUsers?: boolean;
        /**
         * If provided, specifies the namespace of the schema to be added to the collection. However, if the schema already exists in the Schema Library, the schema will be retrieved from there.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        namespaceUri?: string;
    }
    /**
     * Represents a collection of {@link Word.CustomXmlValidationError} objects.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class CustomXmlValidationErrorCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.CustomXmlValidationError[];
        /**
         * Adds a `CustomXmlValidationError` object containing an XML validation error to the `CustomXmlValidationErrorCollection` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param node - The XML node where the error occurred.
         * @param errorName - The name of the error.
         * @param options - Optional. The options that define the error message and other settings.
         */
        add(node: Word.CustomXmlNode, errorName: string, options?: Word.CustomXmlAddValidationErrorOptions): OfficeExtension.ClientResult<number>;
        /**
         * Returns the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Returns a `CustomXmlValidationError` object that represents the specified item in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - A number that identifies the index location of a paragraph object.
         */
        getItem(index: number): Word.CustomXmlValidationError;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CustomXmlValidationErrorCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.CustomXmlValidationErrorCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CustomXmlValidationErrorCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.CustomXmlValidationErrorCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CustomXmlValidationErrorCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CustomXmlValidationErrorCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CustomXmlValidationErrorCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CustomXmlValidationErrorCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.CustomXmlValidationErrorCollectionData;
    }
    /**
     * The options that define the descriptive error text and the state of `clearedOnUpdate`.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface CustomXmlAddValidationErrorOptions {
        /**
         * If provided, specifies whether the error is to be cleared from the {@link Word.CustomXmlValidationErrorCollection} when the XML is corrected and updated.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        clearedOnUpdate?: boolean;
        /**
         * If provided, specifies the descriptive error text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        errorText?: string;
    }
    /**
     * Represents a single validation error in a {@link Word.CustomXmlValidationErrorCollection} object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class CustomXmlValidationError extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the node associated with this `CustomXmlValidationError` object, if any exist.If no nodes exist, the property returns `Nothing`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly node: Word.CustomXmlNode;
        /**
         * Gets an integer representing the validation error in the `CustomXmlValidationError` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly errorCode: number;
        /**
         * Gets the name of the error in the `CustomXmlValidationError` object.If no errors exist, the property returns `Nothing`
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly name: string;
        /**
         * Gets the text in the `CustomXmlValidationError` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly text: string;
        /**
         * Gets the type of error generated from the `CustomXmlValidationError` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.CustomXmlValidationErrorType | "schemaGenerated" | "automaticallyCleared" | "manual";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.CustomXmlValidationErrorUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.CustomXmlValidationError): void;
        /**
         * Deletes this `CustomXmlValidationError` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CustomXmlValidationErrorLoadOptions): Word.CustomXmlValidationError;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CustomXmlValidationError;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.CustomXmlValidationError;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CustomXmlValidationError;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CustomXmlValidationError;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CustomXmlValidationError` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CustomXmlValidationErrorData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CustomXmlValidationErrorData;
    }
    /**
     * Contains a collection of {@link Word.CustomXmlNode} objects representing the XML nodes in a document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class CustomXmlNodeCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.CustomXmlNode[];
        /**
         * Returns the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Returns a `CustomXmlNode` object that represents the specified item in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - A number that identifies the index location of a CustomXMLNode object.
         */
        getItem(index: number): Word.CustomXmlNode;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CustomXmlNodeCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.CustomXmlNodeCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CustomXmlNodeCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.CustomXmlNodeCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CustomXmlNodeCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CustomXmlNodeCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CustomXmlNodeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CustomXmlNodeCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.CustomXmlNodeCollectionData;
    }
    /**
     * The options that define the prefix mapping and the source of the custom XML data.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface CustomXmlAppendChildNodeOptions {
        /**
         * If provided, specifies the base name of the element to be appended.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        name?: string;
        /**
         * If provided, specifies the namespace of the element to be appended. This property is required to append nodes of {@link Word.CustomXmlNodeType | type} `element` or `attribute`; otherwise, it's ignored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        namespaceUri?: string;
        /**
         * If provided, specifies the type of node to append. If the property isn't specified, it's assumed to be of type `element`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nodeType?: Word.CustomXmlNodeType | "element" | "attribute" | "text" | "cData" | "processingInstruction" | "comment" | "document";
        /**
         * If provided, specifies the value of the appended node for those nodes that allow text. If the node doesn't allow text, the property is ignored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nodeValue?: string;
    }
    /**
     * Inserts a new node just before the context node in the tree.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface CustomXmlInsertNodeBeforeOptions {
        /**
         * If provided, specifies the base name of the element to be inserted.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        name?: string;
        /**
         * If provided, specifies the namespace of the element to be inserted. This property is required to insert nodes of {@link Word.CustomXmlNodeType | type} `element` or `attribute`; otherwise, it's ignored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        namespaceUri?: string;
        /**
         * If provided, specifies the context node.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nextSibling?: Word.CustomXmlNode;
        /**
         * If provided, specifies the type of node to append. If the property isn't specified, it's assumed to be of type `element`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nodeType?: Word.CustomXmlNodeType | "element" | "attribute" | "text" | "cData" | "processingInstruction" | "comment" | "document";
        /**
         * If provided, specifies the value of the inserted node for those nodes that allow text. If the node doesn't allow text, the property is ignored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nodeValue?: string;
    }
    /**
     * Inserts a new node just before the context node in the tree.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface CustomXmlInsertSubtreeBeforeOptions {
        /**
         * If provided, specifies the context node.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nextSibling?: Word.CustomXmlNode;
    }
    /**
     * Removes the specified child node and replaces it with a different node in the same location.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface CustomXmlReplaceChildNodeOptions {
        /**
         * If provided, specifies the base name of the replacement element.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        name?: string;
        /**
         * If provided, specifies the namespace of the replacement element. This property is required to replace nodes of {@link Word.CustomXmlNodeType | type} `element` or `attribute`; otherwise, it's ignored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        namespaceUri?: string;
        /**
         * If provided, specifies the type of the replacement node. If the property isn't specified, it's assumed to be of type `element`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nodeType?: Word.CustomXmlNodeType | "element" | "attribute" | "text" | "cData" | "processingInstruction" | "comment" | "document";
        /**
         * If provided, specifies the value of the replacement node for those nodes that allow text. If the node doesn't allow text, the property is ignored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nodeValue?: string;
    }
    /**
     * Represents an XML node in a tree in the document. The `CustomXmlNode` object is a member of the {@link Word.CustomXmlNodeCollection} object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class CustomXmlNode extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets a `CustomXmlNodeCollection` object representing the attributes of the current element in the current node.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly attributes: Word.CustomXmlNodeCollection;
        /**
         * Gets a `CustomXmlNodeCollection` object containing all of the child elements of the current node.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly childNodes: Word.CustomXmlNodeCollection;
        /**
         * Gets a `CustomXmlNode` object corresponding to the first child element of the current node. If the node has no child elements (or if it isn't of type {@link Word.CustomXmlNodeType | CustomXmlNodeType.element}), returns `Nothing`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly firstChild: Word.CustomXmlNode;
        /**
         * Gets a `CustomXmlNode` object corresponding to the last child element of the current node. If the node has no child elements (or if it isn't of type {@link Word.CustomXmlNodeType | CustomXmlNodeType.element}), the property returns `Nothing`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly lastChild: Word.CustomXmlNode;
        /**
         * Gets the next sibling node (element, comment, or processing instruction) of the current node. If the node is the last sibling at its level, the property returns `Nothing`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly nextSibling: Word.CustomXmlNode;
        /**
         * Gets the object representing the part associated with this node.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly ownerPart: Word.CustomXmlPart;
        /**
         * Gets the parent element node of the current node. If the current node is at the root level, the property returns `Nothing`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly parentNode: Word.CustomXmlNode;
        /**
         * Gets the previous sibling node (element, comment, or processing instruction) of the current node. If the current node is the first sibling at its level, the property returns `Nothing`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly previousSibling: Word.CustomXmlNode;
        /**
         * Gets the base name of the node without the namespace prefix, if one exists.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly baseName: string;
        /**
         * Gets the unique address identifier for the namespace of the node.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly namespaceUri: string;
        /**
         * Gets the type of the current node.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly nodeType: Word.CustomXmlNodeType | "element" | "attribute" | "text" | "cData" | "processingInstruction" | "comment" | "document";
        /**
         * Specifies the value of the current node.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nodeValue: string;
        /**
         * Specifies the text for the current node.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        text: string;
        /**
         * Gets a string with the canonicalized XPath for the current node. If the node is no longer in the Document Object Model (DOM), the property returns an error message.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly xpath: string;
        /**
         * Gets the XML representation of the current node and its children.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly xml: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.CustomXmlNodeUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.CustomXmlNode): void;
        /**
         * Appends a single node as the last child under the context element node in the tree.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. The options that define the node to be appended.
         */
        appendChildNode(options?: Word.CustomXmlAppendChildNodeOptions): OfficeExtension.ClientResult<number>;
        /**
         * Adds a subtree as the last child under the context element node in the tree.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param xml - A string representing the XML subtree.
         */
        appendChildSubtree(xml: string): OfficeExtension.ClientResult<number>;
        /**
         * Deletes the current node from the tree (including all of its children, if any exist).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Specifies if the current element node has child element nodes.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hasChildNodes(): OfficeExtension.ClientResult<boolean>;
        /**
         * Inserts a new node just before the context node in the tree.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. The options that define the node to be inserted.
         */
        insertNodeBefore(options?: Word.CustomXmlInsertNodeBeforeOptions): OfficeExtension.ClientResult<number>;
        /**
         * Inserts the specified subtree into the location just before the context node.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param xml - A string representing the XML subtree.
         * @param options - Optional. The options available for inserting the subtree.
         */
        insertSubtreeBefore(xml: string, options?: Word.CustomXmlInsertSubtreeBeforeOptions): OfficeExtension.ClientResult<number>;
        /**
         * Removes the specified child node from the tree.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param child - The child node to remove.
         */
        removeChild(child: Word.CustomXmlNode): OfficeExtension.ClientResult<number>;
        /**
         * Removes the specified child node and replaces it with a different node in the same location.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param oldNode - The node to be replaced.
         * @param options - Optional. The options that define the child node which is to replace the old node.
         */
        replaceChildNode(oldNode: Word.CustomXmlNode, options?: Word.CustomXmlReplaceChildNodeOptions): OfficeExtension.ClientResult<number>;
        /**
         * Removes the specified node and replaces it with a different subtree in the same location.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param xml - A string representing the new subtree.
         * @param oldNode - The node to be replaced.
         */
        replaceChildSubtree(xml: string, oldNode: Word.CustomXmlNode): OfficeExtension.ClientResult<number>;
        /**
         * Selects a collection of nodes matching an XPath expression.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param xPath - The XPath expression.
         */
        selectNodes(xPath: string): Word.CustomXmlNodeCollection;
        /**
         * Selects a single node from a collection matching an XPath expression.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param xPath - The XPath expression.
         */
        selectSingleNode(xPath: string): Word.CustomXmlNode;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CustomXmlNodeLoadOptions): Word.CustomXmlNode;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CustomXmlNode;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.CustomXmlNode;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CustomXmlNode;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CustomXmlNode;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CustomXmlNode` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CustomXmlNodeData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CustomXmlNodeData;
    }
    /**
     * Represents a content control. Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content. Individual content controls may contain contents such as images, tables, or paragraphs of formatted text. Currently, only rich text, plain text, checkbox, dropdown list, and combo box content controls are supported.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class ContentControl extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the building block gallery-related data if the content control's {@link Word.ContentControlType} is `BuildingBlockGallery`. It's `null` otherwise.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly buildingBlockGalleryContentControl: Word.BuildingBlockGalleryContentControl;
        /**
         * Gets the data of the content control when its type is `CheckBox`. It's `null` otherwise.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        readonly checkboxContentControl: Word.CheckboxContentControl;
        /**
         * Gets the data of the content control when its type is `ComboBox`. It's `null` otherwise.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        readonly comboBoxContentControl: Word.ComboBoxContentControl;
        /**
         * Gets the collection of content control objects in the content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly contentControls: Word.ContentControlCollection;
        /**
         * Gets the date picker-related data if the content control's {@link Word.ContentControlType} is `DatePicker`. It's `null` otherwise.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly datePickerContentControl: Word.DatePickerContentControl;
        /**
         * Gets the data of the content control when its type is `DropDownList`. It's `null` otherwise.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        readonly dropDownListContentControl: Word.DropDownListContentControl;
        /**
         * Gets the collection of endnotes in the content control.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly endnotes: Word.NoteItemCollection;
        /**
         * Gets the collection of field objects in the content control.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly fields: Word.FieldCollection;
        /**
         * Gets the text format of the content control. Use this to get and set font name, size, color, and other properties.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly font: Word.Font;
        /**
         * Gets the collection of footnotes in the content control.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly footnotes: Word.NoteItemCollection;
        /**
         * Gets the group-related data if the content control's {@link Word.ContentControlType} is `Group`. It's `null` otherwise.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly groupContentControl: Word.GroupContentControl;
        /**
         * Gets the collection of InlinePicture objects in the content control. The collection doesn't include floating images.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly inlinePictures: Word.InlinePictureCollection;
        /**
         * Gets the collection of list objects in the content control.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly lists: Word.ListCollection;
        /**
         * Gets the collection of paragraph objects in the content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * Important: For requirement sets 1.1 and 1.2, paragraphs in tables wholly contained within this content control aren't returned. From requirement set 1.3, paragraphs in such tables are also returned.
         */
        readonly paragraphs: Word.ParagraphCollection;
        /**
         * Gets the parent body of the content control.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentBody: Word.Body;
        /**
         * Gets the content control that contains the content control. Throws an `ItemNotFound` error if there isn't a parent content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly parentContentControl: Word.ContentControl;
        /**
         * Gets the content control that contains the content control. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentContentControlOrNullObject: Word.ContentControl;
        /**
         * Gets the table that contains the content control. Throws an `ItemNotFound` error if it isn't contained in a table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTable: Word.Table;
        /**
         * Gets the table cell that contains the content control. Throws an `ItemNotFound` error if it isn't contained in a table cell.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableCell: Word.TableCell;
        /**
         * Gets the table cell that contains the content control. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableCellOrNullObject: Word.TableCell;
        /**
         * Gets the table that contains the content control. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableOrNullObject: Word.Table;
        /**
         * Gets the picture-related data if the content control's {@link Word.ContentControlType} is `Picture`. It's `null` otherwise.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly pictureContentControl: Word.PictureContentControl;
        /**
         * Gets the repeating section-related data if the content control's {@link Word.ContentControlType} is `RepeatingSection`. It's `null` otherwise.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly repeatingSectionContentControl: Word.RepeatingSectionContentControl;
        /**
         * Gets the collection of table objects in the content control.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly tables: Word.TableCollection;
        /**
         * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly xmlMapping: Word.XmlMapping;
        /**
         * Specifies the appearance of the content control. The value can be 'BoundingBox', 'Tags', or 'Hidden'.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        appearance: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
        /**
         * Specifies a value that indicates whether the user can delete the content control. Mutually exclusive with removeWhenEdited.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        cannotDelete: boolean;
        /**
         * Specifies a value that indicates whether the user can edit the contents of the content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        cannotEdit: boolean;
        /**
         * Specifies the color of the content control. Color is specified in '#RRGGBB' format or by using the color name.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        color: string;
        /**
         * Gets an integer that represents the content control identifier.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly id: number;
        /**
         * Specifies the placeholder text of the content control. Dimmed text will be displayed when the content control is empty.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        placeholderText: string;
        /**
         * Specifies a value that indicates whether the content control is removed after it is edited. Mutually exclusive with cannotDelete.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        removeWhenEdited: boolean;
        /**
         * Specifies the style name for the content control. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        style: string;
        /**
         * Specifies the built-in style name for the content control. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        styleBuiltIn: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
        /**
         * Gets the content control subtype. The subtype can be 'RichTextInline', 'RichTextParagraphs', 'RichTextTableCell', 'RichTextTableRow' and 'RichTextTable' for rich text content controls, or 'PlainTextInline' and 'PlainTextParagraph' for plain text content controls, or 'CheckBox' for checkbox content controls.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly subtype: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText" | "Group";
        /**
         * Specifies a tag to identify a content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        tag: string;
        /**
         * Gets the text of the content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly text: string;
        /**
         * Specifies the title for a content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        title: string;
        /**
         * Gets the content control type. Only rich text, plain text, and checkbox content controls are supported currently.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly type: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText" | "Group";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ContentControlUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ContentControl): void;
        /**
         * Clears the contents of the content control. The user can perform the undo operation on the cleared content.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        clear(): void;
        /**
         * Deletes the content control and its content. If `keepContent` is set to true, the content isn't deleted.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param keepContent - Required. Indicates whether the content should be deleted with the content control. If `keepContent` is set to true, the content isn't deleted.
         */
        delete(keepContent: boolean): void;
        /**
         * Gets comments associated with the content control.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getComments(): Word.CommentCollection;
        /**
         * Gets the currently supported child content controls in this content control.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * Important: If specific types are provided in the options parameter, only content controls of supported types are returned.
         * Be aware that an exception will be thrown on using methods of a generic {@link Word.ContentControl} that aren't relevant for the specific type.
         * With time, additional types of content controls may be supported. Therefore, your add-in should request and handle specific types of content controls.
         *
         * @param options - Optional. Options that define which content controls are returned.
         */
        getContentControls(options?: Word.ContentControlOptions): Word.ContentControlCollection;
        /**
         * Gets an HTML representation of the content control object. When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document. This method doesn't return the exact same HTML for the same document on different platforms (Windows, Mac, Word on the web, etc.). If you need exact fidelity, or consistency across platforms, use `ContentControl.getOoxml()` and convert the returned XML to HTML.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        getHtml(): OfficeExtension.ClientResult<string>;
        /**
         * Gets the Office Open XML (OOXML) representation of the content control object.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        getOoxml(): OfficeExtension.ClientResult<string>;
        /**
         * Gets the whole content control, or the starting or ending point of the content control, as a range.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rangeLocation - Optional. The range location must be 'Whole', 'Start', 'End', 'Before', 'After', or 'Content'.
         */
        getRange(rangeLocation?: Word.RangeLocation | "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;
        /**
         * Gets reviewed text based on ChangeTrackingVersion selection.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param changeTrackingVersion - Optional. The value must be 'Original' or 'Current'. The default is 'Current'.
         */
        getReviewedText(changeTrackingVersion?: Word.ChangeTrackingVersion): OfficeExtension.ClientResult<string>;
        /**
         * Gets reviewed text based on ChangeTrackingVersion selection.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param changeTrackingVersion - Optional. The value must be 'Original' or 'Current'. The default is 'Current'.
         */
        getReviewedText(changeTrackingVersion?: "Original" | "Current"): OfficeExtension.ClientResult<string>;
        /**
         * Gets the text ranges in the content control by using punctuation marks and/or other ending marks.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param endingMarks - Required. The punctuation marks and/or other ending marks as an array of strings.
         * @param trimSpacing - Optional. Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection. Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.
         */
        getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;
        /**
         * Gets the collection of the TrackedChange objects in the content control.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        getTrackedChanges(): Word.TrackedChangeCollection;
        /**
         * Inserts a break at the specified location in the main document. This method cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param breakType - Required. Type of break.
         * @param insertLocation - Required. The value must be 'Start', 'End', 'Before', or 'After'.
         */
        insertBreak(breakType: Word.BreakType | "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: Word.InsertLocation.start | Word.InsertLocation.end | Word.InsertLocation.before | Word.InsertLocation.after | "Start" | "End" | "Before" | "After"): void;
        /**
         * Inserts a document into the content control at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * Insertion isn't supported if the document being inserted contains an ActiveX control (likely in a form field). Consider replacing such a form field with a content control or other option appropriate for your scenario.
         *
         * @param base64File - Required. The Base64-encoded content of a .docx file.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'. 'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.
         */
        insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.Range;
        /**
         * Inserts HTML into the content control at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param html - Required. The HTML to be inserted in to the content control.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'. 'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.
         */
        insertHtml(html: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.Range;
        /**
         * Inserts an inline picture into the content control at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         *
         * @param base64EncodedImage - Required. The Base64-encoded image to be inserted in the content control.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'. 'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.
         */
        insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.InlinePicture;
        /**
         * Inserts OOXML into the content control at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param ooxml - Required. The OOXML to be inserted in to the content control.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'. 'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.
         */
        insertOoxml(ooxml: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.Range;
        /**
         * Inserts a paragraph at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param paragraphText - Required. The paragraph text to be inserted.
         * @param insertLocation - Required. The value must be 'Start', 'End', 'Before', or 'After'. 'Before' and 'After' cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.
         */
        insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation.start | Word.InsertLocation.end | Word.InsertLocation.before | Word.InsertLocation.after | "Start" | "End" | "Before" | "After"): Word.Paragraph;
        /**
         * Inserts a table with the specified number of rows and columns into, or next to, a content control.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rowCount - Required. The number of rows in the table.
         * @param columnCount - Required. The number of columns in the table.
         * @param insertLocation - Required. The value must be 'Start', 'End', 'Before', or 'After'. 'Before' and 'After' cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.
         * @param values - Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
         */
        insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation.start | Word.InsertLocation.end | Word.InsertLocation.before | Word.InsertLocation.after | "Start" | "End" | "Before" | "After", values?: string[][]): Word.Table;
        /**
         * Inserts text into the content control at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param text - Required. The text to be inserted in to the content control.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'. 'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.
         */
        insertText(text: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.Range;
        /**
         * Resets the state of the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        resetState(): void;
        /**
         * Performs a search with the specified SearchOptions on the scope of the content control object. The search results are a collection of range objects.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param searchText - Required. The search text.
         * @param searchOptions - Optional. Options for the search.
         */
        search(searchText: string, searchOptions?: Word.SearchOptions | {
            ignorePunct?: boolean;
            ignoreSpace?: boolean;
            matchCase?: boolean;
            matchPrefix?: boolean;
            matchSuffix?: boolean;
            matchWholeWord?: boolean;
            matchWildcards?: boolean;
        }): Word.RangeCollection;
        /**
         * Selects the content control. This causes Word to scroll to the selection.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: Word.SelectionMode): void;
        /**
         * Selects the content control. This causes Word to scroll to the selection.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: "Select" | "Start" | "End"): void;
        /**
         * Sets the state of the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param contentControlState - State to be set.
         */
        setState(contentControlState: Word.ContentControlState): void;
        /**
         * Sets the state of the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param contentControlState - State to be set.
         */
        setState(contentControlState: "Error" | "Warning"): void;
        /**
         * Splits the content control into child ranges by using delimiters.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param delimiters - Required. The delimiters as an array of strings.
         * @param multiParagraphs - Optional. Indicates whether a returned child range can cover multiple paragraphs. Default is false which indicates that the paragraph boundaries are also used as delimiters.
         * @param trimDelimiters - Optional. Indicates whether to trim delimiters from the ranges in the range collection. Default is false which indicates that the delimiters are included in the ranges returned in the range collection.
         * @param trimSpacing - Optional. Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection. Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.
         */
        split(delimiters: string[], multiParagraphs?: boolean, trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ContentControlLoadOptions): Word.ContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ContentControl;
        /**
         * Occurs when new comments are added.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentAdded: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when a comment or its reply is changed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentChanged: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when a comment is deselected.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentDeselected: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when a comment is selected.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentSelected: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when data within the content control are changed. To get the new text, load this content control in the handler. To get the old text, do not load it.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @eventproperty
         */
        readonly onDataChanged: OfficeExtension.EventHandlers<Word.ContentControlDataChangedEventArgs>;
        /**
         * Occurs when the content control is deleted. Do not load this content control in the handler, otherwise you won't be able to get its original properties.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @eventproperty
         */
        readonly onDeleted: OfficeExtension.EventHandlers<Word.ContentControlDeletedEventArgs>;
        /**
         * Occurs when the content control is entered.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @eventproperty
         */
        readonly onEntered: OfficeExtension.EventHandlers<Word.ContentControlEnteredEventArgs>;
        /**
         * Occurs when the content control is exited, for example, when the cursor leaves the content control.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @eventproperty
         */
        readonly onExited: OfficeExtension.EventHandlers<Word.ContentControlExitedEventArgs>;
        /**
         * Occurs when selection within the content control is changed.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @eventproperty
         */
        readonly onSelectionChanged: OfficeExtension.EventHandlers<Word.ContentControlSelectionChangedEventArgs>;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ContentControl;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ContentControl;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ContentControl` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ContentControlData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ContentControlData;
    }
    /**
     * Contains a collection of {@link Word.ContentControl} objects. Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content. Individual content controls may contain contents such as images, tables, or paragraphs of formatted text. Currently, only rich text, plain text, checkbox, dropdown list, and combo box content controls are supported.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class ContentControlCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.ContentControl[];
        /**
         * Gets the content controls that have the specified tracking state.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param changeTrackingStates - Required. An array of content control change tracking states.
         */
        getByChangeTrackingStates(changeTrackingStates: Word.ChangeTrackingState[]): Word.ContentControlCollection;
        /**
         * Gets a content control by its identifier. Throws an `ItemNotFound` error if there isn't a content control with the identifier in this collection.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param id - Required. A content control identifier.
         */
        getById(id: number): Word.ContentControl;
        /**
         * Gets a content control by its identifier. If there isn't a content control with the identifier in this collection, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param id - Required. A content control identifier.
         */
        getByIdOrNullObject(id: number): Word.ContentControl;
        /**
         * Gets the content controls that have the specified tag.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param tag - Required. A tag set on a content control.
         */
        getByTag(tag: string): Word.ContentControlCollection;
        /**
         * Gets the content controls that have the specified title.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param title - Required. The title of a content control.
         */
        getByTitle(title: string): Word.ContentControlCollection;
        /**
         * Gets the content controls that have the specified types.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param types - Required. An array of content control types.
         */
        getByTypes(types: Word.ContentControlType[]): Word.ContentControlCollection;
        /**
         * Gets the first content control in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirst(): Word.ContentControl;
        /**
         * Gets the first content control in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirstOrNullObject(): Word.ContentControl;
        /**
         * Gets a content control by its ID.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param id - The content control's ID.
         */
        getItem(id: number): Word.ContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ContentControlCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ContentControlCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ContentControlCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.ContentControlCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ContentControlCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ContentControlCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ContentControlCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ContentControlCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.ContentControlCollectionData;
    }
    /**
     * Represents a list item in a dropdown list or combo box content control.
     *
     * @remarks
     * [Api set: WordApi 1.9]
     */
    export class ContentControlListItem extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the display text of a list item for a dropdown list or combo box content control.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        displayText: string;
        /**
         * Specifies the index location of a content control list item in the collection of list items.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        index: number;
        /**
         * Specifies the programmatic value of a list item for a dropdown list or combo box content control.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        value: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ContentControlListItemUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ContentControlListItem): void;
        /**
         * Deletes the list item.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        delete(): void;
        /**
         * Selects the list item and sets the text of the content control to the value of the list item.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        select(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ContentControlListItemLoadOptions): Word.ContentControlListItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ContentControlListItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ContentControlListItem;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ContentControlListItem;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ContentControlListItem;
        /**
        * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
        * Whereas the original `Word.ContentControlListItem` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ContentControlListItemData`) that contains shallow copies of any loaded child properties from the original object.
        */
        toJSON(): Word.Interfaces.ContentControlListItemData;
    }
    /**
     * Contains a collection of {@link Word.ContentControlListItem} objects that represent the items in a dropdown list or combo box content control.
     *
     * @remarks
     * [Api set: WordApi 1.9]
     */
    export class ContentControlListItemCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.ContentControlListItem[];
        /**
         * Gets the first list item in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        getFirst(): Word.ContentControlListItem;
        /**
         * Gets the first list item in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`.
                    For further information,
                    see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        getFirstOrNullObject(): Word.ContentControlListItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ContentControlListItemCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ContentControlListItemCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ContentControlListItemCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.ContentControlListItemCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ContentControlListItemCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ContentControlListItemCollection;
        /**
        * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
        * Whereas the original `Word.ContentControlListItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ContentControlListItemCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
        */
        toJSON(): Word.Interfaces.ContentControlListItemCollectionData;
    }
    /**
     * Specifies the options that define which content controls are returned.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    export interface ContentControlOptions {
        /**
         * An array of content control types, item must be 'RichText', 'PlainText', 'CheckBox', 'DropDownList', or 'ComboBox'.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * Note: 'PlainText' support was added in WordApi 1.5. 'CheckBox' support was added in WordApi 1.7.
         * 'DropDownList' and 'ComboBox' support was added in WordApi 1.9.
         */
        types: Word.ContentControlType[];
    }
    /**
     * Represents a custom property.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class CustomProperty extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the key of the custom property.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly key: string;
        /**
         * Gets the value type of the custom property. Possible values are: String, Number, Date, Boolean.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly type: Word.DocumentPropertyType | "String" | "Number" | "Date" | "Boolean";
        /**
         * Specifies the value of the custom property. Note that even though Word on the web and the docx file format allow these properties to be arbitrarily long, the desktop version of Word will truncate string values to 255 16-bit chars (possibly creating invalid unicode by breaking up a surrogate pair).
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        value: any;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.CustomPropertyUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.CustomProperty): void;
        /**
         * Deletes the custom property.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        delete(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CustomPropertyLoadOptions): Word.CustomProperty;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CustomProperty;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.CustomProperty;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CustomProperty;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CustomProperty;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CustomProperty` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CustomPropertyData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CustomPropertyData;
    }
    /**
     * Contains the collection of {@link Word.CustomProperty} objects.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class CustomPropertyCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.CustomProperty[];
        /**
         * Creates a new or sets an existing custom property.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param key - Required. The custom property's key, which is case-insensitive.
         * @param value - Required. The custom property's value.
         */
        add(key: string, value: any): Word.CustomProperty;
        /**
         * Deletes all custom properties in this collection.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        deleteAll(): void;
        /**
         * Gets the count of custom properties.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Gets a custom property object by its key, which is case-insensitive. Throws an `ItemNotFound` error if the custom property doesn't exist.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param key - The key that identifies the custom property object.
         */
        getItem(key: string): Word.CustomProperty;
        /**
         * Gets a custom property object by its key, which is case-insensitive. If the custom property doesn't exist, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param key - Required. The key that identifies the custom property object.
         */
        getItemOrNullObject(key: string): Word.CustomProperty;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CustomPropertyCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.CustomPropertyCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CustomPropertyCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.CustomPropertyCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CustomPropertyCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CustomPropertyCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CustomPropertyCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CustomPropertyCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.CustomPropertyCollectionData;
    }
    /**
     * The options for adding a node to the XML tree.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface CustomXmlAddNodeOptions {
        /**
         * If provided, specifies the base name of the element to be added.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        name?: string;
        /**
         * If provided, specifies the namespace of the element to be appended. This property is required to add nodes of {@link Word.CustomXmlNodeType | type} `element` or `attribute`; otherwise, it's ignored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        namespaceUri?: string;
        /**
         * If provided, specifies the node which should become the next sibling of the new node. If not specified, the node is added to the end of the parent node's children. This property is ignored for additions of {@link Word.CustomXmlNodeType | type} `attribute`. If the node isn't a child of the parent, an error is displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nextSibling?: Word.CustomXmlNode;
        /**
         * If provided, specifies the type of node to add. If the parameter isn't specified, it's assumed to be of type `element`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nodeType?: Word.CustomXmlNodeType | "element" | "attribute" | "text" | "cData" | "processingInstruction" | "comment" | "document";
        /**
         * If provided, specifies the value of the added node for those nodes that allow text. If the node doesn't allow text, the property is ignored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nodeValue?: string;
    }
    /**
     * Represents a custom XML part.
     *
     * @remarks
     * [Api set: WordApi 1.4]
     */
    export class CustomXmlPart extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the root element of a bound region of data in the document. If the region is empty, the property returns `Nothing`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly documentElement: Word.CustomXmlNode;
        /**
         * Gets a `CustomXmlValidationErrorCollection` object that provides access to any XML validation errors.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly errors: Word.CustomXmlValidationErrorCollection;
        /**
         * Gets the set of namespace prefix mappings used against the current `CustomXmlPart` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly namespaceManager: Word.CustomXmlPrefixMappingCollection;
        /**
         * Specifies a `CustomXmlSchemaCollection` object representing the set of schemas attached to a bound region of data in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        schemaCollection: Word.CustomXmlSchemaCollection;
        /**
         * Gets a value that indicates whether the `CustomXmlPart` is built-in.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly builtIn: boolean;
        /**
         * Gets the ID of the custom XML part.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly id: string;
        /**
         * Gets the namespace URI of the custom XML part.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly namespaceUri: string;
        /**
         * Gets the XML representation of the current `CustomXmlPart` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly xml: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.CustomXmlPartUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.CustomXmlPart): void;
        /**
         * Adds a node to the XML tree.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param parent - The parent node to which the new node will be added.
         * @param options - Optional. The options that define the node to be added.
         */
        addNode(parent: Word.CustomXmlNode, options?: Word.CustomXmlAddNodeOptions): OfficeExtension.ClientResult<number>;
        /**
         * Deletes the custom XML part.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        delete(): void;
        /**
         * Deletes an attribute with the given name from the element identified by xpath.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * If any element in the tree has an xmlns attribute (whose value is typically, but not always, a URI),
         * an alias for that attribute value must prefix the element name in the xpath parameter. For example, suppose
         * the tree is the following:
         *
         * ```xml
         * <Day>
         *   <Month xmlns="http://calendartypes.org/xsds/GregorianCalendar">
         *     <Week>something</Week>
         *   </Month>
         * </Day>
         * ```
         *
         * The xpath to `<Week>` must be \/Day\/greg:Month\/Week, where greg is an alias that is mapped to
         * "http:\/\/calendartypes.org\/xsds\/GregorianCalendar" in the namespaceMappings parameter.
         *
         * @param xpath - Required. Absolute path to the single element in XPath notation.
         * @param namespaceMappings - Required. An object whose property values are namespace names and whose property names are aliases for the corresponding namespaces. For example, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`. The property names (such as "greg") can be any string that doesn't used reserved XPath characters, such as the forward slash "/".
         * @param name - Required. Name of the attribute.
         */
        deleteAttribute(xpath: string, namespaceMappings: {
            [key: string]: string;
        }, name: string): void;
        /**
         * Deletes the element identified by xpath.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * If any element in the tree has an xmlns attribute (whose value is typically, but not always, a URI),
         * an alias for that attribute value must prefix the element name in the xpath parameter. For example, suppose
         * the tree is the following:
         *
         * ```xml
         * <Day>
         *   <Month xmlns="http://calendartypes.org/xsds/GregorianCalendar">
         *     <Week>something</Week>
         *   </Month>
         * </Day>
         * ```
         *
         * The xpath to `<Week>` must be \/Day\/greg:Month\/Week, where greg is an alias that is mapped to
         * "http:\/\/calendartypes.org\/xsds\/GregorianCalendar" in the namespaceMappings parameter.
         *
         * @param xpath - Required. Absolute path to the single element in XPath notation.
         * @param namespaceMappings - Required. An object whose property values are namespace names and whose property names are aliases for the corresponding namespaces. For example, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`. The property names (such as "greg") can be any string that doesn't used reserved XPath characters, such as the forward slash "/".
         */
        deleteElement(xpath: string, namespaceMappings: {
            [key: string]: string;
        }): void;
        /**
         * Gets the full XML content of the custom XML part.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getXml(): OfficeExtension.ClientResult<string>;
        /**
         * Inserts an attribute with the given name and value to the element identified by xpath.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * If any element in the tree has an xmlns attribute (whose value is typically, but not always, a URI),
         * an alias for that attribute value must prefix the element name in the xpath parameter. For example, suppose
         * the tree is the following:
         *
         * ```xml
         * <Day>
         *   <Month xmlns="http://calendartypes.org/xsds/GregorianCalendar">
         *     <Week>something</Week>
         *   </Month>
         * </Day>
         * ```
         *
         * The xpath to `<Week>` must be \/Day\/greg:Month\/Week, where greg is an alias that is mapped to
         * "http:\/\/calendartypes.org\/xsds\/GregorianCalendar" in the namespaceMappings parameter.
         *
         * @param xpath - Required. Absolute path to the single element in XPath notation.
         * @param namespaceMappings - Required. An object whose property values are namespace names and whose property names are aliases for the corresponding namespaces. For example, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`. The property names (such as "greg") can be any string that doesn't used reserved XPath characters, such as the forward slash "/".
         * @param name - Required. Name of the attribute.
         * @param value - Required. Value of the attribute.
         */
        insertAttribute(xpath: string, namespaceMappings: {
            [key: string]: string;
        }, name: string, value: string): void;
        /**
         * Inserts the given XML under the parent element identified by xpath at child position index.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * If any element in the tree has an xmlns attribute (whose value is typically, but not always, a URI),
         * an alias for that attribute value must prefix the element name in the xpath parameter. For example, suppose
         * the tree is the following:
         *
         * ```xml
         * <Day>
         *   <Month xmlns="http://calendartypes.org/xsds/GregorianCalendar">
         *     <Week>something</Week>
         *   </Month>
         * </Day>
         * ```
         *
         * The xpath to `<Week>` must be \/Day\/greg:Month\/Week, where greg is an alias that is mapped to
         * "http:\/\/calendartypes.org\/xsds\/GregorianCalendar" in the namespaceMappings parameter.
         *
         * @param xpath - Required. Absolute path to the single parent element in XPath notation.
         * @param xml - Required. XML content to be inserted.
         * @param namespaceMappings - Required. An object whose property values are namespace names and whose property names are aliases for the corresponding namespaces. For example, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`. The property names (such as "greg") can be any string that doesn't used reserved XPath characters, such as the forward slash "/".
         * @param index - Optional. Zero-based position at which the new XML to be inserted. If omitted, the XML will be appended as the last child of this parent.
         */
        insertElement(xpath: string, xml: string, namespaceMappings: {
            [key: string]: string;
        }, index?: number): void;
        /**
         * Populates the `CustomXmlPart` object from an XML string.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param xml - The XML string to load.
         */
        loadXml(xml: string): OfficeExtension.ClientResult<boolean>;
        /**
         * Queries the XML content of the custom XML part.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * If any element in the tree has an xmlns attribute (whose value is typically, but not always, a URI),
         * an alias for that attribute value must prefix the element name in the xpath parameter. For example, suppose
         * the tree is the following:
         *
         * ```xml
         * <Day>
         *   <Month xmlns="http://calendartypes.org/xsds/GregorianCalendar">
         *     <Week>something</Week>
         *   </Month>
         * </Day>
         * ```
         *
         * The xpath to `<Week>` must be \/Day\/greg:Month\/Week, where greg is an alias that is mapped to
         * "http:\/\/calendartypes.org\/xsds\/GregorianCalendar" in the namespaceMappings parameter.
         *
         * @param xpath - Required. An XPath query.
         * @param namespaceMappings - Required. An object whose property values are namespace names and whose property names are aliases for the corresponding namespaces. For example, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`. The property names (such as "greg") can be any string that doesn't used reserved XPath characters, such as the forward slash "/".
         * @returns An array where each item represents an entry matched by the XPath query.
         */
        query(xpath: string, namespaceMappings: {
            [key: string]: string;
        }): OfficeExtension.ClientResult<string[]>;
        /**
         * Selects a collection of nodes from a custom XML part.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param xPath - The XPath expression to evaluate.
         */
        selectNodes(xPath: string): Word.CustomXmlNodeCollection;
        /**
         * Selects a single node within a custom XML part matching an XPath expression.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param xPath - The XPath expression to evaluate.
         */
        selectSingleNode(xPath: string): Word.CustomXmlNode;
        /**
         * Sets the full XML content of the custom XML part.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param xml - Required. XML content to be set.
         */
        setXml(xml: string): void;
        /**
         * Updates the value of an attribute with the given name of the element identified by xpath.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * If any element in the tree has an xmlns attribute (whose value is typically, but not always, a URI),
         * an alias for that attribute value must prefix the element name in the xpath parameter. For example, suppose
         * the tree is the following:
         *
         * ```xml
         * <Day>
         *   <Month xmlns="http://calendartypes.org/xsds/GregorianCalendar">
         *     <Week>something</Week>
         *   </Month>
         * </Day>
         * ```
         *
         * The xpath to `<Week>` must be \/Day\/greg:Month\/Week, where greg is an alias that is mapped to
         * "http:\/\/calendartypes.org\/xsds\/GregorianCalendar" in the namespaceMappings parameter.
         *
         * @param xpath - Required. Absolute path to the single element in XPath notation.
         * @param namespaceMappings - Required. An object whose property values are namespace names and whose property names are aliases for the corresponding namespaces. For example, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`. The property names (such as "greg") can be any string that doesn't used reserved XPath characters, such as the forward slash "/".
         * @param name - Required. Name of the attribute.
         * @param value - Required. New value of the attribute.
         */
        updateAttribute(xpath: string, namespaceMappings: {
            [key: string]: string;
        }, name: string, value: string): void;
        /**
         * Updates the XML of the element identified by xpath.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * If any element in the tree has an xmlns attribute (whose value is typically, but not always, a URI),
         * an alias for that attribute value must prefix the element name in the xpath parameter. For example, suppose
         * the tree is the following:
         *
         * ```xml
         * <Day>
         *   <Month xmlns="http://calendartypes.org/xsds/GregorianCalendar">
         *     <Week>something</Week>
         *   </Month>
         * </Day>
         * ```
         *
         * The xpath to `<Week>` must be \/Day\/greg:Month\/Week, where greg is an alias that is mapped to
         * "http:\/\/calendartypes.org\/xsds\/GregorianCalendar" in the namespaceMappings parameter.
         *
         * @param xpath - Required. Absolute path to the single element in XPath notation.
         * @param xml - Required. New XML content to be stored.
         * @param namespaceMappings - Required. An object whose property values are namespace names and whose property names are aliases for the corresponding namespaces. For example, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`. The property names (such as "greg") can be any string that doesn't used reserved XPath characters, such as the forward slash "/".
         */
        updateElement(xpath: string, xml: string, namespaceMappings: {
            [key: string]: string;
        }): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CustomXmlPartLoadOptions): Word.CustomXmlPart;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CustomXmlPart;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.CustomXmlPart;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CustomXmlPart;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CustomXmlPart;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CustomXmlPart` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CustomXmlPartData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CustomXmlPartData;
    }
    /**
     * Contains the collection of {@link Word.CustomXmlPart} objects.
     *
     * @remarks
     * [Api set: WordApi 1.4]
     */
    export class CustomXmlPartCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.CustomXmlPart[];
        /**
         * Adds a new custom XML part to the document.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param xml - Required. XML content. Must be a valid XML fragment.
         */
        add(xml: string): Word.CustomXmlPart;
        /**
         * Gets a new scoped collection of custom XML parts whose namespaces match the given namespace.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param namespaceUri - Required. The namespace URI.
         */
        getByNamespace(namespaceUri: string): Word.CustomXmlPartScopedCollection;
        /**
         * Gets the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Gets a custom XML part based on its ID.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param id - ID or index of the custom XML part to be retrieved.
         */
        getItem(id: string): Word.CustomXmlPart;
        /**
         * Gets a custom XML part based on its ID. If the CustomXmlPart doesn't exist, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param id - Required. ID of the object to be retrieved.
         */
        getItemOrNullObject(id: string): Word.CustomXmlPart;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CustomXmlPartCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.CustomXmlPartCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CustomXmlPartCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.CustomXmlPartCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CustomXmlPartCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CustomXmlPartCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CustomXmlPartCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CustomXmlPartCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.CustomXmlPartCollectionData;
    }
    /**
     * Contains the collection of {@link Word.CustomXmlPart} objects with a specific namespace.
     *
     * @remarks
     * [Api set: WordApi 1.4]
     */
    export class CustomXmlPartScopedCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.CustomXmlPart[];
        /**
         * Gets the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Gets a custom XML part based on its ID.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param id - ID of the custom XML part to be retrieved.
         */
        getItem(id: string): Word.CustomXmlPart;
        /**
         * Gets a custom XML part based on its ID. If the CustomXmlPart doesn't exist in the collection, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param id - Required. ID of the object to be retrieved.
         */
        getItemOrNullObject(id: string): Word.CustomXmlPart;
        /**
         * If the collection contains exactly one item, this method returns it. Otherwise, this method produces an error.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getOnlyItem(): Word.CustomXmlPart;
        /**
         * If the collection contains exactly one item, this method returns it. Otherwise, this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getOnlyItemOrNullObject(): Word.CustomXmlPart;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CustomXmlPartScopedCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.CustomXmlPartScopedCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.CustomXmlPartScopedCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.CustomXmlPartScopedCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.CustomXmlPartScopedCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.CustomXmlPartScopedCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.CustomXmlPartScopedCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CustomXmlPartScopedCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.CustomXmlPartScopedCollectionData;
    }
    /**
     * The Document object is the top level object. A Document object contains one or more sections, content controls, and the body that contains the contents of the document.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class Document extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the active window for the document.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly activeWindow: Word.Window;
        /**
         * Specifies a `Template` object that represents the template attached to the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        attachedTemplate: Word.Template;
        /**
         * Returns a `Bibliography` object that represents the bibliography references contained within the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly bibliography: Word.Bibliography;
        /**
         * Gets the body object of the main document. The body is the text that excludes headers, footers, footnotes, textboxes, etc.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly body: Word.Body;
        /**
         * Returns a `BookmarkCollection` object that represents all the bookmarks in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly bookmarks: Word.BookmarkCollection;
        /**
         * Gets a `Coauthoring` object for managing coauthoring in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly coauthoring: Word.Coauthoring;
        /**
         * Gets the collection of content control objects in the document. This includes content controls in the body of the document, headers, footers, textboxes, etc.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly contentControls: Word.ContentControlCollection;
        /**
         * Gets the custom XML parts in the document.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly customXmlParts: Word.CustomXmlPartCollection;
        /**
         * Returns a `DocumentLibraryVersionCollection` object that represents the collection of versions of a shared document that has versioning enabled and that's stored in a document library on a server.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly documentLibraryVersions: Word.DocumentLibraryVersionCollection;
        /**
         * Returns a `FrameCollection` object that represents all the frames in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly frames: Word.FrameCollection;
        /**
         * Returns a `HyperlinkCollection` object that represents all the hyperlinks in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly hyperlinks: Word.HyperlinkCollection;
        /**
         * Returns an `IndexCollection` object that represents all the indexes in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly indexes: Word.IndexCollection;
        /**
         * Returns a `ListTemplateCollection` object that represents all the list templates in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly listTemplates: Word.ListTemplateCollection;
        /**
         * Returns a `PageSetup` object that's associated with the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly pageSetup: Word.PageSetup;
        /**
         * Gets the properties of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly properties: Word.DocumentProperties;
        /**
         * Gets the collection of revisions that represents the tracked changes in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly revisions: Word.RevisionCollection;
        /**
         * Gets the collection of section objects in the document.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly sections: Word.SectionCollection;
        /**
         * Returns a `Selection` object that represents the current selection in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly selection: Word.Selection;
        /**
         * Gets the add-in's settings in the document.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly settings: Word.SettingCollection;
        /**
         * Returns a `TableOfAuthoritiesCategoryCollection` object that represents the available table of authorities categories in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly tableOfAuthoritiesCategories: Word.TableOfAuthoritiesCategoryCollection;
        /**
         * Returns a `TableOfAuthoritiesCollection` object that represents all the tables of authorities in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly tablesOfAuthorities: Word.TableOfAuthoritiesCollection;
        /**
         * Returns a `TableOfContentsCollection` object that represents all the tables of contents in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly tablesOfContents: Word.TableOfContentsCollection;
        /**
         * Returns a `TableOfFiguresCollection` object that represents all the tables of figures in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly tablesOfFigures: Word.TableOfFiguresCollection;
        /**
         * Gets the collection of `Word.Window` objects for the document.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly windows: Word.WindowCollection;
        /**
         * Specifies if automatic hyphenation is turned on for the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        autoHyphenation: boolean;
        /**
         * Specifies if the edits in the document are automatically saved.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        autoSaveOn: boolean;
        /**
         * Specifies the ChangeTracking mode.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        changeTrackingMode: Word.ChangeTrackingMode | "Off" | "TrackAll" | "TrackMineOnly";
        /**
         * Specifies the maximum number of consecutive lines that can end with hyphens.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        consecutiveHyphensLimit: number;
        /**
         * Specifies whether words in all capital letters can be hyphenated.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hyphenateCaps: boolean;
        /**
         * Specifies whether Microsoft Word has detected the language of the document text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        languageDetected: boolean;
        /**
         * Indicates whether the changes in the document have been saved. A value of true indicates that the document hasn't changed since it was saved.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly saved: boolean;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.DocumentUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Document): void;
        /**
         * Adds a style into the document by name and type.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param name - Required. A string representing the style name.
         * @param type - Required. The style type, including character, list, paragraph, or table.
         */
        addStyle(name: string, type: Word.StyleType): Word.Style;
        /**
         * Adds a style into the document by name and type.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param name - Required. A string representing the style name.
         * @param type - Required. The style type, including character, list, paragraph, or table.
         */
        addStyle(name: string, type: "Character" | "List" | "Paragraph" | "Table"): Word.Style;
        /**
         * Closes the current document.
                    
                    Note: This API isn't supported in Word on the web.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param closeBehavior - Optional. The close behavior must be 'Save' or 'SkipSave'. Default value is 'Save'.
         */
        close(closeBehavior?: Word.CloseBehavior): void;
        /**
         * Closes the current document.
                    
                    Note: This API isn't supported in Word on the web.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param closeBehavior - Optional. The close behavior must be 'Save' or 'SkipSave'. Default value is 'Save'.
         */
        close(closeBehavior?: "Save" | "SkipSave"): void;
        /**
         * Displays revision marks that indicate where the specified document differs from another document.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         *
         * @param filePath - Required. The path of the document with which the specified document is compared.
         * @param documentCompareOptions - Optional. The additional options that specifies the behavior of comparing document.
         */
        compare(filePath: string, documentCompareOptions?: Word.DocumentCompareOptions): void;
        /**
         * Displays revision marks that indicate where the specified document differs from another document.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param base64File - Required. The Base64-encoded content of the document with which the specified document is compared.
         * @param documentCompareOptions - Optional. The additional options that specify the behavior for comparing the documents. Note that the `compareTarget` option isn't allowed to be `CompareTargetSelected` in this API.
         */
        compareFromBase64(base64File: string, documentCompareOptions?: Word.DocumentCompareOptions): void;
        /**
         * Deletes a bookmark, if it exists, from the document.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param name - Required. The case-insensitive bookmark name.
         */
        deleteBookmark(name: string): void;
        /**
         * Analyzes the document text to determine the language.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        detectLanguage(): void;
        /**
         * Gets the annotation by ID. Throws an `ItemNotFound` error if annotation isn't found.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         *
         * @param id - The ID of the annotation to get.
         */
        getAnnotationById(id: string): Word.Annotation;
        /**
         * Gets a bookmark's range. Throws an `ItemNotFound` error if the bookmark doesn't exist.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param name - Required. The case-insensitive bookmark name.
         */
        getBookmarkRange(name: string): Word.Range;
        /**
         * Gets a bookmark's range. If the bookmark doesn't exist, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param name - Required. The case-insensitive bookmark name.
         */
        getBookmarkRangeOrNullObject(name: string): Word.Range;
        /**
         * Gets the currently supported content controls in the document.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * Important: If specific types are provided in the options parameter, only content controls of supported types are returned.
         * Be aware that an exception will be thrown on using methods of a generic {@link Word.ContentControl} that aren't relevant for the specific type.
         * With time, additional types of content controls may be supported. Therefore, your add-in should request and handle specific types of content controls.
         *
         * @param options - Optional. Options that define which content controls are returned.
         */
        getContentControls(options?: Word.ContentControlOptions): Word.ContentControlCollection;
        /**
         * Gets the document's endnotes in a single body.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        getEndnoteBody(): Word.Body;
        /**
         * Gets the document's footnotes in a single body.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        getFootnoteBody(): Word.Body;
        /**
         * Gets the paragraph by its unique local ID. Throws an `ItemNotFound` error if the collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         *
         * @param id - Required. Unique local ID in standard 8-4-4-4-12 GUID format without curly braces. Note that the ID differs across sessions and coauthors.
         */
        getParagraphByUniqueLocalId(id: string): Word.Paragraph;
        /**
         * Gets the current selection of the document. Multiple selections aren't supported.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        getSelection(): Word.Range;
        /**
         * Gets a StyleCollection object that represents the whole style set of the document.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        getStyles(): Word.StyleCollection;
        /**
         * Import styles from a JSON-formatted string.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         *
         * Note: The `importedStylesConflictBehavior` parameter was introduced in WordApiDesktop 1.1.
         *
         * @param stylesJson - Required. A JSON-formatted string representing the styles.
         * @param importedStylesConflictBehavior - Optional. Specifies how to handle any imported styles with the same name as existing styles in the current document.
         */
        importStylesFromJson(stylesJson: string, importedStylesConflictBehavior?: Word.ImportedStylesConflictBehavior): OfficeExtension.ClientResult<string[]>;
        /**
         * Import styles from a JSON-formatted string.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         *
         * Note: The `importedStylesConflictBehavior` parameter was introduced in WordApiDesktop 1.1.
         *
         * @param stylesJson - Required. A JSON-formatted string representing the styles.
         * @param importedStylesConflictBehavior - Optional. Specifies how to handle any imported styles with the same name as existing styles in the current document.
         */
        importStylesFromJson(stylesJson: string, importedStylesConflictBehavior?: "Ignore" | "Overwrite" | "CreateNew"): OfficeExtension.ClientResult<string[]>;
        /**
         * Inserts a document into the target document at a specific location with additional properties.
                    Headers, footers, watermarks, and other section properties are copied by default.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * Insertion isn't supported if the document being inserted contains an ActiveX control (likely in a form field). Consider replacing such a form field with a content control or other option appropriate for your scenario.
         *
         * @param base64File - Required. The Base64-encoded content of a .docx file.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'.
         * @param insertFileOptions - Optional. The additional properties that should be imported to the destination document.
         */
        insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End", insertFileOptions?: Word.InsertFileOptions): Word.SectionCollection;
        /**
         * Initiates manual hyphenation of a document, one line at a time.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        manualHyphenation(): void;
        /**
         * Saves the document.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * Note: The `saveBehavior` and `fileName` parameters were introduced in WordApi 1.5.
         *
         * @param saveBehavior - Optional. The save behavior must be 'Save' or 'Prompt'. Default value is 'Save'.
         * @param fileName - Optional. The file name (exclude file extension). Only takes effect for a new document.
         */
        save(saveBehavior?: Word.SaveBehavior, fileName?: string): void;
        /**
         * Saves the document.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * Note: The `saveBehavior` and `fileName` parameters were introduced in WordApi 1.5.
         *
         * @param saveBehavior - Optional. The save behavior must be 'Save' or 'Prompt'. Default value is 'Save'.
         * @param fileName - Optional. The file name (exclude file extension). Only takes effect for a new document.
         */
        save(saveBehavior?: "Save" | "Prompt", fileName?: string): void;
        /**
         * Performs a search with the specified search options on the scope of the whole document. The search results are a collection of range objects.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        search(searchText: string, searchOptions?: Word.SearchOptions | {
            ignorePunct?: boolean;
            ignoreSpace?: boolean;
            matchCase?: boolean;
            matchPrefix?: boolean;
            matchSuffix?: boolean;
            matchWholeWord?: boolean;
            matchWildcards?: boolean;
        }): Word.RangeCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.DocumentLoadOptions): Word.Document;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Document;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Document;
        /**
         * Occurs when the user clicks an annotation (or selects it using **Alt+Down**).
         *
         * @remarks
         * [Api set: WordApi 1.7]
         *
         * @eventproperty
         */
        readonly onAnnotationClicked: OfficeExtension.EventHandlers<Word.AnnotationClickedEventArgs>;
        /**
         * Occurs when the user hovers the cursor over an annotation.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         *
         * @eventproperty
         */
        readonly onAnnotationHovered: OfficeExtension.EventHandlers<Word.AnnotationHoveredEventArgs>;
        /**
         * Occurs when the user adds one or more annotations.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         *
         * @eventproperty
         */
        readonly onAnnotationInserted: OfficeExtension.EventHandlers<Word.AnnotationInsertedEventArgs>;
        /**
         * Occurs when the user performs an action in an annotation pop-up menu.
         *
         * @remarks
         * [Api set: WordApi 1.8]
         *
         * @eventproperty
         */
        readonly onAnnotationPopupAction: OfficeExtension.EventHandlers<Word.AnnotationPopupActionEventArgs>;
        /**
         * Occurs when the user deletes one or more annotations.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         *
         * @eventproperty
         */
        readonly onAnnotationRemoved: OfficeExtension.EventHandlers<Word.AnnotationRemovedEventArgs>;
        /**
         * Occurs when a content control is added. Run context.sync() in the handler to get the new content control's properties.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @eventproperty
         */
        readonly onContentControlAdded: OfficeExtension.EventHandlers<Word.ContentControlAddedEventArgs>;
        /**
         * Occurs when the user adds new paragraphs.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         *
         * @eventproperty
         */
        readonly onParagraphAdded: OfficeExtension.EventHandlers<Word.ParagraphAddedEventArgs>;
        /**
         * Occurs when the user changes paragraphs.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         *
         * @eventproperty
         */
        readonly onParagraphChanged: OfficeExtension.EventHandlers<Word.ParagraphChangedEventArgs>;
        /**
         * Occurs when the user deletes paragraphs.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         *
         * @eventproperty
         */
        readonly onParagraphDeleted: OfficeExtension.EventHandlers<Word.ParagraphDeletedEventArgs>;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Document;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Document;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Document` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.DocumentData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.DocumentData;
    }
    /**
     * The DocumentCreated object is the top level object created by Application.CreateDocument. A DocumentCreated object is a special Document object.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class DocumentCreated extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the body object of the document. The body is the text that excludes headers, footers, footnotes, textboxes, etc.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.3]
         */
        readonly body: Word.Body;
        /**
         * Gets the collection of content control objects in the document. This includes content controls in the body of the document, headers, footers, textboxes, etc.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.3]
         */
        readonly contentControls: Word.ContentControlCollection;
        /**
         * Gets the custom XML parts in the document.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.4]
         */
        readonly customXmlParts: Word.CustomXmlPartCollection;
        /**
         * Gets the properties of the document.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.3]
         */
        readonly properties: Word.DocumentProperties;
        /**
         * Gets the collection of section objects in the document.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.3]
         */
        readonly sections: Word.SectionCollection;
        /**
         * Gets the add-in's settings in the document.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.4]
         */
        readonly settings: Word.SettingCollection;
        /**
         * Indicates whether the changes in the document have been saved. A value of true indicates that the document hasn't changed since it was saved.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.3]
         */
        readonly saved: boolean;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.DocumentCreatedUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.DocumentCreated): void;
        /**
         * Adds a style into the document by name and type.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.5]
         *
         * @param name - Required. A string representing the style name.
         * @param type - Required. The style type, including character, list, paragraph, or table.
         */
        addStyle(name: string, type: Word.StyleType): Word.Style;
        /**
         * Adds a style into the document by name and type.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.5]
         *
         * @param name - Required. A string representing the style name.
         * @param type - Required. The style type, including character, list, paragraph, or table.
         */
        addStyle(name: string, type: "Character" | "List" | "Paragraph" | "Table"): Word.Style;
        /**
         * Deletes a bookmark, if it exists, from the document.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.4]
         *
         * @param name - Required. The case-insensitive bookmark name.
         */
        deleteBookmark(name: string): void;
        /**
         * Gets a bookmark's range. Throws an `ItemNotFound` error if the bookmark doesn't exist.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.4]
         *
         * @param name - Required. The case-insensitive bookmark name.
         */
        getBookmarkRange(name: string): Word.Range;
        /**
         * Gets a bookmark's range. If the bookmark doesn't exist, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.4]
         *
         * @param name - Required. The case-insensitive bookmark name. Only alphanumeric and underscore characters are supported. It must begin with a letter but if you want to tag the bookmark as hidden, then start the name with an underscore character. Names can't be longer than 40 characters.
         */
        getBookmarkRangeOrNullObject(name: string): Word.Range;
        /**
         * Gets the currently supported content controls in the document.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.5]
         *
         * Important: If specific types are provided in the options parameter, only content controls of supported types are returned.
         * Be aware that an exception will be thrown on using methods of a generic {@link Word.ContentControl} that aren't relevant for the specific type.
         * With time, additional types of content controls may be supported. Therefore, your add-in should request and handle specific types of content controls.
         *
         * @param options - Optional. Options that define which content controls are returned.
         */
        getContentControls(options?: Word.ContentControlOptions): Word.ContentControlCollection;
        /**
         * Gets a StyleCollection object that represents the whole style set of the document.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.5]
         */
        getStyles(): Word.StyleCollection;
        /**
         * Inserts a document into the target document at a specific location with additional properties.
                    Headers, footers, watermarks, and other section properties are copied by default.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.5]
         *
         * Insertion isn't supported if the document being inserted contains an ActiveX control (likely in a form field). Consider replacing such a form field with a content control or other option appropriate for your scenario.
         *
         * @param base64File - Required. The Base64-encoded content of a .docx file.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'.
         * @param insertFileOptions - Optional. The additional properties that should be imported to the destination document.
         */
        insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End", insertFileOptions?: Word.InsertFileOptions): Word.SectionCollection;
        /**
         * Opens the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        open(): void;
        /**
         * Saves the document.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.3]
         *
         * Note: The `saveBehavior` and `fileName` parameters were introduced in WordApiHiddenDocument 1.5.
         *
         * @param saveBehavior - Optional. DocumentCreated only supports 'Save'.
         * @param fileName - Optional. The file name (exclude file extension). Only takes effect for a new document.
         */
        save(saveBehavior?: Word.SaveBehavior, fileName?: string): void;
        /**
         * Saves the document.
         *
         * @remarks
         * [Api set: WordApiHiddenDocument 1.3]
         *
         * Note: The `saveBehavior` and `fileName` parameters were introduced in WordApiHiddenDocument 1.5.
         *
         * @param saveBehavior - Optional. DocumentCreated only supports 'Save'.
         * @param fileName - Optional. The file name (exclude file extension). Only takes effect for a new document.
         */
        save(saveBehavior?: "Save" | "Prompt", fileName?: string): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.DocumentCreatedLoadOptions): Word.DocumentCreated;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.DocumentCreated;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.DocumentCreated;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.DocumentCreated;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.DocumentCreated;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.DocumentCreated` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.DocumentCreatedData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.DocumentCreatedData;
    }
    /**
     * Represents document properties.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class DocumentProperties extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the collection of custom properties of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly customProperties: Word.CustomPropertyCollection;
        /**
         * Gets the application name of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly applicationName: string;
        /**
         * Specifies the author of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        author: string;
        /**
         * Specifies the category of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        category: string;
        /**
         * Specifies the Comments field in the metadata of the document. These have no connection to comments by users made in the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        comments: string;
        /**
         * Specifies the company of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        company: string;
        /**
         * Gets the creation date of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly creationDate: Date;
        /**
         * Specifies the format of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        format: string;
        /**
         * Specifies the keywords of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        keywords: string;
        /**
         * Gets the last author of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly lastAuthor: string;
        /**
         * Gets the last print date of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly lastPrintDate: Date;
        /**
         * Gets the last save time of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly lastSaveTime: Date;
        /**
         * Specifies the manager of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        manager: string;
        /**
         * Gets the revision number of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly revisionNumber: string;
        /**
         * Gets security settings of the document. Some are access restrictions on the file on disk. Others are Document Protection settings. Some possible values are 0 = File on disk is read/write; 1 = Protect Document: File is encrypted and requires a password to open; 2 = Protect Document: Always Open as Read-Only; 3 = Protect Document: Both #1 and #2; 4 = File on disk is read-only; 5 = Both #1 and #4; 6 = Both #2 and #4; 7 = All of #1, #2, and #4; 8 = Protect Document: Restrict Edit to read-only; 9 = Both #1 and #8; 10 = Both #2 and #8; 11 = All of #1, #2, and #8; 12 = Both #4 and #8; 13 = All of #1, #4, and #8; 14 = All of #2, #4, and #8; 15 = All of #1, #2, #4, and #8.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly security: number;
        /**
         * Specifies the subject of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        subject: string;
        /**
         * Gets the template of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly template: string;
        /**
         * Specifies the title of the document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        title: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.DocumentPropertiesUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.DocumentProperties): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.DocumentPropertiesLoadOptions): Word.DocumentProperties;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.DocumentProperties;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.DocumentProperties;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.DocumentProperties;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.DocumentProperties;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.DocumentProperties` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.DocumentPropertiesData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.DocumentPropertiesData;
    }
    /**
     * The data specific to content controls of type DropDownList.
     *
     * @remarks
     * [Api set: WordApi 1.9]
     */
    export class DropDownListContentControl extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the collection of list items in the dropdown list content control.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        readonly listItems: Word.ContentControlListItemCollection;
        /**
         * Adds a new list item to this dropdown list content control and returns a {@link Word.ContentControlListItem} object.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         *
         * @param displayText - Required. Display text of the list item.
         * @param value - Optional. Value of the list item.
         * @param index - Optional. Index location of the new item in the list. If an item exists at the position specified, the existing item is pushed down in the list. If omitted, the new item is added to the end of the list.
         */
        addListItem(displayText: string, value?: string, index?: number): Word.ContentControlListItem;
        /**
         * Deletes all list items in this dropdown list content control.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        deleteAllListItems(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.DropDownListContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.DropDownListContentControl;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.DropDownListContentControl;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.DropDownListContentControl;
        /**
        * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
        * Whereas the original `Word.DropDownListContentControl` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.DropDownListContentControlData`) that contains shallow copies of any loaded child properties from the original object.
        */
        toJSON(): Word.Interfaces.DropDownListContentControlData;
    }
    /**
     * The data specific to content controls of type 'ComboBox'.
     *
     * @remarks
     * [Api set: WordApi 1.9]
     */
    export class ComboBoxContentControl extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the collection of list items in the combo box content control.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        readonly listItems: Word.ContentControlListItemCollection;
        /**
         * Adds a new list item to this combo box content control and returns a {@link Word.ContentControlListItem} object.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         *
         * @param displayText - Required. Display text of the list item.
         * @param value - Optional. Value of the list item.
         * @param index - Optional. Index location of the new item in the list. If an item exists at the position specified, the existing item is pushed down in the list. If omitted, the new item is added to the end of the list.
         */
        addListItem(displayText: string, value?: string, index?: number): Word.ContentControlListItem;
        /**
         * Deletes all list items in this combo box content control.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        deleteAllListItems(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ComboBoxContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ComboBoxContentControl;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ComboBoxContentControl;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ComboBoxContentControl;
        /**
        * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
        * Whereas the original `Word.ComboBoxContentControl` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ComboBoxContentControlData`) that contains shallow copies of any loaded child properties from the original object.
        */
        toJSON(): Word.Interfaces.ComboBoxContentControlData;
    }
    /**
     * Represents a field.
     *
     * @remarks
     * [Api set: WordApi 1.4]
     *
     * Important: To learn more about which fields can be inserted, see the `Word.Range.insertField` API introduced in requirement set 1.5.
     * Support for managing fields is similar to what's available in the Word UI. However, the Word UI on the web primarily only supports fields as read-only (see {@link https://support.microsoft.com/office/d8f46094-13c3-4966-98c3-259748f3caf1 | Field codes in Word for the web}).
     * To learn more about Word UI clients that more fully support fields, see the product list at the beginning of {@link https://support.microsoft.com/office/c429bbb0-8669-48a7-bd24-bab6ba6b06bb | Insert, edit, and view fields in Word}.
     */
    export class Field extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets a `LinkFormat` object that represents the link options of the field.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly linkFormat: Word.LinkFormat;
        /**
         * Gets an `OleFormat` object that represents the OLE characteristics (other than linking) for the field.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly oleFormat: Word.OleFormat;
        /**
         * Gets the parent body of the field.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly parentBody: Word.Body;
        /**
         * Gets the content control that contains the field. Throws an `ItemNotFound` error if there isn't a parent content control.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly parentContentControl: Word.ContentControl;
        /**
         * Gets the content control that contains the field. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly parentContentControlOrNullObject: Word.ContentControl;
        /**
         * Gets the table that contains the field. Throws an `ItemNotFound` error if it isn't contained in a table.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly parentTable: Word.Table;
        /**
         * Gets the table cell that contains the field. Throws an `ItemNotFound` error if it isn't contained in a table cell.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly parentTableCell: Word.TableCell;
        /**
         * Gets the table cell that contains the field. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly parentTableCellOrNullObject: Word.TableCell;
        /**
         * Gets the table that contains the field. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly parentTableOrNullObject: Word.Table;
        /**
         * Gets the field's result data.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly result: Word.Range;
        /**
         * Specifies the field's code instruction.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * Note: The ability to set the code was introduced in WordApi 1.5.
         */
        code: string;
        /**
         * Specifies data in an "Addin" field. If the field isn't an "Addin" field, it is `null` and it will throw a general exception when code attempts to set it.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        data: string;
        /**
         * Gets the field's kind.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly kind: Word.FieldKind | "None" | "Hot" | "Warm" | "Cold";
        /**
         * Specifies whether the field is locked. `true` if the field is locked, `false` otherwise.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        locked: boolean;
        /**
         * Specifies whether the field codes are displayed for the specified field. `true` if the field codes are displayed, `false` otherwise.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        showCodes: boolean;
        /**
         * Gets the field's type.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly type: Word.FieldType | "Addin" | "AddressBlock" | "Advance" | "Ask" | "Author" | "AutoText" | "AutoTextList" | "BarCode" | "Bibliography" | "BidiOutline" | "Citation" | "Comments" | "Compare" | "CreateDate" | "Data" | "Database" | "Date" | "DisplayBarcode" | "DocProperty" | "DocVariable" | "EditTime" | "Embedded" | "EQ" | "Expression" | "FileName" | "FileSize" | "FillIn" | "FormCheckbox" | "FormDropdown" | "FormText" | "GotoButton" | "GreetingLine" | "Hyperlink" | "If" | "Import" | "Include" | "IncludePicture" | "IncludeText" | "Index" | "Info" | "Keywords" | "LastSavedBy" | "Link" | "ListNum" | "MacroButton" | "MergeBarcode" | "MergeField" | "MergeRec" | "MergeSeq" | "Next" | "NextIf" | "NoteRef" | "NumChars" | "NumPages" | "NumWords" | "OCX" | "Page" | "PageRef" | "Print" | "PrintDate" | "Private" | "Quote" | "RD" | "Ref" | "RevNum" | "SaveDate" | "Section" | "SectionPages" | "Seq" | "Set" | "Shape" | "SkipIf" | "StyleRef" | "Subject" | "Subscriber" | "Symbol" | "TA" | "TC" | "Template" | "Time" | "Title" | "TOA" | "TOC" | "UserAddress" | "UserInitials" | "UserName" | "XE" | "Empty" | "Others" | "Undefined";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.FieldUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Field): void;
        /**
         * Copies the field to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        copyToClipboard(): void;
        /**
         * Removes the field from the document and places it on the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cut(): void;
        /**
         * Deletes the field.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        delete(): void;
        /**
         * Clicks the field.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        doClick(): void;
        /**
         * Gets the next field. Throws an `ItemNotFound` error if this field is the last one.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getNext(): Word.Field;
        /**
         * Gets the next field. If this field is the last one, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getNextOrNullObject(): Word.Field;
        /**
         * Selects the field.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: Word.SelectionMode): void;
        /**
         * Selects the field.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: "Select" | "Start" | "End"): void;
        /**
         * Replaces the field with its most recent result.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        unlink(): void;
        /**
         * Updates the field.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        updateResult(): void;
        /**
         * Saves the changes made to the results of an {@link https://support.microsoft.com/office/1c34d6d6-0de3-4b5c-916a-2ff950fb629e | INCLUDETEXT field} back to the source document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        updateSource(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.FieldLoadOptions): Word.Field;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Field;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Field;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Field;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Field;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Field` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.FieldData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.FieldData;
    }
    /**
     * Contains a collection of {@link Word.Field} objects.
     *
     * @remarks
     * [Api set: WordApi 1.4]
     *
     * Important: To learn more about which fields can be inserted, see the `Word.Range.insertField` API introduced in requirement set 1.5.
     * Support for managing fields is similar to what's available in the Word UI. However, the Word UI on the web primarily only supports fields as read-only (see {@link https://support.microsoft.com/office/d8f46094-13c3-4966-98c3-259748f3caf1 | Field codes in Word for the web}).
     * To learn more about Word UI clients that more fully support fields, see the product list at the beginning of {@link https://support.microsoft.com/office/c429bbb0-8669-48a7-bd24-bab6ba6b06bb | Insert, edit, and view fields in Word}.
     */
    export class FieldCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Field[];
        /**
         * Gets the first field in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getFirst(): Word.Field;
        /**
         * Gets the first field in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getFirstOrNullObject(): Word.Field;
        /**
         * Gets the Field object collection including the specified types of fields.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param types - Required. An array of field types.
         */
        getByTypes(types: Word.FieldType[]): Word.FieldCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.FieldCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.FieldCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.FieldCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.FieldCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.FieldCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.FieldCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.FieldCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.FieldCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.FieldCollectionData;
    }
    /**
     * Represents a font.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class Font extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BorderUniversalCollection` object that represents all the borders for the font.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly borders: Word.BorderUniversalCollection;
        /**
         * Returns a `FillFormat` object that contains fill formatting properties for the font used by the range of text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly fill: Word.FillFormat;
        /**
         * Returns a `GlowFormat` object that represents the glow formatting for the font used by the range of text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly glow: Word.GlowFormat;
        /**
         * Returns a `LineFormat` object that specifies the formatting for a line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly line: Word.LineFormat;
        /**
         * Returns a `ReflectionFormat` object that represents the reflection formatting for a shape.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly reflection: Word.ReflectionFormat;
        /**
         * Returns a `ColorFormat` object that represents the color for the font.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly textColor: Word.ColorFormat;
        /**
         * Returns a `ShadowFormat` object that specifies the shadow formatting for the font.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly textShadow: Word.ShadowFormat;
        /**
         * Returns a `ThreeDimensionalFormat` object that contains 3-dimensional (3D) effect formatting properties for the font.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly threeDimensionalFormat: Word.ThreeDimensionalFormat;
        /**
         * Specifies whether the font is formatted as all capital letters, which makes lowercase letters appear as uppercase letters. The possible values are as follows:
                    
                    - `true`: All the text has the **All Caps** attribute.
                    
                    - `false`: None of the text has the **All Caps** attribute.
                    
                    - `null`: Returned if some, but not all, of the text has the **All Caps** attribute.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        allCaps: boolean;
        /**
         * Specifies a value that indicates whether the font is bold. True if the font is formatted as bold, otherwise, false.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        bold: boolean;
        /**
         * Specifies whether the font is formatted as bold in a right-to-left language document. The possible values are as follows:
                    
                    - `true`: All the text is bold.
                    
                    - `false`: None of the text is bold.
                    
                    - `null`: Returned if some, but not all, of the text is bold.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        boldBidirectional: boolean;
        /**
         * Specifies the color for the specified font. You can provide the value in the '#RRGGBB' format or the color name.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        color: string;
        /**
         * Specifies a `ColorIndex` value that represents the color for the font.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        colorIndex: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
        /**
         * Specifies the color for the `Font` object in a right-to-left language document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        colorIndexBidirectional: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
        /**
         * Specifies whether contextual alternates are enabled for the font.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        contextualAlternates: boolean;
        /**
         * Specifies the color to be used for diacritics for the `Font` object. You can provide the value in the '#RRGGBB' format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        diacriticColor: string;
        /**
         * Specifies whether Microsoft Word ignores the number of characters per line for the corresponding `Font` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        disableCharacterSpaceGrid: boolean;
        /**
         * Specifies a value that indicates whether the font has a double strikethrough. True if the font is formatted as double strikethrough text, otherwise, false.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        doubleStrikeThrough: boolean;
        /**
         * Specifies whether the font is formatted as embossed. The possible values are as follows:
                    
                    - `true`: All the text is embossed.
                    
                    - `false`: None of the text is embossed.
                    
                    - `null`: Returned if some, but not all, of the text is embossed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        emboss: boolean;
        /**
         * Specifies an `EmphasisMark` value that represents the emphasis mark for a character or designated character string.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        emphasisMark: Word.EmphasisMark | "None" | "OverSolidCircle" | "OverComma" | "OverWhiteCircle" | "UnderSolidCircle";
        /**
         * Specifies whether the font is formatted as engraved. The possible values are as follows:
                    
                    - `true`: All the text is engraved.
                    
                    - `false`: None of the text is engraved.
                    
                    - `null`: Returned if some, but not all, of the text is engraved.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        engrave: boolean;
        /**
         * Specifies a value that indicates whether the font is tagged as hidden. True if the font is formatted as hidden text, otherwise, false.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        hidden: boolean;
        /**
         * Specifies the highlight color. To set it, use a value either in the '#RRGGBB' format or the color name. To remove highlight color, set it to null. The returned highlight color can be in the '#RRGGBB' format, an empty string for mixed highlight colors, or `null` for no highlight color. Note: Only the default highlight colors are available in Office for Windows Desktop. These are "Yellow", "Lime", "Turquoise", "Pink", "Blue", "Red", "DarkBlue", "Teal", "Green", "Purple", "DarkRed", "Olive", "Gray", "LightGray", and "Black". When the add-in runs in Office for Windows Desktop, any other color is converted to the closest color when applied to the font.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        highlightColor: string;
        /**
         * Specifies a value that indicates whether the font is italicized. True if the font is italicized, otherwise, false.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        italic: boolean;
        /**
         * Specifies whether the font is italicized in a right-to-left language document. The possible values are as follows:
                    
                    - `true`: All the text is italicized.
                    
                    - `false`: None of the text is italicized.
                    
                    - `null`: Returned if some, but not all, of the text is italicized.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        italicBidirectional: boolean;
        /**
         * Specifies the minimum font size for which Microsoft Word will adjust kerning automatically.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        kerning: number;
        /**
         * Specifies the ligature setting for the `Font` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ligature: Word.Ligature | "None" | "Standard" | "Contextual" | "StandardContextual" | "Historical" | "StandardHistorical" | "ContextualHistorical" | "StandardContextualHistorical" | "Discretional" | "StandardDiscretional" | "ContextualDiscretional" | "StandardContextualDiscretional" | "HistoricalDiscretional" | "StandardHistoricalDiscretional" | "ContextualHistoricalDiscretional" | "All";
        /**
         * Specifies a value that represents the name of the font.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        name: string;
        /**
         * Specifies the font used for Latin text (characters with character codes from 0 (zero) through 127).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nameAscii: string;
        /**
         * Specifies the font name in a right-to-left language document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nameBidirectional: string;
        /**
         * Specifies the East Asian font name.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nameFarEast: string;
        /**
         * Specifies the font used for characters with codes from 128 through 255.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nameOther: string;
        /**
         * Specifies the number form setting for an OpenType font.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numberForm: Word.NumberForm | "Default" | "Lining" | "OldStyle";
        /**
         * Specifies the number spacing setting for the font.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numberSpacing: Word.NumberSpacing | "Default" | "Proportional" | "Tabular";
        /**
         * Specifies if the font is formatted as outlined. The possible values are as follows:
                    
                    - `true`: All the text is outlined.
                    
                    - `false`: None of the text is outlined.
                    
                    - `null`: Returned if some, but not all, of the text is outlined.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outline: boolean;
        /**
         * Specifies the position of text (in points) relative to the base line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        position: number;
        /**
         * Specifies the scaling percentage applied to the font.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        scaling: number;
        /**
         * Specifies if the font is formatted as shadowed. The possible values are as follows:
                    
                    - `true`: All the text is shadowed.
                    
                    - `false`: None of the text is shadowed.
                    
                    - `null`: Returned if some, but not all, of the text is shadowed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shadow: boolean;
        /**
         * Specifies a value that represents the font size in points.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        size: number;
        /**
         * Specifies the font size in points for right-to-left text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sizeBidirectional: number;
        /**
         * Specifies whether the font is formatted as small caps, which makes lowercase letters appear as small uppercase letters. The possible values are as follows:
                    
                    - `true`: All the text has the **Small Caps** attribute.
                    
                    - `false`: None of the text has the **Small Caps** attribute.
                    
                    - `null`: Returned if some, but not all, of the text has the **Small Caps** attribute.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        smallCaps: boolean;
        /**
         * Specifies the spacing between characters.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spacing: number;
        /**
         * Specifies a value that indicates whether the font has a strikethrough. True if the font is formatted as strikethrough text, otherwise, false.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        strikeThrough: boolean;
        /**
         * Specifies the stylistic set for the font.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        stylisticSet: Word.StylisticSet | "Default" | "Set01" | "Set02" | "Set03" | "Set04" | "Set05" | "Set06" | "Set07" | "Set08" | "Set09" | "Set10" | "Set11" | "Set12" | "Set13" | "Set14" | "Set15" | "Set16" | "Set17" | "Set18" | "Set19" | "Set20";
        /**
         * Specifies a value that indicates whether the font is a subscript. True if the font is formatted as subscript, otherwise, false.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        subscript: boolean;
        /**
         * Specifies a value that indicates whether the font is a superscript. True if the font is formatted as superscript, otherwise, false.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        superscript: boolean;
        /**
         * Specifies a value that indicates the font's underline type. 'None' if the font isn't underlined.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        underline: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";
        /**
         * Specifies the color of the underline for the `Font` object. You can provide the value in the '#RRGGBB' format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        underlineColor: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.FontUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Font): void;
        /**
         * Decreases the font size to the next available size.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        decreaseFontSize(): void;
        /**
         * Increases the font size to the next available size.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        increaseFontSize(): void;
        /**
         * Removes manual character formatting.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        reset(): void;
        /**
         * Sets the specified font formatting as the default for the active document and all new documents based on the active template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setAsTemplateDefault(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.FontLoadOptions): Word.Font;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Font;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Font;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Font;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Font;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Font` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.FontData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.FontData;
    }
    /**
     * Represents a heading style used in a table of contents or table of figures.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class HeadingStyle extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the level for the heading style in a table of contents or table of figures. Must be a value from 1 to 9.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        level: number;
        /**
         * Specifies the name of style for a heading.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        name: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.HeadingStyleUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.HeadingStyle): void;
        /**
         * Deletes the heading style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.HeadingStyleLoadOptions): Word.HeadingStyle;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.HeadingStyle;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.HeadingStyle;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.HeadingStyle;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.HeadingStyle;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.HeadingStyle` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.HeadingStyleData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.HeadingStyleData;
    }
    /**
     * Represents a collection of {@link Word.HeadingStyle} objects in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class HeadingStyleCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.HeadingStyle[];
        /**
         * Adds a new heading style to a document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param name - The style name to be added.
         * @param level - The heading level to assign. Must be a value from 1 to 9.
         * @returns The new `HeadingStyle` object that was added to the collection.
         */
        add(name: string, level: number): Word.HeadingStyle;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.HeadingStyleCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.HeadingStyleCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.HeadingStyleCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.HeadingStyleCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.HeadingStyleCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.HeadingStyleCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.HeadingStyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.HeadingStyleCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.HeadingStyleCollectionData;
    }
    /**
     * Represents a hyperlink in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Hyperlink extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `Range` object that represents the portion of the document that's contained within the hyperlink.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Specifies the address (for example, a file name or URL) of the hyperlink.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        address: string;
        /**
         * Specifies the text string for the hyperlink's subject line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        emailSubject: string;
        /**
         * Returns `true` if extra information is required to resolve the hyperlink.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isExtraInfoRequired: boolean;
        /**
         * Returns the name of the `Hyperlink` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly name: string;
        /**
         * Specifies the text that appears as a ScreenTip when the mouse pointer is positioned over the hyperlink.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        screenTip: string;
        /**
         * Specifies a named location in the destination of the hyperlink.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        subAddress: string;
        /**
         * Specifies the name of the frame or window in which to load the hyperlink.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        target: string;
        /**
         * Specifies the hyperlink's visible text in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        textToDisplay: string;
        /**
         * Returns the hyperlink type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.HyperlinkType | "Range" | "Shape" | "InlineShape";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.HyperlinkUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Hyperlink): void;
        /**
         * Creates a shortcut to the document or hyperlink and adds it to the **Favorites** folder.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        addToFavorites(): void;
        /**
         * Creates a new document linked to the hyperlink.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param fileName - Required. The name of the file.
         * @param editNow - Required. `true` to start editing now.
         * @param overwrite - Required. `true` to overwrite if there's another file with the same name.
         */
        createNewDocument(fileName: string, editNow: boolean, overwrite: boolean): void;
        /**
         * Deletes the hyperlink.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.HyperlinkLoadOptions): Word.Hyperlink;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Hyperlink;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Hyperlink;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Hyperlink;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Hyperlink;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Hyperlink` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.HyperlinkData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.HyperlinkData;
    }
    /**
     * Contains a collection of {@link Word.Hyperlink} objects.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class HyperlinkCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Hyperlink[];
        /**
         * Returns a `Hyperlink` object that represents a new hyperlink added to a range, selection, or document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param anchor - Required. The range to which the hyperlink is added.
         * @param options - Optional. The options to further configure the new hyperlink.
         */
        add(anchor: Word.Range, options?: Word.HyperlinkAddOptions): Word.Hyperlink;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.HyperlinkCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.HyperlinkCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.HyperlinkCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.HyperlinkCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.HyperlinkCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.HyperlinkCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.HyperlinkCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.HyperlinkCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.HyperlinkCollectionData;
    }
    /**
     * Specifies the options for adding to a {@link Word.HyperlinkCollection} object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface HyperlinkAddOptions {
        /**
         * If provided, specifies the address (e.g., URL or file path) of the hyperlink.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        address?: string;
        /**
         * If provided, specifies the text that appears as a tooltip.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        screenTip?: string;
        /**
         * If provided, specifies the location within the file or document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        subAddress?: string;
        /**
         * If provided, specifies the name of the frame or window in which to load the hyperlink.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        target?: string;
        /**
         * If provided, specifies the visible text of the hyperlink.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        textToDisplay?: string;
    }
    /**
     * Represents an inline picture.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class InlinePicture extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the parent paragraph that contains the inline image.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         */
        readonly paragraph: Word.Paragraph;
        /**
         * Gets the content control that contains the inline image. Throws an `ItemNotFound` error if there isn't a parent content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly parentContentControl: Word.ContentControl;
        /**
         * Gets the content control that contains the inline image. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentContentControlOrNullObject: Word.ContentControl;
        /**
         * Gets the table that contains the inline image. Throws an `ItemNotFound` error if it isn't contained in a table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTable: Word.Table;
        /**
         * Gets the table cell that contains the inline image. Throws an `ItemNotFound` error if it isn't contained in a table cell.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableCell: Word.TableCell;
        /**
         * Gets the table cell that contains the inline image. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableCellOrNullObject: Word.TableCell;
        /**
         * Gets the table that contains the inline image. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableOrNullObject: Word.Table;
        /**
         * Specifies a string that represents the alternative text associated with the inline image.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        altTextDescription: string;
        /**
         * Specifies a string that contains the title for the inline image.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        altTextTitle: string;
        /**
         * Specifies a number that describes the height of the inline image.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        height: number;
        /**
         * Specifies a hyperlink on the image. Use a '#' to separate the address part from the optional location part.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        hyperlink: string;
        /**
         * Gets the format of the inline image.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        readonly imageFormat: Word.ImageFormat | "Unsupported" | "Undefined" | "Bmp" | "Jpeg" | "Gif" | "Tiff" | "Png" | "Icon" | "Exif" | "Wmf" | "Emf" | "Pict" | "Pdf" | "Svg";
        /**
         * Specifies a value that indicates whether the inline image retains its original proportions when you resize it.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        lockAspectRatio: boolean;
        /**
         * Specifies a number that describes the width of the inline image.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        width: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.InlinePictureUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.InlinePicture): void;
        /**
         * Deletes the inline picture from the document.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         */
        delete(): void;
        /**
         * Gets the Base64-encoded string representation of the inline image.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        getBase64ImageSrc(): OfficeExtension.ClientResult<string>;
        /**
         * Gets the next inline image. Throws an `ItemNotFound` error if this inline image is the last one.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getNext(): Word.InlinePicture;
        /**
         * Gets the next inline image. If this inline image is the last one, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getNextOrNullObject(): Word.InlinePicture;
        /**
         * Gets the picture, or the starting or ending point of the picture, as a range.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rangeLocation - Optional. The range location must be 'Whole', 'Start', or 'End'.
         */
        getRange(rangeLocation?: Word.RangeLocation.whole | Word.RangeLocation.start | Word.RangeLocation.end | "Whole" | "Start" | "End"): Word.Range;
        /**
         * Inserts a break at the specified location in the main document.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         *
         * @param breakType - Required. The break type to add.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         */
        insertBreak(breakType: Word.BreakType | "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After"): void;
        /**
         * Wraps the inline picture with a rich text content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        insertContentControl(): Word.ContentControl;
        /**
         * Inserts a document at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         *
         * Insertion isn't supported if the document being inserted contains an ActiveX control (likely in a form field). Consider replacing such a form field with a content control or other option appropriate for your scenario.
         *
         * @param base64File - Required. The Base64-encoded content of a .docx file.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         */
        insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After"): Word.Range;
        /**
         * Inserts HTML at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         *
         * @param html - Required. The HTML to be inserted.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         */
        insertHtml(html: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After"): Word.Range;
        /**
         * Inserts an inline picture at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         *
         * @param base64EncodedImage - Required. The Base64-encoded image to be inserted.
         * @param insertLocation - Required. The value must be 'Replace', 'Before', or 'After'.
         */
        insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.before | Word.InsertLocation.after | "Replace" | "Before" | "After"): Word.InlinePicture;
        /**
         * Inserts OOXML at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         *
         * @param ooxml - Required. The OOXML to be inserted.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         */
        insertOoxml(ooxml: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After"): Word.Range;
        /**
         * Inserts a paragraph at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         *
         * @param paragraphText - Required. The paragraph text to be inserted.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         */
        insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After"): Word.Paragraph;
        /**
         * Inserts text at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         *
         * @param text - Required. Text to be inserted.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         */
        insertText(text: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After"): Word.Range;
        /**
         * Selects the inline picture. This causes Word to scroll to the selection.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: Word.SelectionMode): void;
        /**
         * Selects the inline picture. This causes Word to scroll to the selection.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: "Select" | "Start" | "End"): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.InlinePictureLoadOptions): Word.InlinePicture;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.InlinePicture;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.InlinePicture;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.InlinePicture;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.InlinePicture;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.InlinePicture` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.InlinePictureData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.InlinePictureData;
    }
    /**
     * Contains a collection of {@link Word.InlinePicture} objects.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class InlinePictureCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.InlinePicture[];
        /**
         * Gets the first inline image in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirst(): Word.InlinePicture;
        /**
         * Gets the first inline image in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirstOrNullObject(): Word.InlinePicture;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.InlinePictureCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.InlinePictureCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.InlinePictureCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.InlinePictureCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.InlinePictureCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.InlinePictureCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.InlinePictureCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.InlinePictureCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.InlinePictureCollectionData;
    }
    /**
     * Represents the linking characteristics for an OLE object or picture.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class LinkFormat extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies if the link is updated automatically when the container file is opened or when the source file is changed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isAutoUpdated: boolean;
        /**
         * Specifies if a `Field`, `InlineShape`, or `Shape` object is locked to prevent automatic updating.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isLocked: boolean;
        /**
         * Specifies if the linked picture is saved with the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isPictureSavedWithDocument: boolean;
        /**
         * Specifies the path and name of the source file for the linked OLE object, picture, or field.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sourceFullName: string;
        /**
         * Gets the name of the source file for the linked OLE object, picture, or field.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly sourceName: string;
        /**
         * Gets the path of the source file for the linked OLE object, picture, or field.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly sourcePath: string;
        /**
         * Gets the link type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.LinkType | "Ole" | "Picture" | "Text" | "Reference" | "Include" | "Import" | "Dde" | "DdeAuto" | "Chart";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.LinkFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.LinkFormat): void;
        /**
         * Breaks the link between the source file and the OLE object, picture, or linked field.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        breakLink(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.LinkFormatLoadOptions): Word.LinkFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.LinkFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.LinkFormat;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.LinkFormat;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.LinkFormat;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.LinkFormat` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.LinkFormatData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.LinkFormatData;
    }
    /**
     * Contains a collection of {@link Word.Paragraph} objects.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class List extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets paragraphs in the list.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly paragraphs: Word.ParagraphCollection;
        /**
         * Gets the list's id.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly id: number;
        /**
         * Checks whether each of the 9 levels exists in the list. A true value indicates the level exists, which means there is at least one list item at that level.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly levelExistences: boolean[];
        /**
         * Gets all 9 level types in the list. Each type can be 'Bullet', 'Number', or 'Picture'.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly levelTypes: Word.ListLevelType[];
        /**
         * Gets the font of the bullet, number, or picture at the specified level in the list.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         *
         * @param level - Required. The level in the list.
         */
        getLevelFont(level: number): Word.Font;
        /**
         * Gets the paragraphs that occur at the specified level in the list.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param level - Required. The level in the list.
         */
        getLevelParagraphs(level: number): Word.ParagraphCollection;
        /**
         * Gets the Base64-encoded string representation of the picture at the specified level in the list.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         *
         * @param level - Required. The level in the list.
         */
        getLevelPicture(level: number): OfficeExtension.ClientResult<string>;
        /**
         * Gets the bullet, number, or picture at the specified level as a string.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param level - Required. The level in the list.
         */
        getLevelString(level: number): OfficeExtension.ClientResult<string>;
        /**
         * Inserts a paragraph at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param paragraphText - Required. The paragraph text to be inserted.
         * @param insertLocation - Required. The value must be 'Start', 'End', 'Before', or 'After'.
         */
        insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation.start | Word.InsertLocation.end | Word.InsertLocation.before | Word.InsertLocation.after | "Start" | "End" | "Before" | "After"): Word.Paragraph;
        /**
         * Resets the font of the bullet, number, or picture at the specified level in the list.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         *
         * @param level - Required. The level in the list.
         * @param resetFontName - Optional. Indicates whether to reset the font name. Default is false that indicates the font name is kept unchanged.
         */
        resetLevelFont(level: number, resetFontName?: boolean): void;
        /**
         * Sets the alignment of the bullet, number, or picture at the specified level in the list.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param level - Required. The level in the list.
         * @param alignment - Required. The level alignment that must be 'Left', 'Centered', or 'Right'.
         */
        setLevelAlignment(level: number, alignment: Word.Alignment): void;
        /**
         * Sets the alignment of the bullet, number, or picture at the specified level in the list.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param level - Required. The level in the list.
         * @param alignment - Required. The level alignment that must be 'Left', 'Centered', or 'Right'.
         */
        setLevelAlignment(level: number, alignment: "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"): void;
        /**
         * Sets the bullet format at the specified level in the list. If the bullet is 'Custom', the charCode is required.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param level - Required. The level in the list.
         * @param listBullet - Required. The bullet.
         * @param charCode - Optional. The bullet character's code value. Used only if the bullet is 'Custom'.
         * @param fontName - Optional. The bullet's font name. Used only if the bullet is 'Custom'.
         */
        setLevelBullet(level: number, listBullet: Word.ListBullet, charCode?: number, fontName?: string): void;
        /**
         * Sets the bullet format at the specified level in the list. If the bullet is 'Custom', the charCode is required.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param level - Required. The level in the list.
         * @param listBullet - Required. The bullet.
         * @param charCode - Optional. The bullet character's code value. Used only if the bullet is 'Custom'.
         * @param fontName - Optional. The bullet's font name. Used only if the bullet is 'Custom'.
         */
        setLevelBullet(level: number, listBullet: "Custom" | "Solid" | "Hollow" | "Square" | "Diamonds" | "Arrow" | "Checkmark", charCode?: number, fontName?: string): void;
        /**
         * Sets the two indents of the specified level in the list.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param level - Required. The level in the list.
         * @param textIndent - Required. The text indent in points. It is the same as paragraph left indent.
         * @param bulletNumberPictureIndent - Required. The relative indent, in points, of the bullet, number, or picture. It is the same as paragraph first line indent.
         */
        setLevelIndents(level: number, textIndent: number, bulletNumberPictureIndent: number): void;
        /**
         * Sets the numbering format at the specified level in the list.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param level - Required. The level in the list.
         * @param listNumbering - Required. The ordinal format.
         * @param formatString - Optional. The numbering string format defined as an array of strings and/or integers. Each integer is a level of number type that is higher than or equal to this level. For example, an array of ["(", level - 1, ".", level, ")"] can define the format of "(2.c)", where 2 is the parent's item number and c is this level's item number.
         */
        setLevelNumbering(level: number, listNumbering: Word.ListNumbering, formatString?: Array<string | number>): void;
        /**
         * Sets the numbering format at the specified level in the list.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param level - Required. The level in the list.
         * @param listNumbering - Required. The ordinal format.
         * @param formatString - Optional. The numbering string format defined as an array of strings and/or integers. Each integer is a level of number type that is higher than or equal to this level. For example, an array of ["(", level - 1, ".", level, ")"] can define the format of "(2.c)", where 2 is the parent's item number and c is this level's item number.
         */
        setLevelNumbering(level: number, listNumbering: "None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter", formatString?: Array<string | number>): void;
        /**
         * Sets the picture at the specified level in the list.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         *
         * @param level - Required. The level in the list.
         * @param base64EncodedImage - Optional. The Base64-encoded image to be set. If not given, the default picture is set.
         */
        setLevelPicture(level: number, base64EncodedImage?: string): void;
        /**
         * Sets the starting number at the specified level in the list. Default value is 1.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param level - Required. The level in the list.
         * @param startingNumber - Required. The number to start with.
         */
        setLevelStartingNumber(level: number, startingNumber: number): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ListLoadOptions): Word.List;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.List;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.List;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.List;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.List;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.List` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ListData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ListData;
    }
    /**
     * Contains a collection of {@link Word.List} objects.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class ListCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.List[];
        /**
         * Gets a list by its identifier. Throws an `ItemNotFound` error if there isn't a list with the identifier in this collection.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param id - Required. A list identifier.
         */
        getById(id: number): Word.List;
        /**
         * Gets a list by its identifier. If there isn't a list with the identifier in this collection, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param id - Required. A list identifier.
         */
        getByIdOrNullObject(id: number): Word.List;
        /**
         * Gets the first list in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirst(): Word.List;
        /**
         * Gets the first list in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirstOrNullObject(): Word.List;
        /**
         * Gets a list object by its ID.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param id - The list's ID.
         */
        getItem(id: number): Word.List;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ListCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ListCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ListCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.ListCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ListCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ListCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ListCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ListCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.ListCollectionData;
    }
    /**
     * Represents the paragraph list item format.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class ListItem extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the level of the item in the list.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        level: number;
        /**
         * Gets the list item bullet, number, or picture as a string.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly listString: string;
        /**
         * Gets the list item order number in relation to its siblings.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly siblingIndex: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ListItemUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ListItem): void;
        /**
         * Gets the list item parent, or the closest ancestor if the parent doesn't exist. Throws an `ItemNotFound` error if the list item has no ancestor.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param parentOnly - Optional. Specifies only the list item's parent will be returned. The default is false that specifies to get the lowest ancestor.
         */
        getAncestor(parentOnly?: boolean): Word.Paragraph;
        /**
         * Gets the list item parent, or the closest ancestor if the parent doesn't exist. If the list item has no ancestor, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param parentOnly - Optional. Specifies only the list item's parent will be returned. The default is false that specifies to get the lowest ancestor.
         */
        getAncestorOrNullObject(parentOnly?: boolean): Word.Paragraph;
        /**
         * Gets all descendant list items of the list item.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param directChildrenOnly - Optional. Specifies only the list item's direct children will be returned. The default is false that indicates to get all descendant items.
         */
        getDescendants(directChildrenOnly?: boolean): Word.ParagraphCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ListItemLoadOptions): Word.ListItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ListItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ListItem;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ListItem;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ListItem;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ListItem` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ListItemData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ListItemData;
    }
    /**
     * Represents a list level.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.1]
     */
    export class ListLevel extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets a Font object that represents the character formatting of the specified object.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        readonly font: Word.Font;
        /**
         * Specifies the horizontal alignment of the list level. The value can be 'Left', 'Centered', or 'Right'.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
        /**
         * Specifies the name of the style that's linked to the specified list level object.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        linkedStyle: string;
        /**
         * Specifies the number format for the specified list level.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        numberFormat: string;
        /**
         * Specifies the position (in points) of the number or bullet for the specified list level object.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        numberPosition: number;
        /**
         * Specifies the number style for the list level object.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        numberStyle: Word.ListBuiltInNumberStyle | "None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter" | "Ordinal" | "CardinalText" | "OrdinalText" | "Kanji" | "KanjiDigit" | "AiueoHalfWidth" | "IrohaHalfWidth" | "ArabicFullWidth" | "KanjiTraditional" | "KanjiTraditional2" | "NumberInCircle" | "Aiueo" | "Iroha" | "ArabicLZ" | "Bullet" | "Ganada" | "Chosung" | "GBNum1" | "GBNum2" | "GBNum3" | "GBNum4" | "Zodiac1" | "Zodiac2" | "Zodiac3" | "TradChinNum1" | "TradChinNum2" | "TradChinNum3" | "TradChinNum4" | "SimpChinNum1" | "SimpChinNum2" | "SimpChinNum3" | "SimpChinNum4" | "HanjaRead" | "HanjaReadDigit" | "Hangul" | "Hanja" | "Hebrew1" | "Arabic1" | "Hebrew2" | "Arabic2" | "HindiLetter1" | "HindiLetter2" | "HindiArabic" | "HindiCardinalText" | "ThaiLetter" | "ThaiArabic" | "ThaiCardinalText" | "VietCardinalText" | "LowercaseRussian" | "UppercaseRussian" | "LowercaseGreek" | "UppercaseGreek" | "ArabicLZ2" | "ArabicLZ3" | "ArabicLZ4" | "LowercaseTurkish" | "UppercaseTurkish" | "LowercaseBulgarian" | "UppercaseBulgarian" | "PictureBullet" | "Legal" | "LegalLZ";
        /**
         * Specifies the list level that must appear before the specified list level restarts numbering at 1.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        resetOnHigher: number;
        /**
         * Specifies the starting number for the specified list level object.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        startAt: number;
        /**
         * Specifies the tab position for the specified list level object.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        tabPosition: number;
        /**
         * Specifies the position (in points) for the second line of wrapping text for the specified list level object.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        textPosition: number;
        /**
         * Specifies the character inserted after the number for the specified list level.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        trailingCharacter: Word.TrailingCharacter | "TrailingTab" | "TrailingSpace" | "TrailingNone";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ListLevelUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ListLevel): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ListLevelLoadOptions): Word.ListLevel;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ListLevel;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ListLevel;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ListLevel;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ListLevel;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ListLevel` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ListLevelData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ListLevelData;
    }
    /**
     * Contains a collection of {@link Word.ListLevel} objects.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.1]
     */
    export class ListLevelCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.ListLevel[];
        /**
         * Gets the first list level in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        getFirst(): Word.ListLevel;
        /**
         * Gets the first list level in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        getFirstOrNullObject(): Word.ListLevel;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ListLevelCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ListLevelCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ListLevelCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.ListLevelCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ListLevelCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ListLevelCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ListLevelCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ListLevelCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.ListLevelCollectionData;
    }
    /**
     * Represents a list template.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.1]
     */
    export class ListTemplate extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets a `ListLevelCollection` object that represents all the levels for the list template.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        readonly listLevels: Word.ListLevelCollection;
        /**
         * Specifies the name of the list template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        name: string;
        /**
         * Specifies whether the list template is outline numbered.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        outlineNumbered: boolean;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ListTemplateUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ListTemplate): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ListTemplateLoadOptions): Word.ListTemplate;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ListTemplate;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ListTemplate;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ListTemplate;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ListTemplate;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ListTemplate` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ListTemplateData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ListTemplateData;
    }
    /**
     * Represents a footnote or endnote.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    export class NoteItem extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Represents the body object of the note item. It's the portion of the text within the footnote or endnote.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly body: Word.Body;
        /**
         * Represents a footnote or endnote reference in the main document.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly reference: Word.Range;
        /**
         * Represents the note item type: footnote or endnote.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly type: Word.NoteItemType | "Footnote" | "Endnote";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.NoteItemUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.NoteItem): void;
        /**
         * Deletes the note item.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        delete(): void;
        /**
         * Gets the next note item of the same type. Throws an `ItemNotFound` error if this note item is the last one.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        getNext(): Word.NoteItem;
        /**
         * Gets the next note item of the same type. If this note item is the last one, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        getNextOrNullObject(): Word.NoteItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.NoteItemLoadOptions): Word.NoteItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.NoteItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.NoteItem;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.NoteItem;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.NoteItem;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.NoteItem` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.NoteItemData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.NoteItemData;
    }
    /**
     * Contains a collection of {@link Word.NoteItem} objects.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    export class NoteItemCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.NoteItem[];
        /**
         * Gets the first note item in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        getFirst(): Word.NoteItem;
        /**
         * Gets the first note item in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        getFirstOrNullObject(): Word.NoteItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.NoteItemCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.NoteItemCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.NoteItemCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.NoteItemCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.NoteItemCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.NoteItemCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.NoteItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.NoteItemCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.NoteItemCollectionData;
    }
    /**
     * Represents the OLE characteristics (other than linking) for an OLE object, ActiveX control, or field.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class OleFormat extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the class type for the specified OLE object, picture, or field.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        classType: string;
        /**
         * Specifies the icon that is used when the `displayAsIcon` property is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        iconIndex: number;
        /**
         * Specifies the text displayed below the icon for the OLE object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        iconLabel: string;
        /**
         * Specifies the program file in which the icon for the OLE object is stored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        iconName: string;
        /**
         * Gets the path of the file in which the icon for the OLE object is stored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly iconPath: string;
        /**
         * Gets whether the specified object is displayed as an icon.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isDisplayedAsIcon: boolean;
        /**
         * Specifies whether formatting done in Microsoft Word to the linked OLE object is preserved.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isFormattingPreservedOnUpdate: boolean;
        /**
         * Gets a string that's used to identify the portion of the source file that's being linked.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly label: string;
        /**
         * Gets the programmatic identifier (`ProgId`) for the specified OLE object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly progID: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.OleFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.OleFormat): void;
        /**
         * Activates the `OleFormat` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        activate(): void;
        /**
         * Sets the Windows registry value that determines the default application used to activate the specified OLE object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param classType - The class type to activate as.
         */
        activateAs(classType: string): void;
        /**
         * Requests that the OLE object perform one of its available verbs.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param verbIndex - Optional. The index of the verb to perform.
         */
        doVerb(verbIndex: Word.OleVerb): void;
        /**
         * Requests that the OLE object perform one of its available verbs.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param verbIndex - Optional. The index of the verb to perform.
         */
        doVerb(verbIndex: "Primary" | "Show" | "Open" | "Hide" | "UiActivate" | "InPlaceActivate" | "DiscardUndoState"): void;
        /**
         * Opens the OLE object for editing in the application it was created in.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        edit(): void;
        /**
         * Opens the `OleFormat` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        open(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.OleFormatLoadOptions): Word.OleFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.OleFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.OleFormat;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.OleFormat;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.OleFormat;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.OleFormat` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.OleFormatData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.OleFormatData;
    }
    /**
     * Represents a page in the document. `Page` objects manage the page layout and content.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export class Page extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets a `BreakCollection` object that represents the breaks on the page.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly breaks: Word.BreakCollection;
        /**
         * Gets the height, in points, of the paper defined in the Page Setup dialog box.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly height: number;
        /**
         * Gets the index of the page. The page index is 1-based and independent of the user's custom page numbering.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly index: number;
        /**
         * Gets the width, in points, of the paper defined in the Page Setup dialog box.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly width: number;
        /**
         * Gets the next page in the pane. Throws an `ItemNotFound` error if this page is the last one.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        getNext(): Word.Page;
        /**
         * Gets the next page. If this page is the last one, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        getNextOrNullObject(): Word.Page;
        /**
         * Gets the whole page, or the starting or ending point of the page, as a range.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param rangeLocation - Optional. The range location must be 'Whole', 'Start', or 'End'.
         */
        getRange(rangeLocation?: Word.RangeLocation.whole | Word.RangeLocation.start | Word.RangeLocation.end | "Whole" | "Start" | "End"): Word.Range;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.PageLoadOptions): Word.Page;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Page;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Page;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Page;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Page;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Page` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.PageData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.PageData;
    }
    /**
     * Represents the collection of page.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export class PageCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Page[];
        /**
         * Gets the first page in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        getFirst(): Word.Page;
        /**
         * Gets the first page in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        getFirstOrNullObject(): Word.Page;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.PageCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.PageCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.PageCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.PageCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.PageCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.PageCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.PageCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.PageCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.PageCollectionData;
    }
    /**
     * Represents a window pane. The `Pane` object is a member of the pane collection. The pane collection includes all the window panes for a single window.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export class Pane extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the collection of pages in the pane.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly pages: Word.PageCollection;
        /**
         * Gets the `PageCollection` shown in the viewport of the pane. If a page is partially visible in the pane, the whole page is returned.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly pagesEnclosingViewport: Word.PageCollection;
        /**
         * Returns a `Selection` object that represents the current selection in the pane.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly selection: Word.Selection;
        /**
         * Gets the next pane in the window. Throws an `ItemNotFound` error if this pane is the last one.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        getNext(): Word.Pane;
        /**
         * Gets the next pane. If this pane is the last one, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        getNextOrNullObject(): Word.Pane;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.PaneLoadOptions): Word.Pane;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Pane;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Pane;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Pane;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Pane;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Pane` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.PaneData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.PaneData;
    }
    /**
     * Represents the collection of pane.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export class PaneCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Pane[];
        /**
         * Gets the first pane in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        getFirst(): Word.Pane;
        /**
         * Gets the first pane in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        getFirstOrNullObject(): Word.Pane;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.PaneCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.PaneCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.PaneCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.PaneCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.PaneCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.PaneCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.PaneCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.PaneCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.PaneCollectionData;
    }
    /**
     * The options that define whether to save changes before closing and whether to route the document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface WindowCloseOptions {
        /**
         * If provided, specifies whether to route the document to the next recipient. If the document doesn't have a routing slip attached, this property is ignored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        routeDocument?: boolean;
        /**
         * If provided, specifies the save action for the document. For available values, see {@link Word.SaveConfiguration}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        saveChanges?: Word.SaveConfiguration | "DoNotSaveChanges" | "SaveChanges" | "PromptToSaveChanges";
    }
    /**
     * The options that scrolls a window or pane by the specified number of units defined by the calling method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface WindowScrollOptions {
        /**
         * If provided, specifies the number of units to scroll the window down.
                    If `down` and `up` are both provided, the contents of the window are scrolled by the difference of the property values. For example, if `down` is 3 and `up` is 6, the contents are scrolled up three units.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        down?: number;
        /**
         * If provided, specifies the number of screens to scroll the window to the left.
                    If `left` and `right` are both provided, the contents of the window are scrolled by the difference of the property values. For example, if `left` is 3 and `right` is 6, the contents are scrolled to the right three screens.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        left?: number;
        /**
         * If provided, specifies the number of screens to scroll the window to the right.
                    If `left` and `right` are both provided, the contents of the window are scrolled by the difference of the property values. For example, if `left` is 3 and `right` is 6, the contents are scrolled to the right three screens.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        right?: number;
        /**
         * If provided, specifies the number of units to scroll the window up.
                    If `down` and `up` are both provided, the contents of the window are scrolled by the difference of the property values. For example, if `down` is 3 and `up` is 6, the contents are scrolled up three units.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        up?: number;
    }
    /**
     * The options for scrolling through the specified pane or window page by page.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface WindowPageScrollOptions {
        /**
         * If provided, specifies the number of pages to scroll the window down.
                    If `down` and `up` are both provided, the contents of the window are scrolled by the difference of the property values. For example, if `down` is 3 and `up` is 6, the contents are scrolled up three pages.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        down?: number;
        /**
         * If provided, specifies the number of pages to scroll the window up.
                    If `down` and `up` are both provided, the contents of the window are scrolled by the difference of the property values. For example, if `down` is 3 and `up` is 6, the contents are scrolled up three pages.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        up?: number;
    }
    /**
     * Represents the window that displays the document. A window can be split to contain multiple reading panes.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export class Window extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the active pane in the window.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly activePane: Word.Pane;
        /**
         * Gets the next document window in the collection of open document windows.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly next: Word.Window;
        /**
         * Gets the collection of panes in the window.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly panes: Word.PaneCollection;
        /**
         * Gets the previous document window in the collection open document windows.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly previous: Word.Window;
        /**
         * Gets the `View` object that represents the view for the window.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly view: Word.View;
        /**
         * Specifies whether rulers are displayed for the window or pane.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areRulersDisplayed: boolean;
        /**
         * Specifies whether comments, footnotes, endnotes, and hyperlinks are displayed as tips.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly areScreenTipsDisplayed: boolean;
        /**
         * Specifies whether thumbnail images of the pages in a document are displayed along the left side of the Microsoft Word document window.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areThumbnailsDisplayed: boolean;
        /**
         * Specifies the caption text for the window that is displayed in the title bar of the document or application window.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        caption: string;
        /**
         * Specifies the height of the window (in points).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly height: number;
        /**
         * Specifies the horizontal scroll position as a percentage of the document width.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        horizontalPercentScrolled: number;
        /**
         * Specifies the default start-up mode for the Japanese Input Method Editor (IME).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        imeMode: Word.ImeMode | "NoControl" | "On" | "Off" | "Hiragana" | "Katakana" | "KatakanaHalf" | "AlphaFull" | "Alpha" | "HangulFull" | "Hangul";
        /**
         * Gets the position of an item in a collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly index: number;
        /**
         * Specifies whether the window is active.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isActive: boolean;
        /**
         * Specifies whether the document map is visible.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isDocumentMapVisible: boolean;
        /**
         * Specifies whether the email message header is visible in the document window. The default value is `False`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isEnvelopeVisible: boolean;
        /**
         * Specifies whether a horizontal scroll bar is displayed for the window.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isHorizontalScrollBarDisplayed: boolean;
        /**
         * Specifies whether the vertical scroll bar appears on the left side of the document window.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isLeftScrollBarDisplayed: boolean;
        /**
         * Specifies whether the vertical ruler appears on the right side of the document window in print layout view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isRightRulerDisplayed: boolean;
        /**
         * Specifies whether the window is split into multiple panes.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isSplit: boolean;
        /**
         * Specifies whether a vertical ruler is displayed for the window or pane.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isVerticalRulerDisplayed: boolean;
        /**
         * Specifies whether a vertical scroll bar is displayed for the window.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isVerticalScrollBarDisplayed: boolean;
        /**
         * Specifies whether the window is visible.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isVisible: boolean;
        /**
         * Specifies the horizontal position of the window, measured in points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly left: number;
        /**
         * Specifies how Microsoft Word displays source documents after a compare and merge process.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        showSourceDocuments: Word.ShowSourceDocuments | "None" | "Original" | "Revised" | "Both";
        /**
         * Specifies the vertical split percentage for the window.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        splitVertical: number;
        /**
         * Specifies the width of the style area in points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        styleAreaWidth: number;
        /**
         * Specifies the vertical position of the document window, in points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly top: number;
        /**
         * Gets the window type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.WindowType | "Document" | "Template";
        /**
         * Gets the height (in points) of the active working area in the document window.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly usableHeight: number;
        /**
         * Gets the width (in points) of the active working area in the document window.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly usableWidth: number;
        /**
         * Specifies the vertical scroll position as a percentage of the document length.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        verticalPercentScrolled: number;
        /**
         * Specifies the width of the document window, in points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly width: number;
        /**
         * Gets an integer that represents the position of the window.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly windowNumber: number;
        /**
         * Specifies the state of the document window or task window.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        windowState: Word.WindowState | "Normal" | "Maximize" | "Minimize";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.WindowUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Window): void;
        /**
         * Activates the window.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        activate(): void;
        /**
         * Closes the window.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - The options that define whether to save changes before closing and whether to route the document.
         */
        close(options?: Word.WindowCloseOptions): void;
        /**
         * Scrolls the window by the specified number of screens.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - The options for scrolling the window by the specified number of screens. If no options are specified, the window is scrolled down one screen.
         */
        largeScroll(options?: Word.WindowScrollOptions): void;
        /**
         * Scrolls through the window page by page.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - The options for scrolling through the window page by page.
         */
        pageScroll(options?: Word.WindowPageScrollOptions): void;
        /**
         * Sets the focus of the document window to the body of an email message.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setFocus(): void;
        /**
         * Scrolls the window by the specified number of lines. A "line" corresponds to the distance scrolled by clicking the scroll arrow on the scroll bar once.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - The options for scrolling the window by the specified number of lines. If no options are specified, the window is scrolled down by one line.
         */
        smallScroll(options?: Word.WindowScrollOptions): void;
        /**
         * Shows or hides the ribbon.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        toggleRibbon(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.WindowLoadOptions): Word.Window;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Window;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Window;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Window;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Window;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Window` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.WindowData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.WindowData;
    }
    /**
     * Represents the collection of window objects.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export class WindowCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Window[];
        /**
         * Gets the first window in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        getFirst(): Word.Window;
        /**
         * Gets the first window in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        getFirstOrNullObject(): Word.Window;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.WindowCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.WindowCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.WindowCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.WindowCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.WindowCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.WindowCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.WindowCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.WindowCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.WindowCollectionData;
    }
    /**
     * Represents a single paragraph in a selection, range, content control, or document body.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class Paragraph extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BorderUniversalCollection` object that represents all the borders for the paragraph.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly borders: Word.BorderUniversalCollection;
        /**
         * Gets the collection of content control objects in the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly contentControls: Word.ContentControlCollection;
        /**
         * Gets the collection of endnotes in the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly endnotes: Word.NoteItemCollection;
        /**
         * Gets the collection of fields in the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly fields: Word.FieldCollection;
        /**
         * Gets the text format of the paragraph. Use this to get and set font name, size, color, and other properties.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly font: Word.Font;
        /**
         * Gets the collection of footnotes in the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly footnotes: Word.NoteItemCollection;
        /**
         * Gets the collection of InlinePicture objects in the paragraph. The collection doesn't include floating images.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly inlinePictures: Word.InlinePictureCollection;
        /**
         * Gets the List to which this paragraph belongs. Throws an `ItemNotFound` error if the paragraph isn't in a list.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly list: Word.List;
        /**
         * Gets the ListItem for the paragraph. Throws an `ItemNotFound` error if the paragraph isn't part of a list.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly listItem: Word.ListItem;
        /**
         * Gets the ListItem for the paragraph. If the paragraph isn't part of a list, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly listItemOrNullObject: Word.ListItem;
        /**
         * Gets the List to which this paragraph belongs. If the paragraph isn't in a list, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly listOrNullObject: Word.List;
        /**
         * Gets the parent body of the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentBody: Word.Body;
        /**
         * Gets the content control that contains the paragraph. Throws an `ItemNotFound` error if there isn't a parent content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly parentContentControl: Word.ContentControl;
        /**
         * Gets the content control that contains the paragraph. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentContentControlOrNullObject: Word.ContentControl;
        /**
         * Gets the table that contains the paragraph. Throws an `ItemNotFound` error if it isn't contained in a table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTable: Word.Table;
        /**
         * Gets the table cell that contains the paragraph. Throws an `ItemNotFound` error if it isn't contained in a table cell.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableCell: Word.TableCell;
        /**
         * Gets the table cell that contains the paragraph. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableCellOrNullObject: Word.TableCell;
        /**
         * Gets the table that contains the paragraph. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableOrNullObject: Word.Table;
        /**
         * Returns a `ShadingUniversal` object that refers to the shading formatting for the paragraph.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly shading: Word.ShadingUniversal;
        /**
         * Gets the collection of shape objects anchored in the paragraph, including both inline and floating shapes. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly shapes: Word.ShapeCollection;
        /**
         * Specifies the alignment for a paragraph. The value can be 'left', 'centered', 'right', or 'justified'.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
        /**
         * Specifies the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        firstLineIndent: number;
        /**
         * Indicates the paragraph is the last one inside its parent body.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly isLastParagraph: boolean;
        /**
         * Checks whether the paragraph is a list item.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly isListItem: boolean;
        /**
         * Specifies the left indent value, in points, for the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        leftIndent: number;
        /**
         * Specifies the line spacing, in points, for the specified paragraph. In the Word UI, this value is divided by 12.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        lineSpacing: number;
        /**
         * Specifies the amount of spacing, in grid lines, after the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        lineUnitAfter: number;
        /**
         * Specifies the amount of spacing, in grid lines, before the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        lineUnitBefore: number;
        /**
         * Specifies the outline level for the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        outlineLevel: number;
        /**
         * Specifies the right indent value, in points, for the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        rightIndent: number;
        /**
         * Specifies the spacing, in points, after the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        spaceAfter: number;
        /**
         * Specifies the spacing, in points, before the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        spaceBefore: number;
        /**
         * Specifies the style name for the paragraph. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        style: string;
        /**
         * Specifies the built-in style name for the paragraph. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        styleBuiltIn: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
        /**
         * Gets the level of the paragraph's table. It returns 0 if the paragraph isn't in a table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly tableNestingLevel: number;
        /**
         * Gets the text of the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly text: string;
        /**
         * Gets a string that represents the paragraph identifier in the current session. ID is in standard 8-4-4-4-12 GUID format without curly braces and differs across sessions and coauthors.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        readonly uniqueLocalId: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Paragraph): void;
        /**
         * Lets the paragraph join an existing list at the specified level. Fails if the paragraph cannot join the list or if the paragraph is already a list item.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param listId - Required. The ID of an existing list.
         * @param level - Required. The level in the list.
         */
        attachToList(listId: number, level: number): Word.List;
        /**
         * Clears the contents of the paragraph object. The user can perform the undo operation on the cleared content.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        clear(): void;
        /**
         * Removes any spacing before the paragraph.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        closeUp(): void;
        /**
         * Deletes the paragraph and its content from the document.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        delete(): void;
        /**
         * Moves this paragraph out of its list, if the paragraph is a list item.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        detachFromList(): void;
        /**
         * Gets annotations set on this Paragraph object.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         *
         * Important: This API requires a Microsoft 365 subscription in order to work properly because of an underlying service's requirement. For more about this, see {@link https://github.com/OfficeDev/office-js/issues/4953 | GitHub issue 4953}.
         */
        getAnnotations(): Word.AnnotationCollection;
        /**
         * Gets comments associated with the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getComments(): Word.CommentCollection;
        /**
         * Gets the currently supported content controls in the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * Important: If specific types are provided in the options parameter, only content controls of supported types are returned.
         * Be aware that an exception will be thrown on using methods of a generic {@link Word.ContentControl} that aren't relevant for the specific type.
         * With time, additional types of content controls may be supported. Therefore, your add-in should request and handle specific types of content controls.
         *
         * @param options - Optional. Options that define which content controls are returned.
         */
        getContentControls(options?: Word.ContentControlOptions): Word.ContentControlCollection;
        /**
         * Gets an HTML representation of the paragraph object. When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document. This method doesn't return the exact same HTML for the same document on different platforms (Windows, Mac, Word on the web, etc.). If you need exact fidelity, or consistency across platforms, use `Paragraph.getOoxml()` and convert the returned XML to HTML.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        getHtml(): OfficeExtension.ClientResult<string>;
        /**
         * Gets the next paragraph. Throws an `ItemNotFound` error if the paragraph is the last one.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getNext(): Word.Paragraph;
        /**
         * Gets the next paragraph. If the paragraph is the last one, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getNextOrNullObject(): Word.Paragraph;
        /**
         * Gets the Office Open XML (OOXML) representation of the paragraph object.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        getOoxml(): OfficeExtension.ClientResult<string>;
        /**
         * Gets the previous paragraph. Throws an `ItemNotFound` error if the paragraph is the first one.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getPrevious(): Word.Paragraph;
        /**
         * Gets the previous paragraph. If the paragraph is the first one, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getPreviousOrNullObject(): Word.Paragraph;
        /**
         * Gets the whole paragraph, or the starting or ending point of the paragraph, as a range.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rangeLocation - Optional. The range location must be 'Whole', 'Start', 'End', 'After', or 'Content'.
         */
        getRange(rangeLocation?: Word.RangeLocation.whole | Word.RangeLocation.start | Word.RangeLocation.end | Word.RangeLocation.after | Word.RangeLocation.content | "Whole" | "Start" | "End" | "After" | "Content"): Word.Range;
        /**
         * Gets reviewed text based on ChangeTrackingVersion selection.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param changeTrackingVersion - Optional. The value must be 'Original' or 'Current'. The default is 'Current'.
         */
        getReviewedText(changeTrackingVersion?: Word.ChangeTrackingVersion): OfficeExtension.ClientResult<string>;
        /**
         * Gets reviewed text based on ChangeTrackingVersion selection.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param changeTrackingVersion - Optional. The value must be 'Original' or 'Current'. The default is 'Current'.
         */
        getReviewedText(changeTrackingVersion?: "Original" | "Current"): OfficeExtension.ClientResult<string>;
        /**
         * Returns the text of the paragraph. This excludes equations, graphics (e.g., images, videos, drawings), and special characters that mark various content (e.g., for content controls, fields, comments, footnotes, endnotes).
                    By default, hidden text and text marked as deleted are excluded.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         *
         * @param options - Optional. Options that define whether the final result should include hidden text and text marked as deleted.
         */
        getText(options?: Word.GetTextOptions | {
            IncludeHiddenText?: boolean;
            IncludeTextMarkedAsDeleted?: boolean;
        }): OfficeExtension.ClientResult<string>;
        /**
         * Gets the text ranges in the paragraph by using punctuation marks and/or other ending marks.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param endingMarks - Required. The punctuation marks and/or other ending marks as an array of strings.
         * @param trimSpacing - Optional. Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection. Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.
         */
        getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;
        /**
         * Gets the collection of the TrackedChange objects in the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        getTrackedChanges(): Word.TrackedChangeCollection;
        /**
         * Indents the paragraph by one level.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        indent(): void;
        /**
         * Indents the paragraph by a specified number of characters.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param count - The number of characters for the indent.
         */
        indentCharacterWidth(count: number): void;
        /**
         * Indents the first line of the paragraph by the specified number of characters.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param count - The number of characters for the first line indent.
         */
        indentFirstLineCharacterWidth(count: number): void;
        /**
         * Inserts annotations on this Paragraph object.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         *
         * Important: This API requires a Microsoft 365 subscription in order to work properly because of an underlying service's requirement. For more about this, see {@link https://github.com/OfficeDev/office-js/issues/4953 | GitHub issue 4953}.
         *
         * @param annotations - Annotations to set.
         * @returns An array of the inserted annotations identifiers.
         */
        insertAnnotations(annotations: Word.AnnotationSet): OfficeExtension.ClientResult<string[]>;
        /**
         * Inserts a break at the specified location in the main document.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param breakType - Required. The break type to add to the document.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         */
        insertBreak(breakType: Word.BreakType | "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After"): void;
        /**
         * Inserts a floating canvas in front of text with its anchor at the beginning of the paragraph.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param insertShapeOptions - Optional. The location and size of canvas. The default location and size is (0, 0, 300, 200).
         */
        insertCanvas(insertShapeOptions?: Word.InsertShapeOptions): Word.Shape;
        /**
         * Wraps the Paragraph object with a content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * Note: The `contentControlType` parameter was introduced in WordApi 1.5. `PlainText` support was added in WordApi 1.5. `CheckBox` support was added in WordApi 1.7.
         * `DropDownList` and `ComboBox` support was added in WordApi 1.9.
         *
         * @param contentControlType - Optional. Content control type to insert. Must be 'RichText', 'PlainText', 'CheckBox', 'DropDownList', or 'ComboBox'. The default is 'RichText'.
         */
        insertContentControl(contentControlType?: Word.ContentControlType.richText | Word.ContentControlType.plainText | Word.ContentControlType.checkBox | Word.ContentControlType.dropDownList | Word.ContentControlType.comboBox | "RichText" | "PlainText" | "CheckBox" | "DropDownList" | "ComboBox"): Word.ContentControl;
        /**
         * Inserts a document into the paragraph at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * Insertion isn't supported if the document being inserted contains an ActiveX control (likely in a form field). Consider replacing such a form field with a content control or other option appropriate for your scenario.
         *
         * @param base64File - Required. The Base64-encoded content of a .docx file.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'.
         */
        insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.Range;
        /**
         * Inserts a geometric shape in front of text with its anchor at the beginning of the paragraph.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param geometricShapeType - The geometric type of the shape to insert.
         * @param insertShapeOptions - Optional. The location and size of the geometric shape. The default location and size is (0, 0, 100, 100).
         */
        insertGeometricShape(geometricShapeType: Word.GeometricShapeType, insertShapeOptions?: Word.InsertShapeOptions): Word.Shape;
        /**
         * Inserts a geometric shape in front of text with its anchor at the beginning of the paragraph.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param geometricShapeType - The geometric type of the shape to insert.
         * @param insertShapeOptions - Optional. The location and size of the geometric shape. The default location and size is (0, 0, 100, 100).
         */
        insertGeometricShape(geometricShapeType: "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus", insertShapeOptions?: Word.InsertShapeOptions): Word.Shape;
        /**
         * Inserts HTML into the paragraph at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param html - Required. The HTML to be inserted in the paragraph.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'.
         */
        insertHtml(html: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.Range;
        /**
         * Inserts a picture into the paragraph at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param base64EncodedImage - Required. The Base64-encoded image to be inserted.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'.
         */
        insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.InlinePicture;
        /**
         * Inserts OOXML into the paragraph at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param ooxml - Required. The OOXML to be inserted in the paragraph.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'.
         */
        insertOoxml(ooxml: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.Range;
        /**
         * Inserts a paragraph at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param paragraphText - Required. The paragraph text to be inserted.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         */
        insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After"): Word.Paragraph;
        /**
         * Inserts a floating picture in front of text with its anchor at the beginning of the paragraph.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param base64EncodedImage - Required. The Base64-encoded image to be inserted.
         * @param insertShapeOptions - Optional. The location and size of the picture. The default location is (0, 0) and the default size is the image's original size.
         */
        insertPictureFromBase64(base64EncodedImage: string, insertShapeOptions?: Word.InsertShapeOptions): Word.Shape;
        /**
         * Inserts a table with the specified number of rows and columns.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rowCount - Required. The number of rows in the table.
         * @param columnCount - Required. The number of columns in the table.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         * @param values - Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
         */
        insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After", values?: string[][]): Word.Table;
        /**
         * Inserts text into the paragraph at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param text - Required. Text to be inserted.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', or 'End'.
         */
        insertText(text: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | "Replace" | "Start" | "End"): Word.Range;
        /**
         * Inserts a floating text box in front of text with its anchor at the beginning of the paragraph.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param text - Optional. The text to insert into the text box.
         * @param insertShapeOptions - Optional. The location and size of the text box. The default location and size is (0, 0, 100, 100).
         */
        insertTextBox(text?: string, insertShapeOptions?: Word.InsertShapeOptions): Word.Shape;
        /**
         * Joins a list paragraph with the closest list above or below this paragraph.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        joinList(): void;
        /**
         * Returns a `Paragraph` object that represents the next paragraph.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param count - Optional. The number of paragraphs to move forward.
         */
        next(count: number): Word.Paragraph;
        /**
         * Toggles the spacing before the paragraph.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        openOrCloseUp(): void;
        /**
         * Sets spacing before the paragraph to 12 points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        openUp(): void;
        /**
         * Removes one level of indent for the paragraph.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outdent(): void;
        /**
         * Applies the next heading level style (Heading 1 through Heading 8) to the paragraph.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outlineDemote(): void;
        /**
         * Demotes the paragraph to body text by applying the Normal style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outlineDemoteToBody(): void;
        /**
         * Applies the previous heading level style (Heading 1 through Heading 8) to the paragraph.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outlinePromote(): void;
        /**
         * Returns the previous paragraph as a `Paragraph` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param count - Optional. The number of paragraphs to move backward.
         */
        previous(count: number): Word.Paragraph;
        /**
         * Removes manual paragraph formatting (formatting not applied using a style).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        reset(): void;
        /**
         * Resets the paragraph that uses custom list levels to the original level settings.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        resetAdvanceTo(): void;
        /**
         * Performs a search with the specified SearchOptions on the scope of the paragraph object. The search results are a collection of range objects.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param searchText - Required. The search text.
         * @param searchOptions - Optional. Options for the search.
         */
        search(searchText: string, searchOptions?: Word.SearchOptions | {
            ignorePunct?: boolean;
            ignoreSpace?: boolean;
            matchCase?: boolean;
            matchPrefix?: boolean;
            matchSuffix?: boolean;
            matchWholeWord?: boolean;
            matchWildcards?: boolean;
        }): Word.RangeCollection;
        /**
         * Selects and navigates the Word UI to the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: Word.SelectionMode): void;
        /**
         * Selects and navigates the Word UI to the paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: "Select" | "Start" | "End"): void;
        /**
         * Selects the number or bullet in a list.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        selectNumber(): void;
        /**
         * Separates a list into two separate lists. For numbered lists, the new list restarts numbering at the starting number, usually 1.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        separateList(): void;
        /**
         * Sets the paragraph to single spacing.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        space1(): void;
        /**
         * Sets the paragraph to 1.5-line spacing.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        space1Pt5(): void;
        /**
         * Sets the paragraph to double spacing.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        space2(): void;
        /**
         * Splits the paragraph into child ranges by using delimiters.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param delimiters - Required. The delimiters as an array of strings.
         * @param trimDelimiters - Optional. Indicates whether to trim delimiters from the ranges in the range collection. Default is false which indicates that the delimiters are included in the ranges returned in the range collection.
         * @param trimSpacing - Optional. Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection. Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.
         */
        split(delimiters: string[], trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;
        /**
         * Starts a new list with this paragraph. Fails if the paragraph is already a list item.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        startNewList(): Word.List;
        /**
         * Sets a hanging indent to a specified number of tab stops.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param count - The number of tab stops for the hanging indent.
         */
        tabHangingIndent(count: number): void;
        /**
         * Sets the left indent for the paragraph to a specified number of tab stops.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param count - The number of tab stops for the left indent.
         */
        tabIndent(count: number): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ParagraphLoadOptions): Word.Paragraph;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Paragraph;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Paragraph;
        /**
         * Occurs when new comments are added.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentAdded: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when a comment or its reply is changed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentChanged: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when comments are deleted.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentDeleted: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when a comment is deselected.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentDeselected: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when a comment is selected.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentSelected: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Paragraph;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Paragraph;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Paragraph` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ParagraphData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ParagraphData;
    }
    /**
     * Contains a collection of {@link Word.Paragraph} objects.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class ParagraphCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Paragraph[];
        /**
         * Returns a `Paragraph` object that represents a new, blank paragraph added to the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range before which you want the new paragraph to be added. The new paragraph doesn't replace the range.
         */
        add(range: Word.Range): Word.Paragraph;
        /**
         * Removes any spacing before the specified paragraphs.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        closeUp(): void;
        /**
         * Decreases the spacing before and after paragraphs in six-point increments.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        decreaseSpacing(): void;
        /**
         * Gets the first paragraph in this collection. Throws an `ItemNotFound` error if the collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirst(): Word.Paragraph;
        /**
         * Gets the first paragraph in this collection. If the collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirstOrNullObject(): Word.Paragraph;
        /**
         * Gets the last paragraph in this collection. Throws an `ItemNotFound` error if the collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getLast(): Word.Paragraph;
        /**
         * Gets the last paragraph in this collection. If the collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getLastOrNullObject(): Word.Paragraph;
        /**
         * Increases the spacing before and after paragraphs in six-point increments.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        increaseSpacing(): void;
        /**
         * Indents the paragraphs by one level.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        indent(): void;
        /**
         * Indents the paragraphs in the collection by the specified number of characters.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param count - The number of characters by which the specified paragraphs are to be indented.
         */
        indentCharacterWidth(count: number): void;
        /**
         * Indents the first line of the paragraphs in the collection by the specified number of characters.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param count - The number of characters by which the first line of each specified paragraph is to be indented.
         */
        indentFirstLineCharacterWidth(count: number): void;
        /**
         * Toggles spacing before paragraphs.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        openOrCloseUp(): void;
        /**
         * Sets spacing before the specified paragraphs to 12 points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        openUp(): void;
        /**
         * Removes one level of indent for the paragraphs.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outdent(): void;
        /**
         * Applies the next heading level style (Heading 1 through Heading 8) to the specified paragraphs.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outlineDemote(): void;
        /**
         * Demotes the specified paragraphs to body text by applying the Normal style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outlineDemoteToBody(): void;
        /**
         * Applies the previous heading level style (Heading 1 through Heading 8) to the paragraphs in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outlinePromote(): void;
        /**
         * Sets the specified paragraphs to single spacing.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        space1(): void;
        /**
         * Sets the specified paragraphs to 1.5-line spacing.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        space1Pt5(): void;
        /**
         * Sets the specified paragraphs to double spacing.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        space2(): void;
        /**
         * Sets a hanging indent to the specified number of tab stops.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param count - The number of tab stops to indent (if positive) or the number of tab stops to remove from the indent (if negative).
         */
        tabHangingIndent(count: number): void;
        /**
         * Sets the left indent for the specified paragraphs to the specified number of tab stops.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param count - The number of tab stops to indent (if positive) or the number of tab stops to remove from the indent (if negative).
         */
        tabIndent(count: number): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ParagraphCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ParagraphCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ParagraphCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.ParagraphCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ParagraphCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ParagraphCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ParagraphCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ParagraphCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.ParagraphCollectionData;
    }
    /**
     * Represents a style of paragraph in a document.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    export class ParagraphFormat extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the alignment for the specified paragraphs.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
        /**
         * Specifies the value (in points) for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        firstLineIndent: number;
        /**
         * Specifies whether all lines in the specified paragraphs remain on the same page when Microsoft Word repaginates the document.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        keepTogether: boolean;
        /**
         * Specifies whether the specified paragraph remains on the same page as the paragraph that follows it when Microsoft Word repaginates the document.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        keepWithNext: boolean;
        /**
         * Specifies the left indent.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        leftIndent: number;
        /**
         * Specifies the line spacing (in points) for the specified paragraphs.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        lineSpacing: number;
        /**
         * Specifies the amount of spacing (in gridlines) after the specified paragraphs.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        lineUnitAfter: number;
        /**
         * Specifies the amount of spacing (in gridlines) before the specified paragraphs.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        lineUnitBefore: number;
        /**
         * Specifies whether left and right indents are the same width.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        mirrorIndents: boolean;
        /**
         * Specifies the outline level for the specified paragraphs.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        outlineLevel: Word.OutlineLevel | "OutlineLevel1" | "OutlineLevel2" | "OutlineLevel3" | "OutlineLevel4" | "OutlineLevel5" | "OutlineLevel6" | "OutlineLevel7" | "OutlineLevel8" | "OutlineLevel9" | "OutlineLevelBodyText";
        /**
         * Specifies the right indent (in points) for the specified paragraphs.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        rightIndent: number;
        /**
         * Specifies the amount of spacing (in points) after the specified paragraph or text column.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        spaceAfter: number;
        /**
         * Specifies the spacing (in points) before the specified paragraphs.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        spaceBefore: number;
        /**
         * Specifies whether the first and last lines in the specified paragraph remain on the same page as the rest of the paragraph when Microsoft Word repaginates the document.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        widowControl: boolean;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ParagraphFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ParagraphFormat): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ParagraphFormatLoadOptions): Word.ParagraphFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ParagraphFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ParagraphFormat;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ParagraphFormat;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ParagraphFormat;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ParagraphFormat` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ParagraphFormatData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ParagraphFormatData;
    }
    /**
     * Represents a contiguous area in a document.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class Range extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BookmarkCollection` object that represents all the bookmarks in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly bookmarks: Word.BookmarkCollection;
        /**
         * Returns a `BorderUniversalCollection` object that represents all the borders for the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly borders: Word.BorderUniversalCollection;
        /**
         * Returns a `ConflictCollection` object that contains all the {@link Word.Conflict} objects in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly conflicts: Word.ConflictCollection;
        /**
         * Gets the collection of content control objects in the range.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly contentControls: Word.ContentControlCollection;
        /**
         * Returns an `EditorCollection` object that represents all the users authorized to modify the range when the document is in protected (read-only) mode.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly editors: Word.EditorCollection;
        /**
         * Gets the collection of endnotes in the range.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly endnotes: Word.NoteItemCollection;
        /**
         * Gets the collection of field objects in the range.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly fields: Word.FieldCollection;
        /**
         * Gets the text format of the range. Use this to get and set font name, size, color, and other properties.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly font: Word.Font;
        /**
         * Gets the collection of footnotes in the range.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly footnotes: Word.NoteItemCollection;
        /**
         * Gets a `FrameCollection` object that represents all the frames in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly frames: Word.FrameCollection;
        /**
         * Returns a `HyperlinkCollection` object that represents all the hyperlinks in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly hyperlinks: Word.HyperlinkCollection;
        /**
         * Gets the collection of inline picture objects in the range.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         */
        readonly inlinePictures: Word.InlinePictureCollection;
        /**
         * Returns a `ListFormat` object that represents all the list formatting characteristics of the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly listFormat: Word.ListFormat;
        /**
         * Gets the collection of list objects in the range.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly lists: Word.ListCollection;
        /**
         * Gets the collection of pages in the range.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly pages: Word.PageCollection;
        /**
         * Gets the collection of paragraph objects in the range.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * Important: For requirement sets 1.1 and 1.2, paragraphs in tables wholly contained within this range aren't returned. From requirement set 1.3, paragraphs in such tables are also returned.
         */
        readonly paragraphs: Word.ParagraphCollection;
        /**
         * Gets the parent body of the range.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentBody: Word.Body;
        /**
         * Gets the currently supported content control that contains the range. Throws an `ItemNotFound` error if there isn't a parent content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly parentContentControl: Word.ContentControl;
        /**
         * Gets the currently supported content control that contains the range. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentContentControlOrNullObject: Word.ContentControl;
        /**
         * Gets the table that contains the range. Throws an `ItemNotFound` error if it isn't contained in a table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTable: Word.Table;
        /**
         * Gets the table cell that contains the range. Throws an `ItemNotFound` error if it isn't contained in a table cell.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableCell: Word.TableCell;
        /**
         * Gets the table cell that contains the range. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableCellOrNullObject: Word.TableCell;
        /**
         * Gets the table that contains the range. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableOrNullObject: Word.Table;
        /**
         * Gets the collection of revisions that represents the tracked changes in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly revisions: Word.RevisionCollection;
        /**
         * Gets the collection of sections in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly sections: Word.SectionCollection;
        /**
         * Returns a `ShadingUniversal` object that refers to the shading formatting for the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly shading: Word.ShadingUniversal;
        /**
         * Gets the collection of shape objects anchored in the range, including both inline and floating shapes. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly shapes: Word.ShapeCollection;
        /**
         * Gets a `TableColumnCollection` object that represents all the table columns in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly tableColumns: Word.TableColumnCollection;
        /**
         * Gets the collection of table objects in the range.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly tables: Word.TableCollection;
        /**
         * Specifies whether the range is formatted as bold.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly bold: boolean;
        /**
         * Specifies whether the range is formatted as bold in a right-to-left language document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly boldBidirectional: boolean;
        /**
         * Specifies a `CharacterCase` value that represents the case of the text in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        case: Word.CharacterCase | "Next" | "Lower" | "Upper" | "TitleWord" | "TitleSentence" | "Toggle" | "HalfWidth" | "FullWidth" | "Katakana" | "Hiragana";
        /**
         * Specifies the character width of the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        characterWidth: Word.CharacterWidth | "Half" | "Full";
        /**
         * Specifies if the range contains combined characters.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        combineCharacters: boolean;
        /**
         * Specifies if Microsoft Word ignores the number of characters per line for the corresponding `Range` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly disableCharacterSpaceGrid: boolean;
        /**
         * Specifies the emphasis mark for a character or designated character string.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly emphasisMark: Word.EmphasisMark | "None" | "OverSolidCircle" | "OverComma" | "OverWhiteCircle" | "UnderSolidCircle";
        /**
         * Specifies the ending character position of the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        end: number;
        /**
         * Specifies the width (in the current measurement units) in which Microsoft Word fits the text in the current selection or range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fitTextWidth: number;
        /**
         * Specifies if a grammar check has been run on the range or document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grammarChecked: boolean;
        /**
         * Specifies the proofing status (spelling and grammar checking) of the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hasNoProofing: boolean;
        /**
         * Specifies the highlight color for the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly highlightColorIndex: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
        /**
         * Specifies the formatting for horizontal text set within vertical text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        horizontalInVertical: Word.HorizontalInVerticalType | "None" | "FitInLine" | "ResizeLine";
        /**
         * Gets the first hyperlink in the range, or sets a hyperlink on the range. All hyperlinks in the range are deleted when you set a new hyperlink on the range. Use a '#' to separate the address part from the optional location part.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        hyperlink: string;
        /**
         * Specifies the ID for the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        id: string;
        /**
         * Checks whether the range length is zero.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly isEmpty: boolean;
        /**
         * Gets if the range is collapsed and is located at the end-of-row mark in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isEndOfRowMark: boolean;
        /**
         * Gets whether the text in the range is visible on the screen.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isTextVisibleOnScreen: boolean;
        /**
         * Specifies if the font or range is formatted as italic.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly italic: boolean;
        /**
         * Specifies if the font or range is formatted as italic (right-to-left languages).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly italicBidirectional: boolean;
        /**
         * Specifies whether the range of Japanese language text is hiragana or katakana.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        kana: Word.Kana | "Katakana" | "Hiragana";
        /**
         * Specifies whether Microsoft Word has detected the language of the text in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        languageDetected: boolean;
        /**
         * Specifies a `LanguageId` value that represents the language for the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        languageId: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * Specifies an East Asian language for the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        languageIdFarEast: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * Specifies a language for the range that isn't classified as an East Asian language.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        languageIdOther: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * Specifies if all nonprinting characters (such as hidden text, tab marks, space marks, and paragraph marks) are displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        showAll: boolean;
        /**
         * Specifies if spelling has been checked throughout the range or document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spellingChecked: boolean;
        /**
         * Specifies the starting character position of the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        start: number;
        /**
         * Gets the number of characters in the story that contains the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly storyLength: number;
        /**
         * Gets the story type for the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly storyType: Word.StoryType | "MainText" | "Footnotes" | "Endnotes" | "Comments" | "TextFrame" | "EvenPagesHeader" | "PrimaryHeader" | "EvenPagesFooter" | "PrimaryFooter" | "FirstPageHeader" | "FirstPageFooter" | "FootnoteSeparator" | "FootnoteContinuationSeparator" | "FootnoteContinuationNotice" | "EndnoteSeparator" | "EndnoteContinuationSeparator" | "EndnoteContinuationNotice";
        /**
         * Specifies the style name for the range. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        style: string;
        /**
         * Specifies the built-in style name for the range. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        styleBuiltIn: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
        /**
         * Gets the text of the range.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly text: string;
        /**
         * Specifies whether Microsoft Word sets two lines of text in one and specifies the characters that enclose the text, if any.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        twoLinesInOne: Word.TwoLinesInOneType | "None" | "NoBrackets" | "Parentheses" | "SquareBrackets" | "AngleBrackets" | "CurlyBrackets";
        /**
         * Specifies the type of underline applied to the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly underline: Word.Underline | "None" | "Single" | "Words" | "Double" | "Dotted" | "Thick" | "Dash" | "DotDash" | "DotDotDash" | "Wavy" | "WavyHeavy" | "DottedHeavy" | "DashHeavy" | "DotDashHeavy" | "DotDotDashHeavy" | "DashLong" | "DashLongHeavy" | "WavyDouble";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Range): void;
        /**
         * Clears the contents of the range object. The user can perform the undo operation on the cleared content.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        clear(): void;
        /**
         * Compares this range's location with another range's location.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param range - Required. The range to compare with this range.
         */
        compareLocationWith(range: Word.Range): OfficeExtension.ClientResult<Word.LocationRelation>;
        /**
         * Deletes the range and its content from the document.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        delete(): void;
        /**
         * Analyzes the range text to determine the language that it's written in.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        detectLanguage(): OfficeExtension.ClientResult<boolean>;
        /**
         * Returns a new range that extends from this range in either direction to cover another range. This range isn't changed. Throws an `ItemNotFound` error if the two ranges don't have a union.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param range - Required. Another range.
         */
        expandTo(range: Word.Range): Word.Range;
        /**
         * Returns a new range that extends from this range in either direction to cover another range. This range isn't changed. If the two ranges don't have a union, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param range - Required. Another range.
         */
        expandToOrNullObject(range: Word.Range): Word.Range;
        /**
         * Gets the names all bookmarks in or overlapping the range. A bookmark is hidden if its name starts with the underscore character.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param includeHidden - Optional. Indicates whether to include hidden bookmarks. Default is false which indicates that the hidden bookmarks are excluded.
         * @param includeAdjacent - Optional. Indicates whether to include bookmarks that are adjacent to the range. Default is false which indicates that the adjacent bookmarks are excluded.
         */
        getBookmarks(includeHidden?: boolean, includeAdjacent?: boolean): OfficeExtension.ClientResult<string[]>;
        /**
         * Gets comments associated with the range.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         * @returns
         */
        getComments(): Word.CommentCollection;
        /**
         * Gets the currently supported content controls in the range.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * **Important**: If specific types are provided in the options parameter, only content controls of supported types are returned.
         * Be aware that an exception will be thrown on using methods of a generic {@link Word.ContentControl} that aren't relevant for the specific type.
         * With time, additional types of content controls may be supported. Therefore, your add-in should request and handle specific types of content controls.
         *
         * @param options - Optional. Options that define which content controls are returned.
         */
        getContentControls(options?: Word.ContentControlOptions): Word.ContentControlCollection;
        /**
         * Gets an HTML representation of the range object. When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document. This method doesn't return the exact same HTML for the same document on different platforms (Windows, Mac, Word on the web, etc.). If you need exact fidelity, or consistency across platforms, use `Range.getOoxml()` and convert the returned XML to HTML.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        getHtml(): OfficeExtension.ClientResult<string>;
        /**
         * Gets hyperlink child ranges within the range.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getHyperlinkRanges(): Word.RangeCollection;
        /**
         * Gets the next text range by using punctuation marks and/or other ending marks. Throws an `ItemNotFound` error if this text range is the last one.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param endingMarks - Required. The punctuation marks and/or other ending marks as an array of strings.
         * @param trimSpacing - Optional. Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the returned range. Default is false which indicates that spacing characters at the start and end of the range are included.
         */
        getNextTextRange(endingMarks: string[], trimSpacing?: boolean): Word.Range;
        /**
         * Gets the next text range by using punctuation marks and/or other ending marks. If this text range is the last one, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param endingMarks - Required. The punctuation marks and/or other ending marks as an array of strings.
         * @param trimSpacing - Optional. Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the returned range. Default is false which indicates that spacing characters at the start and end of the range are included.
         */
        getNextTextRangeOrNullObject(endingMarks: string[], trimSpacing?: boolean): Word.Range;
        /**
         * Gets the OOXML representation of the range object.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        getOoxml(): OfficeExtension.ClientResult<string>;
        /**
         * Clones the range, or gets the starting or ending point of the range as a new range.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rangeLocation - Optional. The range location must be 'Whole', 'Start', 'End', 'After', or 'Content'.
         */
        getRange(rangeLocation?: Word.RangeLocation.whole | Word.RangeLocation.start | Word.RangeLocation.end | Word.RangeLocation.after | Word.RangeLocation.content | "Whole" | "Start" | "End" | "After" | "Content"): Word.Range;
        /**
         * Gets reviewed text based on ChangeTrackingVersion selection.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param changeTrackingVersion - Optional. The value must be 'Original' or 'Current'. The default is 'Current'.
         */
        getReviewedText(changeTrackingVersion?: Word.ChangeTrackingVersion): OfficeExtension.ClientResult<string>;
        /**
         * Gets reviewed text based on ChangeTrackingVersion selection.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param changeTrackingVersion - Optional. The value must be 'Original' or 'Current'. The default is 'Current'.
         */
        getReviewedText(changeTrackingVersion?: "Original" | "Current"): OfficeExtension.ClientResult<string>;
        /**
         * Gets the text child ranges in the range by using punctuation marks and/or other ending marks.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param endingMarks - Required. The punctuation marks and/or other ending marks as an array of strings.
         * @param trimSpacing - Optional. Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection. Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.
         */
        getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;
        /**
         * Gets the collection of the TrackedChange objects in the range.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        getTrackedChanges(): Word.TrackedChangeCollection;
        /**
         * Highlights the range temporarily without changing document content.
                    To highlight the text permanently, set the range's Font.HighlightColor.
         *
         * @remarks
         * [Api set: WordApi 1.8]
         */
        highlight(): void;
        /**
         * Inserts a bookmark on the range. If a bookmark of the same name exists somewhere, it is deleted first.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * Note: The conditions of inserting a bookmark are similar to doing so in the Word UI. To learn more about managing bookmarks in the Word UI, see {@link https://support.microsoft.com/office/f68d781f-0150-4583-a90e-a4009d99c2a0 | Add or delete bookmarks in a Word document or Outlook message}.
         *
         * @param name - Required. The case-insensitive bookmark name. Only alphanumeric and underscore characters are supported. It must begin with a letter but if you want to tag the bookmark as hidden, then start the name with an underscore character. Names can't be longer than 40 characters.
         */
        insertBookmark(name: string): void;
        /**
         * Inserts a break at the specified location in the main document.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param breakType - Required. The break type to add.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         */
        insertBreak(breakType: Word.BreakType | "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After"): void;
        /**
         * Inserts a floating canvas in front of text with its anchor at the beginning of the range.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param insertShapeOptions - Optional. The location and size of the canvas. The default location and size is (0, 0, 300, 200).
         */
        insertCanvas(insertShapeOptions?: Word.InsertShapeOptions): Word.Shape;
        /**
         * Insert a comment on the range.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param commentText - Required. The comment text to be inserted.
         * @returns comment object
         */
        insertComment(commentText: string): Word.Comment;
        /**
         * Wraps the Range object with a content control.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * Note: The `contentControlType` parameter was introduced in WordApi 1.5. `PlainText` support was added in WordApi 1.5. `CheckBox` support was added in WordApi 1.7.
         * `DropDownList` and `ComboBox` support was added in WordApi 1.9.
         *
         * @param contentControlType - Optional. Content control type to insert. Must be 'RichText', 'PlainText', 'CheckBox', 'DropDownList', or 'ComboBox'. The default is 'RichText'.
         */
        insertContentControl(contentControlType?: Word.ContentControlType.richText | Word.ContentControlType.plainText | Word.ContentControlType.checkBox | Word.ContentControlType.dropDownList | Word.ContentControlType.comboBox | "RichText" | "PlainText" | "CheckBox" | "DropDownList" | "ComboBox"): Word.ContentControl;
        /**
         * Inserts an endnote. The endnote reference is placed after the range.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param insertText - Optional. Text to be inserted into the endnote body. The default is "".
         */
        insertEndnote(insertText?: string): Word.NoteItem;
        /**
         * Inserts a field at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * Important: In Word on Windows and on Mac, the API supports inserting and managing all types listed in {@link Word.FieldType} except `Word.FieldType.others`.
         * In Word on the web, fields are mainly read-only. To learn more, see {@link  https://learn.microsoft.com/office/dev/add-ins/word/fields-guidance | Use fields in your Word add-in}.
         *
         * @param insertLocation - Required. The location relative to the range where the field will be inserted. The value must be 'Replace', 'Start', 'End', 'Before', or 'After'.
         * @param fieldType - Optional. Can be any FieldType constant. The default value is Empty.
         * @param text - Optional. Additional properties or options if needed for specified field type.
         * @param removeFormatting - Optional. `true` to remove the formatting that's applied to the field during updates, `false` otherwise. The default value is `false`.
         */
        insertField(insertLocation: Word.InsertLocation | "Replace" | "Start" | "End" | "Before" | "After", fieldType?: Word.FieldType, text?: string, removeFormatting?: boolean): Word.Field;
        /**
         * Inserts a field at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * Important: In Word on Windows and on Mac, the API supports inserting and managing all types listed in {@link Word.FieldType} except `Word.FieldType.others`.
         * In Word on the web, fields are mainly read-only. To learn more, see {@link  https://learn.microsoft.com/office/dev/add-ins/word/fields-guidance | Use fields in your Word add-in}.
         *
         * @param insertLocation - Required. The location relative to the range where the field will be inserted. The value must be 'Replace', 'Start', 'End', 'Before', or 'After'.
         * @param fieldType - Optional. Can be any FieldType constant. The default value is Empty.
         * @param text - Optional. Additional properties or options if needed for specified field type.
         * @param removeFormatting - Optional. `true` to remove the formatting that's applied to the field during updates, `false` otherwise. The default value is `false`.
         */
        insertField(insertLocation: Word.InsertLocation | "Replace" | "Start" | "End" | "Before" | "After", fieldType?: "Addin" | "AddressBlock" | "Advance" | "Ask" | "Author" | "AutoText" | "AutoTextList" | "BarCode" | "Bibliography" | "BidiOutline" | "Citation" | "Comments" | "Compare" | "CreateDate" | "Data" | "Database" | "Date" | "DisplayBarcode" | "DocProperty" | "DocVariable" | "EditTime" | "Embedded" | "EQ" | "Expression" | "FileName" | "FileSize" | "FillIn" | "FormCheckbox" | "FormDropdown" | "FormText" | "GotoButton" | "GreetingLine" | "Hyperlink" | "If" | "Import" | "Include" | "IncludePicture" | "IncludeText" | "Index" | "Info" | "Keywords" | "LastSavedBy" | "Link" | "ListNum" | "MacroButton" | "MergeBarcode" | "MergeField" | "MergeRec" | "MergeSeq" | "Next" | "NextIf" | "NoteRef" | "NumChars" | "NumPages" | "NumWords" | "OCX" | "Page" | "PageRef" | "Print" | "PrintDate" | "Private" | "Quote" | "RD" | "Ref" | "RevNum" | "SaveDate" | "Section" | "SectionPages" | "Seq" | "Set" | "Shape" | "SkipIf" | "StyleRef" | "Subject" | "Subscriber" | "Symbol" | "TA" | "TC" | "Template" | "Time" | "Title" | "TOA" | "TOC" | "UserAddress" | "UserInitials" | "UserName" | "XE" | "Empty" | "Others" | "Undefined", text?: string, removeFormatting?: boolean): Word.Field;
        /**
         * Inserts a document at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * Insertion isn't supported if the document being inserted contains an ActiveX control (likely in a form field). Consider replacing such a form field with a content control or other option appropriate for your scenario.
         *
         * @param base64File - Required. The Base64-encoded content of a .docx file.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', 'End', 'Before', or 'After'.
         */
        insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation | "Replace" | "Start" | "End" | "Before" | "After"): Word.Range;
        /**
         * Inserts a footnote. The footnote reference is placed after the range.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param insertText - Optional. Text to be inserted into the footnote body. The default is "".
         */
        insertFootnote(insertText?: string): Word.NoteItem;
        /**
         * Inserts a geometric shape in front of text with its anchor at the beginning of the range.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param geometricShapeType - The geometric type of the shape to insert.
         * @param insertShapeOptions - Optional. The location and size of the geometric shape. The default location and size is (0, 0, 100, 100).
         */
        insertGeometricShape(geometricShapeType: Word.GeometricShapeType, insertShapeOptions?: Word.InsertShapeOptions): Word.Shape;
        /**
         * Inserts a geometric shape in front of text with its anchor at the beginning of the range.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param geometricShapeType - The geometric type of the shape to insert.
         * @param insertShapeOptions - Optional. The location and size of the geometric shape. The default location and size is (0, 0, 100, 100).
         */
        insertGeometricShape(geometricShapeType: "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus", insertShapeOptions?: Word.InsertShapeOptions): Word.Shape;
        /**
         * Inserts HTML at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param html - Required. The HTML to be inserted.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', 'End', 'Before', or 'After'.
         */
        insertHtml(html: string, insertLocation: Word.InsertLocation | "Replace" | "Start" | "End" | "Before" | "After"): Word.Range;
        /**
         * Inserts a picture at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.2]
         *
         * @param base64EncodedImage - Required. The Base64-encoded image to be inserted.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', 'End', 'Before', or 'After'.
         */
        insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation | "Replace" | "Start" | "End" | "Before" | "After"): Word.InlinePicture;
        /**
         * Inserts OOXML at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param ooxml - Required. The OOXML to be inserted.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', 'End', 'Before', or 'After'.
         */
        insertOoxml(ooxml: string, insertLocation: Word.InsertLocation | "Replace" | "Start" | "End" | "Before" | "After"): Word.Range;
        /**
         * Inserts a paragraph at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param paragraphText - Required. The paragraph text to be inserted.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         */
        insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After"): Word.Paragraph;
        /**
         * Inserts a floating picture in front of text with its anchor at the beginning of the range.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param base64EncodedImage - Required. The Base64-encoded image to be inserted.
         * @param insertShapeOptions - Required. The location and size of the picture. The default location is (0, 0) and the default size is the image's original size.
         */
        insertPictureFromBase64(base64EncodedImage: string, insertShapeOptions?: Word.InsertShapeOptions): Word.Shape;
        /**
         * Inserts a table with the specified number of rows and columns.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rowCount - Required. The number of rows in the table.
         * @param columnCount - Required. The number of columns in the table.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         * @param values - Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
         */
        insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After", values?: string[][]): Word.Table;
        /**
         * Inserts text at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param text - Required. Text to be inserted.
         * @param insertLocation - Required. The value must be 'Replace', 'Start', 'End', 'Before', or 'After'.
         */
        insertText(text: string, insertLocation: Word.InsertLocation | "Replace" | "Start" | "End" | "Before" | "After"): Word.Range;
        /**
         * Inserts a floating text box in front of text with its anchor at the beginning of the range.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param text - Optional. The text to insert into the text box.
         * @param insertShapeOptions - Optional. The location and size of the text box. The default location and size is (0, 0, 100, 100).
         */
        insertTextBox(text?: string, insertShapeOptions?: Word.InsertShapeOptions): Word.Shape;
        /**
         * Returns a new range as the intersection of this range with another range. This range isn't changed. Throws an `ItemNotFound` error if the two ranges aren't overlapped or adjacent.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param range - Required. Another range.
         */
        intersectWith(range: Word.Range): Word.Range;
        /**
         * Returns a new range as the intersection of this range with another range. This range isn't changed. If the two ranges aren't overlapped or adjacent, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param range - Required. Another range.
         */
        intersectWithOrNullObject(range: Word.Range): Word.Range;
        /**
         * Removes the highlight added by the Highlight function if any.
         *
         * @remarks
         * [Api set: WordApi 1.8]
         */
        removeHighlight(): void;
        /**
         * Performs a search with the specified SearchOptions on the scope of the range object. The search results are a collection of range objects.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param searchText - Required. The search text.
         * @param searchOptions - Optional. Options for the search.
         */
        search(searchText: string, searchOptions?: Word.SearchOptions | {
            ignorePunct?: boolean;
            ignoreSpace?: boolean;
            matchCase?: boolean;
            matchPrefix?: boolean;
            matchSuffix?: boolean;
            matchWholeWord?: boolean;
            matchWildcards?: boolean;
        }): Word.RangeCollection;
        /**
         * Selects and navigates the Word UI to the range.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: Word.SelectionMode): void;
        /**
         * Selects and navigates the Word UI to the range.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: "Select" | "Start" | "End"): void;
        /**
         * Splits the range into child ranges by using delimiters.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param delimiters - Required. The delimiters as an array of strings.
         * @param multiParagraphs - Optional. Indicates whether a returned child range can cover multiple paragraphs. Default is false which indicates that the paragraph boundaries are also used as delimiters.
         * @param trimDelimiters - Optional. Indicates whether to trim delimiters from the ranges in the range collection. Default is false which indicates that the delimiters are included in the ranges returned in the range collection.
         * @param trimSpacing - Optional. Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection. Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.
         */
        split(delimiters: string[], multiParagraphs?: boolean, trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.RangeLoadOptions): Word.Range;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Range;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Range;
        /**
         * Occurs when new comments are added.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentAdded: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when a comment or its reply is changed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentChanged: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when a comment is deselected.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentDeselected: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Occurs when a comment is selected.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         *
         * @eventproperty
         * @beta
         */
        readonly onCommentSelected: OfficeExtension.EventHandlers<Word.CommentEventArgs>;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Range;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Range;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Range` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RangeData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.RangeData;
    }
    /**
     * Contains a collection of {@link Word.Range} objects.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class RangeCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Range[];
        /**
         * Gets the first range in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirst(): Word.Range;
        /**
         * Gets the first range in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirstOrNullObject(): Word.Range;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.RangeCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.RangeCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.RangeCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.RangeCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.RangeCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.RangeCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.RangeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RangeCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.RangeCollectionData;
    }
    /**
     * Specifies the options to determine location and size when inserting a shape.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export interface InsertShapeOptions {
        /**
         * Represents the height of the shape being inserted.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        height?: number;
        /**
         * Represents the left position of the shape being inserted.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        left?: number;
        /**
         * Represents the top position of the shape being inserted.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        top?: number;
        /**
         * Represents the width of the shape being inserted.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        width?: number;
    }
    /**
     * Specifies the options to determine what to copy when inserting a file.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    export interface InsertFileOptions {
        /**
         * Represents whether the change tracking mode status from the source document should be imported.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        importChangeTrackingMode?: boolean;
        /**
         * Represents whether the custom properties from the source document should be imported. Overwrites existing properties with the same name.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        importCustomProperties?: boolean;
        /**
         * Represents whether the custom XML parts from the source document should be imported.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        importCustomXmlParts?: boolean;
        /**
         * Represents whether to import the Different Odd and Even Pages setting for the header and footer from the source document.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        importDifferentOddEvenPages?: boolean;
        /**
         * Represents whether the page color and other background information from the source document should be imported.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        importPageColor?: boolean;
        /**
         * Represents whether the paragraph spacing from the source document should be imported.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        importParagraphSpacing?: boolean;
        /**
         * Represents whether the styles from the source document should be imported.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        importStyles?: boolean;
        /**
         * Represents whether the theme from the source document should be imported.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        importTheme?: boolean;
    }
    /**
     * Specifies the options to be included in a search operation.
                To learn more about how to use search options in the Word JavaScript APIs, read {@link https://learn.microsoft.com/office/dev/add-ins/word/search-option-guidance | Use search options to find text in your Word add-in}.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class SearchOptions extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies a value that indicates whether to ignore all punctuation characters between words. Corresponds to the Ignore punctuation check box in the Find and Replace dialog box.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        ignorePunct: boolean;
        /**
         * Specifies a value that indicates whether to ignore all whitespace between words. Corresponds to the Ignore whitespace characters check box in the Find and Replace dialog box.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        ignoreSpace: boolean;
        /**
         * Specifies a value that indicates whether to perform a case sensitive search. Corresponds to the Match case check box in the Find and Replace dialog box.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        matchCase: boolean;
        /**
         * Specifies a value that indicates whether to match words that begin with the search string. Corresponds to the Match prefix check box in the Find and Replace dialog box.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        matchPrefix: boolean;
        /**
         * Specifies a value that indicates whether to match words that end with the search string. Corresponds to the Match suffix check box in the Find and Replace dialog box.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        matchSuffix: boolean;
        /**
         * Specifies a value that indicates whether to find operation only entire words, not text that is part of a larger word. Corresponds to the Find whole words only check box in the Find and Replace dialog box.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        matchWholeWord: boolean;
        /**
         * Specifies a value that indicates whether the search will be performed using special search operators. Corresponds to the Use wildcards check box in the Find and Replace dialog box.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        matchWildcards: boolean;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.SearchOptionsUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.SearchOptions): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.SearchOptionsLoadOptions): Word.SearchOptions;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.SearchOptions;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.SearchOptions;
        /**
         * Create a new instance of the `Word.SearchOptions` object.
         */
        static newObject(context: OfficeExtension.ClientRequestContext): Word.SearchOptions;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.SearchOptions` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SearchOptionsData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.SearchOptionsData;
    }
    /**
     * Specifies the options to be included in a getText operation.
     *
     * @remarks
     * [Api set: WordApi 1.7]
     */
    export interface GetTextOptions {
        /**
         * Specifies a value that indicates whether to include hidden text in the result of the GetText method. The default value is False.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        includeHiddenText?: boolean;
        /**
         * Specifies a value that indicates whether to include text marked as deleted in the result of the GetText method. The default value is False.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        includeTextMarkedAsDeleted?: boolean;
    }
    /**
     * Specifies the options to be included in a compare document operation.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.1]
     */
    export interface DocumentCompareOptions {
        /**
         * True adds the document to the list of recently used files on the File menu. The default value is True.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        addToRecentFiles?: boolean;
        /**
         * The reviewer name associated with the differences generated by the comparison.
                    If unspecified, the value defaults to the author name of the revised document or the string "Comparison" if no author information is present.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        authorName?: string;
        /**
         * The target document for the comparison. Default value is 'CompareTargetCurrent'.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        compareTarget?: Word.CompareTarget | "CompareTargetCurrent" | "CompareTargetSelected" | "CompareTargetNew";
        /**
         * True (default) for the comparison to include detection of format changes.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        detectFormatChanges?: boolean;
        /**
         * True compares the documents without notifying a user of problems. The default value is False.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        ignoreAllComparisonWarnings?: boolean;
        /**
         * True removes date and time stamp information from tracked changes in the returned Document object. The default value is False.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        removeDateAndTime?: boolean;
        /**
         * True removes all user information from comments, revisions, and the properties dialog box in the returned Document object. The default value is False.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        removePersonalInformation?: boolean;
    }
    /**
     * Represents a section in a Word document.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class Section extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the body object of the section. This doesn't include the header/footer and other section metadata.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        readonly body: Word.Body;
        /**
         * Returns a `BorderUniversalCollection` object that represents all the borders in the section.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly borders: Word.BorderUniversalCollection;
        /**
         * Returns a `PageSetup` object that's associated with the section.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly pageSetup: Word.PageSetup;
        /**
         * Specifies if the section is protected for forms.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        protectedForForms: boolean;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.SectionUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Section): void;
        /**
         * Gets one of the section's footers.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param type - Required. The type of footer to return. This value must be: 'Primary', 'FirstPage', or 'EvenPages'.
         */
        getFooter(type: Word.HeaderFooterType): Word.Body;
        /**
         * Gets one of the section's footers.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param type - Required. The type of footer to return. This value must be: 'Primary', 'FirstPage', or 'EvenPages'.
         */
        getFooter(type: "Primary" | "FirstPage" | "EvenPages"): Word.Body;
        /**
         * Gets one of the section's headers.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param type - Required. The type of header to return. This value must be: 'Primary', 'FirstPage', or 'EvenPages'.
         */
        getHeader(type: Word.HeaderFooterType): Word.Body;
        /**
         * Gets one of the section's headers.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         *
         * @param type - Required. The type of header to return. This value must be: 'Primary', 'FirstPage', or 'EvenPages'.
         */
        getHeader(type: "Primary" | "FirstPage" | "EvenPages"): Word.Body;
        /**
         * Gets the next section. Throws an `ItemNotFound` error if this section is the last one.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getNext(): Word.Section;
        /**
         * Gets the next section. If this section is the last one, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getNextOrNullObject(): Word.Section;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.SectionLoadOptions): Word.Section;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Section;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Section;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Section;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Section;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Section` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SectionData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.SectionData;
    }
    /**
     * Contains the collection of the document's {@link Word.Section} objects.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    export class SectionCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Section[];
        /**
         * Gets the first section in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirst(): Word.Section;
        /**
         * Gets the first section in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirstOrNullObject(): Word.Section;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.SectionCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.SectionCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.SectionCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.SectionCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.SectionCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.SectionCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.SectionCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SectionCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.SectionCollectionData;
    }
    /**
     * Represents a setting of the add-in.
     *
     * @remarks
     * [Api set: WordApi 1.4]
     */
    export class Setting extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the key of the setting.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly key: string;
        /**
         * Specifies the value of the setting.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        value: any;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.SettingUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Setting): void;
        /**
         * Deletes the setting.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        delete(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.SettingLoadOptions): Word.Setting;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Setting;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Setting;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Setting;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Setting;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Setting` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SettingData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.SettingData;
    }
    /**
     * Contains the collection of {@link Word.Setting} objects.
     *
     * @remarks
     * [Api set: WordApi 1.4]
     */
    export class SettingCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Setting[];
        /**
         * Creates a new setting or sets an existing setting.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param key - Required. The setting's key, which is case-sensitive.
         * @param value - Required. The setting's value.
         */
        add(key: string, value: any): Word.Setting;
        /**
         * Deletes all settings in this add-in.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        deleteAll(): void;
        /**
         * Gets the count of settings.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Gets a setting object by its key, which is case-sensitive. Throws an `ItemNotFound` error if the setting doesn't exist.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param key - The key that identifies the setting object.
         */
        getItem(key: string): Word.Setting;
        /**
         * Gets a setting object by its key, which is case-sensitive. If the setting doesn't exist, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param key - Required. The key that identifies the setting object.
         */
        getItemOrNullObject(key: string): Word.Setting;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.SettingCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.SettingCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.SettingCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.SettingCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.SettingCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.SettingCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.SettingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SettingCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.SettingCollectionData;
    }
    /**
     * Contains a collection of {@link Word.Style} objects.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    export class StyleCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Style[];
        /**
         * Get the style object by its name.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param name - Required. The style name.
         */
        getByName(name: string): Word.Style;
        /**
         * If the corresponding style doesn't exist, then this method returns an object with its `isNullObject` property set to `true`.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param name - Required. The style name.
         */
        getByNameOrNullObject(name: string): Word.Style;
        /**
         * Gets the number of the styles in the collection.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Gets a style object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * @param index - A number that identifies the index location of a style object.
         */
        getItem(index: number): Word.Style;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.StyleCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.StyleCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.StyleCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.StyleCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.StyleCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.StyleCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.StyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.StyleCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.StyleCollectionData;
    }
    /**
     * Represents a style in a Word document.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class Style extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies a BorderCollection object that represents all the borders for the specified style.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        readonly borders: Word.BorderCollection;
        /**
         * Gets a font object that represents the character formatting of the specified style.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly font: Word.Font;
        /**
         * Returns a `Frame` object that represents the frame formatting for the style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly frame: Word.Frame;
        /**
         * Specifies a link between a paragraph and a character style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        linkStyle: Word.Style;
        /**
         * Gets a ListTemplate object that represents the list formatting for the specified Style object.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        readonly listTemplate: Word.ListTemplate;
        /**
         * Gets a ParagraphFormat object that represents the paragraph settings for the specified style.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly paragraphFormat: Word.ParagraphFormat;
        /**
         * Gets a Shading object that represents the shading for the specified style. Not applicable to List style.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        readonly shading: Word.Shading;
        /**
         * Gets a TableStyle object representing Style properties that can be applied to a table.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        readonly tableStyle: Word.TableStyle;
        /**
         * Specifies whether the style is automatically redefined based on the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        automaticallyUpdate: boolean;
        /**
         * Specifies the name of an existing style to use as the base formatting of another style.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * Note: The ability to set `baseStyle` was introduced in WordApi 1.6.
         */
        baseStyle: string;
        /**
         * Gets whether the specified style is a built-in style.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly builtIn: boolean;
        /**
         * Gets the description of the specified style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly description: string;
        /**
         * Specifies whether the spelling and grammar checker ignores text formatted with this style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hasProofing: boolean;
        /**
         * Gets whether the specified style is a built-in style that has been modified or applied in the document or a new style that has been created in the document.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly inUse: boolean;
        /**
         * Specifies a `LanguageId` value that represents the language for the style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        languageId: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * Specifies an East Asian language for the style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        languageIdFarEast: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * Gets whether a style is a linked style that can be used for both paragraph and character formatting.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly linked: boolean;
        /**
         * Returns the list level for the style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly listLevelNumber: number;
        /**
         * Specifies whether the style cannot be changed or edited.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        locked: boolean;
        /**
         * Gets the name of a style in the language of the user.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly nameLocal: string;
        /**
         * Specifies the name of the style to be applied automatically to a new paragraph that is inserted after a paragraph formatted with the specified style.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         *
         * Note: The ability to set `nextParagraphStyle` was introduced in WordApi 1.6.
         */
        nextParagraphStyle: string;
        /**
         * Specifies whether to remove spacing between paragraphs that are formatted using the same style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        noSpaceBetweenParagraphsOfSameStyle: boolean;
        /**
         * Specifies the priority.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        priority: number;
        /**
         * Specifies whether the style corresponds to an available quick style.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        quickStyle: boolean;
        /**
         * Gets the style type.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly type: Word.StyleType | "Character" | "List" | "Paragraph" | "Table";
        /**
         * Specifies whether the specified style is made visible as a recommended style in the Styles and in the Styles task pane in Microsoft Word after it's used in the document.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        unhideWhenUsed: boolean;
        /**
         * Specifies whether the specified style is visible as a recommended style in the Styles gallery and in the Styles task pane.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        visibility: boolean;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.StyleUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Style): void;
        /**
         * Deletes the style.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        delete(): void;
        /**
         * Links this style to a list template so that the style's formatting can be applied to lists.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param listTemplate - A `ListTemplate` to link to the style.
         */
        linkToListTemplate(listTemplate: Word.ListTemplate): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.StyleLoadOptions): Word.Style;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Style;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Style;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Style;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Style;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Style` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.StyleData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.StyleData;
    }
    /**
     * Represents the shading object.
     *
     * @remarks
     * [Api set: WordApi 1.6]
     */
    export class Shading extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the color for the background of the object. You can provide the value in the '#RRGGBB' format or the color name.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        backgroundPatternColor: string;
        /**
         * Specifies the color for the foreground of the object. You can provide the value in the '#RRGGBB' format or the color name.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        foregroundPatternColor: string;
        /**
         * Specifies the shading texture of the object. To learn more about how to apply backgrounds like textures, see {@link https://support.microsoft.com/office/db481e61-7af6-4063-bbcd-b276054a5515 | Add, change, or delete the background color in Word}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        texture: Word.ShadingTextureType | "DarkDiagonalDown" | "DarkDiagonalUp" | "DarkGrid" | "DarkHorizontal" | "DarkTrellis" | "DarkVertical" | "LightDiagonalDown" | "LightDiagonalUp" | "LightGrid" | "LightHorizontal" | "LightTrellis" | "LightVertical" | "None" | "Percent10" | "Percent12Pt5" | "Percent15" | "Percent20" | "Percent25" | "Percent30" | "Percent35" | "Percent37Pt5" | "Percent40" | "Percent45" | "Percent5" | "Percent50" | "Percent55" | "Percent60" | "Percent62Pt5" | "Percent65" | "Percent70" | "Percent75" | "Percent80" | "Percent85" | "Percent87Pt5" | "Percent90" | "Percent95" | "Solid";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ShadingUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Shading): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ShadingLoadOptions): Word.Shading;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Shading;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Shading;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Shading;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Shading;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Shading` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ShadingData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ShadingData;
    }
    /**
     * Represents the `ShadingUniversal` object, which manages shading for a range, paragraph, frame, or table.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class ShadingUniversal extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the color that's applied to the background of the `ShadingUniversal` object. You can provide the value in the '#RRGGBB' format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        backgroundPatternColor: string;
        /**
         * Specifies the color that's applied to the background of the `ShadingUniversal` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        backgroundPatternColorIndex: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
        /**
         * Specifies the color that's applied to the foreground of the `ShadingUniversal` object. This color is applied to the dots and lines in the shading pattern. You can provide the value in the '#RRGGBB' format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        foregroundPatternColor: string;
        /**
         * Specifies the color that's applied to the foreground of the `ShadingUniversal` object. This color is applied to the dots and lines in the shading pattern.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        foregroundPatternColorIndex: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
        /**
         * Specifies the shading texture of the object. To learn more about how to apply backgrounds like textures, see {@link https://support.microsoft.com/office/db481e61-7af6-4063-bbcd-b276054a5515 | Add, change, or delete the background color in Word}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        texture: Word.ShadingTextureType | "DarkDiagonalDown" | "DarkDiagonalUp" | "DarkGrid" | "DarkHorizontal" | "DarkTrellis" | "DarkVertical" | "LightDiagonalDown" | "LightDiagonalUp" | "LightGrid" | "LightHorizontal" | "LightTrellis" | "LightVertical" | "None" | "Percent10" | "Percent12Pt5" | "Percent15" | "Percent20" | "Percent25" | "Percent30" | "Percent35" | "Percent37Pt5" | "Percent40" | "Percent45" | "Percent5" | "Percent50" | "Percent55" | "Percent60" | "Percent62Pt5" | "Percent65" | "Percent70" | "Percent75" | "Percent80" | "Percent85" | "Percent87Pt5" | "Percent90" | "Percent95" | "Solid";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ShadingUniversalUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ShadingUniversal): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ShadingUniversalLoadOptions): Word.ShadingUniversal;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ShadingUniversal;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ShadingUniversal;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ShadingUniversal;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ShadingUniversal;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ShadingUniversal` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ShadingUniversalData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ShadingUniversalData;
    }
    /**
     * Represents a table in a Word document.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class Table extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns the `TableColumnCollection` object that represents the columns in the table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly columns: Word.TableColumnCollection;
        /**
         * Gets the collection of endnotes in the table.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly endnotes: Word.NoteItemCollection;
        /**
         * Gets the collection of field objects in the table.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly fields: Word.FieldCollection;
        /**
         * Gets the font. Use this to get and set font name, size, color, and other properties.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly font: Word.Font;
        /**
         * Gets the collection of footnotes in the table.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly footnotes: Word.NoteItemCollection;
        /**
         * Gets the parent body of the table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentBody: Word.Body;
        /**
         * Gets the content control that contains the table. Throws an `ItemNotFound` error if there isn't a parent content control.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentContentControl: Word.ContentControl;
        /**
         * Gets the content control that contains the table. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentContentControlOrNullObject: Word.ContentControl;
        /**
         * Gets the table that contains this table. Throws an `ItemNotFound` error if it isn't contained in a table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTable: Word.Table;
        /**
         * Gets the table cell that contains this table. Throws an `ItemNotFound` error if it isn't contained in a table cell.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableCell: Word.TableCell;
        /**
         * Gets the table cell that contains this table. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableCellOrNullObject: Word.TableCell;
        /**
         * Gets the table that contains this table. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTableOrNullObject: Word.Table;
        /**
         * Gets all of the table rows.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly rows: Word.TableRowCollection;
        /**
         * Returns the `ShadingUniversal` object that represents the shading of the table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly shading: Word.ShadingUniversal;
        /**
         * Gets the child tables nested one level deeper.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly tables: Word.TableCollection;
        /**
         * Specifies the alignment of the table against the page column. The value can be 'Left', 'Centered', or 'Right'.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
        /**
         * Specifies the description of the table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        description: string;
        /**
         * Specifies the number of header rows.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        headerRowCount: number;
        /**
         * Specifies the horizontal alignment of every cell in the table. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        horizontalAlignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
        /**
         * Indicates whether all of the table rows are uniform.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly isUniform: boolean;
        /**
         * Gets the nesting level of the table. Top-level tables have level 1.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly nestingLevel: number;
        /**
         * Gets the number of rows in the table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly rowCount: number;
        /**
         * Specifies the shading color. Color is specified in "#RRGGBB" format or by using the color name.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        shadingColor: string;
        /**
         * Specifies the style name for the table. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        style: string;
        /**
         * Specifies whether the table has banded columns.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        styleBandedColumns: boolean;
        /**
         * Specifies whether the table has banded rows.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        styleBandedRows: boolean;
        /**
         * Specifies the built-in style name for the table. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        styleBuiltIn: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
        /**
         * Specifies whether the table has a first column with a special style.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        styleFirstColumn: boolean;
        /**
         * Specifies whether the table has a last column with a special style.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        styleLastColumn: boolean;
        /**
         * Specifies whether the table has a total (last) row with a special style.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        styleTotalRow: boolean;
        /**
         * Specifies the title of the table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        title: string;
        /**
         * Specifies the text values in the table, as a 2D JavaScript array.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        values: string[][];
        /**
         * Specifies the vertical alignment of every cell in the table. The value can be 'Top', 'Center', or 'Bottom'.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        verticalAlignment: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom";
        /**
         * Specifies the width of the table in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        width: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Table): void;
        /**
         * Adds columns to the start or end of the table, using the first or last existing column as a template. This is applicable to uniform tables. The string values, if specified, are set in the newly inserted rows.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param insertLocation - Required. It must be 'Start' or 'End', corresponding to the appropriate side of the table.
         * @param columnCount - Required. Number of columns to add.
         * @param values - Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
         */
        addColumns(insertLocation: Word.InsertLocation.start | Word.InsertLocation.end | "Start" | "End", columnCount: number, values?: string[][]): void;
        /**
         * Adds rows to the start or end of the table, using the first or last existing row as a template. The string values, if specified, are set in the newly inserted rows.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param insertLocation - Required. It must be 'Start' or 'End'.
         * @param rowCount - Required. Number of rows to add.
         * @param values - Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
         */
        addRows(insertLocation: Word.InsertLocation.start | Word.InsertLocation.end | "Start" | "End", rowCount: number, values?: string[][]): Word.TableRowCollection;
        /**
         * Applies the specified style but maintains any formatting that a user directly applies.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param styleName - The name of the style to apply.
         */
        applyStyleDirectFormatting(styleName: string): void;
        /**
         * Determines how Microsoft Word resizes a table when the AutoFit feature is used.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param behavior - How Word resizes the specified table with the AutoFit feature is used.
         */
        autoFitBehavior(behavior: Word.AutoFitBehavior): void;
        /**
         * Determines how Microsoft Word resizes a table when the AutoFit feature is used.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param behavior - How Word resizes the specified table with the AutoFit feature is used.
         */
        autoFitBehavior(behavior: "FixedSize" | "Content" | "Window"): void;
        /**
         * Autofits the table columns to the width of the window.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        autoFitWindow(): void;
        /**
         * Applies a predefined look to a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. An object that specifies the options for applying the table format.
         */
        autoFormat(options?: Word.TableAutoFormatOptions): void;
        /**
         * Clears the contents of the table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        clear(): void;
        /**
         * Converts a table to text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - An object that specifies the options for converting the table to text.
         * @returns A `Range` object that represents the converted text.
         */
        convertToText(options?: Word.TableConvertToTextOptions): Word.Range;
        /**
         * Deletes the entire table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        delete(): void;
        /**
         * Deletes specific columns. This is applicable to uniform tables.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param columnIndex - Required. The first column to delete.
         * @param columnCount - Optional. The number of columns to delete. Default 1.
         */
        deleteColumns(columnIndex: number, columnCount?: number): void;
        /**
         * Deletes specific rows.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rowIndex - Required. The first row to delete.
         * @param rowCount - Optional. The number of rows to delete. Default 1.
         */
        deleteRows(rowIndex: number, rowCount?: number): void;
        /**
         * Distributes the column widths evenly. This is applicable to uniform tables.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        distributeColumns(): void;
        /**
         * Gets the border style for the specified border.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param borderLocation - Required. The border location.
         */
        getBorder(borderLocation: Word.BorderLocation): Word.TableBorder;
        /**
         * Gets the border style for the specified border.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param borderLocation - Required. The border location.
         */
        getBorder(borderLocation: "Top" | "Left" | "Bottom" | "Right" | "InsideHorizontal" | "InsideVertical" | "Inside" | "Outside" | "All"): Word.TableBorder;
        /**
         * Gets the table cell at a specified row and column. Throws an `ItemNotFound` error if the specified table cell doesn't exist.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rowIndex - Required. The index of the row.
         * @param cellIndex - Required. The index of the cell in the row.
         */
        getCell(rowIndex: number, cellIndex: number): Word.TableCell;
        /**
         * Gets the table cell at a specified row and column. If the specified table cell doesn't exist, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rowIndex - Required. The index of the row.
         * @param cellIndex - Required. The index of the cell in the row.
         */
        getCellOrNullObject(rowIndex: number, cellIndex: number): Word.TableCell;
        /**
         * Gets cell padding in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param cellPaddingLocation - Required. The cell padding location must be 'Top', 'Left', 'Bottom', or 'Right'.
         */
        getCellPadding(cellPaddingLocation: Word.CellPaddingLocation): OfficeExtension.ClientResult<number>;
        /**
         * Gets cell padding in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param cellPaddingLocation - Required. The cell padding location must be 'Top', 'Left', 'Bottom', or 'Right'.
         */
        getCellPadding(cellPaddingLocation: "Top" | "Left" | "Bottom" | "Right"): OfficeExtension.ClientResult<number>;
        /**
         * Gets the next table. Throws an `ItemNotFound` error if this table is the last one.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getNext(): Word.Table;
        /**
         * Gets the next table. If this table is the last one, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getNextOrNullObject(): Word.Table;
        /**
         * Gets the paragraph after the table. Throws an `ItemNotFound` error if there isn't a paragraph after the table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getParagraphAfter(): Word.Paragraph;
        /**
         * Gets the paragraph after the table. If there isn't a paragraph after the table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getParagraphAfterOrNullObject(): Word.Paragraph;
        /**
         * Gets the paragraph before the table. Throws an `ItemNotFound` error if there isn't a paragraph before the table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getParagraphBefore(): Word.Paragraph;
        /**
         * Gets the paragraph before the table. If there isn't a paragraph before the table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getParagraphBeforeOrNullObject(): Word.Paragraph;
        /**
         * Gets the range that contains this table, or the range at the start or end of the table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rangeLocation - Optional. The range location must be 'Whole', 'Start', 'End', or 'After'.
         */
        getRange(rangeLocation?: Word.RangeLocation.whole | Word.RangeLocation.start | Word.RangeLocation.end | Word.RangeLocation.after | "Whole" | "Start" | "End" | "After"): Word.Range;
        /**
         * Inserts a content control on the table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        insertContentControl(): Word.ContentControl;
        /**
         * Inserts a paragraph at the specified location.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param paragraphText - Required. The paragraph text to be inserted.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         */
        insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After"): Word.Paragraph;
        /**
         * Inserts a table with the specified number of rows and columns.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param rowCount - Required. The number of rows in the table.
         * @param columnCount - Required. The number of columns in the table.
         * @param insertLocation - Required. The value must be 'Before' or 'After'.
         * @param values - Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
         */
        insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After", values?: string[][]): Word.Table;
        /**
         * Merges the cells bounded inclusively by a first and last cell.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param topRow - Required. The row of the first cell
         * @param firstCell - Required. The index of the first cell in its row
         * @param bottomRow - Required. The row of the last cell
         * @param lastCell - Required. The index of the last cell in its row
         */
        mergeCells(topRow: number, firstCell: number, bottomRow: number, lastCell: number): Word.TableCell;
        /**
         * Updates the table with the characteristics of the predefined table format set when the `autoFormat` method was called. The default predefined format is {@link Word.TableFormatType | TableFormatType.none}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        reapplyAutoFormat(): void;
        /**
         * Performs a search with the specified SearchOptions on the scope of the table object. The search results are a collection of range objects.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param searchText - Required. The search text.
         * @param searchOptions - Optional. Options for the search.
         */
        search(searchText: string, searchOptions?: Word.SearchOptions | {
            ignorePunct?: boolean;
            ignoreSpace?: boolean;
            matchCase?: boolean;
            matchPrefix?: boolean;
            matchSuffix?: boolean;
            matchWholeWord?: boolean;
            matchWildcards?: boolean;
        }): Word.RangeCollection;
        /**
         * Selects the table, or the position at the start or end of the table, and navigates the Word UI to it.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: Word.SelectionMode): void;
        /**
         * Selects the table, or the position at the start or end of the table, and navigates the Word UI to it.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: "Select" | "Start" | "End"): void;
        /**
         * Sets cell padding in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param cellPaddingLocation - Required. The cell padding location must be 'Top', 'Left', 'Bottom', or 'Right'.
         * @param cellPadding - Required. The cell padding.
         */
        setCellPadding(cellPaddingLocation: Word.CellPaddingLocation, cellPadding: number): void;
        /**
         * Sets cell padding in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param cellPaddingLocation - Required. The cell padding location must be 'Top', 'Left', 'Bottom', or 'Right'.
         * @param cellPadding - Required. The cell padding.
         */
        setCellPadding(cellPaddingLocation: "Top" | "Left" | "Bottom" | "Right", cellPadding: number): void;
        /**
         * Sorts the specified table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - An object that specifies the options for sorting the table.
         */
        sort(options?: Word.TableSortOptions): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableLoadOptions): Word.Table;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Table;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Table;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Table;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Table;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Table` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TableData;
    }
    /**
     * Represents the TableStyle object.
     *
     * @remarks
     * [Api set: WordApi 1.6]
     */
    export class TableStyle extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BorderUniversalCollection` that represents all the borders for the table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly borders: Word.BorderUniversalCollection;
        /**
         * Returns a `ShadingUniversal` object that refers to the shading formatting for the table style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly shading: Word.Shading;
        /**
         * Specifies the table's alignment against the page margin.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
        /**
         * Specifies whether lines in tables formatted with a specified style break across pages.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        allowBreakAcrossPage: boolean;
        /**
         * Specifies the amount of space to add between the contents and the bottom borders of the cells.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        bottomCellMargin: number;
        /**
         * Specifies the spacing (in points) between the cells in a table style.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        cellSpacing: number;
        /**
         * Specifies the number of columns in the banding when a style specifies odd- or even-column banding.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        columnStripe: number;
        /**
         * Specifies whether Microsoft Word allows to break the specified table across pages.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isBreakAcrossPagesAllowed: boolean;
        /**
         * Specifies the amount of space to add between the contents and the left borders of the cells.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        leftCellMargin: number;
        /**
         * Specifies the left indent value (in points) for the rows in the table style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        leftIndent: number;
        /**
         * Specifies the amount of space to add between the contents and the right borders of the cells.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        rightCellMargin: number;
        /**
         * Specifies the number of rows to include in the banding when the style specifies odd- or even-row banding.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rowStripe: number;
        /**
         * Specifies the direction in which Microsoft Word orders cells in the table style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tableDirection: Word.TableDirection | "RightToLeft" | "LeftToRight";
        /**
         * Specifies the amount of space to add between the contents and the top borders of the cells.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        topCellMargin: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.TableStyleUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.TableStyle): void;
        /**
         * Returns a `ConditionalStyle` object that represents special style formatting for a portion of a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param conditionCode - The area of the table to which to apply the formatting.
         */
        condition(conditionCode: Word.ConditionCode): Word.ConditionalStyle;
        /**
         * Returns a `ConditionalStyle` object that represents special style formatting for a portion of a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param conditionCode - The area of the table to which to apply the formatting.
         */
        condition(conditionCode: "FirstRow" | "LastRow" | "OddRowBanding" | "EvenRowBanding" | "FirstColumn" | "LastColumn" | "OddColumnBanding" | "EvenColumnBanding" | "TopRightCell" | "TopLeftCell" | "BottomRightCell" | "BottomLeftCell"): Word.ConditionalStyle;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableStyleLoadOptions): Word.TableStyle;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableStyle;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.TableStyle;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableStyle;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableStyle;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableStyle` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableStyleData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TableStyleData;
    }
    /**
     * Represents a tab stop in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TabStop extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the next tab stop in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly next: Word.TabStop;
        /**
         * Gets the previous tab stop in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly previous: Word.TabStop;
        /**
         * Gets a `TabAlignment` value that represents the alignment for the tab stop.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly alignment: Word.TabAlignment | "Left" | "Center" | "Right" | "Decimal" | "Bar" | "List";
        /**
         * Gets whether this tab stop is a custom tab stop.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly customTab: boolean;
        /**
         * Gets a `TabLeader` value that represents the leader for this `TabStop` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly leader: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
        /**
         * Gets the position of the tab stop relative to the left margin.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly position: number;
        /**
         * Removes this custom tab stop.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        clear(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TabStopLoadOptions): Word.TabStop;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TabStop;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.TabStop;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TabStop;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TabStop;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TabStop` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TabStopData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TabStopData;
    }
    /**
     * Represents a collection of {@link Word.TabStop | tab stops} in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TabStopCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.TabStop[];
        /**
         * Returns a `TabStop` object that represents a custom tab stop added to the paragraph.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param position - The position of the tab stop.
         * @param options - Optional. The options to further configure the new tab stop.
         */
        add(position: number, options?: Word.TabStopAddOptions): Word.TabStop;
        /**
         * Returns the next `TabStop` object to the right of the specified position.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param Position - The position to check.
         */
        after(Position: number): Word.TabStop;
        /**
         * Returns the next `TabStop` object to the left of the specified position.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param Position - The position to check.
         */
        before(Position: number): Word.TabStop;
        /**
         * Clears all the custom tab stops from the paragraph.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        clearAll(): void;
        /**
         * Gets a `TabStop` object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - A number that identifies the index location of a `TabStop` object.
         */
        getItem(index: number): Word.TabStop;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TabStopCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.TabStopCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TabStopCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.TabStopCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TabStopCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TabStopCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TabStopCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TabStopCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.TabStopCollectionData;
    }
    /**
     * Specifies the options for adding to a {@link Word.TabStopCollection} object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface TabStopAddOptions {
        /**
         * If provided, specifies the alignment of the tab stop. The default value is `left`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        alignment?: Word.TabAlignment | "Left" | "Center" | "Right" | "Decimal" | "Bar" | "List";
        /**
         * If provided, specifies the leader character for the tab stop. The default value is `spaces`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        leader?: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
    }
    /**
     * Contains the collection of the document's Table objects.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class TableCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Table[];
        /**
         * Gets the first table in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirst(): Word.Table;
        /**
         * Gets the first table in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirstOrNullObject(): Word.Table;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.TableCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.TableCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.TableCollectionData;
    }
    /**
     * Represents a table column in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TableColumn extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BorderUniversalCollection` object that represents all the borders for the table column.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly borders: Word.BorderUniversalCollection;
        /**
         * Returns a `ShadingUniversal` object that refers to the shading formatting for the column.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly shading: Word.ShadingUniversal;
        /**
         * Returns the position of this column in a collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly columnIndex: number;
        /**
         * Returns `true` if the column or row is the first one in the table; `false` otherwise.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isFirst: boolean;
        /**
         * Returns `true` if the column or row is the last one in the table; `false` otherwise.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isLast: boolean;
        /**
         * Returns the nesting level of the column.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly nestingLevel: number;
        /**
         * Specifies the preferred width (in points or as a percentage of the window width) for the column.
                    The unit of measurement can be specified by the `preferredWidthType` property.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        preferredWidth: number;
        /**
         * Specifies the preferred unit of measurement to use for the width of the table column.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        preferredWidthType: Word.PreferredWidthType | "Auto" | "Percent" | "Points";
        /**
         * Specifies the width of the column, in points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        width: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.TableColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.TableColumn): void;
        /**
         * Changes the width of the table column to accommodate the width of the text without changing the way text wraps in the cells.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        autoFit(): void;
        /**
         * Deletes the column.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Selects the table column.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        select(): void;
        /**
         * Sets the width of the column in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param columnWidth - The width to set.
         * @param rulerStyle - The ruler style to apply.
         */
        setWidth(columnWidth: number, rulerStyle: Word.RulerStyle): void;
        /**
         * Sets the width of the column in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param columnWidth - The width to set.
         * @param rulerStyle - The ruler style to apply.
         */
        setWidth(columnWidth: number, rulerStyle: "None" | "Proportional" | "FirstColumn" | "SameWidth"): void;
        /**
         * Sorts the table column.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sort(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableColumnLoadOptions): Word.TableColumn;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableColumn;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.TableColumn;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableColumn;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableColumn;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableColumn` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableColumnData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TableColumnData;
    }
    /**
     * Represents a collection of {@link Word.TableColumn} objects in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TableColumnCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.TableColumn[];
        /**
         * Returns a `TableColumn` object that represents a column added to a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param beforeColumn - Optional. The column before which the new column is added.
         * @returns A new `TableColumn` object.
         */
        add(beforeColumn?: Word.TableColumn): Word.TableColumn;
        /**
         * Changes the width of a table column to accommodate the width of the text without changing the way text wraps in the cells.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        autoFit(): void;
        /**
         * Deletes the specified columns.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Adjusts the width of the specified columns so that they are equal.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        distributeWidth(): void;
        /**
         * Selects the specified table columns.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        select(): void;
        /**
         * Sets the width of columns in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param columnWidth - The width to set.
         * @param rulerStyle - The ruler style to apply.
         */
        setWidth(columnWidth: number, rulerStyle: Word.RulerStyle): void;
        /**
         * Sets the width of columns in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param columnWidth - The width to set.
         * @param rulerStyle - The ruler style to apply.
         */
        setWidth(columnWidth: number, rulerStyle: "None" | "Proportional" | "FirstColumn" | "SameWidth"): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableColumnCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.TableColumnCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableColumnCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.TableColumnCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableColumnCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableColumnCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableColumnCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableColumnCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.TableColumnCollectionData;
    }
    /**
     * Represents a table of authorities in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TableOfAuthorities extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the portion of a document that is this table of authorities.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Specifies the name of the bookmark from which to collect table of authorities entries.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bookmark: string;
        /**
         * Specifies the category of entries to be included in the table of authorities.
                    Values 0 through 16 correspond to the items listed in the Category box of the Table of Authorities dialog. To learn how to access this through the Word UI, see {@link https://support.microsoft.com/office/ddd126ae-52bc-4299-9558-06dd0e4fe8c0 | Create a table of authorities}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        category: number;
        /**
         * Specifies a separator of up to five characters. This appears between the table of authorities entry and its page number.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        entrySeparator: string;
        /**
         * Specifies whether the category name for a group of entries appears in the table of authorities.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isCategoryHeaderIncluded: boolean;
        /**
         * Specifies whether the entries in the table of authorities are displayed with their formatting in the table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isEntryFormattingKept: boolean;
        /**
         * Specifies whether references to the same authority that are repeated on five or more pages are replaced with "Passim".
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isPassimUsed: boolean;
        /**
         * Specifies a separator of up to five characters. This appears between individual page references in the table of authorities.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pageNumberSeparator: string;
        /**
         * Specifies a separator of up to five characters. This appears between ranges of pages in the table of authorities.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pageRangeSeparator: string;
        /**
         * Specifies the {@link https://support.microsoft.com/office/062a387b-dfc9-4ef8-8235-29ee113d59be | Sequence (SEQ) field} identifier for the table of authorities.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sequenceName: string;
        /**
         * Specifies a separator of up to five characters. This appears between the sequence number and the page number in the table of authorities.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sequenceSeparator: string;
        /**
         * Specifies the leader character that appears between entries and their associated page numbers in the table of authorities.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tabLeader: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.TableOfAuthoritiesUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.TableOfAuthorities): void;
        /**
         * Deletes this table of authorities.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableOfAuthoritiesLoadOptions): Word.TableOfAuthorities;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableOfAuthorities;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.TableOfAuthorities;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableOfAuthorities;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableOfAuthorities;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableOfAuthorities` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableOfAuthoritiesData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TableOfAuthoritiesData;
    }
    /**
     * Represents a collection of {@link Word.TableOfAuthorities} objects in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TableOfAuthoritiesCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.TableOfAuthorities[];
        /**
         * Adds a table of authorities to the document at the specified range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range where the table of authorities will appear. The table of authorities replaces the range if the range isn't collapsed.
         * @param options - Optional. The options to configure the table of authorities.
         */
        add(range: Word.Range, options?: Word.TableOfAuthoritiesAddOptions): Word.TableOfAuthorities;
        /**
         * Inserts a {@link https://support.microsoft.com/office/2a90ad2b-4169-475d-8a09-e62521d4159c | Table of Authorities Entry (TA) field} after all instances of the specified citation text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param shortCitation - The citation text to mark.
         * @param options - Optional. The options for marking the citation.
         */
        markAllCitations(shortCitation: string, options?: Word.TableOfAuthoritiesMarkCitationOptions): void;
        /**
         * Inserts a {@link https://support.microsoft.com/office/2a90ad2b-4169-475d-8a09-e62521d4159c | Table of Authorities Entry (TA) field} at the specified range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range where the citation will be inserted.
         * @param shortCitation - The short citation text.
         * @param options - Optional. The options for marking the citation.
         */
        markCitation(range: Word.Range, shortCitation: string, options?: Word.TableOfAuthoritiesMarkCitationOptions): Word.Field;
        /**
         * Finds and selects the next instance of the specified citation text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param shortCitation - The citation text to search for.
         */
        selectNextCitation(shortCitation: string): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableOfAuthoritiesCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.TableOfAuthoritiesCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableOfAuthoritiesCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.TableOfAuthoritiesCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableOfAuthoritiesCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableOfAuthoritiesCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableOfAuthoritiesCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableOfAuthoritiesCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.TableOfAuthoritiesCollectionData;
    }
    /**
     * Specifies the options for adding to a {@link Word.TableOfAuthoritiesCollection} object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface TableOfAuthoritiesAddOptions {
        /**
         * If provided, specifies the string name of the bookmark from which to collect entries for a table of authorities.
                    When specified, the entries are collected only from the portion of the document marked by the bookmark.
                    Corresponds to the `\b` switch for a {@link https://support.microsoft.com/office/c754a963-90c1-4d32-b2db-1ed90b9dd958 | Table of Authorities (TOA) field}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bookmark?: string;
        /**
         * If provided, specifies the category of entries to include in a table of authorities.
                    Corresponds to the `\c` switch for a {@link https://support.microsoft.com/office/c754a963-90c1-4d32-b2db-1ed90b9dd958 | Table of Authorities (TOA) field}.
                    Values 0 through 16 correspond to the items listed in the Category box of the Table of Authorities dialog. To learn how to access this through the Word UI, see {@link https://support.microsoft.com/office/ddd126ae-52bc-4299-9558-06dd0e4fe8c0 | Create a table of authorities}.
                    The default value is `1`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        category?: number;
        /**
         * If provided, specifies a separator of up to five characters. This appears between the table of authorities entry and its page number.
                    Corresponds to the `\e` switch for a {@link https://support.microsoft.com/office/c754a963-90c1-4d32-b2db-1ed90b9dd958 | Table of Authorities (TOA) field}.
                    If omitted, no separator is used.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        entrySeparator?: string;
        /**
         * If provided, specifies whether the category name for each group of entries appears in a table of authorities (e.g., "Cases").
                    Corresponds to the `\h` switch for a {@link https://support.microsoft.com/office/c754a963-90c1-4d32-b2db-1ed90b9dd958 | Table of Authorities (TOA) field}.
                    The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        includeCategoryHeader?: boolean;
        /**
         * If provided, specifies whether the entries in a table of authorities are displayed with their formatting in the table.
                    Corresponds to the `\f` switch for a {@link https://support.microsoft.com/office/c754a963-90c1-4d32-b2db-1ed90b9dd958 | Table of Authorities (TOA) field}.
                    The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        keepEntryFormatting?: boolean;
        /**
         * If provided, specifies a separator of up to five characters. This appears between individual page references in a table of authorities.
                    Corresponds to the `\l` switch for a {@link https://support.microsoft.com/office/c754a963-90c1-4d32-b2db-1ed90b9dd958 | Table of Authorities (TOA) field}.
                    If omitted, a comma and a space (", ") are used.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pageNumberSeparator?: string;
        /**
         * If provided, specifies a separator of up to five characters. This appears between ranges of pages in a table of authorities.
                    Corresponds to the `\g` switch for a {@link https://support.microsoft.com/office/c754a963-90c1-4d32-b2db-1ed90b9dd958 | Table of Authorities (TOA) field}.
                    If omitted, an en dash ("–") is used.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pageRangeSeparator?: string;
        /**
         * If provided, specifies the string that identifies the Sequence (SEQ) field identifier for a table of authorities.
                    Corresponds to the `\s` switch for a {@link https://support.microsoft.com/office/c754a963-90c1-4d32-b2db-1ed90b9dd958 | Table of Authorities (TOA) field}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sequenceName?: string;
        /**
         * If provided, specifies a separator of up to five characters. This appears between the sequence number and the page number in a table of authorities.
                    Corresponds to the `\d` switch for a {@link https://support.microsoft.com/office/c754a963-90c1-4d32-b2db-1ed90b9dd958 | Table of Authorities (TOA) field}.
                    If omitted, a hyphen ("-") is used.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sequenceSeparator?: string;
        /**
         * If provided, specifies whether references to the same authority that are repeated on five or more pages are replaced with "Passim".
                    Corresponds to the `\p` switch for a {@link https://support.microsoft.com/office/c754a963-90c1-4d32-b2db-1ed90b9dd958 | Table of Authorities (TOA) field}.
                    The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        usePassim?: boolean;
    }
    /**
     * Specifies the options for inserting a {@link https://support.microsoft.com/office/2a90ad2b-4169-475d-8a09-e62521d4159c | Table of Authorities Entry (TA) field}.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface TableOfAuthoritiesMarkCitationOptions {
        /**
         * If provided, specifies the category number to be associated with the entry.
                    Values 1 through 16 correspond to the items listed in the Category dropdown list of the Mark Citation dialog.
                    The value `1` corresponds to the first category listed, `2` corresponds to the second category, and so on.
                    To learn how to access this through the Word UI, see {@link https://support.microsoft.com/office/ddd126ae-52bc-4299-9558-06dd0e4fe8c0 | Create a table of authorities}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        category?: number;
        /**
         * If provided, specifies the long citation for the entry as it will appear in a table of authorities.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        longCitation?: string;
        /**
         * If provided, specifies the name of the AutoText entry that contains the text of the long citation as it will appear in a table of authorities.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        longCitationAutoText?: string;
    }
    /**
     * Represents a category used in a table of authorities.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TableOfAuthoritiesCategory extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the name of this table of authorities category.
                    Changing the name of the category doesn't change the index in the collection. The value for {@link Word.TableOfAuthorities | TableOfAuthorities.category} will remain the same.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly name: string;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableOfAuthoritiesCategoryLoadOptions): Word.TableOfAuthoritiesCategory;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableOfAuthoritiesCategory;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.TableOfAuthoritiesCategory;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableOfAuthoritiesCategory;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableOfAuthoritiesCategory;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableOfAuthoritiesCategory` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableOfAuthoritiesCategoryData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TableOfAuthoritiesCategoryData;
    }
    /**
     * Represents a collection of {@link Word.TableOfAuthoritiesCategory} objects in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TableOfAuthoritiesCategoryCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.TableOfAuthoritiesCategory[];
        /**
         * Returns the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Returns a `TableOfAuthoritiesCategory` object that represents the specified item in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The index of the item to retrieve.
         */
        getItemAt(index: number): Word.TableOfAuthoritiesCategory;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableOfAuthoritiesCategoryCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.TableOfAuthoritiesCategoryCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableOfAuthoritiesCategoryCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.TableOfAuthoritiesCategoryCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableOfAuthoritiesCategoryCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableOfAuthoritiesCategoryCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableOfAuthoritiesCategoryCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableOfAuthoritiesCategoryCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.TableOfAuthoritiesCategoryCollectionData;
    }
    /**
     * Represents a table of contents in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TableOfContents extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the additional styles used for the table of contents. The default "Heading 1" - "Heading 9" styles aren't included in this collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly additionalHeadingStyles: Word.HeadingStyleCollection;
        /**
         * Gets the portion of a document that is this table of contents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Specifies whether built-in heading styles are used for the table of contents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areBuiltInHeadingStylesUsed: boolean;
        /**
         * Specifies whether {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) fields} are included in the table of contents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areFieldsUsed: boolean;
        /**
         * Specifies whether entries in the table of contents should be formatted as hyperlinks when publishing to the web.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areHyperlinksUsedOnWeb: boolean;
        /**
         * Specifies whether the page numbers in the table of contents should be hidden when publishing to the web.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arePageNumbersHiddenOnWeb: boolean;
        /**
         * Specifies whether page numbers are included in the table of contents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arePageNumbersIncluded: boolean;
        /**
         * Specifies whether page numbers are aligned with the right margin in the table of contents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arePageNumbersRightAligned: boolean;
        /**
         * Specifies the ending heading level for the table of contents. Must be a value from 1 to 9 and greater than `upperHeadingLevel`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lowerHeadingLevel: number;
        /**
         * Specifies the character between entries and their page numbers in the table of contents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tabLeader: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
        /**
         * Specifies a one-letter identifier from {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | TC fields} that's used for the table of contents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tableId: string;
        /**
         * Specifies the starting heading level for the table of contents. Must be a value from 1 to 9 and smaller than `lowerHeadingLevel`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        upperHeadingLevel: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.TableOfContentsUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.TableOfContents): void;
        /**
         * Deletes this table of contents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Updates the entire table of contents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
        /**
         * Updates only the page numbers for items in this table of contents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        updatePageNumbers(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableOfContentsLoadOptions): Word.TableOfContents;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableOfContents;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.TableOfContents;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableOfContents;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableOfContents;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableOfContents` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableOfContentsData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TableOfContentsData;
    }
    /**
     * Represents a collection of {@link Word.TableOfContents} objects in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TableOfContentsCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.TableOfContents[];
        /**
         * Adds a table of contents to the document at the specified range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range where the table of contents will be added. The table of contents replaces the range if the range isn't collapsed.
         * @param options - Optional. The options for configuring the table of contents.
         */
        add(range: Word.Range, options?: Word.TableOfContentsAddOptions): Word.TableOfContents;
        /**
         * Inserts a {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) field} after the specified range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range where the entry will be inserted.
         * @param options - Optional. The options for marking the table of contents entry.
         */
        markTocEntry(range: Word.Range, options?: Word.TableOfContentsMarkEntryOptions): Word.Field;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableOfContentsCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.TableOfContentsCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableOfContentsCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.TableOfContentsCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableOfContentsCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableOfContentsCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableOfContentsCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableOfContentsCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.TableOfContentsCollectionData;
    }
    /**
     * Specifies the options for adding to a {@link Word.TableOfContentsCollection} object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface TableOfContentsAddOptions {
        /**
         * If provided, specifies the string names of additional styles to use for the table of contents.
                    Use {@link Word.HeadingStyleCollection | HeadingStyleCollection.add} to create new heading styles.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        addedStyles?: string;
        /**
         * If provided, specifies whether the page numbers in a table of contents should be hidden when publishing to the web.
                    The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hidePageNumbersOnWeb?: boolean;
        /**
         * If provided, specifies whether to include page numbers in a table of contents.
                    The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        includePageNumbers?: boolean;
        /**
         * If provided, specifies the ending heading level for a table of contents and must be a value from 1 to 9. Must be greater than `upperHeadingLevel`.
                    Corresponds to the ending value used with the `\o` switch for a {@link https://support.microsoft.com/office/1f538bc4-60e6-4854-9f64-67754d78d05c | Table of Contents (TOC) field}.
                    The default value is `9`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lowerHeadingLevel?: number;
        /**
         * If provided, specifies whether page numbers in a table of contents are aligned with the right margin.
                    The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rightAlignPageNumbers?: boolean;
        /**
         * If provided, specifies a one-letter identifier from {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | TC fields} that's used for a table of contents.
                    Corresponds to the `\f` switch for a {@link https://support.microsoft.com/office/1f538bc4-60e6-4854-9f64-67754d78d05c | Table of Contents (TOC) field}. For example, "T" indicates a table of contents includes TC fields that use the table identifier T.
                    If this argument is omitted, TC fields aren't used.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tableId?: string;
        /**
         * If provided, specifies the starting heading level for a table of contents and must be a value from 1 to 9. Should be smaller than `lowerHeadingLevel`.
                    Corresponds to the starting value used with the `\o` switch for a {@link https://support.microsoft.com/office/1f538bc4-60e6-4854-9f64-67754d78d05c | Table of Contents (TOC) field}.
                    The default value is `1`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        upperHeadingLevel?: number;
        /**
         * If provided, specifies whether to use built-in heading styles to create a table of contents.
                    The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        useBuiltInHeadingStyles?: boolean;
        /**
         * If provided, specifies whether {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) fields} are used to create a table of contents.
                    Use the {@link Word.TableOfContentsCollection | TableOfContentsCollection.markTocEntry} method to mark entries to be included in a table of contents.
                    The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        useFields?: boolean;
        /**
         * If provided, specifies whether entries in a table of contents should be formatted as hyperlinks when the document is published to the web.
                    The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        useHyperlinksOnWeb?: boolean;
        /**
         * If provided, specifies whether to use outline levels to create a table of contents.
                    The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        useOutlineLevels?: boolean;
    }
    /**
     * Specifies the options for inserting a {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) field}.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface TableOfContentsMarkEntryOptions {
        /**
         * If provided, specifies the text that appears in a table of contents or table of figures.
                    To indicate a subentry, include the main entry text and the subentry text, separated by a colon (":") (e.g., "Introduction:The Product").
                    When the `entryAutoText` property is set, this property is ignored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        entry?: string;
        /**
         * If provided, specifies the AutoText entry name that includes text for the table of figures, or table of contents.
                    When this property is used, the `entry` property is ignored.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        entryAutoText?: string;
        /**
         * If provided, specifies the level for the entry in a table of contents or table of figures and should be a value from 1 to 9.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        level?: number;
        /**
         * If provided, specifies a one-letter identifier for a table of contents or table of figures (e.g., "i" for an "illustration").
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tableId?: string;
    }
    /**
     * Represents a table of figures in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TableOfFigures extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the additional styles used for the table of figures. The default "Heading 1" - "Heading 9" styles aren't included in this collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly additionalHeadingStyles: Word.HeadingStyleCollection;
        /**
         * Gets the portion of a document that is this table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Specifies whether built-in heading styles are used for the table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areBuiltInHeadingStylesUsed: boolean;
        /**
         * Specifies whether {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) fields} are included in the table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areFieldsUsed: boolean;
        /**
         * Specifies whether entries in the table of figures should be formatted as hyperlinks when publishing to the web.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areHyperlinksUsedOnWeb: boolean;
        /**
         * Specifies whether the page numbers in the table of figures should be hidden when publishing to the web.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arePageNumbersHiddenOnWeb: boolean;
        /**
         * Specifies whether page numbers are included in the table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arePageNumbersIncluded: boolean;
        /**
         * Specifies whether page numbers are aligned with the right margin in the table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arePageNumbersRightAligned: boolean;
        /**
         * Specifies the label that identifies the items to be included in the table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        captionLabel: string;
        /**
         * Specifies whether the caption label and caption number are included in the table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isLabelIncluded: boolean;
        /**
         * Specifies the ending heading level for the table of figures. Must be a value from 1 to 9 and greater than `upperHeadingLevel`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lowerHeadingLevel: number;
        /**
         * Specifies the character between entries and their page numbers in the table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tabLeader: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
        /**
         * Specifies a one-letter identifier from {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | TC fields} that's used for the table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tableId: string;
        /**
         * Specifies the starting heading level for the table of figures. Must be a value from 1 to 9 and smaller than `lowerHeadingLevel`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        upperHeadingLevel: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.TableOfFiguresUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.TableOfFigures): void;
        /**
         * Deletes this table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Updates the entire table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
        /**
         * Updates only the page numbers for items in this table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        updatePageNumbers(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableOfFiguresLoadOptions): Word.TableOfFigures;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableOfFigures;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.TableOfFigures;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableOfFigures;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableOfFigures;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableOfFigures` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableOfFiguresData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TableOfFiguresData;
    }
    /**
     * Represents a collection of {@link Word.TableOfFigures} objects in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TableOfFiguresCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.TableOfFigures[];
        /**
         * Adds a table of figures to the document at the specified range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range where the table of figures will be added. The table of figures replaces the range if the range isn't collapsed.
         * @param options - Optional. The options for configuring the table of figures.
         */
        add(range: Word.Range, options?: Word.TableOfFiguresAddOptions): Word.TableOfFigures;
        /**
         * Inserts a {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) field} after the specified range for marking entries in a table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range where the TC field will be inserted.
         * @param options - Optional. The options for marking the entry.
         */
        markTocEntry(range: Word.Range, options?: Word.TableOfContentsMarkEntryOptions): Word.Field;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableOfFiguresCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.TableOfFiguresCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableOfFiguresCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.TableOfFiguresCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableOfFiguresCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableOfFiguresCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableOfFiguresCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableOfFiguresCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.TableOfFiguresCollectionData;
    }
    /**
     * Specifies the options for adding to a {@link Word.TableOfFiguresCollection} object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface TableOfFiguresAddOptions {
        /**
         * If provided, specifies the string names of additional styles to use for the table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        addedStyles?: string;
        /**
         * If provided, specifies the label that identifies the items to include in a table of figures.
         * Corresponds to the `\c` switch for a {@link https://support.microsoft.com/office/1f538bc4-60e6-4854-9f64-67754d78d05c | Table of Contents (TOC) field}.
         * The default value is "Figure".
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        captionLabel?: string;
        /**
         * If provided, specifies whether the page numbers in the table of figures should be hidden when publishing to the web.
         * The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hidePageNumbersOnWeb?: boolean;
        /**
         * If provided, specifies whether to include the caption label and caption number in a table of figures.
         * The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        includeLabel?: boolean;
        /**
         * If provided, specifies whether page numbers are included in a table of figures.
         * The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        includePageNumbers?: boolean;
        /**
         * If provided, specifies the ending heading level for a table of figures when `useBuiltInHeadingStyles` is set to `true`. Should be a value from 1 to 9 and greater than `upperHeadingLevel`.
         * Corresponds to the ending value used with the `\o` switch for a {@link https://support.microsoft.com/office/1f538bc4-60e6-4854-9f64-67754d78d05c | Table of Contents (TOC) field}.
         * The default value is `9`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lowerHeadingLevel?: number;
        /**
         * If provided, specifies whether to align page numbers with the right margin in a table of figures.
         * The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rightAlignPageNumbers?: boolean;
        /**
         * If provided, specifies a one-letter identifier from {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | TC fields} that's used for a table of figures.
         * Corresponds to the `\f` switch for a {@link https://support.microsoft.com/office/1f538bc4-60e6-4854-9f64-67754d78d05c | Table of Contents (TOC) field}. For example, "T" indicates a table of figures includes TC fields that use the table identifier T.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tableId?: string;
        /**
         * If provided, specifies the starting heading level for a table of figures when `useBuiltInHeadingStyles` is set to `true`. Should be a value from 1 to 9 and smaller than `lowerHeadingLevel`.
         * Corresponds to the starting value used with the `\o` switch for a {@link https://support.microsoft.com/office/1f538bc4-60e6-4854-9f64-67754d78d05c | Table of Contents (TOC) field}.
         * The default value is `1`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        upperHeadingLevel?: number;
        /**
         * If provided, specifies whether to use built-in heading styles to create a table of figures.
         * The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        useBuiltInHeadingStyles?: boolean;
        /**
         * If provided, specifies whether to use {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) fields} to create a table of figures.
         * Use the {@link Word.TableOfFiguresCollection | TableOfFiguresCollection.markTocEntry} method to mark entries to include in a table of figures.
         * The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        useFields?: boolean;
        /**
         * If provided, specifies whether entries in a table of figures should be formatted as hyperlinks when the document is published to the web.
         * The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        useHyperlinksOnWeb?: boolean;
    }
    /**
     * Represents a row in a Word document.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class TableRow extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets cells.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly cells: Word.TableCellCollection;
        /**
         * Gets the collection of endnotes in the table row.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly endnotes: Word.NoteItemCollection;
        /**
         * Gets the collection of field objects in the table row.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        readonly fields: Word.FieldCollection;
        /**
         * Gets the font. Use this to get and set font name, size, color, and other properties.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly font: Word.Font;
        /**
         * Gets the collection of footnotes in the table row.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        readonly footnotes: Word.NoteItemCollection;
        /**
         * Gets parent table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTable: Word.Table;
        /**
         * Returns the `Range` object that represents the table row.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Returns the `ShadingUniversal` object that represents the shading of the table row.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly shading: Word.ShadingUniversal;
        /**
         * Gets the number of cells in the row.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly cellCount: number;
        /**
         * Specifies the horizontal alignment of every cell in the row. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        horizontalAlignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
        /**
         * Checks whether the row is a header row. To set the number of header rows, use `headerRowCount` on the Table object.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly isHeader: boolean;
        /**
         * Specifies the preferred height of the row in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        preferredHeight: number;
        /**
         * Gets the index of the row in its parent table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly rowIndex: number;
        /**
         * Specifies the shading color. Color is specified in "#RRGGBB" format or by using the color name.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        shadingColor: string;
        /**
         * Specifies the text values in the row, as a 2D JavaScript array.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        values: string[][];
        /**
         * Specifies the vertical alignment of the cells in the row. The value can be 'Top', 'Center', or 'Bottom'.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        verticalAlignment: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.TableRowUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.TableRow): void;
        /**
         * Clears the contents of the row.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        clear(): void;
        /**
         * Converts the table row to text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. An object that specifies the options for converting the table row to text.
         */
        convertToText(options?: Word.TableConvertToTextOptions): Word.Range;
        /**
         * Deletes the entire row.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        delete(): void;
        /**
         * Gets the border style of the cells in the row.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param borderLocation - Required. The border location.
         */
        getBorder(borderLocation: Word.BorderLocation): Word.TableBorder;
        /**
         * Gets the border style of the cells in the row.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param borderLocation - Required. The border location.
         */
        getBorder(borderLocation: "Top" | "Left" | "Bottom" | "Right" | "InsideHorizontal" | "InsideVertical" | "Inside" | "Outside" | "All"): Word.TableBorder;
        /**
         * Gets cell padding in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param cellPaddingLocation - Required. The cell padding location must be 'Top', 'Left', 'Bottom', or 'Right'.
         */
        getCellPadding(cellPaddingLocation: Word.CellPaddingLocation): OfficeExtension.ClientResult<number>;
        /**
         * Gets cell padding in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param cellPaddingLocation - Required. The cell padding location must be 'Top', 'Left', 'Bottom', or 'Right'.
         */
        getCellPadding(cellPaddingLocation: "Top" | "Left" | "Bottom" | "Right"): OfficeExtension.ClientResult<number>;
        /**
         * Gets the next row. Throws an `ItemNotFound` error if this row is the last one.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getNext(): Word.TableRow;
        /**
         * Gets the next row. If this row is the last one, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getNextOrNullObject(): Word.TableRow;
        /**
         * Inserts a content control on the row.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        insertContentControl(): Word.ContentControl;
        /**
         * Inserts rows using this row as a template. If values are specified, inserts the values into the new rows.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param insertLocation - Required. Where the new rows should be inserted, relative to the current row. It must be 'Before' or 'After'.
         * @param rowCount - Required. Number of rows to add
         * @param values - Optional. Strings to insert in the new rows, specified as a 2D array. The number of cells in each row must not exceed the number of cells in the existing row.
         */
        insertRows(insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After", rowCount: number, values?: string[][]): Word.TableRowCollection;
        /**
         * Merges the row into one cell.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        merge(): Word.TableCell;
        /**
         * Performs a search with the specified SearchOptions on the scope of the row. The search results are a collection of range objects.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param searchText - Required. The search text.
         * @param searchOptions - Optional. Options for the search.
         */
        search(searchText: string, searchOptions?: Word.SearchOptions | {
            ignorePunct?: boolean;
            ignoreSpace?: boolean;
            matchCase?: boolean;
            matchPrefix?: boolean;
            matchSuffix?: boolean;
            matchWholeWord?: boolean;
            matchWildcards?: boolean;
        }): Word.RangeCollection;
        /**
         * Selects the row and navigates the Word UI to it.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: Word.SelectionMode): void;
        /**
         * Selects the row and navigates the Word UI to it.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param selectionMode - Optional. The selection mode must be 'Select', 'Start', or 'End'. 'Select' is the default.
         */
        select(selectionMode?: "Select" | "Start" | "End"): void;
        /**
         * Sets cell padding in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param cellPaddingLocation - Required. The cell padding location must be 'Top', 'Left', 'Bottom', or 'Right'.
         * @param cellPadding - Required. The cell padding.
         */
        setCellPadding(cellPaddingLocation: Word.CellPaddingLocation, cellPadding: number): void;
        /**
         * Sets cell padding in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param cellPaddingLocation - Required. The cell padding location must be 'Top', 'Left', 'Bottom', or 'Right'.
         * @param cellPadding - Required. The cell padding.
         */
        setCellPadding(cellPaddingLocation: "Top" | "Left" | "Bottom" | "Right", cellPadding: number): void;
        /**
         * Sets the height of the row.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param rowHeight - The height of the row, in points.
         * @param heightRule - The rule for determining the height of the table row.
         */
        setHeight(rowHeight: number, heightRule: Word.RowHeightRule): void;
        /**
         * Sets the height of the row.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param rowHeight - The height of the row, in points.
         * @param heightRule - The rule for determining the height of the table row.
         */
        setHeight(rowHeight: number, heightRule: "Auto" | "AtLeast" | "Exactly"): void;
        /**
         * Sets the left indent for the table row.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param leftIndent - The distance (in points) between the current left edge of the table row and the desired left edge.
         * @param rulerStyle - The ruler style to apply.
         */
        setLeftIndent(leftIndent: number, rulerStyle: Word.RulerStyle): void;
        /**
         * Sets the left indent for the table row.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param leftIndent - The distance (in points) between the current left edge of the table row and the desired left edge.
         * @param rulerStyle - The ruler style to apply.
         */
        setLeftIndent(leftIndent: number, rulerStyle: "None" | "Proportional" | "FirstColumn" | "SameWidth"): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableRowLoadOptions): Word.TableRow;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableRow;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.TableRow;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableRow;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableRow;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableRow` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableRowData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TableRowData;
    }
    /**
     * Contains the collection of the document's TableRow objects.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class TableRowCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.TableRow[];
        /**
         * Converts rows in a table to text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. An object that specifies the options for converting the table rows to text.
         * @returns A `Range` object that represents the converted text.
         */
        convertToText(options?: Word.TableConvertToTextOptions): Word.Range;
        /**
         * Deletes the table rows.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Adjusts the height of the rows so that they're equal.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        distributeHeight(): void;
        /**
         * Gets the first row in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirst(): Word.TableRow;
        /**
         * Gets the first row in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirstOrNullObject(): Word.TableRow;
        /**
         * Selects the table rows.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        select(): void;
        /**
         * Sets the height of the cells in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param rowHeight - The height of the row, in points.
         * @param heightRule - The rule for determining the height of the specified rows.
         */
        setHeight(rowHeight: number, heightRule: Word.RowHeightRule): void;
        /**
         * Sets the height of the cells in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param rowHeight - The height of the row, in points.
         * @param heightRule - The rule for determining the height of the specified rows.
         */
        setHeight(rowHeight: number, heightRule: "Auto" | "AtLeast" | "Exactly"): void;
        /**
         * Sets the left indent for the table row.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param leftIndent - The distance (in points) between the current left edge of the specified rows and the desired left edge.
         * @param rulerStyle - The ruler style to apply.
         */
        setLeftIndent(leftIndent: number, rulerStyle: Word.RulerStyle): void;
        /**
         * Sets the left indent for the table row.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param leftIndent - The distance (in points) between the current left edge of the specified rows and the desired left edge.
         * @param rulerStyle - The ruler style to apply.
         */
        setLeftIndent(leftIndent: number, rulerStyle: "None" | "Proportional" | "FirstColumn" | "SameWidth"): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableRowCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.TableRowCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableRowCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.TableRowCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableRowCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableRowCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableRowCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableRowCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.TableRowCollectionData;
    }
    /**
     * Represents a table cell in a Word document.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class TableCell extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the body object of the cell.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly body: Word.Body;
        /**
         * Returns the `TableColumn` object that represents the table column that contains this cell.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly column: Word.TableColumn;
        /**
         * Gets the parent row of the cell.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentRow: Word.TableRow;
        /**
         * Gets the parent table of the cell.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly parentTable: Word.Table;
        /**
         * Returns the `ShadingUniversal` object that represents the shading of the table cell.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly shading: Word.ShadingUniversal;
        /**
         * Gets the index of the cell in its row.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly cellIndex: number;
        /**
         * Specifies the width of the cell's column in points. This is applicable to uniform tables.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        columnWidth: number;
        /**
         * Specifies the horizontal alignment of the cell. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        horizontalAlignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
        /**
         * Gets the index of the cell's row in the table.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly rowIndex: number;
        /**
         * Specifies the shading color of the cell. Color is specified in "#RRGGBB" format or by using the color name.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        shadingColor: string;
        /**
         * Specifies the text of the cell.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        value: string;
        /**
         * Specifies the vertical alignment of the cell. The value can be 'Top', 'Center', or 'Bottom'.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        verticalAlignment: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom";
        /**
         * Gets the width of the cell in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        readonly width: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.TableCellUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.TableCell): void;
        /**
         * Inserts a {@link https://support.microsoft.com/office/32d5c9de-3516-4ec3-80ed-d1fc2b5bc21d | = (Formula) field} that calculates and displays the sum of the values in table cells above or to the left of the cell specified in the expression.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        autoSum(): void;
        /**
         * Deletes the table cell and optionally controls how the remaining cells are shifted.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param shiftCells - Optional. Specifies how the remaining cells are shifted after the deletion. The default is `shiftLeft`.
         */
        delete(shiftCells: any): void;
        /**
         * Deletes the column containing this cell. This is applicable to uniform tables.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        deleteColumn(): void;
        /**
         * Deletes the row containing this cell.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        deleteRow(): void;
        /**
         * Inserts a {@link https://support.microsoft.com/office/32d5c9de-3516-4ec3-80ed-d1fc2b5bc21d | = (Formula) field} that contains the specified formula into a table cell.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. An object that specifies the options for the formula.
         */
        formula(options?: Word.TableCellFormulaOptions): void;
        /**
         * Gets the border style for the specified border.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param borderLocation - Required. The border location.
         */
        getBorder(borderLocation: Word.BorderLocation): Word.TableBorder;
        /**
         * Gets the border style for the specified border.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param borderLocation - Required. The border location.
         */
        getBorder(borderLocation: "Top" | "Left" | "Bottom" | "Right" | "InsideHorizontal" | "InsideVertical" | "Inside" | "Outside" | "All"): Word.TableBorder;
        /**
         * Gets cell padding in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param cellPaddingLocation - Required. The cell padding location must be 'Top', 'Left', 'Bottom', or 'Right'.
         */
        getCellPadding(cellPaddingLocation: Word.CellPaddingLocation): OfficeExtension.ClientResult<number>;
        /**
         * Gets cell padding in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param cellPaddingLocation - Required. The cell padding location must be 'Top', 'Left', 'Bottom', or 'Right'.
         */
        getCellPadding(cellPaddingLocation: "Top" | "Left" | "Bottom" | "Right"): OfficeExtension.ClientResult<number>;
        /**
         * Gets the next cell. Throws an `ItemNotFound` error if this cell is the last one.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getNext(): Word.TableCell;
        /**
         * Gets the next cell. If this cell is the last one, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getNextOrNullObject(): Word.TableCell;
        /**
         * Adds columns to the left or right of the cell, using the cell's column as a template. This is applicable to uniform tables. The string values, if specified, are set in the newly inserted rows.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param insertLocation - Required. It must be 'Before' or 'After'.
         * @param columnCount - Required. Number of columns to add.
         * @param values - Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
         */
        insertColumns(insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After", columnCount: number, values?: string[][]): void;
        /**
         * Inserts rows above or below the cell, using the cell's row as a template. The string values, if specified, are set in the newly inserted rows.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param insertLocation - Required. It must be 'Before' or 'After'.
         * @param rowCount - Required. Number of rows to add.
         * @param values - Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
         */
        insertRows(insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After", rowCount: number, values?: string[][]): Word.TableRowCollection;
        /**
         * Merges this table cell with the specified table cell.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param mergeTo - The cell to be merged with.
         */
        merge(mergeTo: Word.TableCell): void;
        /**
         * Selects the table cell.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        select(): void;
        /**
         * Sets cell padding in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param cellPaddingLocation - Required. The cell padding location must be 'Top', 'Left', 'Bottom', or 'Right'.
         * @param cellPadding - Required. The cell padding.
         */
        setCellPadding(cellPaddingLocation: Word.CellPaddingLocation, cellPadding: number): void;
        /**
         * Sets cell padding in points.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         *
         * @param cellPaddingLocation - Required. The cell padding location must be 'Top', 'Left', 'Bottom', or 'Right'.
         * @param cellPadding - Required. The cell padding.
         */
        setCellPadding(cellPaddingLocation: "Top" | "Left" | "Bottom" | "Right", cellPadding: number): void;
        /**
         * Splits the cell into the specified number of rows and columns.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * @param rowCount - Required. The number of rows to split into. Must be a divisor of the number of underlying rows.
         * @param columnCount - Required. The number of columns to split into.
         */
        split(rowCount: number, columnCount: number): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableCellLoadOptions): Word.TableCell;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableCell;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.TableCell;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableCell;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableCell;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableCell` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableCellData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TableCellData;
    }
    /**
     * Contains the collection of the document's TableCell objects.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class TableCellCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.TableCell[];
        /**
         * Changes the width of a table column to accommodate the width of the text without changing the way text wraps in the cells.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        autoFit(): void;
        /**
         * Deletes the table cells and optionally controls how the remaining cells are shifted.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param shiftCells - Optional. Specifies how the remaining cells are shifted after the deletion. The default is `shiftLeft`.
         */
        delete(shiftCells?: Word.DeleteCells): void;
        /**
         * Deletes the table cells and optionally controls how the remaining cells are shifted.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param shiftCells - Optional. Specifies how the remaining cells are shifted after the deletion. The default is `shiftLeft`.
         */
        delete(shiftCells?: "ShiftLeft" | "ShiftUp" | "EntireRow" | "EntireColumn"): void;
        /**
         * Adjusts the height of the specified cells so that they are equal.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        distributeHeight(): void;
        /**
         * Adjusts the width of the specified cells so that they are equal.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        distributeWidth(): void;
        /**
         * Gets the first table cell in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirst(): Word.TableCell;
        /**
         * Gets the first table cell in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        getFirstOrNullObject(): Word.TableCell;
        /**
         * Merges the specified cells into a single cell.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        merge(): void;
        /**
         * Sets the height of the cells in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param rowHeight - The height of the row to set, in points.
         * @param heightRule - The rule for determining the height of the specified rows.
         */
        setHeight(rowHeight: number, heightRule: Word.RowHeightRule): void;
        /**
         * Sets the height of the cells in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param rowHeight - The height of the row to set, in points.
         * @param heightRule - The rule for determining the height of the specified rows.
         */
        setHeight(rowHeight: number, heightRule: "Auto" | "AtLeast" | "Exactly"): void;
        /**
         * Sets the width of the cells in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param columnWidth - The width of the row to set, in points.
         * @param rulerStyle - The ruler style to apply.
         */
        setWidth(columnWidth: number, rulerStyle: Word.RulerStyle): void;
        /**
         * Sets the width of the cells in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param columnWidth - The width of the row to set, in points.
         * @param rulerStyle - The ruler style to apply.
         */
        setWidth(columnWidth: number, rulerStyle: "None" | "Proportional" | "FirstColumn" | "SameWidth"): void;
        /**
         * Splits this range of table cells.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - TableCellCollectionSplitOptions.
         */
        split(options?: Word.TableCellCollectionSplitOptions): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableCellCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.TableCellCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableCellCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.TableCellCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableCellCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableCellCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableCellCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableCellCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.TableCellCollectionData;
    }
    /**
     * Specifies the border style.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    export class TableBorder extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the table border color.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        color: string;
        /**
         * Specifies the type of the table border.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        type: Word.BorderType | "Mixed" | "None" | "Single" | "Double" | "Dotted" | "Dashed" | "DotDashed" | "Dot2Dashed" | "Triple" | "ThinThickSmall" | "ThickThinSmall" | "ThinThickThinSmall" | "ThinThickMed" | "ThickThinMed" | "ThinThickThinMed" | "ThinThickLarge" | "ThickThinLarge" | "ThinThickThinLarge" | "Wave" | "DoubleWave" | "DashedSmall" | "DashDotStroked" | "ThreeDEmboss" | "ThreeDEngrave";
        /**
         * Specifies the width, in points, of the table border. Not applicable to table border types that have fixed widths.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        width: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.TableBorderUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.TableBorder): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TableBorderLoadOptions): Word.TableBorder;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TableBorder;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.TableBorder;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TableBorder;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TableBorder;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TableBorder` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TableBorderData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TableBorderData;
    }
    /**
     * Represents a document template.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Template extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BuildingBlockEntryCollection` object that represents the collection of building block entries in the template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly buildingBlockEntries: Word.BuildingBlockEntryCollection;
        /**
         * Returns a `BuildingBlockTypeItemCollection` object that represents the collection of building block types that are contained in the template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly buildingBlockTypes: Word.BuildingBlockTypeItemCollection;
        /**
         * Returns a `ListTemplateCollection` object that represents all the list templates in the template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly listTemplates: Word.ListTemplateCollection;
        /**
         * Specifies the East Asian language to use when breaking lines of text in the document or template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        farEastLineBreakLanguage: Word.FarEastLineBreakLanguageId | "TraditionalChinese" | "Japanese" | "Korean" | "SimplifiedChinese";
        /**
         * Specifies the line break control level for the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        farEastLineBreakLevel: Word.FarEastLineBreakLevel | "Normal" | "Strict" | "Custom";
        /**
         * Returns the name of the template, including the drive or Web path.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly fullName: string;
        /**
         * Specifies whether the spelling and grammar checker ignores documents based on this template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hasNoProofing: boolean;
        /**
         * Specifies the character spacing adjustment for the template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        justificationMode: Word.JustificationMode | "Expand" | "Compress" | "CompressKana";
        /**
         * Specifies if Microsoft Word kerns half-width Latin characters and punctuation marks in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        kerningByAlgorithm: boolean;
        /**
         * Specifies a `LanguageId` value that represents the language in the template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        languageId: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * Specifies an East Asian language for the language in the template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        languageIdFarEast: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * Returns only the name of the document template (excluding any path or other location information).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly name: string;
        /**
         * Specifies the kinsoku characters after which Microsoft Word will not break a line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        noLineBreakAfter: string;
        /**
         * Specifies the kinsoku characters before which Microsoft Word will not break a line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        noLineBreakBefore: string;
        /**
         * Returns the path to the document template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly path: string;
        /**
         * Specifies `true` if the template has not changed since it was last saved, `false` if Microsoft Word displays a prompt to save changes when the document is closed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        saved: boolean;
        /**
         * Returns the template type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.TemplateType | "Normal" | "Global" | "Attached";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.TemplateUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Template): void;
        /**
         * Saves the template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        save(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TemplateLoadOptions): Word.Template;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Template;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Template;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Template;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Template;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Template` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TemplateData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TemplateData;
    }
    /**
     * Contains a collection of {@link Word.Template} objects that represent all the templates that are currently available.
                This collection includes open templates, templates attached to open documents, and global templates loaded in the **Templates and Add-ins** dialog box.
                To learn how to access this dialog in the Word UI, see {@link https://support.microsoft.com/office/2479fe53-f849-4394-88bb-2a6e2a39479d | Load or unload a template or add-in program}.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TemplateCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Template[];
        /**
         * Returns the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Gets a `Template` object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The index of the template to retrieve.
         */
        getItemAt(index: number): Word.Template;
        /**
         * Imports the building blocks for all templates into Microsoft Word.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        importBuildingBlocks(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TemplateCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.TemplateCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TemplateCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.TemplateCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TemplateCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TemplateCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TemplateCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TemplateCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.TemplateCollectionData;
    }
    /**
     * Represents a tracked change in a Word document.
     *
     * @remarks
     * [Api set: WordApi 1.6]
     */
    export class TrackedChange extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the author of the tracked change.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        readonly author: string;
        /**
         * Gets the date of the tracked change.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        readonly date: Date;
        /**
         * Gets the text of the tracked change.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        readonly text: string;
        /**
         * Gets the type of the tracked change.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        readonly type: Word.TrackedChangeType | "None" | "Added" | "Deleted" | "Formatted";
        /**
         * Accepts the tracked change.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        accept(): void;
        /**
         * Gets the next tracked change. Throws an `ItemNotFound` error if this tracked change is the last one.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        getNext(): Word.TrackedChange;
        /**
         * Gets the next tracked change. If this tracked change is the last one, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        getNextOrNullObject(): Word.TrackedChange;
        /**
         * Gets the range of the tracked change.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        getRange(rangeLocation?: Word.RangeLocation.whole | Word.RangeLocation.start | Word.RangeLocation.end | "Whole" | "Start" | "End"): Word.Range;
        /**
         * Rejects the tracked change.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        reject(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TrackedChangeLoadOptions): Word.TrackedChange;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TrackedChange;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.TrackedChange;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TrackedChange;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TrackedChange;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TrackedChange` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TrackedChangeData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TrackedChangeData;
    }
    /**
     * Contains a collection of {@link Word.TrackedChange} objects.
     *
     * @remarks
     * [Api set: WordApi 1.6]
     */
    export class TrackedChangeCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.TrackedChange[];
        /**
         * Accepts all the tracked changes in the collection.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        acceptAll(): void;
        /**
         * Gets the first TrackedChange in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        getFirst(): Word.TrackedChange;
        /**
         * Gets the first TrackedChange in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        getFirstOrNullObject(): Word.TrackedChange;
        /**
         * Rejects all the tracked changes in the collection.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        rejectAll(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TrackedChangeCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.TrackedChangeCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TrackedChangeCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.TrackedChangeCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TrackedChangeCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TrackedChangeCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TrackedChangeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TrackedChangeCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.TrackedChangeCollectionData;
    }
    /**
     * Contains the view attributes (such as show all, field shading, and table gridlines) for a window or pane.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class View extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the instance of a `RevisionsFilter` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly revisionsFilter: Word.RevisionsFilter;
        /**
         * Specifies whether all nonprinting characters are displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areAllNonprintingCharactersDisplayed: boolean;
        /**
         * Gets whether background colors and images are shown when the document is displayed in print layout view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areBackgroundsDisplayed: boolean;
        /**
         * Gets whether square brackets are displayed at the beginning and end of each bookmark.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly areBookmarksIndicated: boolean;
        /**
         * Specifies whether Microsoft Word displays the comments in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areCommentsDisplayed: boolean;
        /**
         * Specifies whether Microsoft Word displays connecting lines from the text to the revision and comment balloons.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areConnectingLinesToRevisionsBalloonDisplayed: boolean;
        /**
         * Gets whether crop marks are shown in the corners of pages to indicate where margins are located.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly areCropMarksDisplayed: boolean;
        /**
         * Gets whether objects created with the drawing tools are displayed in print layout view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly areDrawingsDisplayed: boolean;
        /**
         * Specifies whether shading is applied to the ranges in the document that users have permission to modify.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areEditableRangesShaded: boolean;
        /**
         * Specifies whether field codes are displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areFieldCodesDisplayed: boolean;
        /**
         * Specifies whether Microsoft Word displays formatting changes made to the document with Track Changes enabled.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areFormatChangesDisplayed: boolean;
        /**
         * Specifies whether handwritten ink annotations are shown or hidden.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areInkAnnotationsDisplayed: boolean;
        /**
         * Specifies whether Microsoft Word displays insertions and deletions made to the document with Track Changes enabled.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areInsertionsAndDeletionsDisplayed: boolean;
        /**
         * Gets whether lines wrap at the right edge of the document window rather than at the right margin or the right column boundary.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly areLinesWrappedToWindow: boolean;
        /**
         * Gets whether object anchors are displayed next to items that can be positioned in print layout view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly areObjectAnchorsDisplayed: boolean;
        /**
         * Gets whether Microsoft Word displays optional line breaks.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly areOptionalBreaksDisplayed: boolean;
        /**
         * Gets whether optional hyphens are displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly areOptionalHyphensDisplayed: boolean;
        /**
         * Gets whether other authors' presence should be visible in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areOtherAuthorsVisible: boolean;
        /**
         * Gets whether the top and bottom margins and the gray area between pages in the document are displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly arePageBoundariesDisplayed: boolean;
        /**
         * Gets whether paragraph marks are displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly areParagraphsMarksDisplayed: boolean;
        /**
         * Gets whether blank boxes are displayed as placeholders for pictures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly arePicturePlaceholdersDisplayed: boolean;
        /**
         * Specifies whether Microsoft Word displays revisions and comments made to the document with Track Changes enabled.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areRevisionsAndCommentsDisplayed: boolean;
        /**
         * Gets whether space characters are displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly areSpacesIndicated: boolean;
        /**
         * Specifies whether table gridlines are displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        areTableGridlinesDisplayed: boolean;
        /**
         * Gets whether tab characters are displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly areTabsDisplayed: boolean;
        /**
         * Gets whether dotted lines are displayed around page margins, text columns, objects, and frames in print layout view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly areTextBoundariesDisplayed: boolean;
        /**
         * Specifies the column width in Reading mode.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        columnWidth: Word.ColumnWidth | "Narrow" | "Default" | "Wide";
        /**
         * Gets on-screen shading for fields.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly fieldShading: Word.FieldShading | "Never" | "Always" | "WhenSelected";
        /**
         * Specifies whether all the text in a window is displayed in the same sans-serif font with minimal formatting to speed up display.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isDraft: boolean;
        /**
         * Specifies whether only the first line of body text is shown in outline view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isFirstLineOnlyDisplayed: boolean;
        /**
         * Specifies whether character formatting is visible in outline view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isFormatDisplayed: boolean;
        /**
         * Specifies whether the window is in full-screen view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isFullScreen: boolean;
        /**
         * Gets whether text formatted as hidden text is displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isHiddenTextDisplayed: boolean;
        /**
         * Gets whether highlight formatting is displayed and printed with the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isHighlightingDisplayed: boolean;
        /**
         * Specifies whether the document is in conflict mode view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isInConflictMode: boolean;
        /**
         * Specifies whether Microsoft Word is in Panning mode.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isInPanning: boolean;
        /**
         * Specifies whether the document is being viewed in reading layout view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isInReadingLayout: boolean;
        /**
         * Specifies whether mail merge data is displayed instead of mail merge fields.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isMailMergeDataView: boolean;
        /**
         * Specifies whether the text in the document is visible when the header and footer areas are displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isMainTextLayerVisible: boolean;
        /**
         * Specifies whether the pointer is displayed as a magnifying glass in print preview.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isPointerShownAsMagnifier: boolean;
        /**
         * Specifies whether pages displayed in reading layout view are displayed using the same layout as printed pages.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isReadingLayoutActualView: boolean;
        /**
         * Specifies whether XML tags are visible in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isXmlMarkupVisible: boolean;
        /**
         * Specifies the display mode for tracked changes.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        markupMode: Word.RevisionsMode | "Balloon" | "Inline" | "Mixed";
        /**
         * Specifies the page color in Reading mode.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pageColor: Word.PageColor | "None" | "Sepia" | "Inverse";
        /**
         * Specifies the page movement type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pageMovementType: Word.PageMovementType | "Vertical" | "SideToSide";
        /**
         * Specifies whether margins are visible or hidden when the document is viewed in Full Screen Reading view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readingLayoutTruncateMargins: Word.ReadingLayoutMargin | "Automatic" | "Suppress" | "Full";
        /**
         * Gets whether Word displays revision balloons in the left or right margin in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly revisionsBalloonSide: Word.RevisionsBalloonMargin | "Left" | "Right";
        /**
         * Specifies the width of the revision balloons.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        revisionsBalloonWidth: number;
        /**
         * Specifies how Microsoft Word measures the width of revision balloons.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        revisionsBalloonWidthType: Word.RevisionsBalloonWidthType | "Percent" | "Points";
        /**
         * Specifies the document element displayed in print layout view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        seekView: Word.SeekView | "MainDocument" | "PrimaryHeader" | "FirstPageHeader" | "EvenPagesHeader" | "PrimaryFooter" | "FirstPageFooter" | "EvenPagesFooter" | "Footnotes" | "Endnotes" | "CurrentPageHeader" | "CurrentPageFooter";
        /**
         * Specifies the active window pane.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        splitSpecial: Word.SpecialPane | "None" | "PrimaryHeader" | "FirstPageHeader" | "EvenPagesHeader" | "PrimaryFooter" | "FirstPageFooter" | "EvenPagesFooter" | "Footnotes" | "Endnotes" | "FootnoteContinuationNotice" | "FootnoteContinuationSeparator" | "FootnoteSeparator" | "EndnoteContinuationNotice" | "EndnoteContinuationSeparator" | "EndnoteSeparator" | "Comments" | "CurrentPageHeader" | "CurrentPageFooter" | "Revisions" | "RevisionsHoriz" | "RevisionsVert";
        /**
         * Specifies the view type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type: Word.ViewType | "Normal" | "Outline" | "Print" | "PrintPreview" | "Master" | "Web" | "Reading" | "Conflict";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ViewUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.View): void;
        /**
         * Collapses all the headings in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        collapseAllHeadings(): void;
        /**
         * Collapses the text under the selection or the specified range by one heading level.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - A `Range` object that specifies the range to collapse.
         */
        collapseOutline(range: Word.Range): void;
        /**
         * Expands all the headings in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        expandAllHeadings(): void;
        /**
         * Expands the text under the selection by one heading level.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - A `Range` object that specifies the range to expand.
         */
        expandOutline(range: Word.Range): void;
        /**
         * Moves to the next header or footer, depending on whether a header or footer is displayed in the view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nextHeaderFooter(): void;
        /**
         * Moves to the previous header or footer, depending on whether a header or footer is displayed in the view.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        previousHeaderFooter(): void;
        /**
         * Switches between showing all text (headings and body text) and showing only headings.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        showAllHeadings(): void;
        /**
         * Shows all headings up to the specified heading level and hides subordinate headings and body text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param level - The heading level to show.
         */
        showHeading(level: number): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ViewLoadOptions): Word.View;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.View;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.View;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.View;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.View;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.View` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ViewData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ViewData;
    }
    /**
     * Represents a shape in the header, footer, or document body. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export class Shape extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Represents the body object of the shape. Only applies to text boxes and geometric shapes.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly body: Word.Body;
        /**
         * Gets the canvas associated with the shape. An object with its `isNullObject` property set to `true` will be returned if the shape type isn't "Canvas". For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly canvas: Word.Canvas;
        /**
         * Returns the fill formatting of the shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly fill: Word.ShapeFill;
        /**
         * Gets the top-level parent canvas shape of this child shape. It will be null if it isn't a child shape of a canvas.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly parentCanvas: Word.Shape;
        /**
         * Gets the top-level parent group shape of this child shape. It will be null if it isn't a child shape of a group.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly parentGroup: Word.Shape;
        /**
         * Gets the shape group associated with the shape. An object with its `isNullObject` property set to `true` will be returned if the shape type isn't "GroupShape". For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly shapeGroup: Word.ShapeGroup;
        /**
         * Gets the text frame object of the shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly textFrame: Word.TextFrame;
        /**
         * Returns the text wrap formatting of the shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly textWrap: Word.ShapeTextWrap;
        /**
         * Specifies whether a given shape can overlap other shapes.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        allowOverlap: boolean;
        /**
         * Specifies a string that represents the alternative text associated with the shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        altTextDescription: string;
        /**
         * The geometric shape type of the shape. It will be null if isn't a geometric shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        geometricShapeType: Word.GeometricShapeType | "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus";
        /**
         * The height, in points, of the shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        height: number;
        /**
         * The percentage of shape height to vertical relative size, see {@link Word.RelativeSize}. For an inline or child shape, it can't be set.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        heightRelative: number;
        /**
         * Gets an integer that represents the shape identifier.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly id: number;
        /**
         * Check whether this shape is a child of a group shape or a canvas shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly isChild: boolean;
        /**
         * The distance, in points, from the left side of the shape to the horizontal relative position, see {@link Word.RelativeHorizontalPosition}. For an inline shape, it will return 0 and can't be set. For a child shape in a canvas or group, it's relative to the top left corner.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        left: number;
        /**
         * The relative left position as a percentage from the left side of the shape to the horizontal relative position, see {@link Word.RelativeHorizontalPosition}. For an inline or child shape, it will return 0 and can't be set.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftRelative: number;
        /**
         * Specifies if the aspect ratio of this shape is locked.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        lockAspectRatio: boolean;
        /**
         * The name of the shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        name: string;
        /**
         * The relative horizontal position of the shape. For an inline shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        relativeHorizontalPosition: Word.RelativeHorizontalPosition | "Margin" | "Page" | "Column" | "Character" | "LeftMargin" | "RightMargin" | "InsideMargin" | "OutsideMargin";
        /**
         * The relative horizontal size of the shape. For an inline or child shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        relativeHorizontalSize: Word.RelativeSize | "Margin" | "Page" | "TopMargin" | "BottomMargin" | "InsideMargin" | "OutsideMargin";
        /**
         * The relative vertical position of the shape. For an inline shape, it can't be set. For details, see {@link Word.RelativeVerticalPosition}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        relativeVerticalPosition: Word.RelativeVerticalPosition | "Margin" | "Page" | "Paragraph" | "Line" | "TopMargin" | "BottomMargin" | "InsideMargin" | "OutsideMargin";
        /**
         * The relative vertical size of the shape. For an inline or child shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        relativeVerticalSize: Word.RelativeSize | "Margin" | "Page" | "TopMargin" | "BottomMargin" | "InsideMargin" | "OutsideMargin";
        /**
         * Specifies the rotation, in degrees, of the shape. Not applicable to Canvas shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        rotation: number;
        /**
         * The distance, in points, from the top edge of the shape to the vertical relative position (see {@link Word.RelativeVerticalPosition}). For an inline shape, it will return 0 and can't be set. For a child shape in a canvas or group, it's relative to the top left corner.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        top: number;
        /**
         * The relative top position as a percentage from the top edge of the shape to the vertical relative position, see {@link Word.RelativeVerticalPosition}. For an inline or child shape, it will return 0 and can't be set.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        topRelative: number;
        /**
         * Gets the shape type. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly type: Word.ShapeType | "Unsupported" | "TextBox" | "GeometricShape" | "Group" | "Picture" | "Canvas";
        /**
         * Specifies if the shape is visible. Not applicable to inline shapes.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        visible: boolean;
        /**
         * The width, in points, of the shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        width: number;
        /**
         * The percentage of shape width to horizontal relative size, see {@link Word.RelativeSize}. For an inline or child shape, it can't be set.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        widthRelative: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Shape): void;
        /**
         * Deletes the shape and its content.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        delete(): void;
        /**
         * Moves the shape horizontally by the number of points.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param distance - Required. Specifies how far the shape is to be moved horizontally, in points. Use a positive value to move the shape right. Use a negative value to move the shape left.
         */
        moveHorizontally(distance: number): void;
        /**
         * Moves the shape vertically by the number of points.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param distance - Required. Specifies how far the shape is to be moved vertically, in points. Use a positive value to move the shape up. Use a negative value to move the shape down.
         */
        moveVertically(distance: number): void;
        /**
         * Scales the height of the shape by a specified factor. For images, you can indicate whether you want to scale the shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their current height.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param scaleFactor - Specifies the ratio between the height of the shape after you resize it and the current or original height.
         * @param scaleType - Specifies whether the shape is scaled relative to its original or current size. The original size scaling option only works for images.
         * @param scaleFrom - Optional. Specifies which part of the shape retains its position when the shape is scaled. If omitted, it represents that the shape's upper left corner retains its position.
         */
        scaleHeight(scaleFactor: number, scaleType: Word.ShapeScaleType, scaleFrom?: Word.ShapeScaleFrom): void;
        /**
         * Scales the height of the shape by a specified factor. For images, you can indicate whether you want to scale the shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their current height.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param scaleFactor - Specifies the ratio between the height of the shape after you resize it and the current or original height.
         * @param scaleType - Specifies whether the shape is scaled relative to its original or current size. The original size scaling option only works for images.
         * @param scaleFrom - Optional. Specifies which part of the shape retains its position when the shape is scaled. If omitted, it represents that the shape's upper left corner retains its position.
         */
        scaleHeight(scaleFactor: number, scaleType: "CurrentSize" | "OriginalSize", scaleFrom?: "ScaleFromTopLeft" | "ScaleFromMiddle" | "ScaleFromBottomRight"): void;
        /**
         * Scales the width of the shape by a specified factor. For images, you can indicate whether you want to scale the shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their current height.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param scaleFactor - Specifies the ratio between the width of the shape after you resize it and the current or original width.
         * @param scaleType - Specifies whether the shape is scaled relative to its original or current size. The original size scaling option only works for images.
         * @param scaleFrom - Optional. Specifies which part of the shape retains its position when the shape is scaled. If omitted, it represents that the shape's upper left corner retains its position.
         */
        scaleWidth(scaleFactor: number, scaleType: Word.ShapeScaleType, scaleFrom?: Word.ShapeScaleFrom): void;
        /**
         * Scales the width of the shape by a specified factor. For images, you can indicate whether you want to scale the shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their current height.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param scaleFactor - Specifies the ratio between the width of the shape after you resize it and the current or original width.
         * @param scaleType - Specifies whether the shape is scaled relative to its original or current size. The original size scaling option only works for images.
         * @param scaleFrom - Optional. Specifies which part of the shape retains its position when the shape is scaled. If omitted, it represents that the shape's upper left corner retains its position.
         */
        scaleWidth(scaleFactor: number, scaleType: "CurrentSize" | "OriginalSize", scaleFrom?: "ScaleFromTopLeft" | "ScaleFromMiddle" | "ScaleFromBottomRight"): void;
        /**
         * Selects the shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param selectMultipleShapes - Optional. Whether to select multiple floating shapes. The default value is false.
         */
        select(selectMultipleShapes?: boolean): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ShapeLoadOptions): Word.Shape;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Shape;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Shape;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Shape;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Shape;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Shape` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ShapeData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ShapeData;
    }
    /**
     * Represents a shape group in the document. To get the corresponding Shape object, use ShapeGroup.shape.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export class ShapeGroup extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the Shape object associated with the group.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly shape: Word.Shape;
        /**
         * Gets the collection of Shape objects. Currently, only text boxes, geometric shapes, and pictures are supported.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly shapes: Word.ShapeCollection;
        /**
         * Gets an integer that represents the shape group identifier.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly id: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ShapeGroupUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ShapeGroup): void;
        /**
         * Ungroups any grouped shapes in the specified shape group.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        ungroup(): Word.ShapeCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ShapeGroupLoadOptions): Word.ShapeGroup;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ShapeGroup;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ShapeGroup;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ShapeGroup;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ShapeGroup;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ShapeGroup` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ShapeGroupData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ShapeGroupData;
    }
    /**
     * Represents a canvas in the document. To get the corresponding Shape object, use Canvas.shape.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export class Canvas extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the Shape object associated with the canvas.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly shape: Word.Shape;
        /**
         * Gets the collection of Shape objects. Currently, only text boxes, pictures, and geometric shapes are supported.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly shapes: Word.ShapeCollection;
        /**
         * Gets an integer that represents the canvas identifier.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly id: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.CanvasUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Canvas): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.CanvasLoadOptions): Word.Canvas;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Canvas;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Canvas;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Canvas;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Canvas;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Canvas` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CanvasData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.CanvasData;
    }
    /**
     * Contains a collection of {@link Word.Shape} objects. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export class ShapeCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Shape[];
        /**
         * Gets the shapes that have the specified geometric types. Only applied to geometric shapes.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param types - Required. An array of geometric shape subtypes.
         */
        getByGeometricTypes(types: Word.GeometricShapeType[]): Word.ShapeCollection;
        /**
         * Gets a shape by its identifier. Throws an `ItemNotFound` error if there isn't a shape with the identifier in this collection.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param id - Required. A shape identifier.
         */
        getById(id: number): Word.Shape;
        /**
         * Gets a shape by its identifier. If there isn't a shape with the identifier in this collection, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param id - Required. A shape identifier.
         */
        getByIdOrNullObject(id: number): Word.Shape;
        /**
         * Gets the shapes by the identifiers.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param ids - Required. An array of shape identifiers.
         */
        getByIds(ids: number[]): Word.ShapeCollection;
        /**
         * Gets the shapes that have the specified names.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param names - Required. An array of shape names.
         */
        getByNames(names: string[]): Word.ShapeCollection;
        /**
         * Gets the shapes that have the specified types.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param types - Required. An array of shape types.
         */
        getByTypes(types: Word.ShapeType[]): Word.ShapeCollection;
        /**
         * Gets the first shape in this collection. Throws an `ItemNotFound` error if this collection is empty.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        getFirst(): Word.Shape;
        /**
         * Gets the first shape in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        getFirstOrNullObject(): Word.Shape;
        /**
         * Groups floating shapes in this collection, inline shapes will be skipped. Returns a Shape object that represents the new group of shapes.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        group(): Word.Shape;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ShapeCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ShapeCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ShapeCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.ShapeCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ShapeCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ShapeCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ShapeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ShapeCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.ShapeCollectionData;
    }
    /**
     * Represents the fill formatting of a shape object.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export class ShapeFill extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the shape fill background color. You can provide the value in the '#RRGGBB' format or the color name.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        backgroundColor: string;
        /**
         * Specifies the shape fill foreground color. You can provide the value in the '#RRGGBB' format or the color name.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        foregroundColor: string;
        /**
         * Specifies the transparency percentage of the fill as a value from 0.0 (opaque) through 1.0 (clear). Returns `null` if the shape type does not support transparency or the shape fill has inconsistent transparency, such as with a gradient fill type.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        transparency: number;
        /**
         * Returns the fill type of the shape. See `Word.ShapeFillType` for details.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly type: Word.ShapeFillType | "NoFill" | "Solid" | "Gradient" | "Pattern" | "Picture" | "Texture" | "Mixed";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ShapeFillUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ShapeFill): void;
        /**
         * Clears the fill formatting of this shape and set it to `Word.ShapeFillType.NoFill`;
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        clear(): void;
        /**
         * Sets the fill formatting of the shape to a uniform color. This changes the fill type to `Word.ShapeFillType.Solid`.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         *
         * @param color - A string that represents the fill foreground color. You can provide the value in the '#RRGGBB' format or the color name.
         */
        setSolidColor(color: string): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ShapeFillLoadOptions): Word.ShapeFill;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ShapeFill;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ShapeFill;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ShapeFill;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ShapeFill;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ShapeFill` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ShapeFillData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ShapeFillData;
    }
    /**
     * Represents the text frame of a shape object.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export class TextFrame extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * The automatic sizing settings for the text frame. A text frame can be set to automatically fit the text to the text frame, to automatically fit the text frame to the text, or not perform any automatic sizing.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        autoSizeSetting: Word.ShapeAutoSize | "None" | "TextToFitShape" | "ShapeToFitText" | "Mixed";
        /**
         * Represents the bottom margin, in points, of the text frame.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        bottomMargin: number;
        /**
         * Specifies if the text frame contains text.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        readonly hasText: boolean;
        /**
         * Represents the left margin, in points, of the text frame.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftMargin: number;
        /**
         * Returns True if text in the text frame shouldn't rotate when the shape is rotated.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        noTextRotation: boolean;
        /**
         * Represents the angle to which the text is oriented for the text frame. See `Word.ShapeTextOrientation` for details.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        orientation: Word.ShapeTextOrientation | "None" | "Horizontal" | "EastAsianVertical" | "Vertical270" | "Vertical" | "EastAsianHorizontalRotated" | "Mixed";
        /**
         * Represents the right margin, in points, of the text frame.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        rightMargin: number;
        /**
         * Represents the top margin, in points, of the text frame.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        topMargin: number;
        /**
         * Represents the vertical alignment of the text frame. See `Word.ShapeTextVerticalAlignment` for details.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        verticalAlignment: Word.ShapeTextVerticalAlignment | "Top" | "Middle" | "Bottom";
        /**
         * Determines whether lines break automatically to fit text inside the shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        wordWrap: boolean;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.TextFrameUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.TextFrame): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TextFrameLoadOptions): Word.TextFrame;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TextFrame;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.TextFrame;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TextFrame;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TextFrame;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TextFrame` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TextFrameData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TextFrameData;
    }
    /**
     * Represents all the properties for wrapping text around a shape.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    export class ShapeTextWrap extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the distance (in points) between the document text and the bottom edge of the text-free area surrounding the specified shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        bottomDistance: number;
        /**
         * Specifies the distance (in points) between the document text and the left edge of the text-free area surrounding the specified shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftDistance: number;
        /**
         * Specifies the distance (in points) between the document text and the right edge of the text-free area surrounding the specified shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        rightDistance: number;
        /**
         * Specifies whether the document text should wrap on both sides of the specified shape, on either the left or right side only, or on the side of the shape that's farthest from the page margin.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        side: Word.ShapeTextWrapSide | "None" | "Both" | "Left" | "Right" | "Largest";
        /**
         * Specifies the distance (in points) between the document text and the top edge of the text-free area surrounding the specified shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        topDistance: number;
        /**
         * Specifies the text wrap type around the shape. See `Word.ShapeTextWrapType` for details.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        type: Word.ShapeTextWrapType | "Inline" | "Square" | "Tight" | "Through" | "TopBottom" | "Behind" | "Front";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ShapeTextWrapUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ShapeTextWrap): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ShapeTextWrapLoadOptions): Word.ShapeTextWrap;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ShapeTextWrap;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ShapeTextWrap;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ShapeTextWrap;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ShapeTextWrap;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ShapeTextWrap` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ShapeTextWrapData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ShapeTextWrapData;
    }
    /**
     * Represents a single reviewer of a document in which changes have been tracked. The `Reviewer` object is a member of the {@link Word.ReviewerCollection} object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Reviewer extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies if the `Reviewer` object is visible.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isVisible: boolean;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ReviewerUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Reviewer): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ReviewerLoadOptions): Word.Reviewer;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Reviewer;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Reviewer;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Reviewer;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Reviewer;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Reviewer` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ReviewerData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ReviewerData;
    }
    /**
     * A collection of {@link Word.Reviewer} objects that represents the reviewers of one or more documents. The `ReviewerCollection` object contains the names of all reviewers who have reviewed documents opened or edited on a computer.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class ReviewerCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Reviewer[];
        /**
         * Returns a `Reviewer` object that represents the specified item in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The index of the item to retrieve.
         */
        getItem(index: number): Word.Reviewer;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ReviewerCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ReviewerCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ReviewerCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.ReviewerCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ReviewerCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ReviewerCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ReviewerCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ReviewerCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.ReviewerCollectionData;
    }
    /**
     * Represents the current settings related to the display of reviewers' comments and revision marks in the document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class RevisionsFilter extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the `ReviewerCollection` object that represents the collection of reviewers of one or more documents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly reviewers: Word.ReviewerCollection;
        /**
         * Specifies a `RevisionsMarkup` value that represents the extent of reviewer markup displayed in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        markup: Word.RevisionsMarkup | "None" | "Simple" | "All";
        /**
         * Specifies a `RevisionsView` value that represents globally whether Word displays the original version of the document or the final version, which might have revisions and formatting changes applied.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        view: Word.RevisionsView | "Final" | "Original";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.RevisionsFilterUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.RevisionsFilter): void;
        /**
         * Shows or hides all revisions in the document that contain comments and tracked changes.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        toggleShowAllReviewers(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.RevisionsFilterLoadOptions): Word.RevisionsFilter;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.RevisionsFilter;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.RevisionsFilter;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.RevisionsFilter;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.RevisionsFilter;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.RevisionsFilter` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RevisionsFilterData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.RevisionsFilterData;
    }
    /**
     * Represents a single item in a {@link Word.RepeatingSectionContentControl}.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class RepeatingSectionItem extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns the range of this repeating section item, excluding the start and end tags.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.RepeatingSectionItemUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.RepeatingSectionItem): void;
        /**
         * Deletes this `RepeatingSectionItem` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Adds a repeating section item after this item and returns the new item.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insertItemAfter(): Word.RepeatingSectionItem;
        /**
         * Adds a repeating section item before this item and returns the new item.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insertItemBefore(): Word.RepeatingSectionItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.RepeatingSectionItemLoadOptions): Word.RepeatingSectionItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.RepeatingSectionItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.RepeatingSectionItem;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.RepeatingSectionItem;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.RepeatingSectionItem;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.RepeatingSectionItem` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RepeatingSectionItemData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.RepeatingSectionItemData;
    }
    /**
     * Represents a collection of {@link Word.RepeatingSectionItem} objects in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class RepeatingSectionItemCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns an individual repeating section item.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The index of the item to retrieve.
         * @returns A `RepeatingSectionItem` object representing the item at the specified index.
         */
        getItemAt(index: number): Word.RepeatingSectionItem;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.RepeatingSectionItemCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.RepeatingSectionItemCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.RepeatingSectionItemCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.RepeatingSectionItemCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.RepeatingSectionItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RepeatingSectionItemCollectionData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): {
            [key: string]: string;
        };
    }
    /**
     * Represents a single tracked change in a document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Revision extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets a `Range` object that represents the range of text that was moved from one place to another in the document with tracked changes.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly movedRange: Word.Range;
        /**
         * Gets a `Range` object that represents the portion of the document that's contained within a revision mark.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Gets the name of the user who made the tracked change.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly author: string;
        /**
         * Gets the date and time when the tracked change was made.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly date: Date;
        /**
         * Gets the description of tracked formatting changes in the revision.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly formatDescription: string;
        /**
         * Gets a number that represents the position of this item in a collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly index: number;
        /**
         * Gets the revision type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.RevisionType | "None" | "Insert" | "Delete" | "Property" | "ParagraphNumber" | "DisplayField" | "Reconcile" | "Conflict" | "Style" | "Replace" | "ParagraphProperty" | "TableProperty" | "SectionProperty" | "StyleDefinition" | "MovedFrom" | "MovedTo" | "CellInsertion" | "CellDeletion" | "CellMerge" | "CellSplit" | "ConflictInsert" | "ConflictDelete";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.RevisionUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Revision): void;
        /**
         * Accepts the tracked change, removes the revision mark, and incorporates the change into the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        accept(): void;
        /**
         * Rejects the tracked change. The revision marks are removed, leaving the original text intact.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        reject(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.RevisionLoadOptions): Word.Revision;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Revision;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Revision;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Revision;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Revision;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Revision` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RevisionData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.RevisionData;
    }
    /**
     * A collection of Revision objects that represent the changes marked with revision marks in a range or document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class RevisionCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Revision[];
        /**
         * Accepts all the tracked changes in the document or range, removes all revision marks, and incorporates the changes into the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        acceptAll(): void;
        /**
         * Returns a `Revision` object that represents the specified item in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The index of the item to retrieve.
         */
        getItem(index: number): Word.Revision;
        /**
         * Rejects all the tracked changes in the document or range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rejectAll(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.RevisionCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.RevisionCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.RevisionCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.RevisionCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.RevisionCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.RevisionCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.RevisionCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RevisionCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.RevisionCollectionData;
    }
    /**
     * Represents the `DatePickerContentControl` object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class DatePickerContentControl extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly placeholderText: Word.BuildingBlock;
        /**
         * Gets a `Range` object that represents the contents of the content control in the active document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Gets an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly xmlMapping: Word.XmlMapping;
        /**
         * Specifies the appearance of the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        appearance: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
        /**
         * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        color: string;
        /**
         * Specifies a `CalendarType` value that represents the calendar type for the date picker content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dateCalendarType: Word.CalendarType | "Western" | "Arabic" | "Hebrew" | "Taiwan" | "Japan" | "Thai" | "Korean" | "SakaEra" | "TranslitEnglish" | "TranslitFrench" | "Umalqura";
        /**
         * Specifies the format in which dates are displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dateDisplayFormat: string;
        /**
         * Specifies a `LanguageId` that represents the language format for the date displayed in the date picker content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dateDisplayLocale: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * Specifies a `ContentControlDateStorageFormat` value that represents the format for storage and retrieval of dates when the date picker content control is bound to the XML data store of the active document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dateStorageFormat: Word.ContentControlDateStorageFormat | "Text" | "Date" | "DateTime";
        /**
         * Gets the identification for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly id: string;
        /**
         * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isTemporary: boolean;
        /**
         * Specifies the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly level: Word.ContentControlLevel | "Inline" | "Paragraph" | "Row" | "Cell";
        /**
         * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lockContentControl: boolean;
        /**
         * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lockContents: boolean;
        /**
         * Gets whether the placeholder text for the content control is being displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly showingPlaceholderText: boolean;
        /**
         * Specifies a tag to identify the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tag: string;
        /**
         * Specifies the title for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        title: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.DatePickerContentControlUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.DatePickerContentControl): void;
        /**
         * Copies the content control from the active document to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        copy(): void;
        /**
         * Removes the content control from the active document and moves the content control to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cut(): void;
        /**
         * Deletes this content control and the contents of the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param deleteContents - Optional. If true, deletes the contents as well.
         */
        delete(deleteContents?: boolean): void;
        /**
         * Sets the placeholder text that displays in the content control until a user enters their own text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. The options for configuring the content control's placeholder text.
         */
        setPlaceholderText(options?: Word.ContentControlPlaceholderOptions): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.DatePickerContentControlLoadOptions): Word.DatePickerContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.DatePickerContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.DatePickerContentControl;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.DatePickerContentControl;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.DatePickerContentControl;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.DatePickerContentControl` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.DatePickerContentControlData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.DatePickerContentControlData;
    }
    /**
     * Represents the `PictureContentControl` object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class PictureContentControl extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly placeholderText: Word.BuildingBlock;
        /**
         * Returns a `Range` object that represents the contents of the content control in the active document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly xmlMapping: Word.XmlMapping;
        /**
         * Specifies the appearance of the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        appearance: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
        /**
         * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        color: string;
        /**
         * Returns the identification for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly id: string;
        /**
         * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isTemporary: boolean;
        /**
         * Returns the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly level: Word.ContentControlLevel | "Inline" | "Paragraph" | "Row" | "Cell";
        /**
         * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lockContentControl: boolean;
        /**
         * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lockContents: boolean;
        /**
         * Returns whether the placeholder text for the content control is being displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly showingPlaceholderText: boolean;
        /**
         * Specifies a tag to identify the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tag: string;
        /**
         * Specifies the title for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        title: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.PictureContentControlUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.PictureContentControl): void;
        /**
         * Copies the content control from the active document to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        copy(): void;
        /**
         * Removes the content control from the active document and moves the content control to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cut(): void;
        /**
         * Deletes the content control and optionally its contents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param deleteContents - Optional. Decides whether to delete the contents of the content control.
         */
        delete(deleteContents?: boolean): void;
        /**
         * Sets the placeholder text that displays in the content control until a user enters their own text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. The options for configuring the content control's placeholder text.
         */
        setPlaceholderText(options?: Word.ContentControlPlaceholderOptions): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.PictureContentControlLoadOptions): Word.PictureContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.PictureContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.PictureContentControl;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.PictureContentControl;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.PictureContentControl;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.PictureContentControl` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.PictureContentControlData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.PictureContentControlData;
    }
    /**
     * Represents the `GroupContentControl` object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class GroupContentControl extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly placeholderText: Word.BuildingBlock;
        /**
         * Gets a `Range` object that represents the contents of the content control in the active document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Gets an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly xmlMapping: Word.XmlMapping;
        /**
         * Specifies the appearance of the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        appearance: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
        /**
         * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        color: string;
        /**
         * Returns the identification for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly id: string;
        /**
         * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isTemporary: boolean;
        /**
         * Gets the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly level: Word.ContentControlLevel | "Inline" | "Paragraph" | "Row" | "Cell";
        /**
         * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lockContentControl: boolean;
        /**
         * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lockContents: boolean;
        /**
         * Returns whether the placeholder text for the content control is being displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly showingPlaceholderText: boolean;
        /**
         * Specifies a tag to identify the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tag: string;
        /**
         * Specifies the title for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        title: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.GroupContentControlUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.GroupContentControl): void;
        /**
         * Copies the content control from the active document to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        copy(): void;
        /**
         * Removes the content control from the active document and moves the content control to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cut(): void;
        /**
         * Deletes the content control and optionally its contents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param deleteContents - Optional. Whether to delete the contents inside the control.
         */
        delete(deleteContents: boolean): void;
        /**
         * Sets the placeholder text that displays in the content control until a user enters their own text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. The options for configuring the content control's placeholder text.
         */
        setPlaceholderText(options?: Word.ContentControlPlaceholderOptions): void;
        /**
         * Removes the group content control from the document so that its child content controls are no longer nested and can be freely edited.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ungroup(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.GroupContentControlLoadOptions): Word.GroupContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.GroupContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.GroupContentControl;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.GroupContentControl;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.GroupContentControl;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.GroupContentControl` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.GroupContentControlData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.GroupContentControlData;
    }
    /**
     * The options that define what placeholder to be used in the content control.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface ContentControlPlaceholderOptions {
        /**
         * If provided, specifies the `BuildingBlock` object to use as placeholder.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        buildingBlock?: Word.BuildingBlock;
        /**
         * If provided, specifies the `Range` object to use as placeholder.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        range?: Word.Range;
        /**
         * If provided, specifies the text to use as placeholder.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        text?: string;
    }
    /**
     * Represents the `BuildingBlockGalleryContentControl` object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class BuildingBlockGalleryContentControl extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly placeholderText: Word.BuildingBlock;
        /**
         * Returns a `Range` object that represents the contents of the content control in the active document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly xmlMapping: Word.XmlMapping;
        /**
         * Specifies the appearance of the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        appearance: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
        /**
         * Specifies the category for the building block content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        buildingBlockCategory: string;
        /**
         * Specifies a `BuildingBlockType` value that represents the type of building block for the building block content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        buildingBlockType: Word.BuildingBlockType | "QuickParts" | "CoverPage" | "Equations" | "Footers" | "Headers" | "PageNumber" | "Tables" | "Watermarks" | "AutoText" | "TextBox" | "PageNumberTop" | "PageNumberBottom" | "PageNumberPage" | "TableOfContents" | "CustomQuickParts" | "CustomCoverPage" | "CustomEquations" | "CustomFooters" | "CustomHeaders" | "CustomPageNumber" | "CustomTables" | "CustomWatermarks" | "CustomAutoText" | "CustomTextBox" | "CustomPageNumberTop" | "CustomPageNumberBottom" | "CustomPageNumberPage" | "CustomTableOfContents" | "Custom1" | "Custom2" | "Custom3" | "Custom4" | "Custom5" | "Bibliography" | "CustomBibliography";
        /**
         * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        color: string;
        /**
         * Gets the identification for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly id: string;
        /**
         * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isTemporary: boolean;
        /**
         * Gets the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly level: Word.ContentControlLevel | "Inline" | "Paragraph" | "Row" | "Cell";
        /**
         * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lockContentControl: boolean;
        /**
         * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lockContents: boolean;
        /**
         * Gets if the placeholder text for the content control is being displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly showingPlaceholderText: boolean;
        /**
         * Specifies a tag to identify the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tag: string;
        /**
         * Specifies the title for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        title: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.BuildingBlockGalleryContentControlUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.BuildingBlockGalleryContentControl): void;
        /**
         * Copies the content control from the active document to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        copy(): void;
        /**
         * Removes the content control from the active document and moves the content control to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cut(): void;
        /**
         * Deletes the content control and optionally its contents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param deleteContents - Optional. Whether to delete the contents inside the control.
         */
        delete(deleteContents?: boolean): void;
        /**
         * Sets the placeholder text that displays in the content control until a user enters their own text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - The options for configuring the content control's placeholder text.
         */
        setPlaceholderText(options?: Word.ContentControlPlaceholderOptions): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BuildingBlockGalleryContentControlLoadOptions): Word.BuildingBlockGalleryContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.BuildingBlockGalleryContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.BuildingBlockGalleryContentControl;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.BuildingBlockGalleryContentControl;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.BuildingBlockGalleryContentControl;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.BuildingBlockGalleryContentControl` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BuildingBlockGalleryContentControlData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.BuildingBlockGalleryContentControlData;
    }
    /**
     * Represents the `RepeatingSectionContentControl` object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class RepeatingSectionContentControl extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly placeholderText: Word.BuildingBlock;
        /**
         * Gets a `Range` object that represents the contents of the content control in the active document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Returns the collection of repeating section items in this repeating section content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly repeatingSectionItems: Word.RepeatingSectionItemCollection;
        /**
         * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly xmlapping: Word.XmlMapping;
        /**
         * Specifies whether users can add or remove sections from this repeating section content control by using the user interface.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        allowInsertDeleteSection: boolean;
        /**
         * Specifies the appearance of the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        appearance: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
        /**
         * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        color: string;
        /**
         * Returns the identification for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly id: string;
        /**
         * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isTemporary: boolean;
        /**
         * Returns the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly level: Word.ContentControlLevel | "Inline" | "Paragraph" | "Row" | "Cell";
        /**
         * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lockContentControl: boolean;
        /**
         * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lockContents: boolean;
        /**
         * Specifies the name of the repeating section items used in the context menu associated with this repeating section content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        repeatingSectionItemTitle: string;
        /**
         * Returns whether the placeholder text for the content control is being displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly showingPlaceholderText: boolean;
        /**
         * Specifies a tag to identify the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tag: string;
        /**
         * Specifies the title for the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        title: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.RepeatingSectionContentControlUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.RepeatingSectionContentControl): void;
        /**
         * Copies the content control from the active document to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        copy(): void;
        /**
         * Removes the content control from the active document and moves the content control to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cut(): void;
        /**
         * Deletes the content control and the contents of the content control.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param deleteContents - Optional. Whether to delete the contents inside the control.
         */
        delete(deleteContents?: boolean): void;
        /**
         * Sets the placeholder text that displays in the content control until a user enters their own text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. The options for configuring the content control's placeholder text.
         */
        setPlaceholderText(options?: Word.ContentControlPlaceholderOptions): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.RepeatingSectionContentControlLoadOptions): Word.RepeatingSectionContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.RepeatingSectionContentControl;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.RepeatingSectionContentControl;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.RepeatingSectionContentControl;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.RepeatingSectionContentControl;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.RepeatingSectionContentControl` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RepeatingSectionContentControlData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.RepeatingSectionContentControlData;
    }
    /**
     * Calendar types.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum CalendarType {
        /**
         * Western calendar type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        western = "Western",
        /**
         * Arabic calendar type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabic = "Arabic",
        /**
         * Hebrew calendar type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hebrew = "Hebrew",
        /**
         * Taiwan calendar type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        taiwan = "Taiwan",
        /**
         * Japanese calendar type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        japan = "Japan",
        /**
         * Thai calendar type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thai = "Thai",
        /**
         * Korean calendar type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        korean = "Korean",
        /**
         * Saka Era calendar type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sakaEra = "SakaEra",
        /**
         * Transliterated English calendar type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        translitEnglish = "TranslitEnglish",
        /**
         * Transliterated French calendar type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        translitFrench = "TranslitFrench",
        /**
         * Umm al-Qura calendar type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        umalqura = "Umalqura",
    }
    /**
     * Date storage formats for {@link Word.DatePickerContentControl}.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ContentControlDateStorageFormat {
        /**
         * Stores the date as text.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        text = "Text",
        /**
         * Stores the date as a date object.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        date = "Date",
        /**
         * Stores the date as a date-time object.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dateTime = "DateTime",
    }
    /**
     * Represents a frame. The `Frame` object is a member of the {@link Word.FrameCollection} object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Frame extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BorderUniversalCollection` object that represents all the borders for the frame.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly borders: Word.BorderUniversalCollection;
        /**
         * Returns a `Range` object that represents the portion of the document that's contained within the frame.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Returns a `ShadingUniversal` object that refers to the shading formatting for the frame.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly shading: Word.ShadingUniversal;
        /**
         * Specifies the height (in points) of the frame.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        height: number;
        /**
         * Specifies a `FrameSizeRule` value that represents the rule for determining the height of the frame.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        heightRule: Word.FrameSizeRule | "Auto" | "AtLeast" | "Exact";
        /**
         * Specifies the horizontal distance between the frame and the surrounding text, in points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        horizontalDistanceFromText: number;
        /**
         * Specifies the horizontal distance between the edge of the frame and the item specified by the `relativeHorizontalPosition` property.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        horizontalPosition: number;
        /**
         * Specifies if the frame is locked.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lockAnchor: boolean;
        /**
         * Specifies the relative horizontal position of the frame.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        relativeHorizontalPosition: Word.RelativeHorizontalPosition | "Margin" | "Page" | "Column" | "Character" | "LeftMargin" | "RightMargin" | "InsideMargin" | "OutsideMargin";
        /**
         * Specifies the relative vertical position of the frame.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        relativeVerticalPosition: Word.RelativeVerticalPosition | "Margin" | "Page" | "Paragraph" | "Line" | "TopMargin" | "BottomMargin" | "InsideMargin" | "OutsideMargin";
        /**
         * Specifies if document text wraps around the frame.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        textWrap: boolean;
        /**
         * Specifies the vertical distance (in points) between the frame and the surrounding text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        verticalDistanceFromText: number;
        /**
         * Specifies the vertical distance between the edge of the frame and the item specified by the `relativeVerticalPosition` property.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        verticalPosition: number;
        /**
         * Specifies the width (in points) of the frame.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        width: number;
        /**
         * Specifies the rule used to determine the width of the frame.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        widthRule: Word.FrameSizeRule | "Auto" | "AtLeast" | "Exact";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.FrameUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Frame): void;
        /**
         * Copies the frame to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        copy(): void;
        /**
         * Removes the frame from the document and places it on the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cut(): void;
        /**
         * Deletes the frame.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Selects the frame.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        select(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.FrameLoadOptions): Word.Frame;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Frame;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Frame;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Frame;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Frame;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Frame` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.FrameData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.FrameData;
    }
    /**
     * Represents the collection of {@link Word.Frame} objects.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class FrameCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Frame[];
        /**
         * Returns a `Frame` object that represents a new frame added to a range, selection, or document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range where the frame will be added.
         * @returns A `Frame` object that represents the new frame.
         */
        add(range: Word.Range): Word.Frame;
        /**
         * Deletes the `FrameCollection` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Gets a `Frame` object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The location of a `Frame` object.
         */
        getItem(index: number): Word.Frame;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.FrameCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.FrameCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.FrameCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.FrameCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.FrameCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.FrameCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.FrameCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.FrameCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.FrameCollectionData;
    }
    /**
     * Represents a document library version.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class DocumentLibraryVersion extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets any optional comments associated with this version of the shared document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly comments: string;
        /**
         * Gets the date and time at which this version of the shared document was last saved to the server.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly modified: any;
        /**
         * Gets the name of the user who last saved this version of the shared document to the server.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly modifiedBy: string;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.DocumentLibraryVersionLoadOptions): Word.DocumentLibraryVersion;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.DocumentLibraryVersion;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.DocumentLibraryVersion;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.DocumentLibraryVersion;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.DocumentLibraryVersion;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.DocumentLibraryVersion` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.DocumentLibraryVersionData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.DocumentLibraryVersionData;
    }
    /**
     * Represents the collection of {@link Word.DocumentLibraryVersion} objects.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class DocumentLibraryVersionCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.DocumentLibraryVersion[];
        /**
         * Gets a `DocumentLibraryVersion` object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The location of a `DocumentLibraryVersion` object.
         */
        getItem(index: number): Word.DocumentLibraryVersion;
        /**
         * Returns whether the document library in which the active document is saved on the server is configured to create a backup copy, or version, each time the file is edited on the website.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isVersioningEnabled(): OfficeExtension.ClientResult<boolean>;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.DocumentLibraryVersionCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.DocumentLibraryVersionCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.DocumentLibraryVersionCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.DocumentLibraryVersionCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.DocumentLibraryVersionCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.DocumentLibraryVersionCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.DocumentLibraryVersionCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.DocumentLibraryVersionCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.DocumentLibraryVersionCollectionData;
    }
    /**
     * Represents the possible change tracking modes.
     *
     * @remarks
     * [Api set: WordApi 1.4]
     */
    enum ChangeTrackingMode {
        /**
         * ChangeTracking is turned off.
         * @remarks
         * [Api set: WordApi 1.4]
         */
        off = "Off",
        /**
         * ChangeTracking is turned on for everyone.
         * @remarks
         * [Api set: WordApi 1.4]
         */
        trackAll = "TrackAll",
        /**
         * Tracking is turned on for my changes only.
         * @remarks
         * [Api set: WordApi 1.4]
         */
        trackMineOnly = "TrackMineOnly",
    }
    /**
     * Specify the current version or the original version of the text.
     *
     * @remarks
     * [Api set: WordApi 1.4]
     */
    enum ChangeTrackingVersion {
        /**
         * @remarks
         * [Api set: WordApi 1.4]
         */
        original = "Original",
        /**
         * @remarks
         * [Api set: WordApi 1.4]
         */
        current = "Current",
    }
    /**
     * Specify the track state when ChangeTracking is on.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    enum ChangeTrackingState {
        /**
         * @remarks
         * [Api set: WordApi 1.5]
         */
        unknown = "Unknown",
        /**
         * @remarks
         * [Api set: WordApi 1.5]
         */
        normal = "Normal",
        /**
         * @remarks
         * [Api set: WordApi 1.5]
         */
        added = "Added",
        /**
         * @remarks
         * [Api set: WordApi 1.5]
         */
        deleted = "Deleted",
    }
    /**
     * TrackedChange type.
     *
     * @remarks
     * [Api set: WordApi 1.6]
     */
    enum TrackedChangeType {
        /**
         * No revision.
         * @remarks
         * [Api set: WordApi 1.6]
         */
        none = "None",
        /**
         * Add change.
         * @remarks
         * [Api set: WordApi 1.6]
         */
        added = "Added",
        /**
         * Delete change.
         * @remarks
         * [Api set: WordApi 1.6]
         */
        deleted = "Deleted",
        /**
         * Format change.
         * @remarks
         * [Api set: WordApi 1.6]
         */
        formatted = "Formatted",
    }
    /**
     * Note item type
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    enum NoteItemType {
        /**
         * @remarks
         * [Api set: WordApi 1.5]
         */
        footnote = "Footnote",
        /**
         * @remarks
         * [Api set: WordApi 1.5]
         */
        endnote = "Endnote",
    }
    /**
     * Provides information about the type of a raised event.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    enum EventType {
        /**
         * ContentControlDeleted represents the event that the content control has been deleted.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        contentControlDeleted = "ContentControlDeleted",
        /**
         * ContentControlSelectionChanged represents the event that the selection in the content control has been changed.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        contentControlSelectionChanged = "ContentControlSelectionChanged",
        /**
         * ContentControlDataChanged represents the event that the data in the content control have been changed.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        contentControlDataChanged = "ContentControlDataChanged",
        /**
         * ContentControlAdded represents the event a content control has been added to the document.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        contentControlAdded = "ContentControlAdded",
        /**
         * Represents that one or more comments were deleted.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        commentDeleted = "CommentDeleted",
        /**
         * Represents that a comment was selected.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        commentSelected = "CommentSelected",
        /**
         * Represents that a comment was deselected.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        commentDeselected = "CommentDeselected",
        /**
         * Represents that a comment or its reply was changed.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        commentChanged = "CommentChanged",
        /**
         * Represents that one or more new comments were added.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        commentAdded = "CommentAdded",
        /**
         * Represents that a content control has been entered.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        contentControlEntered = "ContentControlEntered",
        /**
         * Represents that a content control has been exited.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        contentControlExited = "ContentControlExited",
        /**
         * Represents that one or more new paragraphs were added.
         * @remarks
         * [Api set: WordApi 1.6]
         */
        paragraphAdded = "ParagraphAdded",
        /**
         * Represents that one or more paragraphs were changed.
         * @remarks
         * [Api set: WordApi 1.6]
         */
        paragraphChanged = "ParagraphChanged",
        /**
         * Represents that one or more paragraphs were deleted.
         * @remarks
         * [Api set: WordApi 1.6]
         */
        paragraphDeleted = "ParagraphDeleted",
        /**
         * Represents that an annotation was clicked (or selected with **Alt+Down**) in the document.
         * @remarks
         * [Api set: WordApi 1.7]
         */
        annotationClicked = "AnnotationClicked",
        /**
         * Represents that an annotation was hovered over in the document.
         * @remarks
         * [Api set: WordApi 1.7]
         */
        annotationHovered = "AnnotationHovered",
        /**
         * Represents that one or more annotations were added in the document.
         * @remarks
         * [Api set: WordApi 1.7]
         */
        annotationInserted = "AnnotationInserted",
        /**
         * Represents that one or more annotations were deleted from the document.
         * @remarks
         * [Api set: WordApi 1.7]
         */
        annotationRemoved = "AnnotationRemoved",
        /**
         * Represents an action in the annotation pop-up.
         * @remarks
         * [Api set: WordApi 1.8]
         */
        annotationPopupAction = "AnnotationPopupAction",
    }
    /**
     * An enum that specifies an event's source. It can be local or remote (through coauthoring).
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    enum EventSource {
        /**
         * @remarks
         * [Api set: WordApi 1.5]
         */
        local = "Local",
        /**
         * @remarks
         * [Api set: WordApi 1.5]
         */
        remote = "Remote",
    }
    /**
     * Provides information about the content control that raised contentControlAdded event.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    export interface ContentControlAddedEventArgs {
        /**
         * The event type. See Word.EventType for details.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        eventType: Word.EventType | "ContentControlDeleted" | "ContentControlSelectionChanged" | "ContentControlDataChanged" | "ContentControlAdded" | "CommentDeleted" | "CommentSelected" | "CommentDeselected" | "CommentChanged" | "CommentAdded" | "ContentControlEntered" | "ContentControlExited" | "ParagraphAdded" | "ParagraphChanged" | "ParagraphDeleted" | "AnnotationClicked" | "AnnotationHovered" | "AnnotationInserted" | "AnnotationRemoved" | "AnnotationPopupAction";
        /**
         * Gets the content control IDs.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        ids: number[];
        /**
         * The source of the event. It can be local or remote (through coauthoring).
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        source: Word.EventSource | "Local" | "Remote";
    }
    /**
     * Provides information about the content control that raised contentControlDataChanged event.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    export interface ContentControlDataChangedEventArgs {
        /**
         * The event type. See Word.EventType for details.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        eventType: Word.EventType | "ContentControlDeleted" | "ContentControlSelectionChanged" | "ContentControlDataChanged" | "ContentControlAdded" | "CommentDeleted" | "CommentSelected" | "CommentDeselected" | "CommentChanged" | "CommentAdded" | "ContentControlEntered" | "ContentControlExited" | "ParagraphAdded" | "ParagraphChanged" | "ParagraphDeleted" | "AnnotationClicked" | "AnnotationHovered" | "AnnotationInserted" | "AnnotationRemoved" | "AnnotationPopupAction";
        /**
         * Gets the content control IDs.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        ids: number[];
        /**
         * The source of the event. It can be local or remote (through coauthoring).
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        source: Word.EventSource | "Local" | "Remote";
    }
    /**
     * Provides information about the content control that raised contentControlDeleted event.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    export interface ContentControlDeletedEventArgs {
        /**
         * The event type. See Word.EventType for details.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        eventType: Word.EventType | "ContentControlDeleted" | "ContentControlSelectionChanged" | "ContentControlDataChanged" | "ContentControlAdded" | "CommentDeleted" | "CommentSelected" | "CommentDeselected" | "CommentChanged" | "CommentAdded" | "ContentControlEntered" | "ContentControlExited" | "ParagraphAdded" | "ParagraphChanged" | "ParagraphDeleted" | "AnnotationClicked" | "AnnotationHovered" | "AnnotationInserted" | "AnnotationRemoved" | "AnnotationPopupAction";
        /**
         * Gets the content control IDs.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        ids: number[];
        /**
         * The source of the event. It can be local or remote (through coauthoring).
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        source: Word.EventSource | "Local" | "Remote";
    }
    /**
     * Provides information about the content control that raised contentControlEntered event.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    export interface ContentControlEnteredEventArgs {
        /**
         * The event type. See Word.EventType for details.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        eventType: Word.EventType | "ContentControlDeleted" | "ContentControlSelectionChanged" | "ContentControlDataChanged" | "ContentControlAdded" | "CommentDeleted" | "CommentSelected" | "CommentDeselected" | "CommentChanged" | "CommentAdded" | "ContentControlEntered" | "ContentControlExited" | "ParagraphAdded" | "ParagraphChanged" | "ParagraphDeleted" | "AnnotationClicked" | "AnnotationHovered" | "AnnotationInserted" | "AnnotationRemoved" | "AnnotationPopupAction";
        /**
         * Gets the content control IDs.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        ids: number[];
        /**
         * The source of the event. It can be local or remote (through coauthoring).
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        source: Word.EventSource | "Local" | "Remote";
    }
    /**
     * Provides information about the content control that raised contentControlExited event.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    export interface ContentControlExitedEventArgs {
        /**
         * The event type. See Word.EventType for details.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        eventType: Word.EventType | "ContentControlDeleted" | "ContentControlSelectionChanged" | "ContentControlDataChanged" | "ContentControlAdded" | "CommentDeleted" | "CommentSelected" | "CommentDeselected" | "CommentChanged" | "CommentAdded" | "ContentControlEntered" | "ContentControlExited" | "ParagraphAdded" | "ParagraphChanged" | "ParagraphDeleted" | "AnnotationClicked" | "AnnotationHovered" | "AnnotationInserted" | "AnnotationRemoved" | "AnnotationPopupAction";
        /**
         * Gets the content control IDs.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        ids: number[];
        /**
         * The source of the event. It can be local or remote (through coauthoring).
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        source: Word.EventSource | "Local" | "Remote";
    }
    /**
     * Represents a dropped capital letter in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class DropCap extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets the distance (in points) between the dropped capital letter and the paragraph text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly distanceFromText: number;
        /**
         * Gets the name of the font for the dropped capital letter.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly fontName: string;
        /**
         * Gets the height (in lines) of the dropped capital letter.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly linesToDrop: number;
        /**
         * Gets the position of the dropped capital letter.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly position: Word.DropPosition | "None" | "Normal" | "Margin";
        /**
         * Removes the dropped capital letter formatting.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        clear(): void;
        /**
         * Formats the first character in the specified paragraph as a dropped capital letter.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        enable(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.DropCapLoadOptions): Word.DropCap;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.DropCap;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.DropCap;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.DropCap;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.DropCap;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.DropCap` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.DropCapData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.DropCapData;
    }
    /**
     * Provides information about the content control that raised contentControlSelectionChanged event.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    export interface ContentControlSelectionChangedEventArgs {
        /**
         * The event type. See Word.EventType for details.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        eventType: Word.EventType | "ContentControlDeleted" | "ContentControlSelectionChanged" | "ContentControlDataChanged" | "ContentControlAdded" | "CommentDeleted" | "CommentSelected" | "CommentDeselected" | "CommentChanged" | "CommentAdded" | "ContentControlEntered" | "ContentControlExited" | "ParagraphAdded" | "ParagraphChanged" | "ParagraphDeleted" | "AnnotationClicked" | "AnnotationHovered" | "AnnotationInserted" | "AnnotationRemoved" | "AnnotationPopupAction";
        /**
         * Gets the content control IDs.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        ids: number[];
        /**
         * The source of the event. It can be local or remote (through coauthoring).
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        source: Word.EventSource | "Local" | "Remote";
    }
    /**
     * Provides information about the paragraphs that raised the paragraphAdded event.
     *
     * @remarks
     * [Api set: WordApi 1.6]
     */
    export interface ParagraphAddedEventArgs {
        /**
         * The source of the event. It can be local or remote (through coauthoring).
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        source: Word.EventSource | "Local" | "Remote";
        /**
         * The event type. See Word.EventType for details.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        type: Word.EventType | "ContentControlDeleted" | "ContentControlSelectionChanged" | "ContentControlDataChanged" | "ContentControlAdded" | "CommentDeleted" | "CommentSelected" | "CommentDeselected" | "CommentChanged" | "CommentAdded" | "ContentControlEntered" | "ContentControlExited" | "ParagraphAdded" | "ParagraphChanged" | "ParagraphDeleted" | "AnnotationClicked" | "AnnotationHovered" | "AnnotationInserted" | "AnnotationRemoved" | "AnnotationPopupAction";
        /**
         * Gets the unique IDs of the involved paragraphs. IDs are in standard 8-4-4-4-12 GUID format without curly braces and differ across sessions and coauthors.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        uniqueLocalIds: string[];
    }
    /**
     * Provides information about the paragraphs that raised the paragraphChanged event.
     *
     * @remarks
     * [Api set: WordApi 1.6]
     */
    export interface ParagraphChangedEventArgs {
        /**
         * The source of the event. It can be local or remote (through coauthoring).
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        source: Word.EventSource | "Local" | "Remote";
        /**
         * The event type. See Word.EventType for details.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        type: Word.EventType | "ContentControlDeleted" | "ContentControlSelectionChanged" | "ContentControlDataChanged" | "ContentControlAdded" | "CommentDeleted" | "CommentSelected" | "CommentDeselected" | "CommentChanged" | "CommentAdded" | "ContentControlEntered" | "ContentControlExited" | "ParagraphAdded" | "ParagraphChanged" | "ParagraphDeleted" | "AnnotationClicked" | "AnnotationHovered" | "AnnotationInserted" | "AnnotationRemoved" | "AnnotationPopupAction";
        /**
         * Gets the unique IDs of the involved paragraphs. IDs are in standard 8-4-4-4-12 GUID format without curly braces and differ across sessions and coauthors.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        uniqueLocalIds: string[];
    }
    /**
     * Provides information about the paragraphs that raised the paragraphDeleted event.
     *
     * @remarks
     * [Api set: WordApi 1.6]
     */
    export interface ParagraphDeletedEventArgs {
        /**
         * The source of the event. It can be local or remote (through coauthoring).
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        source: Word.EventSource | "Local" | "Remote";
        /**
         * The event type. See Word.EventType for details.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        type: Word.EventType | "ContentControlDeleted" | "ContentControlSelectionChanged" | "ContentControlDataChanged" | "ContentControlAdded" | "CommentDeleted" | "CommentSelected" | "CommentDeselected" | "CommentChanged" | "CommentAdded" | "ContentControlEntered" | "ContentControlExited" | "ParagraphAdded" | "ParagraphChanged" | "ParagraphDeleted" | "AnnotationClicked" | "AnnotationHovered" | "AnnotationInserted" | "AnnotationRemoved" | "AnnotationPopupAction";
        /**
         * Gets the unique IDs of the involved paragraphs. IDs are in standard 8-4-4-4-12 GUID format without curly braces and differ across sessions and coauthors.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        uniqueLocalIds: string[];
    }
    /**
     * Provides information about the comments that raised the comment event.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface CommentEventArgs {
        /**
         * Represents how the comment changed event is triggered.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        changeType: Word.CommentChangeType | "none" | "edited" | "resolved" | "reopened" | "replyAdded" | "replyDeleted" | "replyEdited";
        /**
         * Gets the CommentDetail array which contains the IDs and reply IDs of the involved comments.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        commentDetails: Word.CommentDetail[];
        /**
         * The source of the event. It can be local or remote (through coauthoring).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        source: Word.EventSource | "Local" | "Remote";
        /**
         * The event type. See Word.EventType for details.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type: Word.EventType | "ContentControlDeleted" | "ContentControlSelectionChanged" | "ContentControlDataChanged" | "ContentControlAdded" | "CommentDeleted" | "CommentSelected" | "CommentDeselected" | "CommentChanged" | "CommentAdded" | "ContentControlEntered" | "ContentControlExited" | "ParagraphAdded" | "ParagraphChanged" | "ParagraphDeleted" | "AnnotationClicked" | "AnnotationHovered" | "AnnotationInserted" | "AnnotationRemoved" | "AnnotationPopupAction";
    }
    /**
     * A structure for the ID and reply IDs of this comment.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface CommentDetail {
        /**
         * Represents the ID of this comment.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        id: string;
        /**
         * Represents the IDs of the replies to this comment.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        replyIds: string[];
    }
    /**
     * Represents how the comments in the event were changed.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum CommentChangeType {
        /**
         * No comment changed event is triggered.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "none",
        /**
         * A comment was edited.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        edited = "edited",
        /**
         * A comment was resolved.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        resolved = "resolved",
        /**
         * A comment was reopened.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        reopened = "reopened",
        /**
         * A reply was added.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        replyAdded = "replyAdded",
        /**
         * A reply was deleted.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        replyDeleted = "replyDeleted",
        /**
         * A reply was edited.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        replyEdited = "replyEdited",
    }
    /**
     * Specifies supported content control types and subtypes.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    enum ContentControlType {
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        unknown = "Unknown",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        richTextInline = "RichTextInline",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        richTextParagraphs = "RichTextParagraphs",
        /**
         * Contains a whole cell.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        richTextTableCell = "RichTextTableCell",
        /**
         * Contains a whole row.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        richTextTableRow = "RichTextTableRow",
        /**
         * Contains a whole table.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        richTextTable = "RichTextTable",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        plainTextInline = "PlainTextInline",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        plainTextParagraph = "PlainTextParagraph",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        picture = "Picture",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        buildingBlockGallery = "BuildingBlockGallery",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        checkBox = "CheckBox",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        comboBox = "ComboBox",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        dropDownList = "DropDownList",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        datePicker = "DatePicker",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        repeatingSection = "RepeatingSection",
        /**
         * Identifies a rich text content control.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        richText = "RichText",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        plainText = "PlainText",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        group = "Group",
    }
    /**
     * ContentControl appearance.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     *
     * Content control appearance options are BoundingBox, Tags, or Hidden.
     */
    enum ContentControlAppearance {
        /**
         * Represents a content control shown as a shaded rectangle or bounding box (with optional title).
         * @remarks
         * [Api set: WordApi 1.1]
         */
        boundingBox = "BoundingBox",
        /**
         * Represents a content control shown as start and end markers.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        tags = "Tags",
        /**
         * Represents a content control that isn't shown.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        hidden = "Hidden",
    }
    /**
     * Content control level types.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ContentControlLevel {
        /**
         * Represents an inline content control.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        inline = "Inline",
        /**
         * Represents a paragraph-level content control.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        paragraph = "Paragraph",
        /**
         * Represents a row-level content control.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        row = "Row",
        /**
         * Represents a cell-level content control.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cell = "Cell",
    }
    /**
     * Represents the state of the content control.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ContentControlState {
        /**
         * Error state.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        error = "Error",
        /**
         * Warning state.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        warning = "Warning",
    }
    /**
     * The supported styles for underline format.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    enum UnderlineType {
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        mixed = "Mixed",
        /**
         * No underline.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        none = "None",
        /**
         * Warning: hidden has been deprecated.
         * @deprecated Hidden is no longer supported.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        hidden = "Hidden",
        /**
         * Warning: dotLine has been deprecated.
         * @deprecated DotLine is no longer supported.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        dotLine = "DotLine",
        /**
         * A single underline. This is the default value.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        single = "Single",
        /**
         * Only underline individual words.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        word = "Word",
        /**
         * A double underline.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        double = "Double",
        /**
         * A single thick underline.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        thick = "Thick",
        /**
         * A dotted underline.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        dotted = "Dotted",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        dottedHeavy = "DottedHeavy",
        /**
         * A single dash underline.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        dashLine = "DashLine",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        dashLineHeavy = "DashLineHeavy",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        dashLineLong = "DashLineLong",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        dashLineLongHeavy = "DashLineLongHeavy",
        /**
         * An alternating dot-dash underline.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        dotDashLine = "DotDashLine",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        dotDashLineHeavy = "DotDashLineHeavy",
        /**
         * An alternating dot-dot-dash underline.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        twoDotDashLine = "TwoDotDashLine",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        twoDotDashLineHeavy = "TwoDotDashLineHeavy",
        /**
         * A single wavy underline.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        wave = "Wave",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        waveHeavy = "WaveHeavy",
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        waveDouble = "WaveDouble",
    }
    /**
     * Specifies the form of a break.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    enum BreakType {
        /**
         * Page break at the insertion point.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        page = "Page",
        /**
         * Warning: next has been deprecated. Use sectionNext instead.
         * @deprecated Use sectionNext instead.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        next = "Next",
        /**
         * Section break on next page.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        sectionNext = "SectionNext",
        /**
         * New section without a corresponding page break.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        sectionContinuous = "SectionContinuous",
        /**
         * Section break with the next section beginning on the next even-numbered page. If the section break falls on an even-numbered page, Word leaves the next odd-numbered page blank.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        sectionEven = "SectionEven",
        /**
         * Section break with the next section beginning on the next odd-numbered page. If the section break falls on an odd-numbered page, Word leaves the next even-numbered page blank.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        sectionOdd = "SectionOdd",
        /**
         * Line break.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        line = "Line",
    }
    /**
     * The insertion location types.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     *
     * To be used with an API call, such as `obj.insertSomething(newStuff, location);`.
     * If the location is "Before" or "After", the new content will be outside of the modified object.
     * If the location is "Start" or "End", the new content will be included as part of the modified object.
     */
    enum InsertLocation {
        /**
         * Add content before the contents of the calling object.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        before = "Before",
        /**
         * Add content after the contents of the calling object.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        after = "After",
        /**
         * Prepend content to the contents of the calling object.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        start = "Start",
        /**
         * Append content to the contents of the calling object.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        end = "End",
        /**
         * Replace the contents of the current object.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        replace = "Replace",
    }
    /**
     * @remarks
     * [Api set: WordApi 1.1]
     */
    enum Alignment {
        /**
         * @remarks
         * [Api set: WordApi 1.1]
         */
        mixed = "Mixed",
        /**
         * Unknown alignment.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        unknown = "Unknown",
        /**
         * Alignment to the left.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        left = "Left",
        /**
         * Alignment to the center.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        centered = "Centered",
        /**
         * Alignment to the right.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        right = "Right",
        /**
         * Fully justified alignment.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        justified = "Justified",
    }
    /**
     * @remarks
     * [Api set: WordApi 1.1]
     */
    enum HeaderFooterType {
        /**
         * Returns the header or footer on all pages of a section, but excludes the first page or even pages if they are different.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        primary = "Primary",
        /**
         * Returns the header or footer on the first page of a section.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        firstPage = "FirstPage",
        /**
         * Returns all headers or footers on even-numbered pages of a section.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        evenPages = "EvenPages",
    }
    /**
     * Represents the types of body objects.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    enum BodyType {
        /**
         * Unknown body type.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        unknown = "Unknown",
        /**
         * Main document body.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        mainDoc = "MainDoc",
        /**
         * Section body.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        section = "Section",
        /**
         * Header body.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        header = "Header",
        /**
         * Footer body.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        footer = "Footer",
        /**
         * Table cell body.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        tableCell = "TableCell",
        /**
         * Footnote body.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        footnote = "Footnote",
        /**
         * Endnote body.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        endnote = "Endnote",
        /**
         * Note body e.g., endnote, footnote.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        noteItem = "NoteItem",
        /**
         * Shape body.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shape = "Shape",
    }
    /**
     * This enum sets where the cursor (insertion point) in the document is after a selection.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    enum SelectionMode {
        /**
         * The entire range is selected.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        select = "Select",
        /**
         * The cursor is at the beginning of the selection (just before the start of the selected range).
         * @remarks
         * [Api set: WordApi 1.1]
         */
        start = "Start",
        /**
         * The cursor is at the end of the selection (just after the end of the selected range).
         * @remarks
         * [Api set: WordApi 1.1]
         */
        end = "End",
    }
    /**
     * @remarks
     * [Api set: WordApiDesktop 1.1]
     */
    enum ImageFormat {
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        unsupported = "Unsupported",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        undefined = "Undefined",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        bmp = "Bmp",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        jpeg = "Jpeg",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        gif = "Gif",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        tiff = "Tiff",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        png = "Png",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        icon = "Icon",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        exif = "Exif",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        wmf = "Wmf",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        emf = "Emf",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        pict = "Pict",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        pdf = "Pdf",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        svg = "Svg",
    }
    /**
     * Represents the location of a range. You can get range by calling getRange on different objects such as {@link Word.Paragraph} and {@link Word.ContentControl}.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     */
    enum RangeLocation {
        /**
         * The object's whole range. If the object is a paragraph content control or table content control, the EOP or Table characters after the content control are also included.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        whole = "Whole",
        /**
         * The starting point of the object. For content control, it's the point after the opening tag.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        start = "Start",
        /**
         * The ending point of the object. For paragraph, it's the point before the EOP (end of paragraph). For content control, it's the point before the closing tag.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        end = "End",
        /**
         * For content control only. It's the point before the opening tag.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        before = "Before",
        /**
         * The point after the object. If the object is a paragraph content control or table content control, it's the point after the EOP or Table characters.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        after = "After",
        /**
         * The range between 'Start' and 'End'.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        content = "Content",
    }
    /**
     * @remarks
     * [Api set: WordApi 1.3]
     */
    enum LocationRelation {
        /**
         * Indicates that this instance and the range are in different sub-documents.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        unrelated = "Unrelated",
        /**
         * Indicates that this instance and the range represent the same range.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        equal = "Equal",
        /**
         * Indicates that this instance contains the range and that it shares the same start character. The range doesn't share the same end character as this instance.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        containsStart = "ContainsStart",
        /**
         * Indicates that this instance contains the range and that it shares the same end character. The range doesn't share the same start character as this instance.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        containsEnd = "ContainsEnd",
        /**
         * Indicates that this instance contains the range, with the exception of the start and end character of this instance.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        contains = "Contains",
        /**
         * Indicates that this instance is inside the range and that it shares the same start character. The range doesn't share the same end character as this instance.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        insideStart = "InsideStart",
        /**
         * Indicates that this instance is inside the range and that it shares the same end character. The range doesn't share the same start character as this instance.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        insideEnd = "InsideEnd",
        /**
         * Indicates that this instance is inside the range. The range doesn't share the same start and end characters as this instance.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        inside = "Inside",
        /**
         * Indicates that this instance occurs before, and is adjacent to, the range.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        adjacentBefore = "AdjacentBefore",
        /**
         * Indicates that this instance starts before the range and overlaps the range's first character.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        overlapsBefore = "OverlapsBefore",
        /**
         * Indicates that this instance occurs before the range.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        before = "Before",
        /**
         * Indicates that this instance occurs after, and is adjacent to, the range.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        adjacentAfter = "AdjacentAfter",
        /**
         * Indicates that this instance starts inside the range and overlaps the range’s last character.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        overlapsAfter = "OverlapsAfter",
        /**
         * Indicates that this instance occurs after the range.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        after = "After",
    }
    /**
     * @remarks
     * [Api set: WordApi 1.3]
     */
    enum BorderLocation {
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        top = "Top",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        left = "Left",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        bottom = "Bottom",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        right = "Right",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        insideHorizontal = "InsideHorizontal",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        insideVertical = "InsideVertical",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        inside = "Inside",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        outside = "Outside",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        all = "All",
    }
    /**
     * @remarks
     * [Api set: WordApi 1.3]
     */
    enum CellPaddingLocation {
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        top = "Top",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        left = "Left",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        bottom = "Bottom",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        right = "Right",
    }
    /**
     * Represents the width of a style's border.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.1]
     */
    enum BorderWidth {
        /**
         * None width.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        none = "None",
        /**
         * 0.25 point.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        pt025 = "Pt025",
        /**
         * 0.50 point.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        pt050 = "Pt050",
        /**
         * 0.75 point.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        pt075 = "Pt075",
        /**
         * 1.00 point. This is the default.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        pt100 = "Pt100",
        /**
         * 1.50 points.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        pt150 = "Pt150",
        /**
         * 2.25 points.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        pt225 = "Pt225",
        /**
         * 3.00 points.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        pt300 = "Pt300",
        /**
         * 4.50 points.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        pt450 = "Pt450",
        /**
         * 6.00 points.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        pt600 = "Pt600",
        /**
         * Mixed width.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        mixed = "Mixed",
    }
    /**
     * @remarks
     * [Api set: WordApi 1.3]
     */
    enum BorderType {
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        mixed = "Mixed",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        none = "None",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        single = "Single",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        double = "Double",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        dotted = "Dotted",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        dashed = "Dashed",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        dotDashed = "DotDashed",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        dot2Dashed = "Dot2Dashed",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        triple = "Triple",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        thinThickSmall = "ThinThickSmall",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        thickThinSmall = "ThickThinSmall",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        thinThickThinSmall = "ThinThickThinSmall",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        thinThickMed = "ThinThickMed",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        thickThinMed = "ThickThinMed",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        thinThickThinMed = "ThinThickThinMed",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        thinThickLarge = "ThinThickLarge",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        thickThinLarge = "ThickThinLarge",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        thinThickThinLarge = "ThinThickThinLarge",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        wave = "Wave",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        doubleWave = "DoubleWave",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        dashedSmall = "DashedSmall",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        dashDotStroked = "DashDotStroked",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        threeDEmboss = "ThreeDEmboss",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        threeDEngrave = "ThreeDEngrave",
    }
    /**
     * @remarks
     * [Api set: WordApi 1.3]
     */
    enum VerticalAlignment {
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        mixed = "Mixed",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        top = "Top",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        center = "Center",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        bottom = "Bottom",
    }
    /**
     * Represents the type of baseline alignment.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum BaselineAlignment {
        /**
         * Represents top baseline alignment.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        top = "Top",
        /**
         * Represents center baseline alignment.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        center = "Center",
        /**
         * Represents baseline alignment.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        baseline = "Baseline",
        /**
         * Represents Far East 50% baseline alignment.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        farEast50 = "FarEast50",
        /**
         * Represents automatic baseline alignment.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        auto = "Auto",
    }
    /**
     * @remarks
     * [Api set: WordApi 1.3]
     */
    enum ListLevelType {
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        bullet = "Bullet",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        number = "Number",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        picture = "Picture",
    }
    /**
     * @remarks
     * [Api set: WordApi 1.3]
     */
    enum ListBullet {
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        custom = "Custom",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        solid = "Solid",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        hollow = "Hollow",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        square = "Square",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        diamonds = "Diamonds",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        arrow = "Arrow",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        checkmark = "Checkmark",
    }
    /**
     * @remarks
     * [Api set: WordApi 1.3]
     */
    enum ListNumbering {
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        none = "None",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        arabic = "Arabic",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        upperRoman = "UpperRoman",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        lowerRoman = "LowerRoman",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        upperLetter = "UpperLetter",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        lowerLetter = "LowerLetter",
    }
    /**
     * Represents the built-in style in a Word document.
     *
     * @remarks
     * [Api set: WordApi 1.3]
     *
     * Important: This enum was renamed from `Style` to `BuiltInStyleName` in WordApi 1.5.
     */
    enum BuiltInStyleName {
        /**
         * Mixed styles or other style not in this list.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        other = "Other",
        /**
         * Reset character and paragraph style to default.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        normal = "Normal",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        heading1 = "Heading1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        heading2 = "Heading2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        heading3 = "Heading3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        heading4 = "Heading4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        heading5 = "Heading5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        heading6 = "Heading6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        heading7 = "Heading7",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        heading8 = "Heading8",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        heading9 = "Heading9",
        /**
         * Table-of-content level 1.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        toc1 = "Toc1",
        /**
         * Table-of-content level 2.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        toc2 = "Toc2",
        /**
         * Table-of-content level 3.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        toc3 = "Toc3",
        /**
         * Table-of-content level 4.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        toc4 = "Toc4",
        /**
         * Table-of-content level 5.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        toc5 = "Toc5",
        /**
         * Table-of-content level 6.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        toc6 = "Toc6",
        /**
         * Table-of-content level 7.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        toc7 = "Toc7",
        /**
         * Table-of-content level 8.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        toc8 = "Toc8",
        /**
         * Table-of-content level 9.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        toc9 = "Toc9",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        footnoteText = "FootnoteText",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        header = "Header",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        footer = "Footer",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        caption = "Caption",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        footnoteReference = "FootnoteReference",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        endnoteReference = "EndnoteReference",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        endnoteText = "EndnoteText",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        title = "Title",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        subtitle = "Subtitle",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        hyperlink = "Hyperlink",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        strong = "Strong",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        emphasis = "Emphasis",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        noSpacing = "NoSpacing",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listParagraph = "ListParagraph",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        quote = "Quote",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        intenseQuote = "IntenseQuote",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        subtleEmphasis = "SubtleEmphasis",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        intenseEmphasis = "IntenseEmphasis",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        subtleReference = "SubtleReference",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        intenseReference = "IntenseReference",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        bookTitle = "BookTitle",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        bibliography = "Bibliography",
        /**
         * Table-of-content heading.
         * @remarks
         * [Api set: WordApi 1.3]
         */
        tocHeading = "TocHeading",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        tableGrid = "TableGrid",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        plainTable1 = "PlainTable1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        plainTable2 = "PlainTable2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        plainTable3 = "PlainTable3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        plainTable4 = "PlainTable4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        plainTable5 = "PlainTable5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        tableGridLight = "TableGridLight",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable1Light = "GridTable1Light",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable1Light_Accent1 = "GridTable1Light_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable1Light_Accent2 = "GridTable1Light_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable1Light_Accent3 = "GridTable1Light_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable1Light_Accent4 = "GridTable1Light_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable1Light_Accent5 = "GridTable1Light_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable1Light_Accent6 = "GridTable1Light_Accent6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable2 = "GridTable2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable2_Accent1 = "GridTable2_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable2_Accent2 = "GridTable2_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable2_Accent3 = "GridTable2_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable2_Accent4 = "GridTable2_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable2_Accent5 = "GridTable2_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable2_Accent6 = "GridTable2_Accent6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable3 = "GridTable3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable3_Accent1 = "GridTable3_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable3_Accent2 = "GridTable3_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable3_Accent3 = "GridTable3_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable3_Accent4 = "GridTable3_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable3_Accent5 = "GridTable3_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable3_Accent6 = "GridTable3_Accent6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable4 = "GridTable4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable4_Accent1 = "GridTable4_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable4_Accent2 = "GridTable4_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable4_Accent3 = "GridTable4_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable4_Accent4 = "GridTable4_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable4_Accent5 = "GridTable4_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable4_Accent6 = "GridTable4_Accent6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable5Dark = "GridTable5Dark",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable5Dark_Accent1 = "GridTable5Dark_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable5Dark_Accent2 = "GridTable5Dark_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable5Dark_Accent3 = "GridTable5Dark_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable5Dark_Accent4 = "GridTable5Dark_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable5Dark_Accent5 = "GridTable5Dark_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable5Dark_Accent6 = "GridTable5Dark_Accent6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable6Colorful = "GridTable6Colorful",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable6Colorful_Accent1 = "GridTable6Colorful_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable6Colorful_Accent2 = "GridTable6Colorful_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable6Colorful_Accent3 = "GridTable6Colorful_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable6Colorful_Accent4 = "GridTable6Colorful_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable6Colorful_Accent5 = "GridTable6Colorful_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable6Colorful_Accent6 = "GridTable6Colorful_Accent6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable7Colorful = "GridTable7Colorful",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable7Colorful_Accent1 = "GridTable7Colorful_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable7Colorful_Accent2 = "GridTable7Colorful_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable7Colorful_Accent3 = "GridTable7Colorful_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable7Colorful_Accent4 = "GridTable7Colorful_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable7Colorful_Accent5 = "GridTable7Colorful_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        gridTable7Colorful_Accent6 = "GridTable7Colorful_Accent6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable1Light = "ListTable1Light",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable1Light_Accent1 = "ListTable1Light_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable1Light_Accent2 = "ListTable1Light_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable1Light_Accent3 = "ListTable1Light_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable1Light_Accent4 = "ListTable1Light_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable1Light_Accent5 = "ListTable1Light_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable1Light_Accent6 = "ListTable1Light_Accent6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable2 = "ListTable2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable2_Accent1 = "ListTable2_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable2_Accent2 = "ListTable2_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable2_Accent3 = "ListTable2_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable2_Accent4 = "ListTable2_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable2_Accent5 = "ListTable2_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable2_Accent6 = "ListTable2_Accent6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable3 = "ListTable3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable3_Accent1 = "ListTable3_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable3_Accent2 = "ListTable3_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable3_Accent3 = "ListTable3_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable3_Accent4 = "ListTable3_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable3_Accent5 = "ListTable3_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable3_Accent6 = "ListTable3_Accent6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable4 = "ListTable4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable4_Accent1 = "ListTable4_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable4_Accent2 = "ListTable4_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable4_Accent3 = "ListTable4_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable4_Accent4 = "ListTable4_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable4_Accent5 = "ListTable4_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable4_Accent6 = "ListTable4_Accent6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable5Dark = "ListTable5Dark",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable5Dark_Accent1 = "ListTable5Dark_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable5Dark_Accent2 = "ListTable5Dark_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable5Dark_Accent3 = "ListTable5Dark_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable5Dark_Accent4 = "ListTable5Dark_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable5Dark_Accent5 = "ListTable5Dark_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable5Dark_Accent6 = "ListTable5Dark_Accent6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable6Colorful = "ListTable6Colorful",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable6Colorful_Accent1 = "ListTable6Colorful_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable6Colorful_Accent2 = "ListTable6Colorful_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable6Colorful_Accent3 = "ListTable6Colorful_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable6Colorful_Accent4 = "ListTable6Colorful_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable6Colorful_Accent5 = "ListTable6Colorful_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable6Colorful_Accent6 = "ListTable6Colorful_Accent6",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable7Colorful = "ListTable7Colorful",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable7Colorful_Accent1 = "ListTable7Colorful_Accent1",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable7Colorful_Accent2 = "ListTable7Colorful_Accent2",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable7Colorful_Accent3 = "ListTable7Colorful_Accent3",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable7Colorful_Accent4 = "ListTable7Colorful_Accent4",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable7Colorful_Accent5 = "ListTable7Colorful_Accent5",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        listTable7Colorful_Accent6 = "ListTable7Colorful_Accent6",
    }
    /**
     * @remarks
     * [Api set: WordApi 1.3]
     */
    enum DocumentPropertyType {
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        string = "String",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        number = "Number",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        date = "Date",
        /**
         * @remarks
         * [Api set: WordApi 1.3]
         */
        boolean = "Boolean",
    }
    /**
     * Represents the type of style.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    enum StyleType {
        /**
         * Represents that the style is a character style.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        character = "Character",
        /**
         * Represents that the style is a list style. Currently supported on desktop.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        list = "List",
        /**
         * Represents that the style is a paragraph style.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        paragraph = "Paragraph",
        /**
         * Represents that the style is a table style.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        table = "Table",
    }
    /**
     * Represents the outline levels.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    enum OutlineLevel {
        /**
         * Represents outline level 1.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        outlineLevel1 = "OutlineLevel1",
        /**
         * Represents outline level 2.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        outlineLevel2 = "OutlineLevel2",
        /**
         * Represents outline level 3.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        outlineLevel3 = "OutlineLevel3",
        /**
         * Represents outline level 4.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        outlineLevel4 = "OutlineLevel4",
        /**
         * Represents outline level 5.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        outlineLevel5 = "OutlineLevel5",
        /**
         * Represents outline level 6.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        outlineLevel6 = "OutlineLevel6",
        /**
         * Represents outline level 7.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        outlineLevel7 = "OutlineLevel7",
        /**
         * Represents outline level 8.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        outlineLevel8 = "OutlineLevel8",
        /**
         * Represents outline level 9.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        outlineLevel9 = "OutlineLevel9",
        /**
         * Represents outline level body text, not an outline level.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        outlineLevelBodyText = "OutlineLevelBodyText",
    }
    /**
     * Specifies the close behavior for `Document.close`.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    enum CloseBehavior {
        /**
         * Saves the changes before closing the document.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        save = "Save",
        /**
         * Discard the possible changes when closing the document.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        skipSave = "SkipSave",
    }
    /**
     * Specifies the save behavior for `Document.save`.
     *
     * @remarks
     * [Api set: WordApi 1.1]
     */
    enum SaveBehavior {
        /**
         * Saves the document without prompting the user. If it's a new document,
                    it will be saved with the default name or specified name in the default location.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        save = "Save",
        /**
         * Displays the "Save As" dialog to the user if the document hasn't been saved.
                    Won't take effect if the document was previously saved.
         * @remarks
         * [Api set: WordApi 1.1]
         */
        prompt = "Prompt",
    }
    /**
     * Represents the type of Field.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    enum FieldType {
        /**
         * Represents that the field type is Add-in.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        addin = "Addin",
        /**
         * Represents that the field type is AddressBlock.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        addressBlock = "AddressBlock",
        /**
         * Represents that the field type is Advance.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        advance = "Advance",
        /**
         * Represents that the field type is Ask.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        ask = "Ask",
        /**
         * Represents that the field type is Author.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        author = "Author",
        /**
         * Represents that the field type is AutoText.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        autoText = "AutoText",
        /**
         * Represents that the field type is AutoTextList.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        autoTextList = "AutoTextList",
        /**
         * Represents that the field type is Barcode.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        barCode = "BarCode",
        /**
         * Represents that the field type is Bibliography.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        bibliography = "Bibliography",
        /**
         * Represents that the field type is BidiOutline.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        bidiOutline = "BidiOutline",
        /**
         * Represents that the field type is Citation.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        citation = "Citation",
        /**
         * Represents that the field type is Comments.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        comments = "Comments",
        /**
         * Represents that the field type is Compare.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        compare = "Compare",
        /**
         * Represents that the field type is CreateDate.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        createDate = "CreateDate",
        /**
         * Represents that the field type is Data.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        data = "Data",
        /**
         * Represents that the field type is Database.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        database = "Database",
        /**
         * Represents that the field type is Date.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        date = "Date",
        /**
         * Represents that the field type is DisplayBarcode.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        displayBarcode = "DisplayBarcode",
        /**
         * Represents that the field type is DocumentProperty
         * @remarks
         * [Api set: WordApi 1.5]
         */
        docProperty = "DocProperty",
        /**
         * Represents that the field type is DocumentVariable.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        docVariable = "DocVariable",
        /**
         * Represents that the field type is EditTime.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        editTime = "EditTime",
        /**
         * Represents that the field type is Embedded.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        embedded = "Embedded",
        /**
         * Represents that the field type is Equation.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        eq = "EQ",
        /**
         * Represents that the field type is Expression.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        expression = "Expression",
        /**
         * Represents that the field type is FileName.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        fileName = "FileName",
        /**
         * Represents that the field type is FileSize.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        fileSize = "FileSize",
        /**
         * Represents that the field type is FillIn.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        fillIn = "FillIn",
        /**
         * Represents that the field type is FormCheckbox.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        formCheckbox = "FormCheckbox",
        /**
         * Represents that the field type is FormDropdown.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        formDropdown = "FormDropdown",
        /**
         * Represents that the field type is FormText.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        formText = "FormText",
        /**
         * Represents that the field type is GotoButton.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        gotoButton = "GotoButton",
        /**
         * Represents that the field type is GreetingLine.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        greetingLine = "GreetingLine",
        /**
         * Represents that the field type is Hyperlink.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        hyperlink = "Hyperlink",
        /**
         * Represents that the field type is If.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        if = "If",
        /**
         * Represents that the field type is Import.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        import = "Import",
        /**
         * Represents that the field type is Include.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        include = "Include",
        /**
         * Represents that the field type is IncludePicture.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        includePicture = "IncludePicture",
        /**
         * Represents that the field type is IncludeText.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        includeText = "IncludeText",
        /**
         * Represents that the field type is Index.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        index = "Index",
        /**
         * Represents that the field type is Information.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        info = "Info",
        /**
         * Represents that the field type is Keywords.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        keywords = "Keywords",
        /**
         * Represents that the field type is LastSavedBy.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        lastSavedBy = "LastSavedBy",
        /**
         * Represents that the field type is Link.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        link = "Link",
        /**
         * Represents that the field type is ListNumber.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        listNum = "ListNum",
        /**
         * Represents that the field type is MacroButton.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        macroButton = "MacroButton",
        /**
         * Represents that the field type is MergeBarcode.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        mergeBarcode = "MergeBarcode",
        /**
         * Represents that the field type is MergeField.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        mergeField = "MergeField",
        /**
         * Represents that the field type is MergeRecord.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        mergeRec = "MergeRec",
        /**
         * Represents that the field type is MergeSequence.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        mergeSeq = "MergeSeq",
        /**
         * Represents that the field type is Next.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        next = "Next",
        /**
         * Represents that the field type is NextIf.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        nextIf = "NextIf",
        /**
         * Represents that the field type is NoteReference.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        noteRef = "NoteRef",
        /**
         * Represents that the field type is NumberOfCharacters.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        numChars = "NumChars",
        /**
         * Represents that the field type is NumberOfPages.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        numPages = "NumPages",
        /**
         * Represents that the field type is NumberOfWords.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        numWords = "NumWords",
        /**
         * Represents that the field type is ActiveXControl.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        ocx = "OCX",
        /**
         * Represents that the field type is Page.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        page = "Page",
        /**
         * Represents that the field type is PageReference.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        pageRef = "PageRef",
        /**
         * Represents that the field type is Print.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        print = "Print",
        /**
         * Represents that the field type is PrintDate.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        printDate = "PrintDate",
        /**
         * Represents that the field type is Private.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        private = "Private",
        /**
         * Represents that the field type is Quote.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        quote = "Quote",
        /**
         * Represents that the field type is ReferencedDocument.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        rd = "RD",
        /**
         * Represents that the field type is Reference.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        ref = "Ref",
        /**
         * Represents that the field type is RevisionNumber.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        revNum = "RevNum",
        /**
         * Represents that the field type is SaveDate.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        saveDate = "SaveDate",
        /**
         * Represents that the field type is Section.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        section = "Section",
        /**
         * Represents that the field type is SectionPages.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        sectionPages = "SectionPages",
        /**
         * Represents that the field type is Sequence.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        seq = "Seq",
        /**
         * Represents that the field type is Set.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        set = "Set",
        /**
         * Represents that the field type is Shape.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        shape = "Shape",
        /**
         * Represents that the field type is SkipIf.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        skipIf = "SkipIf",
        /**
         * Represents that the field type is StyleReference.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        styleRef = "StyleRef",
        /**
         * Represents that the field type is Subject.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        subject = "Subject",
        /**
         * Represents that the field type is Subscriber.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        subscriber = "Subscriber",
        /**
         * Represents that the field type is Symbol.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        symbol = "Symbol",
        /**
         * Represents that the field type is TableOfAuthoritiesEntry.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        ta = "TA",
        /**
         * Represents that the field type is TableOfContentsEntry.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        tc = "TC",
        /**
         * Represents that the field type is Template.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        template = "Template",
        /**
         * Represents that the field type is Time.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        time = "Time",
        /**
         * Represents that the field type is Title.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        title = "Title",
        /**
         * Represents that the field type is TableOfAuthorities.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        toa = "TOA",
        /**
         * Represents that the field type is TableOfContents.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        toc = "TOC",
        /**
         * Represents that the field type is UserAddress.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        userAddress = "UserAddress",
        /**
         * Represents that the field type is UserInitials.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        userInitials = "UserInitials",
        /**
         * Represents that the field type is UserName.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        userName = "UserName",
        /**
         * Represents that the field type is IndexEntry.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        xe = "XE",
        /**
         * Represents that the field type is Empty.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        empty = "Empty",
        /**
         * Represents the field types not supported by the Office JavaScript API.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        others = "Others",
        /**
         * Represents that the field type is Undefined.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        undefined = "Undefined",
    }
    /**
     * Represents the kind of field. Indicates how the field works in relation to updating.
     *
     * @remarks
     * [Api set: WordApi 1.5]
     */
    enum FieldKind {
        /**
         * Represents that the field is invalid. For example, a pair of field characters with nothing inside.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        none = "None",
        /**
         * Represents that the field is automatically updated each time it's displayed or each time the page is reformatted, but which can also be manually updated.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        hot = "Hot",
        /**
         * Represents that the field is automatically updated when the source changes or the field can be manually updated.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        warm = "Warm",
        /**
         * Represents that the field doesn't have a result.
         * @remarks
         * [Api set: WordApi 1.5]
         */
        cold = "Cold",
    }
    /**
     * Represents the character inserted after the list item mark.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.1]
     */
    enum TrailingCharacter {
        /**
         * A tab is inserted.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        trailingTab = "TrailingTab",
        /**
         * A space is inserted. Default.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        trailingSpace = "TrailingSpace",
        /**
         * No character is inserted.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        trailingNone = "TrailingNone",
    }
    /**
     * @remarks
     * [Api set: WordApiDesktop 1.1]
     */
    enum ListBuiltInNumberStyle {
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        none = "None",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        arabic = "Arabic",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        upperRoman = "UpperRoman",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        lowerRoman = "LowerRoman",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        upperLetter = "UpperLetter",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        lowerLetter = "LowerLetter",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        ordinal = "Ordinal",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        cardinalText = "CardinalText",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        ordinalText = "OrdinalText",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        kanji = "Kanji",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        kanjiDigit = "KanjiDigit",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        aiueoHalfWidth = "AiueoHalfWidth",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        irohaHalfWidth = "IrohaHalfWidth",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        arabicFullWidth = "ArabicFullWidth",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        kanjiTraditional = "KanjiTraditional",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        kanjiTraditional2 = "KanjiTraditional2",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        numberInCircle = "NumberInCircle",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        aiueo = "Aiueo",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        iroha = "Iroha",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        arabicLZ = "ArabicLZ",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        bullet = "Bullet",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        ganada = "Ganada",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        chosung = "Chosung",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        gbnum1 = "GBNum1",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        gbnum2 = "GBNum2",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        gbnum3 = "GBNum3",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        gbnum4 = "GBNum4",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        zodiac1 = "Zodiac1",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        zodiac2 = "Zodiac2",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        zodiac3 = "Zodiac3",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        tradChinNum1 = "TradChinNum1",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        tradChinNum2 = "TradChinNum2",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        tradChinNum3 = "TradChinNum3",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        tradChinNum4 = "TradChinNum4",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        simpChinNum1 = "SimpChinNum1",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        simpChinNum2 = "SimpChinNum2",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        simpChinNum3 = "SimpChinNum3",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        simpChinNum4 = "SimpChinNum4",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        hanjaRead = "HanjaRead",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        hanjaReadDigit = "HanjaReadDigit",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        hangul = "Hangul",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        hanja = "Hanja",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        hebrew1 = "Hebrew1",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        arabic1 = "Arabic1",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        hebrew2 = "Hebrew2",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        arabic2 = "Arabic2",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        hindiLetter1 = "HindiLetter1",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        hindiLetter2 = "HindiLetter2",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        hindiArabic = "HindiArabic",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        hindiCardinalText = "HindiCardinalText",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        thaiLetter = "ThaiLetter",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        thaiArabic = "ThaiArabic",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        thaiCardinalText = "ThaiCardinalText",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        vietCardinalText = "VietCardinalText",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        lowercaseRussian = "LowercaseRussian",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        uppercaseRussian = "UppercaseRussian",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        lowercaseGreek = "LowercaseGreek",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        uppercaseGreek = "UppercaseGreek",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        arabicLZ2 = "ArabicLZ2",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        arabicLZ3 = "ArabicLZ3",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        arabicLZ4 = "ArabicLZ4",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        lowercaseTurkish = "LowercaseTurkish",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        uppercaseTurkish = "UppercaseTurkish",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        lowercaseBulgarian = "LowercaseBulgarian",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        uppercaseBulgarian = "UppercaseBulgarian",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        pictureBullet = "PictureBullet",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        legal = "Legal",
        /**
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        legalLZ = "LegalLZ",
    }
    /**
     * Represents the shading texture. To learn more about how to apply backgrounds like textures, see {@link https://support.microsoft.com/office/db481e61-7af6-4063-bbcd-b276054a5515 | Add, change, or delete the background color in Word}.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.1]
     */
    enum ShadingTextureType {
        /**
         * Represents dark diagonal-down texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        darkDiagonalDown = "DarkDiagonalDown",
        /**
         * Represents dark diagonal-up texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        darkDiagonalUp = "DarkDiagonalUp",
        /**
         * Represents dark horizontal-cross texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        darkGrid = "DarkGrid",
        /**
         * Represents dark horizontal texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        darkHorizontal = "DarkHorizontal",
        /**
         * Represents dark diagonal-cross texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        darkTrellis = "DarkTrellis",
        /**
         * Represents dark vertical texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        darkVertical = "DarkVertical",
        /**
         * Represents light diagonal-down texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        lightDiagonalDown = "LightDiagonalDown",
        /**
         * Represents light diagonal-up texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        lightDiagonalUp = "LightDiagonalUp",
        /**
         * Represents light horizontal-cross texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        lightGrid = "LightGrid",
        /**
         * Represents light horizontal texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        lightHorizontal = "LightHorizontal",
        /**
         * Represents light diagonal-cross texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        lightTrellis = "LightTrellis",
        /**
         * Represents light vertical texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        lightVertical = "LightVertical",
        /**
         * Represents that there's no texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        none = "None",
        /**
         * Represents 10 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent10 = "Percent10",
        /**
         * Represents 12.5 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent12Pt5 = "Percent12Pt5",
        /**
         * Represents 15 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent15 = "Percent15",
        /**
         * Represents 20 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent20 = "Percent20",
        /**
         * Represents 25 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent25 = "Percent25",
        /**
         * Represents 30 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent30 = "Percent30",
        /**
         * Represents 35 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent35 = "Percent35",
        /**
         * Represents 37.5 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent37Pt5 = "Percent37Pt5",
        /**
         * Represents 40 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent40 = "Percent40",
        /**
         * Represents 45 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent45 = "Percent45",
        /**
         * Represents 5 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent5 = "Percent5",
        /**
         * Represents 50 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent50 = "Percent50",
        /**
         * Represents 55 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent55 = "Percent55",
        /**
         * Represents 60 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent60 = "Percent60",
        /**
         * Represents 62.5 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent62Pt5 = "Percent62Pt5",
        /**
         * Represents 65 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent65 = "Percent65",
        /**
         * Represents 70 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent70 = "Percent70",
        /**
         * Represents 75 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent75 = "Percent75",
        /**
         * Represents 80 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent80 = "Percent80",
        /**
         * Represents 85 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent85 = "Percent85",
        /**
         * Represents 87.5 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent87Pt5 = "Percent87Pt5",
        /**
         * Represents 90 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent90 = "Percent90",
        /**
         * Represents 95 percent texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        percent95 = "Percent95",
        /**
         * Represents solid texture.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        solid = "Solid",
    }
    /**
     * Specifies the target document for displaying document comparison differences.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.1]
     */
    enum CompareTarget {
        /**
         * Places comparison differences in the current document.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        compareTargetCurrent = "CompareTargetCurrent",
        /**
         * Places comparison differences in the target document.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        compareTargetSelected = "CompareTargetSelected",
        /**
         * Places comparison differences in a new document.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        compareTargetNew = "CompareTargetNew",
    }
    /**
     * Specifies how to handle any conflicts, that is, when imported styles have the same name as existing styles in the current document.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.1]
     */
    enum ImportedStylesConflictBehavior {
        /**
         * Ignore conflicting imported styles and keep the existing version of those styles in the current document.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        ignore = "Ignore",
        /**
         * Overwrite the existing styles in the current document.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        overwrite = "Overwrite",
        /**
         * Rename conflicting imported styles so that both versions are kept in the current document. For example, if MyStyle already exists in the document, then the imported version could be added as MyStyle1.
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        createNew = "CreateNew",
    }
    /**
     * Represents the shape type.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    enum ShapeType {
        /**
         * Unsupported shape type.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        unsupported = "Unsupported",
        /**
         * Text box shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        textBox = "TextBox",
        /**
         * Geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        geometricShape = "GeometricShape",
        /**
         * Group shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        group = "Group",
        /**
         * Picture shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        picture = "Picture",
        /**
         * Canvas shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        canvas = "Canvas",
    }
    /**
     * Represents what the horizontal position of a shape is relative to.
                For more information about margins, see {@link https://support.microsoft.com/office/c95c1ea1-70b1-4dde-a1da-f5aa2042c829 | Change the margins in your Word document}.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    enum RelativeHorizontalPosition {
        /**
         * Relative to margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        margin = "Margin",
        /**
         * Relative to page.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        page = "Page",
        /**
         * Relative to column.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        column = "Column",
        /**
         * Relative to character.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        character = "Character",
        /**
         * Relative to left margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftMargin = "LeftMargin",
        /**
         * Relative to right margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        rightMargin = "RightMargin",
        /**
         * Relative to inside margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        insideMargin = "InsideMargin",
        /**
         * Relative to outside margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        outsideMargin = "OutsideMargin",
    }
    /**
     * Represents what the vertical position of a shape is relative to.
                For more information about margins, see {@link https://support.microsoft.com/office/c95c1ea1-70b1-4dde-a1da-f5aa2042c829 | Change the margins in your Word document}.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    enum RelativeVerticalPosition {
        /**
         * Relative to margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        margin = "Margin",
        /**
         * Relative to page.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        page = "Page",
        /**
         * Relative to paragraph.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        paragraph = "Paragraph",
        /**
         * Relative to line.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        line = "Line",
        /**
         * Relative to top margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        topMargin = "TopMargin",
        /**
         * Relative to bottom margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        bottomMargin = "BottomMargin",
        /**
         * Relative to inside margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        insideMargin = "InsideMargin",
        /**
         * Relative to outside margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        outsideMargin = "OutsideMargin",
    }
    /**
     * Represents what the horizontal or vertical size of a shape is relative to.
                For more information about margins, see {@link https://support.microsoft.com/office/c95c1ea1-70b1-4dde-a1da-f5aa2042c829 | Change the margins in your Word document}.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    enum RelativeSize {
        /**
         * Relative to margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        margin = "Margin",
        /**
         * Relative to page.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        page = "Page",
        /**
         * Relative to top margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        topMargin = "TopMargin",
        /**
         * Relative to bottom margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        bottomMargin = "BottomMargin",
        /**
         * Relative to inside margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        insideMargin = "InsideMargin",
        /**
         * Relative to outside margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        outsideMargin = "OutsideMargin",
    }
    /**
     * Specifies the shape type for a `GeometricShape` object.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    enum GeometricShapeType {
        /**
         * Line inverse geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        lineInverse = "LineInverse",
        /**
         * Triangle geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        triangle = "Triangle",
        /**
         * Right triangle geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        rightTriangle = "RightTriangle",
        /**
         * Rectangle geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        rectangle = "Rectangle",
        /**
         * Diamond geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        diamond = "Diamond",
        /**
         * Parallelogram geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        parallelogram = "Parallelogram",
        /**
         * Trapezoid geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        trapezoid = "Trapezoid",
        /**
         * Non-isosceles trapezoid geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        nonIsoscelesTrapezoid = "NonIsoscelesTrapezoid",
        /**
         * Pentagon geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        pentagon = "Pentagon",
        /**
         * Hexagon geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        hexagon = "Hexagon",
        /**
         * Heptagon geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        heptagon = "Heptagon",
        /**
         * Octagon geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        octagon = "Octagon",
        /**
         * Decagon geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        decagon = "Decagon",
        /**
         * Dodecagon geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        dodecagon = "Dodecagon",
        /**
         * Star 4-point geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        star4 = "Star4",
        /**
         * Star 5-point geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        star5 = "Star5",
        /**
         * Star 6-point geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        star6 = "Star6",
        /**
         * Star 7-point geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        star7 = "Star7",
        /**
         * Star 8-point geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        star8 = "Star8",
        /**
         * Star 10-point geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        star10 = "Star10",
        /**
         * Star 12-point geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        star12 = "Star12",
        /**
         * Star 16-point geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        star16 = "Star16",
        /**
         * Star 24-point geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        star24 = "Star24",
        /**
         * Star 32-point geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        star32 = "Star32",
        /**
         * Round rectangle geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        roundRectangle = "RoundRectangle",
        /**
         * Round one rectangle geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        round1Rectangle = "Round1Rectangle",
        /**
         * Round two same rectangle geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        round2SameRectangle = "Round2SameRectangle",
        /**
         * Round two diagonal rectangle geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        round2DiagonalRectangle = "Round2DiagonalRectangle",
        /**
         * Snip round rectangle geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        snipRoundRectangle = "SnipRoundRectangle",
        /**
         * Snip one rectangle geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        snip1Rectangle = "Snip1Rectangle",
        /**
         * Snip two same rectangle geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        snip2SameRectangle = "Snip2SameRectangle",
        /**
         * Snip two diagonal rectangle geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        snip2DiagonalRectangle = "Snip2DiagonalRectangle",
        /**
         * Plaque geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        plaque = "Plaque",
        /**
         * Ellipse geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        ellipse = "Ellipse",
        /**
         * Teardrop geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        teardrop = "Teardrop",
        /**
         * Home plate geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        homePlate = "HomePlate",
        /**
         * Chevron geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        chevron = "Chevron",
        /**
         * Pie wedge geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        pieWedge = "PieWedge",
        /**
         * Pie geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        pie = "Pie",
        /**
         * Block arc geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        blockArc = "BlockArc",
        /**
         * Donut geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        donut = "Donut",
        /**
         * No smoking geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        noSmoking = "NoSmoking",
        /**
         * Right arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        rightArrow = "RightArrow",
        /**
         * Left arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftArrow = "LeftArrow",
        /**
         * Up arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        upArrow = "UpArrow",
        /**
         * Down arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        downArrow = "DownArrow",
        /**
         * Striped right arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        stripedRightArrow = "StripedRightArrow",
        /**
         * Notched right arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        notchedRightArrow = "NotchedRightArrow",
        /**
         * Bent up arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        bentUpArrow = "BentUpArrow",
        /**
         * Left-right arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftRightArrow = "LeftRightArrow",
        /**
         * Up-down arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        upDownArrow = "UpDownArrow",
        /**
         * Left-up arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftUpArrow = "LeftUpArrow",
        /**
         * Left-right-up arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftRightUpArrow = "LeftRightUpArrow",
        /**
         * Quad arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        quadArrow = "QuadArrow",
        /**
         * Left arrow callout geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftArrowCallout = "LeftArrowCallout",
        /**
         * Right arrow callout geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        rightArrowCallout = "RightArrowCallout",
        /**
         * Up arrow callout geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        upArrowCallout = "UpArrowCallout",
        /**
         * Down arrow callout geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        downArrowCallout = "DownArrowCallout",
        /**
         * Left-right arrow callout geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftRightArrowCallout = "LeftRightArrowCallout",
        /**
         * Up-down arrow callout geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        upDownArrowCallout = "UpDownArrowCallout",
        /**
         * Quad arrow callout geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        quadArrowCallout = "QuadArrowCallout",
        /**
         * Bent arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        bentArrow = "BentArrow",
        /**
         * U-turn arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        uturnArrow = "UturnArrow",
        /**
         * Circular arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        circularArrow = "CircularArrow",
        /**
         * Left circular arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftCircularArrow = "LeftCircularArrow",
        /**
         * Left-right circular arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftRightCircularArrow = "LeftRightCircularArrow",
        /**
         * Curved right arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        curvedRightArrow = "CurvedRightArrow",
        /**
         * Curved left arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        curvedLeftArrow = "CurvedLeftArrow",
        /**
         * Curved up arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        curvedUpArrow = "CurvedUpArrow",
        /**
         * Curved down arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        curvedDownArrow = "CurvedDownArrow",
        /**
         * Swoosh arrow geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        swooshArrow = "SwooshArrow",
        /**
         * Cube geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        cube = "Cube",
        /**
         * Can geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        can = "Can",
        /**
         * Lightning bolt geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        lightningBolt = "LightningBolt",
        /**
         * Heart geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        heart = "Heart",
        /**
         * Sun geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        sun = "Sun",
        /**
         * Moon geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        moon = "Moon",
        /**
         * Smiley face geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        smileyFace = "SmileyFace",
        /**
         * Irregular seal 1 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        irregularSeal1 = "IrregularSeal1",
        /**
         * Irregular seal 2 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        irregularSeal2 = "IrregularSeal2",
        /**
         * Folded corner geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        foldedCorner = "FoldedCorner",
        /**
         * Bevel geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        bevel = "Bevel",
        /**
         * Frame geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        frame = "Frame",
        /**
         * Half frame geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        halfFrame = "HalfFrame",
        /**
         * Corner geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        corner = "Corner",
        /**
         * Diagonal stripe geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        diagonalStripe = "DiagonalStripe",
        /**
         * Chord geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        chord = "Chord",
        /**
         * Arc geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        arc = "Arc",
        /**
         * Left bracket geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftBracket = "LeftBracket",
        /**
         * Right bracket geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        rightBracket = "RightBracket",
        /**
         * Left brace geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftBrace = "LeftBrace",
        /**
         * Right brace geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        rightBrace = "RightBrace",
        /**
         * Bracket pair geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        bracketPair = "BracketPair",
        /**
         * Brace pair geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        bracePair = "BracePair",
        /**
         * Callout 1 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        callout1 = "Callout1",
        /**
         * Callout 2 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        callout2 = "Callout2",
        /**
         * Callout 3 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        callout3 = "Callout3",
        /**
         * Accent callout 1 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        accentCallout1 = "AccentCallout1",
        /**
         * Accent callout 2 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        accentCallout2 = "AccentCallout2",
        /**
         * Accent callout 3 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        accentCallout3 = "AccentCallout3",
        /**
         * Border callout 1 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        borderCallout1 = "BorderCallout1",
        /**
         * Border callout 2 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        borderCallout2 = "BorderCallout2",
        /**
         * Border callout 3 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        borderCallout3 = "BorderCallout3",
        /**
         * Accent border callout 1 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        accentBorderCallout1 = "AccentBorderCallout1",
        /**
         * Accent border callout 2 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        accentBorderCallout2 = "AccentBorderCallout2",
        /**
         * Accent border callout 3 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        accentBorderCallout3 = "AccentBorderCallout3",
        /**
         * Wedge rectangle callout geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        wedgeRectCallout = "WedgeRectCallout",
        /**
         * Wedge rounded rectangle callout geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        wedgeRRectCallout = "WedgeRRectCallout",
        /**
         * Wedge ellipse callout geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        wedgeEllipseCallout = "WedgeEllipseCallout",
        /**
         * Cloud callout geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        cloudCallout = "CloudCallout",
        /**
         * Cloud geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        cloud = "Cloud",
        /**
         * Ribbon geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        ribbon = "Ribbon",
        /**
         * Ribbon 2 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        ribbon2 = "Ribbon2",
        /**
         * Ellipse ribbon geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        ellipseRibbon = "EllipseRibbon",
        /**
         * Ellipse ribbon 2 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        ellipseRibbon2 = "EllipseRibbon2",
        /**
         * Left-right ribbon geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        leftRightRibbon = "LeftRightRibbon",
        /**
         * Vertical scroll geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        verticalScroll = "VerticalScroll",
        /**
         * Horizontal scroll geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        horizontalScroll = "HorizontalScroll",
        /**
         * Wave geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        wave = "Wave",
        /**
         * Double wave geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        doubleWave = "DoubleWave",
        /**
         * Plus geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        plus = "Plus",
        /**
         * Flow chart process geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartProcess = "FlowChartProcess",
        /**
         * Flow chart decision geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartDecision = "FlowChartDecision",
        /**
         * Flow chart input-output geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartInputOutput = "FlowChartInputOutput",
        /**
         * Flow chart predefined process geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartPredefinedProcess = "FlowChartPredefinedProcess",
        /**
         * Flow chart internal storage geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartInternalStorage = "FlowChartInternalStorage",
        /**
         * Flow chart document geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartDocument = "FlowChartDocument",
        /**
         * Flow chart multidocument geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartMultidocument = "FlowChartMultidocument",
        /**
         * Flow chart terminator geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartTerminator = "FlowChartTerminator",
        /**
         * Flow chart preparation geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartPreparation = "FlowChartPreparation",
        /**
         * Flow chart manual input geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartManualInput = "FlowChartManualInput",
        /**
         * Flow chart manual operation geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartManualOperation = "FlowChartManualOperation",
        /**
         * Flow chart connector geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartConnector = "FlowChartConnector",
        /**
         * Flow chart punched card geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartPunchedCard = "FlowChartPunchedCard",
        /**
         * Flow chart punched tape geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartPunchedTape = "FlowChartPunchedTape",
        /**
         * Flow chart summing junction geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartSummingJunction = "FlowChartSummingJunction",
        /**
         * Flow chart OR geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartOr = "FlowChartOr",
        /**
         * Flow chart collate geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartCollate = "FlowChartCollate",
        /**
         * Flow chart sort geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartSort = "FlowChartSort",
        /**
         * Flow chart extract geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartExtract = "FlowChartExtract",
        /**
         * Flow chart merge geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartMerge = "FlowChartMerge",
        /**
         * Flow chart offline storage geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartOfflineStorage = "FlowChartOfflineStorage",
        /**
         * Flow chart online storage geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartOnlineStorage = "FlowChartOnlineStorage",
        /**
         * Flow chart magnetic tape geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartMagneticTape = "FlowChartMagneticTape",
        /**
         * Flow chart magnetic disk geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartMagneticDisk = "FlowChartMagneticDisk",
        /**
         * Flow chart magnetic drum geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartMagneticDrum = "FlowChartMagneticDrum",
        /**
         * Flow chart display geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartDisplay = "FlowChartDisplay",
        /**
         * Flow chart delay geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartDelay = "FlowChartDelay",
        /**
         * Flow chart alternate process geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartAlternateProcess = "FlowChartAlternateProcess",
        /**
         * Flow chart off-page connector geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        flowChartOffpageConnector = "FlowChartOffpageConnector",
        /**
         * Action button blank geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        actionButtonBlank = "ActionButtonBlank",
        /**
         * Action button home geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        actionButtonHome = "ActionButtonHome",
        /**
         * Action button help geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        actionButtonHelp = "ActionButtonHelp",
        /**
         * Action button information geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        actionButtonInformation = "ActionButtonInformation",
        /**
         * Action button forward next geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        actionButtonForwardNext = "ActionButtonForwardNext",
        /**
         * Action button back previous geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        actionButtonBackPrevious = "ActionButtonBackPrevious",
        /**
         * Action button end geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        actionButtonEnd = "ActionButtonEnd",
        /**
         * Action button beginning geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        actionButtonBeginning = "ActionButtonBeginning",
        /**
         * Action button return geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        actionButtonReturn = "ActionButtonReturn",
        /**
         * Action button document geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        actionButtonDocument = "ActionButtonDocument",
        /**
         * Action button sound geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        actionButtonSound = "ActionButtonSound",
        /**
         * Action button movie geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        actionButtonMovie = "ActionButtonMovie",
        /**
         * Gear 6 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        gear6 = "Gear6",
        /**
         * Gear 9 geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        gear9 = "Gear9",
        /**
         * Funnel geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        funnel = "Funnel",
        /**
         * Math plus geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        mathPlus = "MathPlus",
        /**
         * Math minus geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        mathMinus = "MathMinus",
        /**
         * Math multiply geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        mathMultiply = "MathMultiply",
        /**
         * Math divide geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        mathDivide = "MathDivide",
        /**
         * Math equal geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        mathEqual = "MathEqual",
        /**
         * Math not equal geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        mathNotEqual = "MathNotEqual",
        /**
         * Corner tabs geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        cornerTabs = "CornerTabs",
        /**
         * Square tabs geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        squareTabs = "SquareTabs",
        /**
         * Plaque tabs geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        plaqueTabs = "PlaqueTabs",
        /**
         * Chart X geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        chartX = "ChartX",
        /**
         * Chart star geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        chartStar = "ChartStar",
        /**
         * Chart plus geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        chartPlus = "ChartPlus",
    }
    /**
     * Specifies a shape's fill type.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    enum ShapeFillType {
        /**
         * No fill.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        noFill = "NoFill",
        /**
         * Solid fill.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        solid = "Solid",
        /**
         * Gradient fill.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        gradient = "Gradient",
        /**
         * Pattern fill.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        pattern = "Pattern",
        /**
         * Picture fill.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        picture = "Picture",
        /**
         * Texture fill.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        texture = "Texture",
        /**
         * Mixed fill.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        mixed = "Mixed",
    }
    /**
     * Specifies the vertical alignment for the text frame in a shape.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    enum ShapeTextVerticalAlignment {
        /**
         * Anchor the text at the top of the bounding rectangle.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        top = "Top",
        /**
         * Anchor the text at the middle of the bounding rectangle.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        middle = "Middle",
        /**
         * Anchor the text at the bottom of the bounding rectangle.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        bottom = "Bottom",
    }
    /**
     * Specifies the orientation for the text frame in a shape.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    enum ShapeTextOrientation {
        /**
         * No orientation, such as in a new geometric shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        none = "None",
        /**
         * Horizontal text.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        horizontal = "Horizontal",
        /**
         * A special version of vertical text, where some fonts are displayed as if rotated.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        eastAsianVertical = "EastAsianVertical",
        /**
         * Determines if all of the text is vertical orientation (each line is 270 degrees rotated clockwise).
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        vertical270 = "Vertical270",
        /**
         * Determines if all of the text is vertical orientation (each line is 90 degrees rotated clockwise).
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        vertical = "Vertical",
        /**
         * A special version of vertical text, where some fonts are displayed as if rotated.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        eastAsianHorizontalRotated = "EastAsianHorizontalRotated",
        /**
         * A combination of automatic orientation is used.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        mixed = "Mixed",
    }
    /**
     * Determines the type of automatic sizing allowed.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    enum ShapeAutoSize {
        /**
         * No autosizing.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        none = "None",
        /**
         * The text is adjusted to fit the shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        textToFitShape = "TextToFitShape",
        /**
         * The shape is adjusted to fit the text.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        shapeToFitText = "ShapeToFitText",
        /**
         * A combination of automatic sizing schemes are used.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        mixed = "Mixed",
    }
    /**
     * Specifies how to wrap document text around a shape. For more details, see the "Text Wrapping" tab of {@link https://support.microsoft.com/office/a0f53857-b501-46c6-ba8b-68ba51e0e3cc | Layout options}.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    enum ShapeTextWrapType {
        /**
         * Places the shape in line with text.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        inline = "Inline",
        /**
         * Wraps text squarely around the shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        square = "Square",
        /**
         * Wraps text close to the shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        tight = "Tight",
        /**
         * Wraps text around and through the shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        through = "Through",
        /**
         * Places text above and below the shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        topBottom = "TopBottom",
        /**
         * Places shape behind text.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        behind = "Behind",
        /**
         * Places shape in front of text.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        front = "Front",
    }
    /**
     * Specifies whether the document text should wrap on both sides of the specified shape, on either the left or right side only, or on the side of the shape that's farther from the respective page margin.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    enum ShapeTextWrapSide {
        /**
         * Has no wrap side property, such as those for inline shapes.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        none = "None",
        /**
         * Both left and right sides of the shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        both = "Both",
        /**
         * Left side of the shape only.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        left = "Left",
        /**
         * Right side of the shape only.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        right = "Right",
        /**
         * Side of the shape that's farther from the respective page margin.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        largest = "Largest",
    }
    /**
     * Specifies the scale size type of a shape.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    enum ShapeScaleType {
        /**
         * Scale from current size of the shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        currentSize = "CurrentSize",
        /**
         * Scale from original size of the shape. It only works for pictures.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        originalSize = "OriginalSize",
    }
    /**
     * Specifies which part of the shape retains its position when the shape is scaled.
     *
     * @remarks
     * [Api set: WordApiDesktop 1.2]
     */
    enum ShapeScaleFrom {
        /**
         * Scale from the top left corner of the shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        scaleFromTopLeft = "ScaleFromTopLeft",
        /**
         * Scale from the center of the shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        scaleFromMiddle = "ScaleFromMiddle",
        /**
         * Scale from the bottom right corner of the shape.
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        scaleFromBottomRight = "ScaleFromBottomRight",
    }
    /**
     * Represents how Word interprets the rule used to determine the height or width of a {@link Word.Frame}.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum FrameSizeRule {
        /**
         * The height or width is set according to the height or width of the item in the frame.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        auto = "Auto",
        /**
         * The height or width is set to a value equal to or greater than the value specified by the `height` property or `width` property.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        atLeast = "AtLeast",
        /**
         * The height or width is set to an exact value specified by the `height` property or `width` property.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        exact = "Exact",
    }
    /**
     * Specifies the border style for an object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum BorderLineStyle {
        /**
         * No line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Single line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        single = "Single",
        /**
         * Dotted line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dot = "Dot",
        /**
         * Dashed line style with small gaps.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashSmallGap = "DashSmallGap",
        /**
         * Dashed line style with large gaps.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashLargeGap = "DashLargeGap",
        /**
         * Dash-dot line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashDot = "DashDot",
        /**
         * Dash-dot-dot line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashDotDot = "DashDotDot",
        /**
         * Double line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        double = "Double",
        /**
         * Triple line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        triple = "Triple",
        /**
         * Thin-thick line style with small gaps.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thinThickSmallGap = "ThinThickSmallGap",
        /**
         * Thick-thin line style with small gaps.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thickThinSmallGap = "ThickThinSmallGap",
        /**
         * Thin-thick-thin line style with small gaps.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thinThickThinSmallGap = "ThinThickThinSmallGap",
        /**
         * Thin-thick line style with medium gaps.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thinThickMedGap = "ThinThickMedGap",
        /**
         * Thick-thin line style with medium gaps.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thickThinMedGap = "ThickThinMedGap",
        /**
         * Thin-thick-thin line style with medium gaps.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thinThickThinMedGap = "ThinThickThinMedGap",
        /**
         * Thin-thick line style with large gaps.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thinThickLargeGap = "ThinThickLargeGap",
        /**
         * Thick-thin line style with large gaps.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thickThinLargeGap = "ThickThinLargeGap",
        /**
         * Thin-thick-thin line style with large gaps.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thinThickThinLargeGap = "ThinThickThinLargeGap",
        /**
         * Single wavy line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        singleWavy = "SingleWavy",
        /**
         * Double wavy line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        doubleWavy = "DoubleWavy",
        /**
         * Dash-dot stroked line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashDotStroked = "DashDotStroked",
        /**
         * Embossed 3D line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        emboss3D = "Emboss3D",
        /**
         * Engraved 3D line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        engrave3D = "Engrave3D",
        /**
         * Outset line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outset = "Outset",
        /**
         * Inset line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        inset = "Inset",
    }
    /**
     * Specifies the width of an object's border.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum LineWidth {
        /**
         * Represents a line width of 0.25 points.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pt025 = "Pt025",
        /**
         * Represents a line width of 0.50 points.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pt050 = "Pt050",
        /**
         * Represents a line width of 0.75 points.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pt075 = "Pt075",
        /**
         * Represents a line width of 1.00 points.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pt100 = "Pt100",
        /**
         * Represents a line width of 1.50 points.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pt150 = "Pt150",
        /**
         * Represents a line width of 2.25 points.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pt225 = "Pt225",
        /**
         * Represents a line width of 3.00 points.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pt300 = "Pt300",
        /**
         * Represents a line width of 4.50 points.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pt450 = "Pt450",
        /**
         * Represents a line width of 6.00 points.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pt600 = "Pt600",
    }
    /**
     * Specifies the graphical page border setting of a page.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PageBorderArt {
        /**
         * Represents a border with apple design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        apples = "Apples",
        /**
         * Represents a border with maple muffin design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mapleMuffins = "MapleMuffins",
        /**
         * Represents a border with cake slice design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cakeSlice = "CakeSlice",
        /**
         * Represents a border with candy corn design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        candyCorn = "CandyCorn",
        /**
         * Represents a border with ice cream cone design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        iceCreamCones = "IceCreamCones",
        /**
         * Represents a border with champagne bottle design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        champagneBottle = "ChampagneBottle",
        /**
         * Represents a border with party glass design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        partyGlass = "PartyGlass",
        /**
         * Represents a border with Christmas tree design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        christmasTree = "ChristmasTree",
        /**
         * Represents a border with trees design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        trees = "Trees",
        /**
         * Represents a border with palm trees in color.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        palmsColor = "PalmsColor",
        /**
         * Represents a border with three-color balloons design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        balloons3Colors = "Balloons3Colors",
        /**
         * Represents a border with hot air balloons design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        balloonsHotAir = "BalloonsHotAir",
        /**
         * Represents a border with party favor design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        partyFavor = "PartyFavor",
        /**
         * Represents a border with confetti streamers design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        confettiStreamers = "ConfettiStreamers",
        /**
         * Represents a border with hearts design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hearts = "Hearts",
        /**
         * Represents a border with heart balloon design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        heartBalloon = "HeartBalloon",
        /**
         * Represents a border with 3D stars design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        stars3D = "Stars3D",
        /**
         * Represents a border with shadowed stars design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        starsShadowed = "StarsShadowed",
        /**
         * Represents a border with stars design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        stars = "Stars",
        /**
         * Represents a border with sun design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sun = "Sun",
        /**
         * Represents a border with Earth design (variant 2).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        earth2 = "Earth2",
        /**
         * Represents a border with Earth design (variant 1).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        earth1 = "Earth1",
        /**
         * Represents a border with people wearing hats design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        peopleHats = "PeopleHats",
        /**
         * Represents a border with sombrero design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sombrero = "Sombrero",
        /**
         * Represents a border with pencils design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pencils = "Pencils",
        /**
         * Represents a border with packages design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        packages = "Packages",
        /**
         * Represents a border with clocks design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        clocks = "Clocks",
        /**
         * Represents a border with firecrackers design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        firecrackers = "Firecrackers",
        /**
         * Represents a border with rings design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rings = "Rings",
        /**
         * Represents a border with map pins design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mapPins = "MapPins",
        /**
         * Represents a border with confetti design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        confetti = "Confetti",
        /**
         * Represents a border with butterfly creatures design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        creaturesButterfly = "CreaturesButterfly",
        /**
         * Represents a border with ladybug creatures design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        creaturesLadyBug = "CreaturesLadyBug",
        /**
         * Represents a border with fish creatures design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        creaturesFish = "CreaturesFish",
        /**
         * Represents a border with birds in flight design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        birdsFlight = "BirdsFlight",
        /**
         * Represents a border with scared cat design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        scaredCat = "ScaredCat",
        /**
         * Represents a border with bats design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bats = "Bats",
        /**
         * Represents a border with roses flowers design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        flowersRoses = "FlowersRoses",
        /**
         * Represents a border with red rose flowers design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        flowersRedRose = "FlowersRedRose",
        /**
         * Represents a border with poinsettias flowers design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        poinsettias = "Poinsettias",
        /**
         * Represents a border with holly design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        holly = "Holly",
        /**
         * Represents a border with tiny flowers design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        flowersTiny = "FlowersTiny",
        /**
         * Represents a border with pansy flowers design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        flowersPansy = "FlowersPansy",
        /**
         * Represents a border with modern 2 flowers design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        flowersModern2 = "FlowersModern2",
        /**
         * Represents a border with modern 1 flowers design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        flowersModern1 = "FlowersModern1",
        /**
         * Represents a border with white flowers design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        whiteFlowers = "WhiteFlowers",
        /**
         * Represents a border with vine design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        vine = "Vine",
        /**
         * Represents a border with daisies flowers design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        flowersDaisies = "FlowersDaisies",
        /**
         * Represents a border with block print flowers design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        flowersBlockPrint = "FlowersBlockPrint",
        /**
         * Represents a border with colored deco arch design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        decoArchColor = "DecoArchColor",
        /**
         * Represents a border with fans design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fans = "Fans",
        /**
         * Represents a border with film design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        film = "Film",
        /**
         * Represents a border with lightning design (variant 1).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lightning1 = "Lightning1",
        /**
         * Represents a border with compass design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        compass = "Compass",
        /**
         * Represents a border with double D design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        doubleD = "DoubleD",
        /**
         * Represents a border with classical wave design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        classicalWave = "ClassicalWave",
        /**
         * Represents a border with shadowed squares design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shadowedSquares = "ShadowedSquares",
        /**
         * Represents a border with twisted lines design (variant 1).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        twistedLines1 = "TwistedLines1",
        /**
         * Represents a border with waveline design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        waveline = "Waveline",
        /**
         * Represents a border with quadrants design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        quadrants = "Quadrants",
        /**
         * Represents a border with colored checked bar design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        checkedBarColor = "CheckedBarColor",
        /**
         * Represents a border with swirligig design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        swirligig = "Swirligig",
        /**
         * Represents a border with push pin note design (variant 1).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pushPinNote1 = "PushPinNote1",
        /**
         * Represents a border with push pin note design (variant 2).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pushPinNote2 = "PushPinNote2",
        /**
         * Represents a border with pumpkin design (variant 1).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pumpkin1 = "Pumpkin1",
        /**
         * Represents a border with black eggs design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        eggsBlack = "EggsBlack",
        /**
         * Represents a border with cup design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cup = "Cup",
        /**
         * Represents a border with gray heart design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        heartGray = "HeartGray",
        /**
         * Represents a border with gingerbread man design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gingerbreadMan = "GingerbreadMan",
        /**
         * Represents a border with baby pacifier design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        babyPacifier = "BabyPacifier",
        /**
         * Represents a border with baby rattle design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        babyRattle = "BabyRattle",
        /**
         * Represents a border with cabins design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cabins = "Cabins",
        /**
         * Represents a border with funky house design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        houseFunky = "HouseFunky",
        /**
         * Represents a border with black stars design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        starsBlack = "StarsBlack",
        /**
         * Represents a border with snowflakes design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        snowflakes = "Snowflakes",
        /**
         * Represents a border with fancy snowflake design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        snowflakeFancy = "SnowflakeFancy",
        /**
         * Represents a border with skyrocket design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        skyrocket = "Skyrocket",
        /**
         * Represents a border with Seattle design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        seattle = "Seattle",
        /**
         * Represents a border with music notes design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        musicNotes = "MusicNotes",
        /**
         * Represents a border with black palms design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        palmsBlack = "PalmsBlack",
        /**
         * Represents a border with maple leaf design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mapleLeaf = "MapleLeaf",
        /**
         * Represents a border with paper clips design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        paperClips = "PaperClips",
        /**
         * Represents a border with shorebird tracks design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shorebirdTracks = "ShorebirdTracks",
        /**
         * Represents a border with people design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        people = "People",
        /**
         * Represents a border with people waving design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        peopleWaving = "PeopleWaving",
        /**
         * Represents a border with eclipsing squares design (variant 2).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        eclipsingSquares2 = "EclipsingSquares2",
        /**
         * Represents a border with hypnotic design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hypnotic = "Hypnotic",
        /**
         * Represents a border with gray diamonds design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        diamondsGray = "DiamondsGray",
        /**
         * Represents a border with deco arch design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        decoArch = "DecoArch",
        /**
         * Represents a border with deco blocks design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        decoBlocks = "DecoBlocks",
        /**
         * Represents a border with circles and lines design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        circlesLines = "CirclesLines",
        /**
         * Represents a border with papyrus design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        papyrus = "Papyrus",
        /**
         * Represents a border with woodwork design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        woodwork = "Woodwork",
        /**
         * Represents a border with weaving braid design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        weavingBraid = "WeavingBraid",
        /**
         * Represents a border with weaving ribbon design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        weavingRibbon = "WeavingRibbon",
        /**
         * Represents a border with weaving angles design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        weavingAngles = "WeavingAngles",
        /**
         * Represents a border with arched scallops design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        archedScallops = "ArchedScallops",
        /**
         * Represents a border with safari design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        safari = "Safari",
        /**
         * Represents a border with Celtic knotwork design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        celticKnotwork = "CelticKnotwork",
        /**
         * Represents a border with crazy maze design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        crazyMaze = "CrazyMaze",
        /**
         * Represents a border with eclipsing squares design (variant 1).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        eclipsingSquares1 = "EclipsingSquares1",
        /**
         * Represents a border with birds design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        birds = "Birds",
        /**
         * Represents a border with teacup and flowers design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        flowersTeacup = "FlowersTeacup",
        /**
         * Represents a border with northwest design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        northwest = "Northwest",
        /**
         * Represents a border with southwest design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        southwest = "Southwest",
        /**
         * Represents a border with tribal design (variant 6).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tribal6 = "Tribal6",
        /**
         * Represents a border with tribal design (variant 4).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tribal4 = "Tribal4",
        /**
         * Represents a border with tribal design (variant 3).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tribal3 = "Tribal3",
        /**
         * Represents a border with tribal design (variant 2).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tribal2 = "Tribal2",
        /**
         * Represents a border with tribal design (variant 5).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tribal5 = "Tribal5",
        /**
         * Represents a border with X illusions design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        xillusions = "XIllusions",
        /**
         * Represents a border with zany triangles design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        zanyTriangles = "ZanyTriangles",
        /**
         * Represents a border with pyramids design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pyramids = "Pyramids",
        /**
         * Represents a border with pyramids above design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pyramidsAbove = "PyramidsAbove",
        /**
         * Represents a border with gray confetti design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        confettiGrays = "ConfettiGrays",
        /**
         * Represents a border with outline confetti design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        confettiOutline = "ConfettiOutline",
        /**
         * Represents a border with white confetti design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        confettiWhite = "ConfettiWhite",
        /**
         * Represents a border with mosaic design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mosaic = "Mosaic",
        /**
         * Represents a border with lightning design (variant 2).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lightning2 = "Lightning2",
        /**
         * Represents a border with heebie jeebies design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        heebieJeebies = "HeebieJeebies",
        /**
         * Represents a border with light bulb design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lightBulb = "LightBulb",
        /**
         * Represents a border with gradient design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gradient = "Gradient",
        /**
         * Represents a border with triangle party design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        triangleParty = "TriangleParty",
        /**
         * Represents a border with twisted lines design (variant 2).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        twistedLines2 = "TwistedLines2",
        /**
         * Represents a border with moons design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        moons = "Moons",
        /**
         * Represents a border with ovals design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ovals = "Ovals",
        /**
         * Represents a border with double diamonds design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        doubleDiamonds = "DoubleDiamonds",
        /**
         * Represents a border with chain link design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        chainLink = "ChainLink",
        /**
         * Represents a border with triangles design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        triangles = "Triangles",
        /**
         * Represents a border with tribal design (variant 1).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tribal1 = "Tribal1",
        /**
         * Represents a border with marquee toothed design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        marqueeToothed = "MarqueeToothed",
        /**
         * Represents a border with sharks teeth design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sharksTeeth = "SharksTeeth",
        /**
         * Represents a border with sawtooth design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sawtooth = "Sawtooth",
        /**
         * Represents a border with gray sawtooth design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sawtoothGray = "SawtoothGray",
        /**
         * Represents a border with postage stamp design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        postageStamp = "PostageStamp",
        /**
         * Represents a border with weaving strips design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        weavingStrips = "WeavingStrips",
        /**
         * Represents a border with zigzag design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        zigZag = "ZigZag",
        /**
         * Represents a border with cross stitch design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        crossStitch = "CrossStitch",
        /**
         * Represents a border with gems design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gems = "Gems",
        /**
         * Represents a border with circles and rectangles design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        circlesRectangles = "CirclesRectangles",
        /**
         * Represents a border with corner triangles design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cornerTriangles = "CornerTriangles",
        /**
         * Represents a border with insects creatures design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        creaturesInsects = "CreaturesInsects",
        /**
         * Represents a border with zigzag stitch design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        zigZagStitch = "ZigZagStitch",
        /**
         * Represents a border with checkered design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        checkered = "Checkered",
        /**
         * Represents a border with black checked bar design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        checkedBarBlack = "CheckedBarBlack",
        /**
         * Represents a border with marquee design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        marquee = "Marquee",
        /**
         * Represents a border with basic white dots design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        basicWhiteDots = "BasicWhiteDots",
        /**
         * Represents a border with basic wide midline design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        basicWideMidline = "BasicWideMidline",
        /**
         * Represents a border with basic wide outline design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        basicWideOutline = "BasicWideOutline",
        /**
         * Represents a border with basic wide inline design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        basicWideInline = "BasicWideInline",
        /**
         * Represents a border with basic thin lines design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        basicThinLines = "BasicThinLines",
        /**
         * Represents a border with basic white dashes design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        basicWhiteDashes = "BasicWhiteDashes",
        /**
         * Represents a border with basic white squares design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        basicWhiteSquares = "BasicWhiteSquares",
        /**
         * Represents a border with basic black squares design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        basicBlackSquares = "BasicBlackSquares",
        /**
         * Represents a border with basic black dashes design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        basicBlackDashes = "BasicBlackDashes",
        /**
         * Represents a border with basic black dots design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        basicBlackDots = "BasicBlackDots",
        /**
         * Represents a border with top stars design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        starsTop = "StarsTop",
        /**
         * Represents a border with certificate banner design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        certificateBanner = "CertificateBanner",
        /**
         * Represents a border with handmade design (variant 1).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        handmade1 = "Handmade1",
        /**
         * Represents a border with handmade design (variant 2).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        handmade2 = "Handmade2",
        /**
         * Represents a border with torn paper design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tornPaper = "TornPaper",
        /**
         * Represents a border with black torn paper design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tornPaperBlack = "TornPaperBlack",
        /**
         * Represents a border with coupon cutout dashes design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        couponCutoutDashes = "CouponCutoutDashes",
        /**
         * Represents a border with coupon cutout dots design.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        couponCutoutDots = "CouponCutoutDots",
    }
    /**
     * Specifies the preferred unit of measure to use when measuring the width of an item.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PreferredWidthType {
        /**
         * Automatically select the unit of measure to use based on the current selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        auto = "Auto",
        /**
         * Measure the current item width using a specified percentage.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent = "Percent",
        /**
         * Measure the current item width using a specified number of points.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        points = "Points",
    }
    /**
     * Represents the reading order of text.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ReadingOrder {
        /**
         * Represents right-to-left reading order.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rightToLeft = "RightToLeft",
        /**
         * Represents left-to-right reading order.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        leftToRight = "LeftToRight",
    }
    /**
     * Specifies the way Word adjusts the table when the left indent is changed.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum RulerStyle {
        /**
         * Adjusts the left edge of row or rows, preserving the width of all columns by shifting them to the left or right. This is the default value.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Adjusts the left edge of the first column, preserving the position of the right edge of the table by proportionally adjusting the widths of all the cells in the specified row or rows.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        proportional = "Proportional",
        /**
         * Adjusts the left edge of the first column only, preserving the positions of the other columns and the right edge of the table.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        firstColumn = "FirstColumn",
        /**
         * Adjusts the left edge of the first column, preserving the position of the right edge of the table by setting the widths of all the cells in the specified row or rows to the same value.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sameWidth = "SameWidth",
    }
    /**
     * Represents the East Asian language to use when breaking lines of text in the specified document or template.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum FarEastLineBreakLanguageId {
        /**
         * Represents Traditional Chinese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        traditionalChinese = "TraditionalChinese",
        /**
         * Represents Japanese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        japanese = "Japanese",
        /**
         * Represents Korean language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        korean = "Korean",
        /**
         * Represents Simplified Chinese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        simplifiedChinese = "SimplifiedChinese",
    }
    /**
     * Represents the level of line breaking to use for East Asian languages in the specified document or template.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum FarEastLineBreakLevel {
        /**
         * Represents the normal line break level.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        normal = "Normal",
        /**
         * Represents the strict line break level.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        strict = "Strict",
        /**
         * Represents the custom line break level.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        custom = "Custom",
    }
    /**
     * Specifies the character spacing adjustment for a document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum JustificationMode {
        /**
         * Expands the character spacing
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        expand = "Expand",
        /**
         * Compresses the character spacing.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        compress = "Compress",
        /**
         * Compresses the character spacing using rules of the kana syllabaries, Hiragana and Katakana.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        compressKana = "CompressKana",
    }
    /**
     * Specifies the type of template.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum TemplateType {
        /**
         * Represents the normal template type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        normal = "Normal",
        /**
         * Represents the global template type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        global = "Global",
        /**
         * Represents the attached template type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        attached = "Attached",
    }
    /**
     * Represents the language ID of a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum LanguageId {
        /**
         * Afrikaans language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        afrikaans = "Afrikaans",
        /**
         * Albanian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        albanian = "Albanian",
        /**
         * Amharic language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        amharic = "Amharic",
        /**
         * Arabic language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabic = "Arabic",
        /**
         * Arabic Algerian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicAlgeria = "ArabicAlgeria",
        /**
         * Arabic Bahraini language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicBahrain = "ArabicBahrain",
        /**
         * Arabic Egyptian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicEgypt = "ArabicEgypt",
        /**
         * Arabic Iraqi language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicIraq = "ArabicIraq",
        /**
         * Arabic Jordanian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicJordan = "ArabicJordan",
        /**
         * Arabic Kuwaiti language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicKuwait = "ArabicKuwait",
        /**
         * Arabic Lebanese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicLebanon = "ArabicLebanon",
        /**
         * Arabic Libyan language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicLibya = "ArabicLibya",
        /**
         * Arabic Moroccan language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicMorocco = "ArabicMorocco",
        /**
         * Arabic Omani language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicOman = "ArabicOman",
        /**
         * Arabic Qatari language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicQatar = "ArabicQatar",
        /**
         * Arabic Syrian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicSyria = "ArabicSyria",
        /**
         * Arabic Tunisian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicTunisia = "ArabicTunisia",
        /**
         * Arabic United Arab Emirates language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicUAE = "ArabicUAE",
        /**
         * Arabic Yemeni language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicYemen = "ArabicYemen",
        /**
         * Armenian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        armenian = "Armenian",
        /**
         * Assamese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        assamese = "Assamese",
        /**
         * Azerbaijani Cyrillic language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        azeriCyrillic = "AzeriCyrillic",
        /**
         * Azerbaijani Latin language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        azeriLatin = "AzeriLatin",
        /**
         * Basque (Basque).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        basque = "Basque",
        /**
         * Belgian Dutch language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        belgianDutch = "BelgianDutch",
        /**
         * Belgian French language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        belgianFrench = "BelgianFrench",
        /**
         * Bengali language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bengali = "Bengali",
        /**
         * Bulgarian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bulgarian = "Bulgarian",
        /**
         * Burmese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        burmese = "Burmese",
        /**
         * Belarusian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        belarusian = "Belarusian",
        /**
         * Catalan language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        catalan = "Catalan",
        /**
         * Cherokee language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cherokee = "Cherokee",
        /**
         * Chinese Hong Kong SAR language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        chineseHongKongSAR = "ChineseHongKongSAR",
        /**
         * Chinese Macao SAR language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        chineseMacaoSAR = "ChineseMacaoSAR",
        /**
         * Chinese Singapore language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        chineseSingapore = "ChineseSingapore",
        /**
         * Croatian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        croatian = "Croatian",
        /**
         * Czech language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        czech = "Czech",
        /**
         * Danish language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        danish = "Danish",
        /**
         * Divehi language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        divehi = "Divehi",
        /**
         * Dutch language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dutch = "Dutch",
        /**
         * Edo language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        edo = "Edo",
        /**
         * Australian English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishAUS = "EnglishAUS",
        /**
         * Belize English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishBelize = "EnglishBelize",
        /**
         * Canadian English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishCanadian = "EnglishCanadian",
        /**
         * Caribbean English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishCaribbean = "EnglishCaribbean",
        /**
         * Indonesian English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishIndonesia = "EnglishIndonesia",
        /**
         * Irish English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishIreland = "EnglishIreland",
        /**
         * Jamaican English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishJamaica = "EnglishJamaica",
        /**
         * New Zealand English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishNewZealand = "EnglishNewZealand",
        /**
         * Filipino English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishPhilippines = "EnglishPhilippines",
        /**
         * South African English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishSouthAfrica = "EnglishSouthAfrica",
        /**
         * Tobago Trinidad English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishTrinidadTobago = "EnglishTrinidadTobago",
        /**
         * United Kingdom English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishUK = "EnglishUK",
        /**
         * United States English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishUS = "EnglishUS",
        /**
         * Zimbabwe English language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        englishZimbabwe = "EnglishZimbabwe",
        /**
         * Estonian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        estonian = "Estonian",
        /**
         * Faeroese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        faeroese = "Faeroese",
        /**
         * Filipino language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        filipino = "Filipino",
        /**
         * Finnish language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        finnish = "Finnish",
        /**
         * French language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        french = "French",
        /**
         * French Cameroon language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frenchCameroon = "FrenchCameroon",
        /**
         * French Canadian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frenchCanadian = "FrenchCanadian",
        /**
         * French (Congo (DRC)) language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frenchCongoDRC = "FrenchCongoDRC",
        /**
         * French Cote d'Ivoire language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frenchCotedIvoire = "FrenchCotedIvoire",
        /**
         * French Haiti language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frenchHaiti = "FrenchHaiti",
        /**
         * French Luxembourg language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frenchLuxembourg = "FrenchLuxembourg",
        /**
         * French Mali language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frenchMali = "FrenchMali",
        /**
         * French Monaco language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frenchMonaco = "FrenchMonaco",
        /**
         * French Morocco language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frenchMorocco = "FrenchMorocco",
        /**
         * French Reunion language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frenchReunion = "FrenchReunion",
        /**
         * French Senegal language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frenchSenegal = "FrenchSenegal",
        /**
         * French West Indies language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frenchWestIndies = "FrenchWestIndies",
        /**
         * Frisian Netherlands language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frisianNetherlands = "FrisianNetherlands",
        /**
         * Fulfulde language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fulfulde = "Fulfulde",
        /**
         * Irish (Irish) language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gaelicIreland = "GaelicIreland",
        /**
         * Scottish Gaelic language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gaelicScotland = "GaelicScotland",
        /**
         * Galician language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        galician = "Galician",
        /**
         * Georgian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        georgian = "Georgian",
        /**
         * German language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        german = "German",
        /**
         * German Austrian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        germanAustria = "GermanAustria",
        /**
         * German Liechtenstein language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        germanLiechtenstein = "GermanLiechtenstein",
        /**
         * German Luxembourg language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        germanLuxembourg = "GermanLuxembourg",
        /**
         * Greek language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        greek = "Greek",
        /**
         * Guarani language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        guarani = "Guarani",
        /**
         * Gujarati language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gujarati = "Gujarati",
        /**
         * Hausa language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hausa = "Hausa",
        /**
         * Hawaiian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hawaiian = "Hawaiian",
        /**
         * Hebrew language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hebrew = "Hebrew",
        /**
         * Hindi language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hindi = "Hindi",
        /**
         * Hungarian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hungarian = "Hungarian",
        /**
         * Ibibio language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ibibio = "Ibibio",
        /**
         * Icelandic language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        icelandic = "Icelandic",
        /**
         * Igbo language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        igbo = "Igbo",
        /**
         * Indonesian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        indonesian = "Indonesian",
        /**
         * Inuktitut language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        inuktitut = "Inuktitut",
        /**
         * Italian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        italian = "Italian",
        /**
         * Japanese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        japanese = "Japanese",
        /**
         * Kannada language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        kannada = "Kannada",
        /**
         * Kanuri language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        kanuri = "Kanuri",
        /**
         * Kashmiri language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        kashmiri = "Kashmiri",
        /**
         * Kazakh language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        kazakh = "Kazakh",
        /**
         * Khmer language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        khmer = "Khmer",
        /**
         * Kirghiz language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        kirghiz = "Kirghiz",
        /**
         * Konkani language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        konkani = "Konkani",
        /**
         * Korean language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        korean = "Korean",
        /**
         * Kyrgyz language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        kyrgyz = "Kyrgyz",
        /**
         * No specified language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        languageNone = "LanguageNone",
        /**
         * Lao language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lao = "Lao",
        /**
         * Latin language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        latin = "Latin",
        /**
         * Latvian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        latvian = "Latvian",
        /**
         * Lithuanian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lithuanian = "Lithuanian",
        /**
         * Macedonian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        macedonianFYROM = "MacedonianFYROM",
        /**
         * Malayalam language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        malayalam = "Malayalam",
        /**
         * Malay Brunei Darussalam language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        malayBruneiDarussalam = "MalayBruneiDarussalam",
        /**
         * Malaysian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        malaysian = "Malaysian",
        /**
         * Maltese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        maltese = "Maltese",
        /**
         * Manipuri language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        manipuri = "Manipuri",
        /**
         * Marathi language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        marathi = "Marathi",
        /**
         * Mexican Spanish language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mexicanSpanish = "MexicanSpanish",
        /**
         * Mongolian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mongolian = "Mongolian",
        /**
         * Nepali language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nepali = "Nepali",
        /**
         * Disables proofing if the language ID identifies a language in which an object is grammatically validated using the Microsoft Word proofing tools.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        noProofing = "NoProofing",
        /**
         * Norwegian Bokmol language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        norwegianBokmol = "NorwegianBokmol",
        /**
         * Norwegian Nynorsk language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        norwegianNynorsk = "NorwegianNynorsk",
        /**
         * Odia (Oriya) language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        oriya = "Oriya",
        /**
         * Oromo language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        oromo = "Oromo",
        /**
         * Pashto language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pashto = "Pashto",
        /**
         * Persian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        persian = "Persian",
        /**
         * Polish language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        polish = "Polish",
        /**
         * Portuguese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        portuguese = "Portuguese",
        /**
         * Portuguese (Brazil) language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        portugueseBrazil = "PortugueseBrazil",
        /**
         * Punjabi language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        punjabi = "Punjabi",
        /**
         * Rhaeto Romanic language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rhaetoRomanic = "RhaetoRomanic",
        /**
         * Romanian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        romanian = "Romanian",
        /**
         * Romanian Moldova language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        romanianMoldova = "RomanianMoldova",
        /**
         * Russian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        russian = "Russian",
        /**
         * Russian Moldova language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        russianMoldova = "RussianMoldova",
        /**
         * Sami Lappish language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        samiLappish = "SamiLappish",
        /**
         * Sanskrit language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sanskrit = "Sanskrit",
        /**
         * Serbian Cyrillic language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        serbianCyrillic = "SerbianCyrillic",
        /**
         * Serbian Latin language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        serbianLatin = "SerbianLatin",
        /**
         * Sesotho language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sesotho = "Sesotho",
        /**
         * Simplified Chinese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        simplifiedChinese = "SimplifiedChinese",
        /**
         * Sindhi language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sindhi = "Sindhi",
        /**
         * Sindhi (Pakistan) language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sindhiPakistan = "SindhiPakistan",
        /**
         * Sinhalese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sinhalese = "Sinhalese",
        /**
         * Slovakian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        slovak = "Slovak",
        /**
         * Slovenian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        slovenian = "Slovenian",
        /**
         * Somali language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        somali = "Somali",
        /**
         * Sorbian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sorbian = "Sorbian",
        /**
         * Spanish language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanish = "Spanish",
        /**
         * Spanish Argentina language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishArgentina = "SpanishArgentina",
        /**
         * Spanish Bolivian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishBolivia = "SpanishBolivia",
        /**
         * Spanish Chilean language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishChile = "SpanishChile",
        /**
         * Spanish Colombian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishColombia = "SpanishColombia",
        /**
         * Spanish Costa Rican language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishCostaRica = "SpanishCostaRica",
        /**
         * Spanish Dominican Republic language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishDominicanRepublic = "SpanishDominicanRepublic",
        /**
         * Spanish Ecuadorian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishEcuador = "SpanishEcuador",
        /**
         * Spanish El Salvadorian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishElSalvador = "SpanishElSalvador",
        /**
         * Spanish Guatemala language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishGuatemala = "SpanishGuatemala",
        /**
         * Spanish Honduran language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishHonduras = "SpanishHonduras",
        /**
         * Spanish Modern Sort language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishModernSort = "SpanishModernSort",
        /**
         * Spanish Nicaraguan language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishNicaragua = "SpanishNicaragua",
        /**
         * Spanish Panamanian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishPanama = "SpanishPanama",
        /**
         * Spanish Paraguayan language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishParaguay = "SpanishParaguay",
        /**
         * Spanish Peruvian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishPeru = "SpanishPeru",
        /**
         * Spanish Puerto Rican language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishPuertoRico = "SpanishPuertoRico",
        /**
         * Spanish Uruguayan language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishUruguay = "SpanishUruguay",
        /**
         * Spanish Venezuelan language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spanishVenezuela = "SpanishVenezuela",
        /**
         * Sutu language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sutu = "Sutu",
        /**
         * Swahili language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        swahili = "Swahili",
        /**
         * Swedish language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        swedish = "Swedish",
        /**
         * Swedish Finnish language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        swedishFinland = "SwedishFinland",
        /**
         * Swiss French language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        swissFrench = "SwissFrench",
        /**
         * Swiss German language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        swissGerman = "SwissGerman",
        /**
         * Swiss Italian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        swissItalian = "SwissItalian",
        /**
         * Syriac language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        syriac = "Syriac",
        /**
         * Tajik language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tajik = "Tajik",
        /**
         * Tamazight language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tamazight = "Tamazight",
        /**
         * Tamazight Latin language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tamazightLatin = "TamazightLatin",
        /**
         * Tamil language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tamil = "Tamil",
        /**
         * Tatar language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tatar = "Tatar",
        /**
         * Telugu language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        telugu = "Telugu",
        /**
         * Thai language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thai = "Thai",
        /**
         * Tibetan language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tibetan = "Tibetan",
        /**
         * Tigrigna Eritrea language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tigrignaEritrea = "TigrignaEritrea",
        /**
         * Tigrigna Ethiopic language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tigrignaEthiopic = "TigrignaEthiopic",
        /**
         * Traditional Chinese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        traditionalChinese = "TraditionalChinese",
        /**
         * Tsonga language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tsonga = "Tsonga",
        /**
         * Tswana language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tswana = "Tswana",
        /**
         * Turkish language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        turkish = "Turkish",
        /**
         * Turkmen language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        turkmen = "Turkmen",
        /**
         * Ukrainian language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ukrainian = "Ukrainian",
        /**
         * Urdu language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        urdu = "Urdu",
        /**
         * Uzbek Cyrillic language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        uzbekCyrillic = "UzbekCyrillic",
        /**
         * Uzbek Latin language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        uzbekLatin = "UzbekLatin",
        /**
         * Venda language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        venda = "Venda",
        /**
         * Vietnamese language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        vietnamese = "Vietnamese",
        /**
         * Welsh language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        welsh = "Welsh",
        /**
         * Xhosa language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        xhosa = "Xhosa",
        /**
         * Yi language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        yi = "Yi",
        /**
         * Yiddish language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        yiddish = "Yiddish",
        /**
         * Yoruba language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        yoruba = "Yoruba",
        /**
         * Zulu language.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        zulu = "Zulu",
    }
    /**
     * Specifies how a building block is inserted into a document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum DocPartInsertType {
        /**
         * Inserts the content of the building block.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        content = "Content",
        /**
         * Inserts the building block as a paragraph.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        paragraph = "Paragraph",
        /**
         * Inserts the building block as a page.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        page = "Page",
    }
    /**
     * Specifies the type of building block.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum BuildingBlockType {
        /**
         * Represents Quick Parts building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        quickParts = "QuickParts",
        /**
         * Represents Cover Page building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        coverPage = "CoverPage",
        /**
         * Represents Equations building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        equations = "Equations",
        /**
         * Represents Footers building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footers = "Footers",
        /**
         * Represents Headers building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        headers = "Headers",
        /**
         * Represents Page Number building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pageNumber = "PageNumber",
        /**
         * Represents Tables building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tables = "Tables",
        /**
         * Represents Watermarks building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        watermarks = "Watermarks",
        /**
         * Represents AutoText building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        autoText = "AutoText",
        /**
         * Represents Text Box building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        textBox = "TextBox",
        /**
         * Represents Page Number Top building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pageNumberTop = "PageNumberTop",
        /**
         * Represents Page Number Bottom building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pageNumberBottom = "PageNumberBottom",
        /**
         * Represents Page Number Page building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pageNumberPage = "PageNumberPage",
        /**
         * Represents Table of Contents building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tableOfContents = "TableOfContents",
        /**
         * Represents Custom Quick Parts building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customQuickParts = "CustomQuickParts",
        /**
         * Represents Custom Cover Page building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customCoverPage = "CustomCoverPage",
        /**
         * Represents Custom Equations building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customEquations = "CustomEquations",
        /**
         * Represents Custom Footers building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customFooters = "CustomFooters",
        /**
         * Represents Custom Headers building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customHeaders = "CustomHeaders",
        /**
         * Represents Custom Page Number building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customPageNumber = "CustomPageNumber",
        /**
         * Represents Custom Tables building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customTables = "CustomTables",
        /**
         * Represents Custom Watermarks building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customWatermarks = "CustomWatermarks",
        /**
         * Represents Custom AutoText building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customAutoText = "CustomAutoText",
        /**
         * Represents Custom Text Box building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customTextBox = "CustomTextBox",
        /**
         * Represents Custom Page Number Top building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customPageNumberTop = "CustomPageNumberTop",
        /**
         * Represents Custom Page Number Bottom building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customPageNumberBottom = "CustomPageNumberBottom",
        /**
         * Represents Custom Page Number Page building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customPageNumberPage = "CustomPageNumberPage",
        /**
         * Represents Custom Table of Contents building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customTableOfContents = "CustomTableOfContents",
        /**
         * Represents Custom building block type 1.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        custom1 = "Custom1",
        /**
         * Represents Custom building block type 2.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        custom2 = "Custom2",
        /**
         * Represents Custom building block type 3.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        custom3 = "Custom3",
        /**
         * Represents Custom building block type 4.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        custom4 = "Custom4",
        /**
         * Represents Custom building block type 5.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        custom5 = "Custom5",
        /**
         * Represents Bibliography building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bibliography = "Bibliography",
        /**
         * Represents Custom Bibliography building block type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        customBibliography = "CustomBibliography",
    }
    /**
     * Represents the type of a {@link Word.CustomXmlValidationError}.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum CustomXmlValidationErrorType {
        /**
         * Represents a validation error generated by the schema.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        schemaGenerated = "schemaGenerated",
        /**
         * Represents a validation error that is automatically cleared.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        automaticallyCleared = "automaticallyCleared",
        /**
         * Represents a validation error that is manually created.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        manual = "manual",
    }
    /**
     * Represents the type of a {@link Word.CustomXmlNode}.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum CustomXmlNodeType {
        /**
         * Represents an XML element node.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        element = "element",
        /**
         * Represents an XML attribute node.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        attribute = "attribute",
        /**
         * Represents an XML text node.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        text = "text",
        /**
         * Represents an XML CDATA section node.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cData = "cData",
        /**
         * Represents an XML processing instruction node.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        processingInstruction = "processingInstruction",
        /**
         * Represents an XML comment node.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        comment = "comment",
        /**
         * Represents an XML document node.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        document = "document",
    }
    /**
     * Specifies the type of link.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum LinkType {
        /**
         * OLE object.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ole = "Ole",
        /**
         * Picture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        picture = "Picture",
        /**
         * Text.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        text = "Text",
        /**
         * Reference library.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        reference = "Reference",
        /**
         * Include file.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        include = "Include",
        /**
         * Import file.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        import = "Import",
        /**
         * Dynamic Data Exchange.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dde = "Dde",
        /**
         * Automatic DDE.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ddeAuto = "DdeAuto",
        /**
         * Microsoft Excel chart.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        chart = "Chart",
    }
    /**
     * Specifies the action associated with the verb that the OLE object should perform.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum OleVerb {
        /**
         * Performs the verb that is invoked when the user double-clicks the object.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        primary = "Primary",
        /**
         * Shows the object to the user for editing or viewing. Use it to show a newly inserted object for initial editing.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        show = "Show",
        /**
         * Opens the object in a separate window.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        open = "Open",
        /**
         * Removes the object's user interface from view.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hide = "Hide",
        /**
         * Activates the object in place and displays any user-interface tools that the object needs, such as menus or toolbars.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        uiActivate = "UiActivate",
        /**
         * Runs the object and installs its window, but doesn't install any user-interface tools.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        inPlaceActivate = "InPlaceActivate",
        /**
         * Forces the object to discard any undo state that it might be maintaining; note that the object remains active, however.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        discardUndoState = "DiscardUndoState",
    }
    /**
     * Represents the list formatting characteristics of a range.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class ListFormat extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `List` object that represents the first formatted list contained in the `ListFormat` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly list: Word.List;
        /**
         * Gets the list template associated with the `ListFormat` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly listTemplate: Word.ListTemplate;
        /**
         * Indicates whether the `ListFormat` object contains a single list.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isSingleList: boolean;
        /**
         * Indicates whether the `ListFormat` object contains a single list template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isSingleListTemplate: boolean;
        /**
         * Specifies the list level number for the first paragraph for the `ListFormat` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listLevelNumber: number;
        /**
         * Gets the string representation of the list value of the first paragraph in the range for the `ListFormat` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly listString: string;
        /**
         * Gets the type of the list for the `ListFormat` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly listType: Word.ListType | "ListNoNumbering" | "ListListNumOnly" | "ListBullet" | "ListSimpleNumbering" | "ListOutlineNumbering" | "ListMixedNumbering" | "ListPictureBullet";
        /**
         * Gets the numeric value of the the first paragraph in the range for the `ListFormat` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly listValue: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ListFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ListFormat): void;
        /**
         * Adds bullets and formatting to the paragraphs in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param defaultListBehavior - Optional. Specifies the default list behavior. Default is `DefaultListBehavior.word97`.
         */
        applyBulletDefault(defaultListBehavior: Word.DefaultListBehavior): void;
        /**
         * Adds bullets and formatting to the paragraphs in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param defaultListBehavior - Optional. Specifies the default list behavior. Default is `DefaultListBehavior.word97`.
         */
        applyBulletDefault(defaultListBehavior: "Word97" | "Word2000" | "Word2002"): void;
        /**
         * Applies a list template with a specific level to the paragraphs in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param listTemplate - The list template to apply.
         * @param options - Optional. Options for applying the list template, such as whether to continue the previous list or which part of the list to apply the template to.
         */
        applyListTemplateWithLevel(listTemplate: Word.ListTemplate, options?: Word.ListTemplateApplyOptions): void;
        /**
         * Adds numbering and formatting to the paragraphs in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param defaultListBehavior - Optional. Specifies the default list behavior.
         */
        applyNumberDefault(defaultListBehavior: Word.DefaultListBehavior): void;
        /**
         * Adds numbering and formatting to the paragraphs in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param defaultListBehavior - Optional. Specifies the default list behavior.
         */
        applyNumberDefault(defaultListBehavior: "Word97" | "Word2000" | "Word2002"): void;
        /**
         * Adds outline numbering and formatting to the paragraphs in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param defaultListBehavior - Optional. Specifies the default list behavior.
         */
        applyOutlineNumberDefault(defaultListBehavior: Word.DefaultListBehavior): void;
        /**
         * Adds outline numbering and formatting to the paragraphs in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param defaultListBehavior - Optional. Specifies the default list behavior.
         */
        applyOutlineNumberDefault(defaultListBehavior: "Word97" | "Word2000" | "Word2002"): void;
        /**
         * Determines whether the `ListFormat` object can continue a previous list.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param listTemplate - The list template to check.
         * @returns A `Continue` value indicating whether continuation is possible.
         */
        canContinuePreviousList(listTemplate: Word.ListTemplate): OfficeExtension.ClientResult<Word.Continue>;
        /**
         * Converts numbers in the list to plain text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param numberType - Optional. The type of number to convert.
         */
        convertNumbersToText(numberType: Word.NumberType): void;
        /**
         * Converts numbers in the list to plain text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param numberType - Optional. The type of number to convert.
         */
        convertNumbersToText(numberType: "Paragraph" | "ListNum" | "AllNumbers"): void;
        /**
         * Counts the numbered items in the list.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for counting numbered items, such as the type of number and the level to count.
         * @returns The number of items.
         */
        countNumberedItems(options?: Word.ListFormatCountNumberedItemsOptions): OfficeExtension.ClientResult<number>;
        /**
         * Indents the list by one level.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listIndent(): void;
        /**
         * Outdents the list by one level.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listOutdent(): void;
        /**
         * Removes numbering from the list.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param numberType - Optional. The type of number to remove.
         */
        removeNumbers(numberType: Word.NumberType): void;
        /**
         * Removes numbering from the list.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param numberType - Optional. The type of number to remove.
         */
        removeNumbers(numberType: "Paragraph" | "ListNum" | "AllNumbers"): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ListFormatLoadOptions): Word.ListFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ListFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ListFormat;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ListFormat;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ListFormat;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ListFormat` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ListFormatData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ListFormatData;
    }
    /**
     * Represents options for counting numbered items in a range.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface ListFormatCountNumberedItemsOptions {
        /**
         * If provided, specifies the level to count. The default value is 1.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        level?: number;
        /**
         * If provided, specifies the type of number to count. The default value is `Word.NumberType.paragraph`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numberType?: Word.NumberType | "Paragraph" | "ListNum" | "AllNumbers";
    }
    /**
     * Represents options for applying a list template to a range.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface ListTemplateApplyOptions {
        /**
         * If provided, specifies the level to apply in the list template. The default value is 1.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyLevel?: number;
        /**
         * If provided, specifies which part of the list to apply the template to. The default value is `Word.ListApplyTo.wholeList`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyTo?: Word.ListApplyTo | "WholeList" | "ThisPointForward" | "Selection";
        /**
         * If provided, specifies whether to continue the previous list. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        continuePreviousList?: boolean;
        /**
         * If provided, specifies the default list behavior. The default value is `DefaultListBehavior.word97`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        defaultListBehavior?: Word.DefaultListBehavior | "Word97" | "Word2000" | "Word2002";
    }
    /**
     * Represents the fill formatting for a shape or text.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class FillFormat extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `ColorFormat` object that represents the background color for the fill.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly backgroundColor: Word.ColorFormat;
        /**
         * Returns a `ColorFormat` object that represents the foreground color for the fill.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly foregroundColor: Word.ColorFormat;
        /**
         * Specifies the angle of the gradient fill. The valid range of values is from 0 to 359.9.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gradientAngle: number;
        /**
         * Gets the gradient color type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly gradientColorType: Word.GradientColorType | "Mixed" | "OneColor" | "TwoColors" | "PresetColors" | "MultiColor";
        /**
         * Returns how dark or light a one-color gradient fill is.
                    A value of 0 means that black is mixed in with the shape's foreground color to form the gradient.
                    A value of 1 means that white is mixed in.
                    Values between 0 and 1 mean that a darker or lighter shade of the foreground color is mixed in.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly gradientDegree: number;
        /**
         * Returns the gradient style for the fill.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly gradientStyle: Word.GradientStyle | "Mixed" | "Horizontal" | "Vertical" | "DiagonalUp" | "DiagonalDown" | "FromCorner" | "FromTitle" | "FromCenter";
        /**
         * Returns the gradient variant for the fill as an integer value from 1 to 4 for most gradient fills.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly gradientVariant: number;
        /**
         * Specifies if the object, or the formatting applied to it, is visible.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isVisible: boolean;
        /**
         * Returns a `PatternType` value that represents the pattern applied to the fill or line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly pattern: Word.PatternType | "Mixed" | "Percent5" | "Percent10" | "Percent20" | "Percent25" | "Percent30" | "Percent40" | "Percent50" | "Percent60" | "Percent70" | "Percent75" | "Percent80" | "Percent90" | "DarkHorizontal" | "DarkVertical" | "DarkDownwardDiagonal" | "DarkUpwardDiagonal" | "SmallCheckerBoard" | "Trellis" | "LightHorizontal" | "LightVertical" | "LightDownwardDiagonal" | "LightUpwardDiagonal" | "SmallGrid" | "DottedDiamond" | "WideDownwardDiagonal" | "WideUpwardDiagonal" | "DashedUpwardDiagonal" | "DashedDownwardDiagonal" | "NarrowVertical" | "NarrowHorizontal" | "DashedVertical" | "DashedHorizontal" | "LargeConfetti" | "LargeGrid" | "HorizontalBrick" | "LargeCheckerBoard" | "SmallConfetti" | "ZigZag" | "SolidDiamond" | "DiagonalBrick" | "OutlinedDiamond" | "Plaid" | "Sphere" | "Weave" | "DottedGrid" | "Divot" | "Shingle" | "Wave" | "Horizontal" | "Vertical" | "Cross" | "DownwardDiagonal" | "UpwardDiagonal" | "DiagonalCross";
        /**
         * Returns the preset gradient type for the fill.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly presetGradientType: Word.PresetGradientType | "Mixed" | "EarlySunset" | "LateSunset" | "Nightfall" | "Daybreak" | "Horizon" | "Desert" | "Ocean" | "CalmWater" | "Fire" | "Fog" | "Moss" | "Peacock" | "Wheat" | "Parchment" | "Mahogany" | "Rainbow" | "RainbowII" | "Gold" | "GoldII" | "Brass" | "Chrome" | "ChromeII" | "Silver" | "Sapphire";
        /**
         * Gets the preset texture.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly presetTexture: Word.PresetTexture | "Mixed" | "Papyrus" | "Canvas" | "Denim" | "WovenMat" | "WaterDroplets" | "PaperBag" | "FishFossil" | "Sand" | "GreenMarble" | "WhiteMarble" | "BrownMarble" | "Granite" | "Newsprint" | "RecycledPaper" | "Parchment" | "Stationery" | "BlueTissuePaper" | "PinkTissuePaper" | "PurpleMesh" | "Bouquet" | "Cork" | "Walnut" | "Oak" | "MediumWood";
        /**
         * Specifies whether the fill rotates with the shape.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rotateWithObject: boolean;
        /**
         * Specifies the alignment (the origin of the coordinate grid) for the tiling of the texture fill.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        textureAlignment: Word.TextureAlignment | "Mixed" | "TopLeft" | "Top" | "TopRight" | "Left" | "Center" | "Right" | "BottomLeft" | "Bottom" | "BottomRight";
        /**
         * Specifies the horizontal scaling factor for the texture fill.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        textureHorizontalScale: number;
        /**
         * Returns the name of the custom texture file for the fill.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly textureName: string;
        /**
         * Specifies the horizontal offset of the texture from the origin in points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        textureOffsetX: number;
        /**
         * Specifies the vertical offset of the texture.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        textureOffsetY: number;
        /**
         * Specifies whether the texture is tiled.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        textureTile: boolean;
        /**
         * Returns the texture type for the fill.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly textureType: Word.TextureType | "Mixed" | "Preset" | "UserDefined";
        /**
         * Specifies the vertical scaling factor for the texture fill as a value between 0.0 and 1.0.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        textureVerticalScale: number;
        /**
         * Specifies the degree of transparency of the fill for a shape as a value between 0.0 (opaque) and 1.0 (clear).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        transparency: number;
        /**
         * Gets the fill format type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.FillType | "Mixed" | "Solid" | "Patterned" | "Gradient" | "Textured" | "Background" | "Picture";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.FillFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.FillFormat): void;
        /**
         * Sets the fill to a one-color gradient.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param style - The gradient style.
         * @param variant - The gradient variant. Can be a value from 1 to 4.
         * @param degree - The gradient degree. Can be a value from `0.0` (dark) to `1.0` (light).
         */
        setOneColorGradient(style: Word.GradientStyle, variant: number, degree: number): void;
        /**
         * Sets the fill to a one-color gradient.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param style - The gradient style.
         * @param variant - The gradient variant. Can be a value from 1 to 4.
         * @param degree - The gradient degree. Can be a value from `0.0` (dark) to `1.0` (light).
         */
        setOneColorGradient(style: "Mixed" | "Horizontal" | "Vertical" | "DiagonalUp" | "DiagonalDown" | "FromCorner" | "FromTitle" | "FromCenter", variant: number, degree: number): void;
        /**
         * Sets the fill to a pattern.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setPatterned(pattern: Word.PatternType): void;
        /**
         * Sets the fill to a pattern.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setPatterned(pattern: "Mixed" | "Percent5" | "Percent10" | "Percent20" | "Percent25" | "Percent30" | "Percent40" | "Percent50" | "Percent60" | "Percent70" | "Percent75" | "Percent80" | "Percent90" | "DarkHorizontal" | "DarkVertical" | "DarkDownwardDiagonal" | "DarkUpwardDiagonal" | "SmallCheckerBoard" | "Trellis" | "LightHorizontal" | "LightVertical" | "LightDownwardDiagonal" | "LightUpwardDiagonal" | "SmallGrid" | "DottedDiamond" | "WideDownwardDiagonal" | "WideUpwardDiagonal" | "DashedUpwardDiagonal" | "DashedDownwardDiagonal" | "NarrowVertical" | "NarrowHorizontal" | "DashedVertical" | "DashedHorizontal" | "LargeConfetti" | "LargeGrid" | "HorizontalBrick" | "LargeCheckerBoard" | "SmallConfetti" | "ZigZag" | "SolidDiamond" | "DiagonalBrick" | "OutlinedDiamond" | "Plaid" | "Sphere" | "Weave" | "DottedGrid" | "Divot" | "Shingle" | "Wave" | "Horizontal" | "Vertical" | "Cross" | "DownwardDiagonal" | "UpwardDiagonal" | "DiagonalCross"): void;
        /**
         * Sets the fill to a preset gradient.
                    The gradient style.The gradient variant. Can be a value from 1 to 4.The preset gradient type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setPresetGradient(style: Word.GradientStyle, variant: number, presetGradientType: Word.PresetGradientType): void;
        /**
         * Sets the fill to a preset gradient.
                    The gradient style.The gradient variant. Can be a value from 1 to 4.The preset gradient type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setPresetGradient(style: "Mixed" | "Horizontal" | "Vertical" | "DiagonalUp" | "DiagonalDown" | "FromCorner" | "FromTitle" | "FromCenter", variant: number, presetGradientType: "Mixed" | "EarlySunset" | "LateSunset" | "Nightfall" | "Daybreak" | "Horizon" | "Desert" | "Ocean" | "CalmWater" | "Fire" | "Fog" | "Moss" | "Peacock" | "Wheat" | "Parchment" | "Mahogany" | "Rainbow" | "RainbowII" | "Gold" | "GoldII" | "Brass" | "Chrome" | "ChromeII" | "Silver" | "Sapphire"): void;
        /**
         * Sets the fill to a preset texture.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setPresetTextured(presetTexture: Word.PresetTexture): void;
        /**
         * Sets the fill to a preset texture.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setPresetTextured(presetTexture: "Mixed" | "Papyrus" | "Canvas" | "Denim" | "WovenMat" | "WaterDroplets" | "PaperBag" | "FishFossil" | "Sand" | "GreenMarble" | "WhiteMarble" | "BrownMarble" | "Granite" | "Newsprint" | "RecycledPaper" | "Parchment" | "Stationery" | "BlueTissuePaper" | "PinkTissuePaper" | "PurpleMesh" | "Bouquet" | "Cork" | "Walnut" | "Oak" | "MediumWood"): void;
        /**
         * Sets the fill to a two-color gradient.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setTwoColorGradient(style: Word.GradientStyle, variant: number): void;
        /**
         * Sets the fill to a two-color gradient.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setTwoColorGradient(style: "Mixed" | "Horizontal" | "Vertical" | "DiagonalUp" | "DiagonalDown" | "FromCorner" | "FromTitle" | "FromCenter", variant: number): void;
        /**
         * Sets the fill to a uniform color.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        solid(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.FillFormatLoadOptions): Word.FillFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.FillFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.FillFormat;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.FillFormat;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.FillFormat;
        /**
        * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
        * Whereas the original `Word.FillFormat` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.FillFormatData`) that contains shallow copies of any loaded child properties from the original object.
        */
        toJSON(): Word.Interfaces.FillFormatData;
    }
    /**
     * Represents the glow formatting for the font used by the range of text.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class GlowFormat extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `ColorFormat` object that represents the color for a glow effect.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly color: Word.ColorFormat;
        /**
         * Specifies the length of the radius for a glow effect.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        radius: number;
        /**
         * Specifies the degree of transparency for the glow effect as a value between 0.0 (opaque) and 1.0 (clear).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        transparency: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.GlowFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.GlowFormat): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.GlowFormatLoadOptions): Word.GlowFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.GlowFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.GlowFormat;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.GlowFormat;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.GlowFormat;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.GlowFormat` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.GlowFormatData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.GlowFormatData;
    }
    /**
     * Represents line and arrowhead formatting. For a line, the `LineFormat` object contains formatting information for the line itself;
                for a shape with a border, this object contains formatting information for the shape's border.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class LineFormat extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets a `ColorFormat` object that represents the background color for a patterned line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly backgroundColor: Word.ColorFormat;
        /**
         * Gets a `ColorFormat` object that represents the foreground color for the line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly foregroundColor: Word.ColorFormat;
        /**
         * Specifies the length of the arrowhead at the beginning of the line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        beginArrowheadLength: Word.ArrowheadLength | "Mixed" | "Short" | "Medium" | "Long";
        /**
         * Specifies the style of the arrowhead at the beginning of the line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        beginArrowheadStyle: Word.ArrowheadStyle | "Mixed" | "None" | "Triangle" | "Open" | "Stealth" | "Diamond" | "Oval";
        /**
         * Specifies the width of the arrowhead at the beginning of the line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        beginArrowheadWidth: Word.ArrowheadWidth | "Mixed" | "Narrow" | "Medium" | "Wide";
        /**
         * Specifies the dash style for the line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashStyle: Word.LineDashStyle | "Mixed" | "Solid" | "SquareDot" | "RoundDot" | "Dash" | "DashDot" | "DashDotDot" | "LongDash" | "LongDashDot" | "LongDashDotDot" | "SysDash" | "SysDot" | "SysDashDot";
        /**
         * Specifies the length of the arrowhead at the end of the line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endArrowheadLength: Word.ArrowheadLength | "Mixed" | "Short" | "Medium" | "Long";
        /**
         * Specifies the style of the arrowhead at the end of the line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endArrowheadStyle: Word.ArrowheadStyle | "Mixed" | "None" | "Triangle" | "Open" | "Stealth" | "Diamond" | "Oval";
        /**
         * Specifies the width of the arrowhead at the end of the line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endArrowheadWidth: Word.ArrowheadWidth | "Mixed" | "Narrow" | "Medium" | "Wide";
        /**
         * Specifies if to draw lines inside a shape.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insetPen: boolean;
        /**
         * Specifies if the object, or the formatting applied to it, is visible.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isVisible: boolean;
        /**
         * Specifies the pattern applied to the line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pattern: Word.PatternType | "Mixed" | "Percent5" | "Percent10" | "Percent20" | "Percent25" | "Percent30" | "Percent40" | "Percent50" | "Percent60" | "Percent70" | "Percent75" | "Percent80" | "Percent90" | "DarkHorizontal" | "DarkVertical" | "DarkDownwardDiagonal" | "DarkUpwardDiagonal" | "SmallCheckerBoard" | "Trellis" | "LightHorizontal" | "LightVertical" | "LightDownwardDiagonal" | "LightUpwardDiagonal" | "SmallGrid" | "DottedDiamond" | "WideDownwardDiagonal" | "WideUpwardDiagonal" | "DashedUpwardDiagonal" | "DashedDownwardDiagonal" | "NarrowVertical" | "NarrowHorizontal" | "DashedVertical" | "DashedHorizontal" | "LargeConfetti" | "LargeGrid" | "HorizontalBrick" | "LargeCheckerBoard" | "SmallConfetti" | "ZigZag" | "SolidDiamond" | "DiagonalBrick" | "OutlinedDiamond" | "Plaid" | "Sphere" | "Weave" | "DottedGrid" | "Divot" | "Shingle" | "Wave" | "Horizontal" | "Vertical" | "Cross" | "DownwardDiagonal" | "UpwardDiagonal" | "DiagonalCross";
        /**
         * Specifies the line format style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        style: Word.LineFormatStyle | "Mixed" | "Single" | "ThinThin" | "ThinThick" | "ThickThin" | "ThickBetweenThin";
        /**
         * Specifies the degree of transparency of the line as a value between 0.0 (opaque) and 1.0 (clear).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        transparency: number;
        /**
         * Specifies the thickness of the line in points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        weight: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.LineFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.LineFormat): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.LineFormatLoadOptions): Word.LineFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.LineFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.LineFormat;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.LineFormat;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.LineFormat;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.LineFormat` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.LineFormatData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.LineFormatData;
    }
    /**
     * Represents the reflection formatting for a shape in Word.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class ReflectionFormat extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the degree of blur effect applied to the `ReflectionFormat` object as a value between 0.0 and 100.0.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        blur: number;
        /**
         * Specifies the amount of separation, in points, of the reflected image from the shape.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        offset: number;
        /**
         * Specifies the size of the reflection as a percentage of the reflected shape from 0 to 100.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        size: number;
        /**
         * Specifies the degree of transparency for the reflection effect as a value between 0.0 (opaque) and 1.0 (clear).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        transparency: number;
        /**
         * Specifies a `ReflectionType` value that represents the type and direction of the lighting for a shape reflection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type: Word.ReflectionType | "Mixed" | "None" | "Type1" | "Type2" | "Type3" | "Type4" | "Type5" | "Type6" | "Type7" | "Type8" | "Type9";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ReflectionFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ReflectionFormat): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ReflectionFormatLoadOptions): Word.ReflectionFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ReflectionFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ReflectionFormat;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ReflectionFormat;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ReflectionFormat;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ReflectionFormat` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ReflectionFormatData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ReflectionFormatData;
    }
    /**
     * Represents the color formatting of a shape or text in Word.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class ColorFormat extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the brightness of a specified shape color. Valid values are from `-1` (darkest) to `1` (lightest), `0` represents neutral.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        brightness: number;
        /**
         * Specifies the theme color for a color format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        objectThemeColor: Word.ThemeColorIndex | "NotThemeColor" | "MainDark1" | "MainLight1" | "MainDark2" | "MainLight2" | "Accent1" | "Accent2" | "Accent3" | "Accent4" | "Accent5" | "Accent6" | "Hyperlink" | "HyperlinkFollowed" | "Background1" | "Text1" | "Background2" | "Text2";
        /**
         * Specifies the red-green-blue (RGB) value of the specified color. You can provide the value in the '#RRGGBB' format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rgb: string;
        /**
         * Specifies the lightening or darkening of a specified shape's color. Valid values are from `-1` (darkest) to `1` (lightest), `0` represents neutral.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tintAndShade: number;
        /**
         * Returns the shape color type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.ColorType | "rgb" | "scheme";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ColorFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ColorFormat): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ColorFormatLoadOptions): Word.ColorFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ColorFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ColorFormat;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ColorFormat;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ColorFormat;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ColorFormat` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ColorFormatData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ColorFormatData;
    }
    /**
     * Represents the shadow formatting for a shape or text in Word.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class ShadowFormat extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `ColorFormat` object that represents the foreground color for the fill, line, or shadow.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly foregroundColor: Word.ColorFormat;
        /**
         * Specifies the blur level for a shadow format as a value between 0.0 and 100.0.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        blur: number;
        /**
         * Specifies whether the object or the formatting applied to it is visible.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isVisible: boolean;
        /**
         * Specifies `true` if the shadow of the shape appears filled in and is obscured by the shape, even if the shape has no fill,
                    `false` if the shadow has no fill and the outline of the shadow is visible through the shape if the shape has no fill.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        obscured: boolean;
        /**
         * Specifies the horizontal offset (in points) of the shadow from the shape.
                    A positive value offsets the shadow to the right of the shape; a negative value offsets it to the left.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        offsetX: number;
        /**
         * Specifies the vertical offset (in points) of the shadow from the shape.
                    A positive value offsets the shadow to the top of the shape; a negative value offsets it to the bottom.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        offsetY: number;
        /**
         * Specifies whether to rotate the shadow when rotating the shape.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rotateWithShape: boolean;
        /**
         * Specifies the width of the shadow.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        size: number;
        /**
         * Specifies the type of shadow formatting to apply to a shape.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        style: Word.ShadowStyle | "Mixed" | "OuterShadow" | "InnerShadow";
        /**
         * Specifies the degree of transparency of the shadow as a value between 0.0 (opaque) and 1.0 (clear).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        transparency: number;
        /**
         * Specifies the shape shadow type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type: Word.ShadowType | "Mixed" | "Type1" | "Type2" | "Type3" | "Type4" | "Type5" | "Type6" | "Type7" | "Type8" | "Type9" | "Type10" | "Type11" | "Type12" | "Type13" | "Type14" | "Type15" | "Type16" | "Type17" | "Type18" | "Type19" | "Type20" | "Type21" | "Type22" | "Type23" | "Type24" | "Type25" | "Type26" | "Type27" | "Type28" | "Type29" | "Type30" | "Type31" | "Type32" | "Type33" | "Type34" | "Type35" | "Type36" | "Type37" | "Type38" | "Type39" | "Type40" | "Type41" | "Type42" | "Type43";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ShadowFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ShadowFormat): void;
        /**
         * Changes the horizontal offset of the shadow by the number of points.
                    Increment The number of points to adjust.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        incrementOffsetX(increment: number): void;
        /**
         * Changes the vertical offset of the shadow by the specified number of points.
                    Increment The number of points to adjust.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        incrementOffsetY(increment: number): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ShadowFormatLoadOptions): Word.ShadowFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ShadowFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ShadowFormat;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ShadowFormat;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ShadowFormat;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ShadowFormat` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ShadowFormatData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ShadowFormatData;
    }
    /**
     * Represents a shape's three-dimensional formatting.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class ThreeDimensionalFormat extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `ColorFormat` object that represents color of the contour of a shape.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly contourColor: Word.ColorFormat;
        /**
         * Returns a `ColorFormat` object that represents the color of the shape's extrusion.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly extrusionColor: Word.ColorFormat;
        /**
         * Specifies the depth of the bottom bevel.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bevelBottomDepth: number;
        /**
         * Specifies the inset size for the bottom bevel.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bevelBottomInset: number;
        /**
         * Specifies a `BevelType` value that represents the bevel type for the bottom bevel.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bevelBottomType: Word.BevelType | "mixed" | "none" | "relaxedInset" | "circle" | "slope" | "cross" | "angle" | "softRound" | "convex" | "coolSlant" | "divot" | "riblet" | "hardEdge" | "artDeco";
        /**
         * Specifies the depth of the top bevel.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bevelTopDepth: number;
        /**
         * Specifies the inset size for the top bevel.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bevelTopInset: number;
        /**
         * Specifies a `BevelType` value that represents the bevel type for the top bevel.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bevelTopType: Word.BevelType | "mixed" | "none" | "relaxedInset" | "circle" | "slope" | "cross" | "angle" | "softRound" | "convex" | "coolSlant" | "divot" | "riblet" | "hardEdge" | "artDeco";
        /**
         * Specifies the width of the contour of a shape.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        contourWidth: number;
        /**
         * Specifies the depth of the shape's extrusion.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        depth: number;
        /**
         * Specifies whether the extrusion color is based on the extruded shape's fill (the front face of the extrusion)
                    and automatically changes when the shape's fill changes, or whether the extrusion color is independent of the shape's fill.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        extrusionColorType: Word.ExtrusionColorType | "mixed" | "automatic" | "custom";
        /**
         * Specifies the amount of perspective for a shape.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fieldOfView: number;
        /**
         * Specifies `true` if the extrusion appears in perspective — that is, if the walls of the extrusion narrow toward a vanishing point,
                    `false` if the extrusion is a parallel, or orthographic, projection — that is, if the walls don't narrow toward a vanishing point.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isPerspective: boolean;
        /**
         * Specifies if the specified object, or the formatting applied to it, is visible.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isVisible: boolean;
        /**
         * Specifies the angle of the lighting.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lightAngle: number;
        /**
         * Returns a `PresetCamera` value that represents the camera presets.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly presetCamera: Word.PresetCamera | "Mixed" | "LegacyObliqueTopLeft" | "LegacyObliqueTop" | "LegacyObliqueTopRight" | "LegacyObliqueLeft" | "LegacyObliqueFront" | "LegacyObliqueRight" | "LegacyObliqueBottomLeft" | "LegacyObliqueBottom" | "LegacyObliqueBottomRight" | "LegacyPerspectiveTopLeft" | "LegacyPerspectiveTop" | "LegacyPerspectiveTopRight" | "LegacyPerspectiveLeft" | "LegacyPerspectiveFront" | "LegacyPerspectiveRight" | "LegacyPerspectiveBottomLeft" | "LegacyPerspectiveBottom" | "LegacyPerspectiveBottomRight" | "OrthographicFront" | "IsometricTopUp" | "IsometricTopDown" | "IsometricBottomUp" | "IsometricBottomDown" | "IsometricLeftUp" | "IsometricLeftDown" | "IsometricRightUp" | "IsometricRightDown" | "IsometricOffAxis1Left" | "IsometricOffAxis1Right" | "IsometricOffAxis1Top" | "IsometricOffAxis2Left" | "IsometricOffAxis2Right" | "IsometricOffAxis2Top" | "IsometricOffAxis3Left" | "IsometricOffAxis3Right" | "IsometricOffAxis3Bottom" | "IsometricOffAxis4Left" | "IsometricOffAxis4Right" | "IsometricOffAxis4Bottom" | "ObliqueTopLeft" | "ObliqueTop" | "ObliqueTopRight" | "ObliqueLeft" | "ObliqueRight" | "ObliqueBottomLeft" | "ObliqueBottom" | "ObliqueBottomRight" | "PerspectiveFront" | "PerspectiveLeft" | "PerspectiveRight" | "PerspectiveAbove" | "PerspectiveBelow" | "PerspectiveAboveLeftFacing" | "PerspectiveAboveRightFacing" | "PerspectiveContrastingLeftFacing" | "PerspectiveContrastingRightFacing" | "PerspectiveHeroicLeftFacing" | "PerspectiveHeroicRightFacing" | "PerspectiveHeroicExtremeLeftFacing" | "PerspectiveHeroicExtremeRightFacing" | "PerspectiveRelaxed" | "PerspectiveRelaxedModerately";
        /**
         * Returns the direction taken by the extrusion's sweep path leading away from the extruded shape (the front face of the extrusion).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly presetExtrusionDirection: Word.PresetExtrusionDirection | "Mixed" | "BottomRight" | "Bottom" | "BottomLeft" | "Right" | "None" | "Left" | "TopRight" | "Top" | "TopLeft";
        /**
         * Specifies a `LightRigType` value that represents the lighting preset.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        presetLighting: Word.LightRigType | "Mixed" | "LegacyFlat1" | "LegacyFlat2" | "LegacyFlat3" | "LegacyFlat4" | "LegacyNormal1" | "LegacyNormal2" | "LegacyNormal3" | "LegacyNormal4" | "LegacyHarsh1" | "LegacyHarsh2" | "LegacyHarsh3" | "LegacyHarsh4" | "ThreePoint" | "Balanced" | "Soft" | "Harsh" | "Flood" | "Contrasting" | "Morning" | "Sunrise" | "Sunset" | "Chilly" | "Freezing" | "Flat" | "TwoPoint" | "Glow" | "BrightRoom";
        /**
         * Specifies the position of the light source relative to the extrusion.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        presetLightingDirection: Word.PresetLightingDirection | "Mixed" | "TopLeft" | "Top" | "TopRight" | "Left" | "None" | "Right" | "BottomLeft" | "Bottom" | "BottomRight";
        /**
         * Specifies the intensity of the extrusion lighting.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        presetLightingSoftness: Word.PresetLightingSoftness | "Mixed" | "Dim" | "Normal" | "Bright";
        /**
         * Specifies the extrusion surface material.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        presetMaterial: Word.PresetMaterial | "Mixed" | "Matte" | "Plastic" | "Metal" | "WireFrame" | "Matte2" | "Plastic2" | "Metal2" | "WarmMatte" | "TranslucentPowder" | "Powder" | "DarkEdge" | "SoftEdge" | "Clear" | "Flat" | "SoftMetal";
        /**
         * Returns the preset extrusion format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly presetThreeDimensionalFormat: Word.PresetThreeDimensionalFormat | "Mixed" | "Format1" | "Format2" | "Format3" | "Format4" | "Format5" | "Format6" | "Format7" | "Format8" | "Format9" | "Format10" | "Format11" | "Format12" | "Format13" | "Format14" | "Format15" | "Format16" | "Format17" | "Format18" | "Format19" | "Format20";
        /**
         * Specifies whether text on a shape rotates with shape. `true` rotates the text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        projectText: boolean;
        /**
         * Specifies the rotation of the extruded shape around the x-axis in degrees.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rotationX: number;
        /**
         * Specifies the rotation of the extruded shape around the y-axis in degrees.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rotationY: number;
        /**
         * Specifies the z-axis rotation of the camera.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rotationZ: number;
        /**
         * Specifies the position on the z-axis for the shape.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        z: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.ThreeDimensionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.ThreeDimensionalFormat): void;
        /**
         * Horizontally rotates a shape on the x-axis.
                    The number of degrees to rotate.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        incrementRotationHorizontal(increment: number): void;
        /**
         * Vertically rotates a shape on the y-axis.
                    The number of degrees to rotate.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        incrementRotationVertical(increment: number): void;
        /**
         * Changes the rotation around the x-axis.
                    The number of degrees to rotate.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        incrementRotationX(increment: number): void;
        /**
         * Changes the rotation around the y-axis.
                    The number of degrees to rotate.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        incrementRotationY(increment: number): void;
        /**
         * Rotates a shape on the z-axis.
                    The number of degrees to rotate.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        incrementRotationZ(increment: number): void;
        /**
         * Resets the extrusion rotation around the x-axis, y-axis, and z-axis to 0.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        resetRotation(): void;
        /**
         * Sets the direction of the extrusion's sweep path.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param presetExtrusionDirection - The preset direction.
         */
        setExtrusionDirection(presetExtrusionDirection: Word.PresetExtrusionDirection): void;
        /**
         * Sets the direction of the extrusion's sweep path.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param presetExtrusionDirection - The preset direction.
         */
        setExtrusionDirection(presetExtrusionDirection: "Mixed" | "BottomRight" | "Bottom" | "BottomLeft" | "Right" | "None" | "Left" | "TopRight" | "Top" | "TopLeft"): void;
        /**
         * Sets the camera preset for the shape.
                    The preset camera type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setPresetCamera(presetCamera: Word.PresetCamera): void;
        /**
         * Sets the camera preset for the shape.
                    The preset camera type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setPresetCamera(presetCamera: "Mixed" | "LegacyObliqueTopLeft" | "LegacyObliqueTop" | "LegacyObliqueTopRight" | "LegacyObliqueLeft" | "LegacyObliqueFront" | "LegacyObliqueRight" | "LegacyObliqueBottomLeft" | "LegacyObliqueBottom" | "LegacyObliqueBottomRight" | "LegacyPerspectiveTopLeft" | "LegacyPerspectiveTop" | "LegacyPerspectiveTopRight" | "LegacyPerspectiveLeft" | "LegacyPerspectiveFront" | "LegacyPerspectiveRight" | "LegacyPerspectiveBottomLeft" | "LegacyPerspectiveBottom" | "LegacyPerspectiveBottomRight" | "OrthographicFront" | "IsometricTopUp" | "IsometricTopDown" | "IsometricBottomUp" | "IsometricBottomDown" | "IsometricLeftUp" | "IsometricLeftDown" | "IsometricRightUp" | "IsometricRightDown" | "IsometricOffAxis1Left" | "IsometricOffAxis1Right" | "IsometricOffAxis1Top" | "IsometricOffAxis2Left" | "IsometricOffAxis2Right" | "IsometricOffAxis2Top" | "IsometricOffAxis3Left" | "IsometricOffAxis3Right" | "IsometricOffAxis3Bottom" | "IsometricOffAxis4Left" | "IsometricOffAxis4Right" | "IsometricOffAxis4Bottom" | "ObliqueTopLeft" | "ObliqueTop" | "ObliqueTopRight" | "ObliqueLeft" | "ObliqueRight" | "ObliqueBottomLeft" | "ObliqueBottom" | "ObliqueBottomRight" | "PerspectiveFront" | "PerspectiveLeft" | "PerspectiveRight" | "PerspectiveAbove" | "PerspectiveBelow" | "PerspectiveAboveLeftFacing" | "PerspectiveAboveRightFacing" | "PerspectiveContrastingLeftFacing" | "PerspectiveContrastingRightFacing" | "PerspectiveHeroicLeftFacing" | "PerspectiveHeroicRightFacing" | "PerspectiveHeroicExtremeLeftFacing" | "PerspectiveHeroicExtremeRightFacing" | "PerspectiveRelaxed" | "PerspectiveRelaxedModerately"): void;
        /**
         * Sets the preset extrusion format.
                    The preset format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setThreeDimensionalFormat(presetThreeDimensionalFormat: Word.PresetThreeDimensionalFormat): void;
        /**
         * Sets the preset extrusion format.
                    The preset format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setThreeDimensionalFormat(presetThreeDimensionalFormat: "Mixed" | "Format1" | "Format2" | "Format3" | "Format4" | "Format5" | "Format6" | "Format7" | "Format8" | "Format9" | "Format10" | "Format11" | "Format12" | "Format13" | "Format14" | "Format15" | "Format16" | "Format17" | "Format18" | "Format19" | "Format20"): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ThreeDimensionalFormatLoadOptions): Word.ThreeDimensionalFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ThreeDimensionalFormat;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ThreeDimensionalFormat;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ThreeDimensionalFormat;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ThreeDimensionalFormat;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ThreeDimensionalFormat` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ThreeDimensionalFormatData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ThreeDimensionalFormatData;
    }
    /**
     * Specifies the length of the arrowhead at the end of a line.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ArrowheadLength {
        /**
         * Represents a mixed arrowhead length.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents a short arrowhead length.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        short = "Short",
        /**
         * Represents a medium arrowhead length.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        medium = "Medium",
        /**
         * Represents a long arrowhead length.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        long = "Long",
    }
    /**
     * Specifies the style of the arrowhead at the end of a line.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ArrowheadStyle {
        /**
         * Represents a mixed arrowhead style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents no arrowhead.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Represents a triangle arrowhead style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        triangle = "Triangle",
        /**
         * Represents an open arrowhead style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        open = "Open",
        /**
         * Represents a stealth arrowhead style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        stealth = "Stealth",
        /**
         * Represents a diamond arrowhead style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        diamond = "Diamond",
        /**
         * Represents an oval arrowhead style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        oval = "Oval",
    }
    /**
     * Specifies the width of the arrowhead at the end of a line.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ArrowheadWidth {
        /**
         * Represents a mixed arrowhead width.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents a narrow arrowhead width.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        narrow = "Narrow",
        /**
         * Represents a medium arrowhead width.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        medium = "Medium",
        /**
         * Represents a wide arrowhead width.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        wide = "Wide",
    }
    /**
     * Indicates the bevel type of a {@link Word.ThreeDimensionalFormat} object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum BevelType {
        /**
         * Represents a mixed bevel type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "mixed",
        /**
         * Represents no bevel.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "none",
        /**
         * Represents a relaxed inset bevel.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        relaxedInset = "relaxedInset",
        /**
         * Represents a circle bevel.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        circle = "circle",
        /**
         * Represents a slope bevel.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        slope = "slope",
        /**
         * Represents a cross bevel.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cross = "cross",
        /**
         * Represents an angle bevel.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        angle = "angle",
        /**
         * Represents a soft round bevel.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        softRound = "softRound",
        /**
         * Represents a convex bevel.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        convex = "convex",
        /**
         * Represents a cool slant bevel.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        coolSlant = "coolSlant",
        /**
         * Represents a divot bevel.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        divot = "divot",
        /**
         * Represents a riblet bevel.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        riblet = "riblet",
        /**
         * Represents a hard edge bevel.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hardEdge = "hardEdge",
        /**
         * Represents an art deco bevel.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        artDeco = "artDeco",
    }
    /**
     * Represents color index values in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ColorIndex {
        /**
         * Automatically determines the color.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        auto = "Auto",
        /**
         * Represents the color black.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        black = "Black",
        /**
         * Represents the color blue.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        blue = "Blue",
        /**
         * Represents the color turquoise.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        turquoise = "Turquoise",
        /**
         * Represents a bright green color.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        brightGreen = "BrightGreen",
        /**
         * Represents the color pink.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pink = "Pink",
        /**
         * Represents the color red.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        red = "Red",
        /**
         * Represents the color yellow.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        yellow = "Yellow",
        /**
         * Represents the color white.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        white = "White",
        /**
         * Represents a dark blue color.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        darkBlue = "DarkBlue",
        /**
         * Represents the color teal.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        teal = "Teal",
        /**
         * Represents the color green.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        green = "Green",
        /**
         * Represents the color violet.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        violet = "Violet",
        /**
         * Represents a dark red color.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        darkRed = "DarkRed",
        /**
         * Represents a dark yellow color.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        darkYellow = "DarkYellow",
        /**
         * Represents a gray color with 50% intensity.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gray50 = "Gray50",
        /**
         * Represents a gray color with 25% intensity.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gray25 = "Gray25",
        /**
         * Represents a classic red color.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        classicRed = "ClassicRed",
        /**
         * Represents a classic blue color.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        classicBlue = "ClassicBlue",
        /**
         * Represents a color determined by the author.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        byAuthor = "ByAuthor",
    }
    /**
     * Specifies the color type.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ColorType {
        /**
         * Represents an RGB color type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rgb = "rgb",
        /**
         * Represents a scheme color type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        scheme = "scheme",
    }
    /**
     * Specifies whether the formatting from the previous list can be continued.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum Continue {
        /**
         * Formatting cannot continue from the previous list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        disabled = "Disabled",
        /**
         * Formatting can continue from the previous list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list = "List",
        /**
         * Numbering can be restarted.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        reset = "Reset",
    }
    /**
     * Specifies the default list behavior for a list.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum DefaultListBehavior {
        /**
         * Use formatting compatible with Microsoft Word 97.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        word97 = "Word97",
        /**
         * Use Web-oriented formatting as introduced in Microsoft Word 2000.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        word2000 = "Word2000",
        /**
         * Use formatting compatible with Microsoft Word 2002.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        word2002 = "Word2002",
    }
    /**
     * Specifies the type of emphasis mark to use for a character or designated character string.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum EmphasisMark {
        /**
         * No emphasis mark.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Emphasis mark over a solid circle.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        overSolidCircle = "OverSolidCircle",
        /**
         * Emphasis mark over a comma.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        overComma = "OverComma",
        /**
         * Emphasis mark over a white circle.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        overWhiteCircle = "OverWhiteCircle",
        /**
         * Emphasis mark under a solid circle.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        underSolidCircle = "UnderSolidCircle",
    }
    /**
     * Specifies whether the extrusion color is based on the extruded shape's fill (the front face of the extrusion)
                and automatically changes when the shape's fill changes, or whether the extrusion color is independent of the shape's fill.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ExtrusionColorType {
        /**
         * Represents a mixed extrusion color type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "mixed",
        /**
         * Represents an automatic extrusion color based on the shape's fill.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        automatic = "automatic",
        /**
         * Represents a custom extrusion color independent of the shape's fill.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        custom = "custom",
    }
    /**
     * Specifies a shape's fill type.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum FillType {
        /**
         * Represents a mixed fill type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents a solid fill type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        solid = "Solid",
        /**
         * Represents a patterned fill type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        patterned = "Patterned",
        /**
         * Represents a gradient fill type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gradient = "Gradient",
        /**
         * Represents a textured fill type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        textured = "Textured",
        /**
         * Represents a background fill type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        background = "Background",
        /**
         * Represents a picture fill type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        picture = "Picture",
    }
    /**
     * Specifies the type of gradient used in a shape's fill.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum GradientColorType {
        /**
         * Mixed gradient color type. Used when multiple shapes with different gradient types are selected.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Gradient with a single color and varying transparency or brightness.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        oneColor = "OneColor",
        /**
         * Gradient that blends two distinct colors.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        twoColors = "TwoColors",
        /**
         * Gradient that uses a predefined set of colors.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        presetColors = "PresetColors",
        /**
         * Gradient that includes more than two colors, often customized.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        multiColor = "MultiColor",
    }
    /**
     * Specifies the style for a gradient fill.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum GradientStyle {
        /**
         * Represents a mixed gradient style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents a horizontal gradient style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        horizontal = "Horizontal",
        /**
         * Represents a vertical gradient style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        vertical = "Vertical",
        /**
         * Represents a diagonal-up gradient style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        diagonalUp = "DiagonalUp",
        /**
         * Represents a diagonal-down gradient style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        diagonalDown = "DiagonalDown",
        /**
         * Represents a gradient style from the corner.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fromCorner = "FromCorner",
        /**
         * Represents a gradient style from the title.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fromTitle = "FromTitle",
        /**
         * Represents a gradient style from the center.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fromCenter = "FromCenter",
    }
    /**
     * Specifies the type of ligature applied to a font.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum Ligature {
        /**
         * No ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Standard ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        standard = "Standard",
        /**
         * Contextual ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        contextual = "Contextual",
        /**
         * Standard and contextual ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        standardContextual = "StandardContextual",
        /**
         * Historical ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        historical = "Historical",
        /**
         * Standard and historical ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        standardHistorical = "StandardHistorical",
        /**
         * Contextual and historical ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        contextualHistorical = "ContextualHistorical",
        /**
         * Standard, contextual, and historical ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        standardContextualHistorical = "StandardContextualHistorical",
        /**
         * Discretional ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        discretional = "Discretional",
        /**
         * Standard and discretional ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        standardDiscretional = "StandardDiscretional",
        /**
         * Contextual and discretional ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        contextualDiscretional = "ContextualDiscretional",
        /**
         * Standard, contextual, and discretional ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        standardContextualDiscretional = "StandardContextualDiscretional",
        /**
         * Historical and discretional ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        historicalDiscretional = "HistoricalDiscretional",
        /**
         * Standard, historical, and discretional ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        standardHistoricalDiscretional = "StandardHistoricalDiscretional",
        /**
         * Contextual, historical, and discretional ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        contextualHistoricalDiscretional = "ContextualHistoricalDiscretional",
        /**
         * All ligatures applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        all = "All",
    }
    /**
     * Indicates the effects lighting for an object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum LightRigType {
        /**
         * Represents a mixed light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents legacy flat light rig type 1.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyFlat1 = "LegacyFlat1",
        /**
         * Represents legacy flat light rig type 2.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyFlat2 = "LegacyFlat2",
        /**
         * Represents legacy flat light rig type 3.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyFlat3 = "LegacyFlat3",
        /**
         * Represents legacy flat light rig type 4.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyFlat4 = "LegacyFlat4",
        /**
         * Represents legacy normal light rig type 1.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyNormal1 = "LegacyNormal1",
        /**
         * Represents legacy normal light rig type 2.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyNormal2 = "LegacyNormal2",
        /**
         * Represents legacy normal light rig type 3.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyNormal3 = "LegacyNormal3",
        /**
         * Represents legacy normal light rig type 4.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyNormal4 = "LegacyNormal4",
        /**
         * Represents legacy harsh light rig type 1.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyHarsh1 = "LegacyHarsh1",
        /**
         * Represents legacy harsh light rig type 2.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyHarsh2 = "LegacyHarsh2",
        /**
         * Represents legacy harsh light rig type 3.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyHarsh3 = "LegacyHarsh3",
        /**
         * Represents legacy harsh light rig type 4.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyHarsh4 = "LegacyHarsh4",
        /**
         * Represents a three-point light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        threePoint = "ThreePoint",
        /**
         * Represents a balanced light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        balanced = "Balanced",
        /**
         * Represents a soft light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        soft = "Soft",
        /**
         * Represents a harsh light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        harsh = "Harsh",
        /**
         * Represents a flood light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        flood = "Flood",
        /**
         * Represents a contrasting light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        contrasting = "Contrasting",
        /**
         * Represents a morning light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        morning = "Morning",
        /**
         * Represents a sunrise light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sunrise = "Sunrise",
        /**
         * Represents a sunset light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sunset = "Sunset",
        /**
         * Represents a chilly light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        chilly = "Chilly",
        /**
         * Represents a freezing light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        freezing = "Freezing",
        /**
         * Represents a flat light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        flat = "Flat",
        /**
         * Represents a two-point light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        twoPoint = "TwoPoint",
        /**
         * Represents a glow light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        glow = "Glow",
        /**
         * Represents a bright room light rig type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        brightRoom = "BrightRoom",
    }
    /**
     * Specifies the dash style for a line.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum LineDashStyle {
        /**
         * Represents a mixed dash style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents a solid line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        solid = "Solid",
        /**
         * Represents a square dot line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        squareDot = "SquareDot",
        /**
         * Represents a round dot line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        roundDot = "RoundDot",
        /**
         * Represents a dashed line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dash = "Dash",
        /**
         * Represents a dash-dot line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashDot = "DashDot",
        /**
         * Represents a dash-dot-dot line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashDotDot = "DashDotDot",
        /**
         * Represents a long dash line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        longDash = "LongDash",
        /**
         * Represents a long dash-dot line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        longDashDot = "LongDashDot",
        /**
         * Represents a long dash-dot-dot line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        longDashDotDot = "LongDashDotDot",
        /**
         * Represents a system dash line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sysDash = "SysDash",
        /**
         * Represents a system dot line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sysDot = "SysDot",
        /**
         * Represents a system dash-dot line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sysDashDot = "SysDashDot",
    }
    /**
     * Specifies the style for a line.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum LineFormatStyle {
        /**
         * Represents a mixed line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents a single line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        single = "Single",
        /**
         * Represents a thin-thin line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thinThin = "ThinThin",
        /**
         * Represents a thin-thick line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thinThick = "ThinThick",
        /**
         * Represents a thick-thin line style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thickThin = "ThickThin",
        /**
         * Represents a thick line between two thin lines style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thickBetweenThin = "ThickBetweenThin",
    }
    /**
     * Specifies the portion of a list to which to apply a list template.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ListApplyTo {
        /**
         * Applies the list template to the entire list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        wholeList = "WholeList",
        /**
         * Applies the list template from the cursor insertion point to the end of the list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thisPointForward = "ThisPointForward",
        /**
         * Applies the list template to the selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        selection = "Selection",
    }
    /**
     * Represents the list type.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ListType {
        /**
         * List with no bullets, numbering, or outlining.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listNoNumbering = "ListNoNumbering",
        /**
         * ListNum fields that can be used in the body of a paragraph.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listListNumOnly = "ListListNumOnly",
        /**
         * Bulleted list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listBullet = "ListBullet",
        /**
         * Simple numeric list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listSimpleNumbering = "ListSimpleNumbering",
        /**
         * Outlined list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listOutlineNumbering = "ListOutlineNumbering",
        /**
         * Mixed numeric list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listMixedNumbering = "ListMixedNumbering",
        /**
         * Picture bulleted list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listPictureBullet = "ListPictureBullet",
    }
    /**
     * Specifies the number form setting for an OpenType font.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum NumberForm {
        /**
         * Default number form setting.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        default = "Default",
        /**
         * Lining number form setting.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lining = "Lining",
        /**
         * Old-style number form setting.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        oldStyle = "OldStyle",
    }
    /**
     * Specifies the number spacing setting for an OpenType font.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum NumberSpacing {
        /**
         * Default number spacing setting.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        default = "Default",
        /**
         * Proportional number spacing setting.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        proportional = "Proportional",
        /**
         * Tabular number spacing setting.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tabular = "Tabular",
    }
    /**
     * Specifies the type of numbers in a list.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum NumberType {
        /**
         * Preset numbers you can add to paragraphs by selecting a template in the **Bullets and Numbering** dialog box.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        paragraph = "Paragraph",
        /**
         * Default value for {@link https://support.microsoft.com/office/557541b1-abb2-4959-a9f2-401639c8ff82 | ListNum fields}.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listNum = "ListNum",
        /**
         * Default value for all other cases.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        allNumbers = "AllNumbers",
    }
    /**
     * Specifies the fill pattern used in a shape.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PatternType {
        /**
         * Represents a mixed pattern type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents a 5 percent fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent5 = "Percent5",
        /**
         * Represents a 10 percent fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent10 = "Percent10",
        /**
         * Represents a 20 percent fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent20 = "Percent20",
        /**
         * Represents a 25 percent fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent25 = "Percent25",
        /**
         * Represents a 30 percent fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent30 = "Percent30",
        /**
         * Represents a 40 percent fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent40 = "Percent40",
        /**
         * Represents a 50 percent fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent50 = "Percent50",
        /**
         * Represents a 60 percent fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent60 = "Percent60",
        /**
         * Represents a 70 percent fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent70 = "Percent70",
        /**
         * Represents a 75 percent fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent75 = "Percent75",
        /**
         * Represents an 80 percent fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent80 = "Percent80",
        /**
         * Represents a 90 percent fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent90 = "Percent90",
        /**
         * Represents a dark horizontal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        darkHorizontal = "DarkHorizontal",
        /**
         * Represents a dark vertical fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        darkVertical = "DarkVertical",
        /**
         * Represents a dark downward diagonal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        darkDownwardDiagonal = "DarkDownwardDiagonal",
        /**
         * Represents a dark upward diagonal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        darkUpwardDiagonal = "DarkUpwardDiagonal",
        /**
         * Represents a small checkerboard fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        smallCheckerBoard = "SmallCheckerBoard",
        /**
         * Represents a trellis fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        trellis = "Trellis",
        /**
         * Represents a light horizontal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lightHorizontal = "LightHorizontal",
        /**
         * Represents a light vertical fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lightVertical = "LightVertical",
        /**
         * Represents a light downward diagonal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lightDownwardDiagonal = "LightDownwardDiagonal",
        /**
         * Represents a light upward diagonal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lightUpwardDiagonal = "LightUpwardDiagonal",
        /**
         * Represents a small grid fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        smallGrid = "SmallGrid",
        /**
         * Represents a dotted diamond fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dottedDiamond = "DottedDiamond",
        /**
         * Represents a wide downward diagonal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        wideDownwardDiagonal = "WideDownwardDiagonal",
        /**
         * Represents a wide upward diagonal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        wideUpwardDiagonal = "WideUpwardDiagonal",
        /**
         * Represents a dashed upward diagonal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashedUpwardDiagonal = "DashedUpwardDiagonal",
        /**
         * Represents a dashed downward diagonal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashedDownwardDiagonal = "DashedDownwardDiagonal",
        /**
         * Represents a narrow vertical fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        narrowVertical = "NarrowVertical",
        /**
         * Represents a narrow horizontal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        narrowHorizontal = "NarrowHorizontal",
        /**
         * Represents a dashed vertical fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashedVertical = "DashedVertical",
        /**
         * Represents a dashed horizontal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashedHorizontal = "DashedHorizontal",
        /**
         * Represents a large confetti fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        largeConfetti = "LargeConfetti",
        /**
         * Represents a large grid fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        largeGrid = "LargeGrid",
        /**
         * Represents a horizontal brick fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        horizontalBrick = "HorizontalBrick",
        /**
         * Represents a large checkerboard fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        largeCheckerBoard = "LargeCheckerBoard",
        /**
         * Represents a small confetti fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        smallConfetti = "SmallConfetti",
        /**
         * Represents a zigzag fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        zigZag = "ZigZag",
        /**
         * Represents a solid diamond fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        solidDiamond = "SolidDiamond",
        /**
         * Represents a diagonal brick fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        diagonalBrick = "DiagonalBrick",
        /**
         * Represents an outlined diamond fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outlinedDiamond = "OutlinedDiamond",
        /**
         * Represents a plaid fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        plaid = "Plaid",
        /**
         * Represents a sphere fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sphere = "Sphere",
        /**
         * Represents a weave fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        weave = "Weave",
        /**
         * Represents a dotted grid fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dottedGrid = "DottedGrid",
        /**
         * Represents a divot fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        divot = "Divot",
        /**
         * Represents a shingle fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shingle = "Shingle",
        /**
         * Represents a wave fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        wave = "Wave",
        /**
         * Represents a horizontal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        horizontal = "Horizontal",
        /**
         * Represents a vertical fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        vertical = "Vertical",
        /**
         * Represents a cross fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cross = "Cross",
        /**
         * Represents a downward diagonal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        downwardDiagonal = "DownwardDiagonal",
        /**
         * Represents an upward diagonal fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        upwardDiagonal = "UpwardDiagonal",
        /**
         * Represents a diagonal cross fill pattern.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        diagonalCross = "DiagonalCross",
    }
    /**
     * Indicates the effects camera type used by the specified object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PresetCamera {
        /**
         * Represents a mixed camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents a legacy oblique top-left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyObliqueTopLeft = "LegacyObliqueTopLeft",
        /**
         * Represents a legacy oblique top camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyObliqueTop = "LegacyObliqueTop",
        /**
         * Represents a legacy oblique top-right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyObliqueTopRight = "LegacyObliqueTopRight",
        /**
         * Represents a legacy oblique left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyObliqueLeft = "LegacyObliqueLeft",
        /**
         * Represents a legacy oblique front camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyObliqueFront = "LegacyObliqueFront",
        /**
         * Represents a legacy oblique right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyObliqueRight = "LegacyObliqueRight",
        /**
         * Represents a legacy oblique bottom-left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyObliqueBottomLeft = "LegacyObliqueBottomLeft",
        /**
         * Represents a legacy oblique bottom camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyObliqueBottom = "LegacyObliqueBottom",
        /**
         * Represents a legacy oblique bottom-right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyObliqueBottomRight = "LegacyObliqueBottomRight",
        /**
         * Represents a legacy perspective top-left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyPerspectiveTopLeft = "LegacyPerspectiveTopLeft",
        /**
         * Represents a legacy perspective top camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyPerspectiveTop = "LegacyPerspectiveTop",
        /**
         * Represents a legacy perspective top-right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyPerspectiveTopRight = "LegacyPerspectiveTopRight",
        /**
         * Represents a legacy perspective left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyPerspectiveLeft = "LegacyPerspectiveLeft",
        /**
         * Represents a legacy perspective front camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyPerspectiveFront = "LegacyPerspectiveFront",
        /**
         * Represents a legacy perspective right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyPerspectiveRight = "LegacyPerspectiveRight",
        /**
         * Represents a legacy perspective bottom-left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyPerspectiveBottomLeft = "LegacyPerspectiveBottomLeft",
        /**
         * Represents a legacy perspective bottom camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyPerspectiveBottom = "LegacyPerspectiveBottom",
        /**
         * Represents a legacy perspective bottom-right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legacyPerspectiveBottomRight = "LegacyPerspectiveBottomRight",
        /**
         * Represents an orthographic front camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        orthographicFront = "OrthographicFront",
        /**
         * Represents an isometric top-up camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricTopUp = "IsometricTopUp",
        /**
         * Represents an isometric top-down camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricTopDown = "IsometricTopDown",
        /**
         * Represents an isometric bottom-up camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricBottomUp = "IsometricBottomUp",
        /**
         * Represents an isometric bottom-down camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricBottomDown = "IsometricBottomDown",
        /**
         * Represents an isometric left-up camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricLeftUp = "IsometricLeftUp",
        /**
         * Represents an isometric left-down camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricLeftDown = "IsometricLeftDown",
        /**
         * Represents an isometric right-up camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricRightUp = "IsometricRightUp",
        /**
         * Represents an isometric right-down camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricRightDown = "IsometricRightDown",
        /**
         * Represents an isometric off-axis 1 left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricOffAxis1Left = "IsometricOffAxis1Left",
        /**
         * Represents an isometric off-axis 1 right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricOffAxis1Right = "IsometricOffAxis1Right",
        /**
         * Represents an isometric off-axis 1 top camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricOffAxis1Top = "IsometricOffAxis1Top",
        /**
         * Represents an isometric off-axis 2 left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricOffAxis2Left = "IsometricOffAxis2Left",
        /**
         * Represents an isometric off-axis 2 right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricOffAxis2Right = "IsometricOffAxis2Right",
        /**
         * Represents an isometric off-axis 2 top camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricOffAxis2Top = "IsometricOffAxis2Top",
        /**
         * Represents an isometric off-axis 3 left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricOffAxis3Left = "IsometricOffAxis3Left",
        /**
         * Represents an isometric off-axis 3 right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricOffAxis3Right = "IsometricOffAxis3Right",
        /**
         * Represents an isometric off-axis 3 bottom camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricOffAxis3Bottom = "IsometricOffAxis3Bottom",
        /**
         * Represents an isometric off-axis 4 left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricOffAxis4Left = "IsometricOffAxis4Left",
        /**
         * Represents an isometric off-axis 4 right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricOffAxis4Right = "IsometricOffAxis4Right",
        /**
         * Represents an isometric off-axis 4 bottom camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isometricOffAxis4Bottom = "IsometricOffAxis4Bottom",
        /**
         * Represents an oblique top-left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        obliqueTopLeft = "ObliqueTopLeft",
        /**
         * Represents an oblique top camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        obliqueTop = "ObliqueTop",
        /**
         * Represents an oblique top-right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        obliqueTopRight = "ObliqueTopRight",
        /**
         * Represents an oblique left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        obliqueLeft = "ObliqueLeft",
        /**
         * Represents an oblique right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        obliqueRight = "ObliqueRight",
        /**
         * Represents an oblique bottom-left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        obliqueBottomLeft = "ObliqueBottomLeft",
        /**
         * Represents an oblique bottom camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        obliqueBottom = "ObliqueBottom",
        /**
         * Represents an oblique bottom-right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        obliqueBottomRight = "ObliqueBottomRight",
        /**
         * Represents a perspective front camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveFront = "PerspectiveFront",
        /**
         * Represents a perspective left camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveLeft = "PerspectiveLeft",
        /**
         * Represents a perspective right camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveRight = "PerspectiveRight",
        /**
         * Represents a perspective above camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveAbove = "PerspectiveAbove",
        /**
         * Represents a perspective below camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveBelow = "PerspectiveBelow",
        /**
         * Represents a perspective above-left facing camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveAboveLeftFacing = "PerspectiveAboveLeftFacing",
        /**
         * Represents a perspective above-right facing camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveAboveRightFacing = "PerspectiveAboveRightFacing",
        /**
         * Represents a perspective contrasting-left facing camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveContrastingLeftFacing = "PerspectiveContrastingLeftFacing",
        /**
         * Represents a perspective contrasting-right facing camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveContrastingRightFacing = "PerspectiveContrastingRightFacing",
        /**
         * Represents a perspective heroic-left facing camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveHeroicLeftFacing = "PerspectiveHeroicLeftFacing",
        /**
         * Represents a perspective heroic-right facing camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveHeroicRightFacing = "PerspectiveHeroicRightFacing",
        /**
         * Represents a perspective heroic-extreme left facing camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveHeroicExtremeLeftFacing = "PerspectiveHeroicExtremeLeftFacing",
        /**
         * Represents a perspective heroic-extreme right facing camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveHeroicExtremeRightFacing = "PerspectiveHeroicExtremeRightFacing",
        /**
         * Represents a relaxed perspective camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveRelaxed = "PerspectiveRelaxed",
        /**
         * Represents a moderately relaxed perspective camera type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        perspectiveRelaxedModerately = "PerspectiveRelaxedModerately",
    }
    /**
     * Specifies the direction that the extrusion's sweep path takes away from the extruded shape (the front face of the extrusion).
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PresetExtrusionDirection {
        /**
         * Represents a mixed extrusion direction.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents an extrusion direction to the bottom-right.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottomRight = "BottomRight",
        /**
         * Represents an extrusion direction to the bottom.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottom = "Bottom",
        /**
         * Represents an extrusion direction to the bottom-left.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottomLeft = "BottomLeft",
        /**
         * Represents an extrusion direction to the right.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        right = "Right",
        /**
         * Represents no extrusion direction.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Represents an extrusion direction to the left.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        left = "Left",
        /**
         * Represents an extrusion direction to the top-right.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        topRight = "TopRight",
        /**
         * Represents an extrusion direction to the top.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        top = "Top",
        /**
         * Represents an extrusion direction to the top-left.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        topLeft = "TopLeft",
    }
    /**
     * Specifies which predefined gradient to use to fill a shape.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PresetGradientType {
        /**
         * Mixed gradient type. Used when multiple shapes with different preset gradients are selected.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * A warm gradient resembling an early sunset.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        earlySunset = "EarlySunset",
        /**
         * A deeper, richer gradient resembling a late sunset.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lateSunset = "LateSunset",
        /**
         * A dark gradient evoking the colors of nightfall.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nightfall = "Nightfall",
        /**
         * A light gradient representing the colors of daybreak.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        daybreak = "Daybreak",
        /**
         * A gradient that mimics the colors of the horizon.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        horizon = "Horizon",
        /**
         * A warm, sandy gradient inspired by desert tones.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        desert = "Desert",
        /**
         * A cool gradient reflecting ocean hues.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ocean = "Ocean",
        /**
         * A soft, tranquil gradient resembling calm water.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        calmWater = "CalmWater",
        /**
         * A vivid gradient with fiery tones.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fire = "Fire",
        /**
         * A muted gradient with fog-like softness.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fog = "Fog",
        /**
         * A natural green gradient inspired by moss.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        moss = "Moss",
        /**
         * A vibrant gradient with peacock feather colors.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        peacock = "Peacock",
        /**
         * A light, golden gradient resembling wheat.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        wheat = "Wheat",
        /**
         * A warm, aged paper-like gradient.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        parchment = "Parchment",
        /**
         * A rich, reddish-brown gradient like mahogany wood.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mahogany = "Mahogany",
        /**
         * A colorful gradient resembling a rainbow.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rainbow = "Rainbow",
        /**
         * A variation of the rainbow gradient with different color emphasis.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rainbowII = "RainbowII",
        /**
         * A shiny, metallic gold gradient.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gold = "Gold",
        /**
         * A variation of the gold gradient with different tones.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        goldII = "GoldII",
        /**
         * A metallic gradient resembling brass.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        brass = "Brass",
        /**
         * A sleek, reflective chrome gradient.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        chrome = "Chrome",
        /**
         * A variation of the chrome gradient with alternate highlights.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        chromeII = "ChromeII",
        /**
         * A smooth, metallic silver gradient.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        silver = "Silver",
        /**
         * A deep blue gradient inspired by sapphire.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sapphire = "Sapphire",
    }
    /**
     * Specifies the location of lighting on an extruded (three-dimensional) shape relative to the shape.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PresetLightingDirection {
        /**
         * Represents a mixed lighting direction.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents lighting from the top-left.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        topLeft = "TopLeft",
        /**
         * Represents lighting from the top.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        top = "Top",
        /**
         * Represents lighting from the top-right.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        topRight = "TopRight",
        /**
         * Represents lighting from the left.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        left = "Left",
        /**
         * Represents no lighting.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Represents lighting from the right.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        right = "Right",
        /**
         * Represents lighting from the bottom-left.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottomLeft = "BottomLeft",
        /**
         * Represents lighting from the bottom.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottom = "Bottom",
        /**
         * Represents lighting from the bottom-right.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottomRight = "BottomRight",
    }
    /**
     * Specifies the intensity of light used on a shape.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PresetLightingSoftness {
        /**
         * Represents a mixed lighting softness.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents dim lighting.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dim = "Dim",
        /**
         * Represents normal lighting.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        normal = "Normal",
        /**
         * Represents bright lighting.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bright = "Bright",
    }
    /**
     * Specifies the extrusion surface material.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PresetMaterial {
        /**
         * Represents a mixed material type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents a matte material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        matte = "Matte",
        /**
         * Represents a plastic material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        plastic = "Plastic",
        /**
         * Represents a metal material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        metal = "Metal",
        /**
         * Represents a wireframe material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        wireFrame = "WireFrame",
        /**
         * Represents a second matte material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        matte2 = "Matte2",
        /**
         * Represents a second plastic material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        plastic2 = "Plastic2",
        /**
         * Represents a second metal material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        metal2 = "Metal2",
        /**
         * Represents a warm matte material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        warmMatte = "WarmMatte",
        /**
         * Represents a translucent powder material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        translucentPowder = "TranslucentPowder",
        /**
         * Represents a powder material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        powder = "Powder",
        /**
         * Represents a dark edge material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        darkEdge = "DarkEdge",
        /**
         * Represents a soft edge material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        softEdge = "SoftEdge",
        /**
         * Represents a clear material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        clear = "Clear",
        /**
         * Represents a flat material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        flat = "Flat",
        /**
         * Represents a soft metal material.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        softMetal = "SoftMetal",
    }
    /**
     * Specifies texture to be used to fill a shape.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PresetTexture {
        /**
         * Represents a mixed texture type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents a papyrus texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        papyrus = "Papyrus",
        /**
         * Represents a canvas texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        canvas = "Canvas",
        /**
         * Represents a denim texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        denim = "Denim",
        /**
         * Represents a woven mat texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        wovenMat = "WovenMat",
        /**
         * Represents a water droplets texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        waterDroplets = "WaterDroplets",
        /**
         * Represents a paper bag texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        paperBag = "PaperBag",
        /**
         * Represents a fish fossil texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fishFossil = "FishFossil",
        /**
         * Represents a sand texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sand = "Sand",
        /**
         * Represents a green marble texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        greenMarble = "GreenMarble",
        /**
         * Represents a white marble texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        whiteMarble = "WhiteMarble",
        /**
         * Represents a brown marble texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        brownMarble = "BrownMarble",
        /**
         * Represents a granite texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        granite = "Granite",
        /**
         * Represents a newsprint texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        newsprint = "Newsprint",
        /**
         * Represents a recycled paper texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        recycledPaper = "RecycledPaper",
        /**
         * Represents a parchment texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        parchment = "Parchment",
        /**
         * Represents a stationery texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        stationery = "Stationery",
        /**
         * Represents a blue tissue paper texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        blueTissuePaper = "BlueTissuePaper",
        /**
         * Represents a pink tissue paper texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pinkTissuePaper = "PinkTissuePaper",
        /**
         * Represents a purple mesh texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        purpleMesh = "PurpleMesh",
        /**
         * Represents a bouquet texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bouquet = "Bouquet",
        /**
         * Represents a cork texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cork = "Cork",
        /**
         * Represents a walnut texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        walnut = "Walnut",
        /**
         * Represents an oak texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        oak = "Oak",
        /**
         * Represents a medium wood texture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mediumWood = "MediumWood",
    }
    /**
     * Specifies an extrusion (three-dimensional) format.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PresetThreeDimensionalFormat {
        /**
         * Represents a mixed three-dimensional format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents three-dimensional format 1.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format1 = "Format1",
        /**
         * Represents three-dimensional format 2.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format2 = "Format2",
        /**
         * Represents three-dimensional format 3.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format3 = "Format3",
        /**
         * Represents three-dimensional format 4.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format4 = "Format4",
        /**
         * Represents three-dimensional format 5.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format5 = "Format5",
        /**
         * Represents three-dimensional format 6.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format6 = "Format6",
        /**
         * Represents three-dimensional format 7.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format7 = "Format7",
        /**
         * Represents three-dimensional format 8.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format8 = "Format8",
        /**
         * Represents three-dimensional format 9.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format9 = "Format9",
        /**
         * Represents three-dimensional format 10.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format10 = "Format10",
        /**
         * Represents three-dimensional format 11.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format11 = "Format11",
        /**
         * Represents three-dimensional format 12.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format12 = "Format12",
        /**
         * Represents three-dimensional format 13.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format13 = "Format13",
        /**
         * Represents three-dimensional format 14.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format14 = "Format14",
        /**
         * Represents three-dimensional format 15.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format15 = "Format15",
        /**
         * Represents three-dimensional format 16.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format16 = "Format16",
        /**
         * Represents three-dimensional format 17.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format17 = "Format17",
        /**
         * Represents three-dimensional format 18.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format18 = "Format18",
        /**
         * Represents three-dimensional format 19.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format19 = "Format19",
        /**
         * Represents three-dimensional format 20.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format20 = "Format20",
    }
    /**
     * Specifies the type of the {@link Word.ReflectionFormat} object.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ReflectionType {
        /**
         * Represents a mixed reflection type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents no reflection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Represents reflection type 1.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type1 = "Type1",
        /**
         * Represents reflection type 2.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type2 = "Type2",
        /**
         * Represents reflection type 3.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type3 = "Type3",
        /**
         * Represents reflection type 4.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type4 = "Type4",
        /**
         * Represents reflection type 5.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type5 = "Type5",
        /**
         * Represents reflection type 6.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type6 = "Type6",
        /**
         * Represents reflection type 7.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type7 = "Type7",
        /**
         * Represents reflection type 8.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type8 = "Type8",
        /**
         * Represents reflection type 9.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type9 = "Type9",
    }
    /**
     * Specifies the type of shadowing effect.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ShadowStyle {
        /**
         * Represents a mixed shadow style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents an outer shadow style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outerShadow = "OuterShadow",
        /**
         * Represents an inner shadow style.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        innerShadow = "InnerShadow",
    }
    /**
     * Specifies the type of shadow displayed with a shape.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ShadowType {
        /**
         * Represents a mixed shadow type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Represents shadow type 1.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type1 = "Type1",
        /**
         * Represents shadow type 2.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type2 = "Type2",
        /**
         * Represents shadow type 3.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type3 = "Type3",
        /**
         * Represents shadow type 4.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type4 = "Type4",
        /**
         * Represents shadow type 5.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type5 = "Type5",
        /**
         * Represents shadow type 6.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type6 = "Type6",
        /**
         * Represents shadow type 7.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type7 = "Type7",
        /**
         * Represents shadow type 8.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type8 = "Type8",
        /**
         * Represents shadow type 9.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type9 = "Type9",
        /**
         * Represents shadow type 10.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type10 = "Type10",
        /**
         * Represents shadow type 11.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type11 = "Type11",
        /**
         * Represents shadow type 12.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type12 = "Type12",
        /**
         * Represents shadow type 13.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type13 = "Type13",
        /**
         * Represents shadow type 14.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type14 = "Type14",
        /**
         * Represents shadow type 15.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type15 = "Type15",
        /**
         * Represents shadow type 16.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type16 = "Type16",
        /**
         * Represents shadow type 17.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type17 = "Type17",
        /**
         * Represents shadow type 18.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type18 = "Type18",
        /**
         * Represents shadow type 19.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type19 = "Type19",
        /**
         * Represents shadow type 20.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type20 = "Type20",
        /**
         * Represents shadow type 21.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type21 = "Type21",
        /**
         * Represents shadow type 22.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type22 = "Type22",
        /**
         * Represents shadow type 23.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type23 = "Type23",
        /**
         * Represents shadow type 24.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type24 = "Type24",
        /**
         * Represents shadow type 25.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type25 = "Type25",
        /**
         * Represents shadow type 26.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type26 = "Type26",
        /**
         * Represents shadow type 27.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type27 = "Type27",
        /**
         * Represents shadow type 28.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type28 = "Type28",
        /**
         * Represents shadow type 29.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type29 = "Type29",
        /**
         * Represents shadow type 30.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type30 = "Type30",
        /**
         * Represents shadow type 31.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type31 = "Type31",
        /**
         * Represents shadow type 32.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type32 = "Type32",
        /**
         * Represents shadow type 33.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type33 = "Type33",
        /**
         * Represents shadow type 34.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type34 = "Type34",
        /**
         * Represents shadow type 35.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type35 = "Type35",
        /**
         * Represents shadow type 36.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type36 = "Type36",
        /**
         * Represents shadow type 37.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type37 = "Type37",
        /**
         * Represents shadow type 38.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type38 = "Type38",
        /**
         * Represents shadow type 39.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type39 = "Type39",
        /**
         * Represents shadow type 40.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type40 = "Type40",
        /**
         * Represents shadow type 41.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type41 = "Type41",
        /**
         * Represents shadow type 42.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type42 = "Type42",
        /**
         * Represents shadow type 43.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type43 = "Type43",
    }
    /**
     * Specifies the stylistic set to apply to the font.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum StylisticSet {
        /**
         * Default stylistic set.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        default = "Default",
        /**
         * Stylistic set 01.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set01 = "Set01",
        /**
         * Stylistic set 02.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set02 = "Set02",
        /**
         * Stylistic set 03.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set03 = "Set03",
        /**
         * Stylistic set 04.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set04 = "Set04",
        /**
         * Stylistic set 05.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set05 = "Set05",
        /**
         * Stylistic set 06.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set06 = "Set06",
        /**
         * Stylistic set 07.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set07 = "Set07",
        /**
         * Stylistic set 08.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set08 = "Set08",
        /**
         * Stylistic set 09.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set09 = "Set09",
        /**
         * Stylistic set 10.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set10 = "Set10",
        /**
         * Stylistic set 11.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set11 = "Set11",
        /**
         * Stylistic set 12.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set12 = "Set12",
        /**
         * Stylistic set 13.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set13 = "Set13",
        /**
         * Stylistic set 14.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set14 = "Set14",
        /**
         * Stylistic set 15.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set15 = "Set15",
        /**
         * Stylistic set 16.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set16 = "Set16",
        /**
         * Stylistic set 17.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set17 = "Set17",
        /**
         * Stylistic set 18.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set18 = "Set18",
        /**
         * Stylistic set 19.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set19 = "Set19",
        /**
         * Stylistic set 20.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        set20 = "Set20",
    }
    /**
     * Specifies the alignment (the origin of the coordinate grid) for the tiling of the texture fill.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum TextureAlignment {
        /**
         * Mixed texture alignment. Used when multiple shapes with different texture alignments are selected.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * Aligns the texture to the top-left corner of the shape.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        topLeft = "TopLeft",
        /**
         * Aligns the texture to the top center of the shape.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        top = "Top",
        /**
         * Aligns the texture to the top-right corner of the shape.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        topRight = "TopRight",
        /**
         * Aligns the texture to the middle left side of the shape.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        left = "Left",
        /**
         * Aligns the texture to the center of the shape.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        center = "Center",
        /**
         * Aligns the texture to the middle right side of the shape.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        right = "Right",
        /**
         * Aligns the texture to the bottom-left corner of the shape.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottomLeft = "BottomLeft",
        /**
         * Aligns the texture to the bottom center of the shape.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottom = "Bottom",
        /**
         * Aligns the texture to the bottom-right corner of the shape.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottomRight = "BottomRight",
    }
    /**
     * Specifies the texture type for the selected fill.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum TextureType {
        /**
         * Mixed texture type. Used when multiple shapes with different texture types are selected.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
        /**
         * A predefined texture selected from the built-in texture gallery.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        preset = "Preset",
        /**
         * A custom texture defined by the user, typically from an image file.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        userDefined = "UserDefined",
    }
    /**
     * Specifies the theme colors for document themes.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ThemeColorIndex {
        /**
         * Not a theme color. Used when the color is not part of the theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        notThemeColor = "NotThemeColor",
        /**
         * The first dark color in the main theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mainDark1 = "MainDark1",
        /**
         * The first light color in the main theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mainLight1 = "MainLight1",
        /**
         * The second dark color in the main theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mainDark2 = "MainDark2",
        /**
         * The second light color in the main theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mainLight2 = "MainLight2",
        /**
         * The first accent color in the theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        accent1 = "Accent1",
        /**
         * The second accent color in the theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        accent2 = "Accent2",
        /**
         * The third accent color in the theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        accent3 = "Accent3",
        /**
         * The fourth accent color in the theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        accent4 = "Accent4",
        /**
         * The fifth accent color in the theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        accent5 = "Accent5",
        /**
         * The sixth accent color in the theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        accent6 = "Accent6",
        /**
         * The color used for hyperlinks.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hyperlink = "Hyperlink",
        /**
         * The color used for followed hyperlinks.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hyperlinkFollowed = "HyperlinkFollowed",
        /**
         * The first background color in the theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        background1 = "Background1",
        /**
         * The first text color in the theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        text1 = "Text1",
        /**
         * The second background color in the theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        background2 = "Background2",
        /**
         * The second text color in the theme.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        text2 = "Text2",
    }
    /**
     * Specifies the hyperlink type.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum HyperlinkType {
        /**
         * Represents a hyperlink to a range in the document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        range = "Range",
        /**
         * Represents a hyperlink to a shape in the document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shape = "Shape",
        /**
         * Represents a hyperlink to an inline shape in the document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        inlineShape = "InlineShape",
    }
    /**
     * Represents the list of available sources attached to the document (in the current list) or the list of sources available in the application (in the master list).
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Bibliography extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `SourceCollection` object that represents all the sources contained in the bibliography.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly sources: Word.SourceCollection;
        /**
         * Specifies the name of the active style to use for the bibliography.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bibliographyStyle: string;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.BibliographyUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Bibliography): void;
        /**
         * Generates a unique identification tag for a bibliography source and returns a string that represents the tag.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        generateUniqueTag(): OfficeExtension.ClientResult<string>;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BibliographyLoadOptions): Word.Bibliography;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Bibliography;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Bibliography;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Bibliography;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Bibliography;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Bibliography` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BibliographyData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.BibliographyData;
    }
    /**
     * Represents a collection of {@link Word.Source} objects.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class SourceCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Source[];
        /**
         * Adds a new `Source` object to the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param xml - A string containing the XML data for the source.
         * @returns A `Source` object that was added to the collection.
         */
        add(xml: string): Word.Source;
        /**
         * Gets a `Source` by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - A number that identifies the index location of a `Source` object.
         */
        getItem(index: number): Word.Source;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.SourceCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.SourceCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.SourceCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.SourceCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.SourceCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.SourceCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.SourceCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SourceCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.SourceCollectionData;
    }
    /**
     * Represents an individual source, such as a book, journal article, or interview.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Source extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Gets if the `Source` object has been cited in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isCited: boolean;
        /**
         * Gets the tag of the source.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly tag: string;
        /**
         * Gets the XML representation of the source.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly xml: string;
        /**
         * Deletes the `Source` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Returns the value of a field in the bibliography `Source` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param name - The name of the field to retrieve.
         */
        getFieldByName(name: string): OfficeExtension.ClientResult<string>;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.SourceLoadOptions): Word.Source;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Source;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Source;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Source;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Source;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Source` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SourceData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.SourceData;
    }
    /**
     * Represents the page setup settings for a Word document or section.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class PageSetup extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies a `LineNumbering` object that represents the line numbers for the `PageSetup` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lineNumbering: Word.LineNumbering;
        /**
         * Gets a `TextColumnCollection` object that represents the set of text columns for the `PageSetup` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly textColumns: Word.TextColumnCollection;
        /**
         * Specifies whether Microsoft Word prints the document as a booklet.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bookFoldPrinting: boolean;
        /**
         * Specifies the number of pages for each booklet.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bookFoldPrintingSheets: number;
        /**
         * Specifies if Microsoft Word reverses the printing order for book fold printing of bidirectional or Asian language documents.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bookFoldReversePrinting: boolean;
        /**
         * Specifies the distance (in points) between the bottom edge of the page and the bottom boundary of the body text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottomMargin: number;
        /**
         * Specifies the number of characters per line in the document grid.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        charsLine: number;
        /**
         * Specifies whether the first page has a different header and footer.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        differentFirstPageHeaderFooter: boolean;
        /**
         * Specifies the distance between the footer and the bottom of the page in points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footerDistance: number;
        /**
         * Specifies the amount (in points) of extra margin space added to each page in a document or section for binding.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gutter: number;
        /**
         * Specifies on which side the gutter appears in a document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gutterPosition: Word.GutterPosition | "Left" | "Right" | "Top";
        /**
         * Specifies whether Microsoft Word uses gutters for the current document based on a right-to-left language or a left-to-right language.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gutterStyle: Word.GutterStyle | "Bidirectional" | "Latin";
        /**
         * Specifies the distance between the header and the top of the page in points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        headerDistance: number;
        /**
         * Specifies the layout mode for the current document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        layoutMode: Word.LayoutMode | "Default" | "Grid" | "LineGrid" | "Genko";
        /**
         * Specifies the distance (in points) between the left edge of the page and the left boundary of the body text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        leftMargin: number;
        /**
         * Specifies the number of lines per page in the document grid.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        linesPage: number;
        /**
         * Specifies if the inside and outside margins of facing pages are the same width.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mirrorMargins: boolean;
        /**
         * Specifies whether odd and even pages have different headers and footers.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        oddAndEvenPagesHeaderFooter: boolean;
        /**
         * Specifies the orientation of the page.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        orientation: Word.PageOrientation | "Portrait" | "Landscape";
        /**
         * Specifies the page height in points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pageHeight: number;
        /**
         * Specifies the page width in points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pageWidth: number;
        /**
         * Specifies the paper size of the page.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        paperSize: Word.PaperSize | "Size10x14" | "Size11x17" | "Letter" | "LetterSmall" | "Legal" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "CSheet" | "DSheet" | "ESheet" | "FanfoldLegalGerman" | "FanfoldStdGerman" | "FanfoldUS" | "Folio" | "Ledger" | "Note" | "Quarto" | "Statement" | "Tabloid" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC5" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeDL" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "Custom";
        /**
         * Specifies the distance (in points) between the right edge of the page and the right boundary of the body text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rightMargin: number;
        /**
         * Specifies the reading order and alignment for the specified sections.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sectionDirection: Word.SectionDirection | "RightToLeft" | "LeftToRight";
        /**
         * Specifies the type of section break for the specified object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sectionStart: Word.SectionStart | "Continuous" | "NewColumn" | "NewPage" | "EvenPage" | "OddPage";
        /**
         * Specifies whether to show the grid.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        showGrid: boolean;
        /**
         * Specifies if endnotes are printed at the end of the next section that doesn't suppress endnotes.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        suppressEndnotes: boolean;
        /**
         * Specifies the top margin of the page in points.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        topMargin: number;
        /**
         * Specifies whether to print two pages per sheet.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        twoPagesOnOne: boolean;
        /**
         * Specifies the vertical alignment of text on each page in a document or section.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        verticalAlignment: Word.PageSetupVerticalAlignment | "Top" | "Center" | "Justify" | "Bottom";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.PageSetupUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.PageSetup): void;
        /**
         * Sets the specified page setup formatting as the default for the active document and all new documents based on the active template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        setAsTemplateDefault(): void;
        /**
         * Switches between portrait and landscape page orientations for a document or section.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        togglePortrait(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.PageSetupLoadOptions): Word.PageSetup;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.PageSetup;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.PageSetup;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.PageSetup;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.PageSetup;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.PageSetup` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.PageSetupData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.PageSetupData;
    }
    /**
     * Represents line numbers in the left margin or to the left of each newspaper-style column.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class LineNumbering extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the numeric increment for line numbers.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        countBy: number;
        /**
         * Specifies the distance (in points) between the right edge of line numbers and the left edge of the document text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        distanceFromText: number;
        /**
         * Specifies if line numbering is active for the specified document, section, or sections.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isActive: boolean;
        /**
         * Specifies the way line numbering runs; that is, whether it starts over at the beginning of a new page or section, or runs continuously.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        restartMode: Word.NumberingRule | "RestartContinuous" | "RestartSection" | "RestartPage";
        /**
         * Specifies the starting line number.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        startingNumber: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.LineNumberingUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.LineNumbering): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.LineNumberingLoadOptions): Word.LineNumbering;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.LineNumbering;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.LineNumbering;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.LineNumbering;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.LineNumbering;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.LineNumbering` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.LineNumberingData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.LineNumberingData;
    }
    /**
     * A collection of {@link Word.TextColumn} objects that represent all the columns of text in the document or a section of the document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TextColumnCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.TextColumn[];
        /**
         * Returns a `TextColumn` object that represents a new text column added to a section or document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for configuring the new text column.
         * @returns A `TextColumn` object that represents a new text column added to the document.
         */
        add(options?: Word.TextColumnAddOptions): Word.TextColumn;
        /**
         * Gets the direction in which text flows from one text column to the next.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getFlowDirection(): OfficeExtension.ClientResult<Word.FlowDirection>;
        /**
         * Gets whether vertical lines appear between all the columns in the `TextColumnCollection` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getHasLineBetween(): OfficeExtension.ClientResult<boolean>;
        /**
         * Gets whether text columns are evenly spaced.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getIsEvenlySpaced(): OfficeExtension.ClientResult<boolean>;
        /**
         * Gets a `TextColumn` by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - A number that identifies the index location of a `TextColumn` object.
         */
        getItem(index: number): Word.TextColumn;
        /**
         * Arranges text into the specified number of text columns.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param numColumns - The number of columns the text is to be arranged into.
         */
        setCount(numColumns: number): void;
        /**
         * Sets the direction in which text flows from one text column to the next.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param value - The flow direction to set.
         */
        setFlowDirection(value: Word.FlowDirection): void;
        /**
         * Sets the direction in which text flows from one text column to the next.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param value - The flow direction to set.
         */
        setFlowDirection(value: "LeftToRight" | "RightToLeft"): void;
        /**
         * Sets whether vertical lines appear between all the columns in the `TextColumnCollection` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param value - `true` to show vertical lines between columns.
         */
        setHasLineBetween(value: boolean): void;
        /**
         * Sets whether text columns are evenly spaced.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param value - `true` to evenly space all the text columns in the document.
         */
        setIsEvenlySpaced(value: boolean): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TextColumnCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.TextColumnCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TextColumnCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.TextColumnCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TextColumnCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TextColumnCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TextColumnCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TextColumnCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.TextColumnCollectionData;
    }
    /**
     * Represents options for a new text column in a document or section of a document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface TextColumnAddOptions {
        /**
         * If provided, specifies whether to evenly space all the text columns in the document. The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isEvenlySpaced?: boolean;
        /**
         * If provided, specifies the spacing between the text columns in the document, in points.
                    The default value is -1, which means Word will automatically determine the width based on the number of columns and page size.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spacing?: number;
        /**
         * If provided, specifies the width of the new text column in the document, in points.
                    The default value is -1, which means Word will automatically determine the width based on the number of columns and page size.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        width?: number;
    }
    /**
     * Represents a single text column in a section.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class TextColumn extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Specifies the amount of spacing (in points) after the specified paragraph or text column.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spaceAfter: number;
        /**
         * Specifies the width, in points, of the specified text columns.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        width: number;
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.TextColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.TextColumn): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.TextColumnLoadOptions): Word.TextColumn;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.TextColumn;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.TextColumn;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.TextColumn;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.TextColumn;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.TextColumn` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.TextColumnData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.TextColumnData;
    }
    /**
     * Specifies the case of the text in the specified range.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum CharacterCase {
        /**
         * Specifies the next case.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        next = "Next",
        /**
         * Specifies lowercase.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lower = "Lower",
        /**
         * Specifies uppercase.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        upper = "Upper",
        /**
         * Specifies title case for each word.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        titleWord = "TitleWord",
        /**
         * Specifies title case for the sentence.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        titleSentence = "TitleSentence",
        /**
         * Specifies toggle case.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        toggle = "Toggle",
        /**
         * Specifies half-width characters.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        halfWidth = "HalfWidth",
        /**
         * Specifies full-width characters.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fullWidth = "FullWidth",
        /**
         * Specifies Katakana characters.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        katakana = "Katakana",
        /**
         * Specifies Hiragana characters.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hiragana = "Hiragana",
    }
    /**
     * Specifies the character width of the text in the specified range.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum CharacterWidth {
        /**
         * Specifies half-width characters.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        half = "Half",
        /**
         * Specifies full-width characters.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        full = "Full",
    }
    /**
     * Specifies the seek view options in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum SeekView {
        /**
         * Main document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mainDocument = "MainDocument",
        /**
         * Primary header.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        primaryHeader = "PrimaryHeader",
        /**
         * First page header.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        firstPageHeader = "FirstPageHeader",
        /**
         * Even pages header.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        evenPagesHeader = "EvenPagesHeader",
        /**
         * Primary footer.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        primaryFooter = "PrimaryFooter",
        /**
         * First page footer.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        firstPageFooter = "FirstPageFooter",
        /**
         * Even pages footer.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        evenPagesFooter = "EvenPagesFooter",
        /**
         * Footnotes.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footnotes = "Footnotes",
        /**
         * Endnotes.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endnotes = "Endnotes",
        /**
         * Current page header.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        currentPageHeader = "CurrentPageHeader",
        /**
         * Current page footer.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        currentPageFooter = "CurrentPageFooter",
    }
    /**
     * Specifies the source documents to show.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ShowSourceDocuments {
        /**
         * Specifies that no source documents are shown.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Specifies that the original source document is shown.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        original = "Original",
        /**
         * Specifies that the revised source document is shown.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        revised = "Revised",
        /**
         * Specifies that both the original and revised source documents are shown.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        both = "Both",
    }
    /**
     * Specifies the special pane options in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum SpecialPane {
        /**
         * None.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Primary header.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        primaryHeader = "PrimaryHeader",
        /**
         * First page header.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        firstPageHeader = "FirstPageHeader",
        /**
         * Even pages header.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        evenPagesHeader = "EvenPagesHeader",
        /**
         * Primary footer.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        primaryFooter = "PrimaryFooter",
        /**
         * First page footer.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        firstPageFooter = "FirstPageFooter",
        /**
         * Even pages footer.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        evenPagesFooter = "EvenPagesFooter",
        /**
         * Footnotes.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footnotes = "Footnotes",
        /**
         * Endnotes.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endnotes = "Endnotes",
        /**
         * Footnote continuation notice.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footnoteContinuationNotice = "FootnoteContinuationNotice",
        /**
         * Footnote continuation separator.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footnoteContinuationSeparator = "FootnoteContinuationSeparator",
        /**
         * Footnote separator.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footnoteSeparator = "FootnoteSeparator",
        /**
         * Endnote continuation notice.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endnoteContinuationNotice = "EndnoteContinuationNotice",
        /**
         * Endnote continuation separator.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endnoteContinuationSeparator = "EndnoteContinuationSeparator",
        /**
         * Endnote separator.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endnoteSeparator = "EndnoteSeparator",
        /**
         * Comments.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        comments = "Comments",
        /**
         * Current page header.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        currentPageHeader = "CurrentPageHeader",
        /**
         * Current page footer.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        currentPageFooter = "CurrentPageFooter",
        /**
         * Revisions.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        revisions = "Revisions",
        /**
         * Revisions horizontal.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        revisionsHoriz = "RevisionsHoriz",
        /**
         * Revisions vertical.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        revisionsVert = "RevisionsVert",
    }
    /**
     * Specifies the save options.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum SaveConfiguration {
        /**
         * Specifies not to save changes.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        doNotSaveChanges = "DoNotSaveChanges",
        /**
         * Specifies to save changes.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        saveChanges = "SaveChanges",
        /**
         * Specifies to prompt to save changes.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        promptToSaveChanges = "PromptToSaveChanges",
    }
    /**
     * Specifies the page color options in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PageColor {
        /**
         * None.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Sepia.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sepia = "Sepia",
        /**
         * Inverse.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        inverse = "Inverse",
    }
    /**
     * Specifies the page movement type in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PageMovementType {
        /**
         * Vertical.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        vertical = "Vertical",
        /**
         * Side to side.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sideToSide = "SideToSide",
    }
    /**
     * Specifies the margin options in reading layout view in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ReadingLayoutMargin {
        /**
         * Microsoft Word determines automatically whether to show or hide the margins based on the available space.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        automatic = "Automatic",
        /**
         * Hides margins.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        suppress = "Suppress",
        /**
         * Shows margins.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        full = "Full",
    }
    /**
     * Specifies the margin for revision balloons in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum RevisionsBalloonMargin {
        /**
         * Left margin.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        left = "Left",
        /**
         * Right margin.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        right = "Right",
    }
    /**
     * Specifies the width type for revision balloons in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum RevisionsBalloonWidthType {
        /**
         * Balloon width as a percentage.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent = "Percent",
        /**
         * Balloon width in points.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        points = "Points",
    }
    /**
     * Specifies the extent of markup visible in the document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum RevisionsMarkup {
        /**
         * No markup.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Simple markup.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        simple = "Simple",
        /**
         * All markup.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        all = "All",
    }
    /**
     * Specifies the display mode for tracked changes in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum RevisionsMode {
        /**
         * Balloon.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        balloon = "Balloon",
        /**
         * Inline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        inline = "Inline",
        /**
         * Mixed.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mixed = "Mixed",
    }
    /**
     * Specifies whether Word displays the original version of a document or a version with revisions and formatting changes applied.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum RevisionsView {
        /**
         * Final view.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        final = "Final",
        /**
         * Original view.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        original = "Original",
    }
    /**
     * Specifies the revision type.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum RevisionType {
        /**
         * No revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Insert revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insert = "Insert",
        /**
         * Delete revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete = "Delete",
        /**
         * Property revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        property = "Property",
        /**
         * Paragraph number revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        paragraphNumber = "ParagraphNumber",
        /**
         * Display field revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        displayField = "DisplayField",
        /**
         * Reconcile revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        reconcile = "Reconcile",
        /**
         * Conflict revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        conflict = "Conflict",
        /**
         * Style revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        style = "Style",
        /**
         * Replace revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        replace = "Replace",
        /**
         * Paragraph property revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        paragraphProperty = "ParagraphProperty",
        /**
         * Table property revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tableProperty = "TableProperty",
        /**
         * Section property revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sectionProperty = "SectionProperty",
        /**
         * Style definition revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        styleDefinition = "StyleDefinition",
        /**
         * Moved from revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        movedFrom = "MovedFrom",
        /**
         * Moved to revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        movedTo = "MovedTo",
        /**
         * Cell insertion revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cellInsertion = "CellInsertion",
        /**
         * Cell deletion revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cellDeletion = "CellDeletion",
        /**
         * Cell merge revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cellMerge = "CellMerge",
        /**
         * Cell split revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cellSplit = "CellSplit",
        /**
         * Conflict insert revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        conflictInsert = "ConflictInsert",
        /**
         * Conflict delete revision.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        conflictDelete = "ConflictDelete",
    }
    /**
     * Specifies the column width options in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ColumnWidth {
        /**
         * Narrow column width.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        narrow = "Narrow",
        /**
         * Default column width.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        default = "Default",
        /**
         * Wide column width.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        wide = "Wide",
    }
    /**
     * Specifies the field shading options in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum FieldShading {
        /**
         * Never shade fields.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        never = "Never",
        /**
         * Always shade fields.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        always = "Always",
        /**
         * Shade fields when selected.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        whenSelected = "WhenSelected",
    }
    /**
     * Specifies the format for horizontal text set within vertical text.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum HorizontalInVerticalType {
        /**
         * No formatting is applied to the horizontal text.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * The horizontal text is sized to fit in the line of vertical text.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fitInLine = "FitInLine",
        /**
         * The line of vertical text is sized to accommodate the horizontal text.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        resizeLine = "ResizeLine",
    }
    /**
     * Specifies the IME (Input Method Editor) mode.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ImeMode {
        /**
         * Specifies no control over the IME mode.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        noControl = "NoControl",
        /**
         * Specifies the IME mode is on.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        on = "On",
        /**
         * Specifies the IME mode is off.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        off = "Off",
        /**
         * Specifies the Hiragana IME mode.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hiragana = "Hiragana",
        /**
         * Specifies the Katakana (double-byte) IME mode.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        katakana = "Katakana",
        /**
         * Specifies the Katakana (half-width) IME mode.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        katakanaHalf = "KatakanaHalf",
        /**
         * Specifies the full-width alphanumeric IME mode.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        alphaFull = "AlphaFull",
        /**
         * Specifies the half-width alphanumeric IME mode.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        alpha = "Alpha",
        /**
         * Specifies the full-width Hangul IME mode.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hangulFull = "HangulFull",
        /**
         * Specifies the half-width Hangul IME mode.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hangul = "Hangul",
    }
    /**
     * Specifies the Kana type.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum Kana {
        /**
         * Katakana Kana type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        katakana = "Katakana",
        /**
         * Hiragana Kana type.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hiragana = "Hiragana",
    }
    /**
     * Specifies the two lines in one type.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum TwoLinesInOneType {
        /**
         * No two lines in one.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Two lines in one without brackets.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        noBrackets = "NoBrackets",
        /**
         * Two lines in one with parentheses.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        parentheses = "Parentheses",
        /**
         * Two lines in one with square brackets.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        squareBrackets = "SquareBrackets",
        /**
         * Two lines in one with angle brackets.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        angleBrackets = "AngleBrackets",
        /**
         * Two lines in one with curly brackets.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        curlyBrackets = "CurlyBrackets",
    }
    /**
     * Specifies the underline type.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum Underline {
        /**
         * No underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Single underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        single = "Single",
        /**
         * Underline words only.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        words = "Words",
        /**
         * Double underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        double = "Double",
        /**
         * Dotted underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dotted = "Dotted",
        /**
         * Thick underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thick = "Thick",
        /**
         * Dash underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dash = "Dash",
        /**
         * Dot dash underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dotDash = "DotDash",
        /**
         * Dot dot dash underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dotDotDash = "DotDotDash",
        /**
         * Wavy underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        wavy = "Wavy",
        /**
         * Heavy wavy underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        wavyHeavy = "WavyHeavy",
        /**
         * Heavy dotted underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dottedHeavy = "DottedHeavy",
        /**
         * Heavy dash underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashHeavy = "DashHeavy",
        /**
         * Heavy dot dash underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dotDashHeavy = "DotDashHeavy",
        /**
         * Heavy dot dot dash underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dotDotDashHeavy = "DotDotDashHeavy",
        /**
         * Long dash underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashLong = "DashLong",
        /**
         * Heavy long dash underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashLongHeavy = "DashLongHeavy",
        /**
         * Double wavy underline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        wavyDouble = "WavyDouble",
    }
    /**
     * Specifies the view type in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ViewType {
        /**
         * Normal.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        normal = "Normal",
        /**
         * Outline.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outline = "Outline",
        /**
         * Print.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        print = "Print",
        /**
         * Print preview.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        printPreview = "PrintPreview",
        /**
         * Master.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        master = "Master",
        /**
         * Web.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        web = "Web",
        /**
         * Reading.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        reading = "Reading",
        /**
         * Conflict.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        conflict = "Conflict",
    }
    /**
     * Represents the state of the window.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum WindowState {
        /**
         * Represents the normal state of the window.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        normal = "Normal",
        /**
         * Represents the maximized state of the window.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        maximize = "Maximize",
        /**
         * Represents the minimized state of the window.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        minimize = "Minimize",
    }
    /**
     * Specifies the type of the window.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum WindowType {
        /**
         * Specifies a document window.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        document = "Document",
        /**
         * Specifies a template window.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        template = "Template",
    }
    /**
     * Represents the options for the {@link Word.Selection | Selection.convertToTable} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface SelectionConvertToTableOptions {
        /**
         * If provided, specifies whether to apply borders to the table of the specified format. Default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyBorders?: boolean;
        /**
         * If provided, specifies whether to apply color formatting to the table of the specified format. Default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyColor?: boolean;
        /**
         * If provided, specifies whether to apply special formatting to the first column of the specified format. Default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyFirstColumn?: boolean;
        /**
         * If provided, specifies whether to apply font formatting to the table of the specified format. Default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyFont?: boolean;
        /**
         * If provided, specifies whether to format the first row as a header row of the specified format. Default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyHeadingRows?: boolean;
        /**
         * If provided, specifies whether to apply special formatting to the last column of the specified format. Default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyLastColumn?: boolean;
        /**
         * If provided, specifies whether to apply special formatting to the last row of the specified format. Default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyLastRow?: boolean;
        /**
         * If provided, specifies whether to apply shading to the table of the specified format. Default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyShading?: boolean;
        /**
         * If provided, specifies whether to automatically resize the table to fit the contents. Default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        autoFit?: boolean;
        /**
         * If provided, specifies the auto-fit behavior for the table. Used when the `defaultTableBehavior` property is `enableAutoFit`. The default value is `fixed`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        autoFitBehavior?: Word.AutoFitBehavior | "FixedSize" | "Content" | "Window";
        /**
         * If provided, specifies whether Microsoft Word automatically resizes cells in a table to fit the contents. The default value is `disableAutoFit`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        defaultTableBehavior?: Word.DefaultTableBehavior | "DisableAutoFit" | "EnableAutoFit";
        /**
         * If provided, specifies a preset format to apply to the table. If omitted, Word applies the default table format.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format?: Word.TableFormat | "None" | "Simple1" | "Simple2" | "Simple3" | "Classic1" | "Classic2" | "Classic3" | "Classic4" | "Colorful1" | "Colorful2" | "Colorful3" | "Columns1" | "Columns2" | "Columns3" | "Columns4" | "Columns5" | "Grid1" | "Grid2" | "Grid3" | "Grid4" | "Grid5" | "Grid6" | "Grid7" | "Grid8" | "List1" | "List2" | "List3" | "List4" | "List5" | "List6" | "List7" | "List8" | "ThreeDEffects1" | "ThreeDEffects2" | "ThreeDEffects3" | "Contemporary" | "Elegant" | "Professional" | "Subtle1" | "Subtle2" | "Web1" | "Web2" | "Web3";
        /**
         * If provided, specifies the initial width of each column in the table, in points. If omitted, Word calculates and adjusts the column width so that the table stretches from margin to margin.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        initialColumnWidth?: number;
        /**
         * If provided, specifies the number of columns in the table. If omitted, Word determines the number of columns based on the contents of the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numColumns?: number;
        /**
         * If provided, specifies the number of rows in the table. If omitted, Word determines the number of rows based on the contents of the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numRows?: number;
        /**
         * If provided, specifies the character used to separate text into cells. The default value is `-`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        separator?: string;
    }
    /**
     * Represents the options for the {@link Word.Selection | Selection.delete} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface SelectionDeleteOptions {
        /**
         * If provided, specifies the number of units to be deleted. To delete units after the selection, collapse the selection and use a positive number. To delete units before the selection, collapse the selection and use a negative number. The default value is 1.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        count?: number;
        /**
         * If provided, specifies the unit by which the collapsed selection is to be deleted. The default value is `character`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        unit?: Word.OperationUnit | "Character" | "Word" | "Sentence" | "Paragraph" | "Line" | "Story" | "Screen" | "Section" | "Column" | "Row" | "Window" | "Cell" | "CharacterFormat" | "ParagraphFormat" | "Table" | "Item";
    }
    /**
     * Represents the options for the {@link Word.Selection | Selection.goTo} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface SelectionGoToOptions {
        /**
         * If provided, specifies the number of the item in the document. Only positive values are valid. The default value is 1.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        count?: number;
        /**
         * If provided, specifies the direction the range or selection is moved to. The default value is `next`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        direction?: Word.GoToDirection | "First" | "Last" | "Next" | "Previous";
        /**
         * If provided, specifies the kind of item the range or selection is moved to. The default value is `page`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        item?: Word.GoToItem | "Bookmark" | "Comment" | "Endnote" | "Field" | "Footnote" | "Graphic" | "Heading" | "Line" | "Page" | "Section" | "Table" | "EmbeddedObject" | "Equation" | "Percent" | "SpellingError" | "GrammaticalError" | "ProofreadingError";
        /**
         * If provided, specifies the name if the `item` property is set to {@link Word.GoToItem} type `bookmark`, `comment`, `field`, or `object`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        name?: string;
    }
    /**
     * Represents the options for the {@link Word.Selection | Selection.insertCrossReference} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface SelectionInsertCrossReferenceOptions {
        /**
         * If provided, specifies whether to include position. `true` to insert "above" or "below," depending on the location of the reference item in relation to the cross-reference. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        includePosition?: boolean;
        /**
         * If provided, specifies whether to insert the cross-reference as a hyperlink. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insertAsHyperlink?: boolean;
        /**
         * If provided, specifies whether to use a separator to separate the numbers from the associated text. The default value is `false`. (Use only if the `referenceType` parameter is set to `numberedItem` and the `referenceKind` parameter is set to `numberFullContext` when the `Selection.insertCrossReference` method is called.)
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        separateNumbers?: boolean;
        /**
         * If provided, specifies the string to use as a separator if the `separateNumbers` parameter is set to `true` when the `Selection.insertCrossReference` method is called. The default value is " ".
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        separatorString?: string;
    }
    /**
     * Represents the options for the {@link Word.Selection | Selection.insertDateTime} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface SelectionInsertDateTimeOptions {
        /**
         * If provided, specifies the calendar type to use when displaying the date or time. This property may not be available to you, depending on the language support (U.S. English, for example) that you have selected or installed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        calendarType?: Word.CalendarTypeBidirectional | "Gregorian" | "Bidirectional";
        /**
         * If provided, specifies the language in which to display the date or time. This property may not be available to you, depending on the language support (U.S. English, for example) that you have selected or installed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dateLanguage?: Word.DateLanguage | "Bidirectional" | "Latin";
        /**
         * If provided, specifies the format to be used for displaying the date or time, or both. If this property is omitted, Microsoft Word uses the short-date style from the Windows Control Panel (Regional Settings icon). See {@link https://support.microsoft.com/office/47fbbdc1-52fa-416a-b8d5-ba24d881b698 | Date/Time data type} for format symbols.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dateTimeFormat?: string;
        /**
         * If provided, specifies whether to insert the specified information as a {@link https://support.microsoft.com/office/6cb8fcef-310a-4646-ae6b-886d88335c90 | TIME field}. The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insertAsField?: boolean;
        /**
         * If provided, specifies whether to insert the specified information as full-width (double-byte) digits. This property may not be available to you, depending on the language support (U.S. English, for example) that you have selected or installed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insertAsFullWidth?: boolean;
    }
    /**
     * Represents the options for the {@link Word.Selection | Selection.insertFormula} method
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface SelectionInsertFormulaOptions {
        /**
         * If provided, specifies the mathematical formula you want the {@link https://support.microsoft.com/office/32d5c9de-3516-4ec3-80ed-d1fc2b5bc21d | = (Formula) field} to evaluate.
                     The `formula` property is optional only if the selection is in a cell and there is at least one cell that contains a value above or to the left of the cell that contains the insertion point. If the cells above the insertion point contain values, the inserted field is `{=SUM(ABOVE)}`; if the cells to the left of the insertion point contain values, the inserted field is `{=SUM(LEFT)}`. If both the cells above the insertion point and the cells to the left of it contain values, Microsoft Word uses the following rules to determine which `SUM` function to insert.
                    
                     - If the cell immediately above the insertion point contains a value, Word inserts `{=SUM(ABOVE)}`.
                    
                     - If the cell immediately above the insertion point doesn't contain a value but the cell immediately to the left of the insertion point does, Word inserts `{=SUM(LEFT)}`.
                    
                     - If neither cell immediately above the insertion point nor the cell immediately below it contains a value, Word inserts `{=SUM(ABOVE)}`.
                    
                     - If you don't specify the `formula` property and all the cells above and to the left of the insertion point are empty, using the `= (Formula)` field causes an error.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        formula?: string;
        /**
         * If provided, specifies the format for the result of the `= (Formula)` field.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numberFormat?: string;
    }
    /**
     * Represents the options for the {@link Word.Selection | Selection.insertSymbol} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface SelectionInsertSymbolOptions {
        /**
         * If provided, specifies the font bias for symbols. This argument is useful for setting the correct font bias for East Asian characters. The default value is `default`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bias?: Word.FontBias | "Standard" | "FarEast" | "NoSpecified";
        /**
         * If provided, specifies the name of the font that contains the symbol.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        font?: string;
        /**
         * If provided, specifies whether the character is Unicode. `true` to insert the Unicode character specified by the `characterNumber` property when the `Selection.insertSymbol` method is called; `false` to instead insert the ANSI character specified by the `characterNumber` property. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        unicode?: boolean;
    }
    /**
     * Represents the options for the {@link Word.Selection | Selection.moveLeft and Selection.moveRight} methods.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface SelectionMoveLeftRightOptions {
        /**
         * If provided, specifies the number of units the selection is to be moved. The default value is 1.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        count?: number;
        /**
         * If provided, specifies the type of movement. The movement direction (left or right) is according to the calling method. If set to `move`, the selection is collapsed to the endpoint and moved in the appropriate direction. If set to `extend`, the selection is extended in the appropriate direction. The default value is `move`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        extend?: Word.MovementType | "Move" | "Extend";
        /**
         * If provided, specifies the unit by which the selection is to be moved. The default value is `character`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        unit?: Word.OperationUnit | "Character" | "Word" | "Sentence" | "Paragraph" | "Line" | "Story" | "Screen" | "Section" | "Column" | "Row" | "Window" | "Cell" | "CharacterFormat" | "ParagraphFormat" | "Table" | "Item";
    }
    /**
     * Represents the options for the {@link Word.Selection | Selection.move} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface SelectionMoveOptions {
        /**
         * If provided, specifies the number of units by which the range or selection is to be moved. If `count` is a positive number, the object is collapsed to its end position and moved backward in the document by the specified number of units. If `count` is a negative number, the object is collapsed to its start position and moved forward by the specified number of units. The default value is 1. You can also control the collapse direction by using the {@link Word.Selection | Selection.collapse} method before using the `move` method. If the range or selection is in the middle of a unit or isn't collapsed, moving it to the beginning or end of the unit counts as moving it one full unit.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        count?: number;
        /**
         * If provided, specifies the unit by which to move the ending character position. The default value is `character`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        unit?: Word.OperationUnit | "Character" | "Word" | "Sentence" | "Paragraph" | "Line" | "Story" | "Screen" | "Section" | "Column" | "Row" | "Window" | "Cell" | "CharacterFormat" | "ParagraphFormat" | "Table" | "Item";
    }
    /**
     * Represents the options for the {@link Word.Selection | Selection.moveEnd and Selection.moveStart} methods.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface SelectionMoveStartEndOptions {
        /**
         * If provided, specifies the number of units to move. The affected character position (start or end) is according to the calling method. If this number is positive, the position is moved forward in the document. If this number is negative, the position is moved backward. If the affected position encounters the other position, the selection is collapsed and both the start and end positions move together. The default value is 1.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        count?: number;
        /**
         * If provided, specifies the unit by which the selection's start or end position (per the calling method) is to be moved. The default value is `character`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        unit?: Word.OperationUnit | "Character" | "Word" | "Sentence" | "Paragraph" | "Line" | "Story" | "Screen" | "Section" | "Column" | "Row" | "Window" | "Cell" | "CharacterFormat" | "ParagraphFormat" | "Table" | "Item";
    }
    /**
     * Represents the options for the {@link Word.Selection | Selection.moveUp and Selection.moveDown} methods.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface SelectionMoveUpDownOptions {
        /**
         * If provided, specifies the number of units the selection is to be moved. The default value is 1.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        count?: number;
        /**
         * If provided, specifies the type of movement. The movement direction (up or down) is according to the calling method. If set to `move`, the selection is collapsed to the endpoint and moved in the appropriate direction. If set to `extend`, the selection is extended in the appropriate direction. The default value is `move`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        extend?: Word.MovementType | "Move" | "Extend";
        /**
         * If provided, specifies the unit by which to move the selection. The default value is `line`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        unit?: Word.OperationUnit | "Character" | "Word" | "Sentence" | "Paragraph" | "Line" | "Story" | "Screen" | "Section" | "Column" | "Row" | "Window" | "Cell" | "CharacterFormat" | "ParagraphFormat" | "Table" | "Item";
    }
    /**
     * Represents the options for the {@link Word.Selection | Selection.next} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface SelectionNextOptions {
        /**
         * If provided, specifies the number of units by which you want to move ahead. The default value is 1.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        count?: number;
        /**
         * If provided, specifies the type of units by which to move the selection. The default value is `character`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        unit?: Word.OperationUnit | "Character" | "Word" | "Sentence" | "Paragraph" | "Line" | "Story" | "Screen" | "Section" | "Column" | "Row" | "Window" | "Cell" | "CharacterFormat" | "ParagraphFormat" | "Table" | "Item";
    }
    /**
     * Represents the options for the {@link Word.Selection | Selection.previous} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface SelectionPreviousOptions {
        /**
         * If provided, specifies the number of units by which you want to move. The default value is 1.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        count?: number;
        /**
         * If provided, specifies the type of unit by which to move the selection. The default value is `character`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        unit?: Word.OperationUnit | "Character" | "Word" | "Sentence" | "Paragraph" | "Line" | "Story" | "Screen" | "Section" | "Column" | "Row" | "Window" | "Cell" | "CharacterFormat" | "ParagraphFormat" | "Table" | "Item";
    }
    /**
     * Represents a selected range or the insertion point in a Word document.
                
                - Note: {@link Word.Range | Range} objects share many of the same methods and properties as `Selection` objects. Using `Range` objects is preferable for manipulating a document when there isn't a reason to physically change the current selection.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Selection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `BorderUniversalCollection` object that represents all the borders for the objects in the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly borders: Word.BorderUniversalCollection;
        /**
         * Returns a `RangeScopedCollection` object that represents each character in the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly characters: Word.RangeScopedCollection;
        /**
         * Returns a `CommentCollection` object that represents all the comments in the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly comments: Word.CommentCollection;
        /**
         * Returns a `FieldCollection` object that represents all the fields in the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly fields: Word.FieldCollection;
        /**
         * Returns the `Font` object that represents the character formatting of the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly font: Word.Font;
        /**
         * Specifies a `Range` object that includes the formatted text in the range or selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        formattedText: Word.Range;
        /**
         * Returns a `ParagraphCollection` object that represents all the paragraphs in the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly paragraphs: Word.ParagraphCollection;
        /**
         * Returns the `Range` object for the portion of the document contained in the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Returns the `SectionCollection` object in the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly sections: Word.SectionCollection;
        /**
         * Returns the `RangeScopedCollection` object for each sentence in the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly sentences: Word.RangeScopedCollection;
        /**
         * Returns the `ShadingUniversal` object for the shading formatting for the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly shading: Word.ShadingUniversal;
        /**
         * Returns the `TableCollection` object in the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly tables: Word.TableCollection;
        /**
         * Returns the tables at the outermost nesting level in the current selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly topLevelTables: Word.TableCollection;
        /**
         * Returns the `RangeScopedCollection` object that represents each word in the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly words: Word.RangeScopedCollection;
        /**
         * Specifies the ending character position of the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        end: number;
        /**
         * Specifies the width in which Word fits the text in the current selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fitTextWidth: number;
        /**
         * Returns whether the spelling and grammar checker ignores the selected text.
                    If the selected text contains a mix of proofed and un-proofed content, this API returns `null`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly hasNoProofing: boolean;
        /**
         * Returns whether the selection in the specified window or pane is active.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isActive: boolean;
        /**
         * Specifies whether column selection mode is active.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isColumnSelectModeActive: boolean;
        /**
         * Returns whether the selection is at the end-of-row mark in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isEndOfRowMark: boolean;
        /**
         * Specifies whether Extend mode is active.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isExtendModeActive: boolean;
        /**
         * Returns whether the insertion point is at the end of a line.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isInsertionPointAtEndOfLine: boolean;
        /**
         * Specifies whether the beginning of the selection is active.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        isStartActive: boolean;
        /**
         * Specifies whether Word has detected the language of the selected text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        languageDetected: boolean;
        /**
         * Returns the language for the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly languageId: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * Returns the East Asian language for the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly languageIdFarEast: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * Returns the language for the selection that isn't classified as an East Asian language.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly languageIdOther: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * Specifies the orientation of text in the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        orientation: Word.TextOrientation | "Horizontal" | "Upward" | "Downward" | "VerticalFarEast" | "HorizontalRotatedFarEast" | "Vertical";
        /**
         * Specifies the starting character position of the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        start: number;
        /**
         * Returns the number of characters in the story that contains the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly storyLength: number;
        /**
         * Returns the story type for the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly storyType: Word.StoryType | "MainText" | "Footnotes" | "Endnotes" | "Comments" | "TextFrame" | "EvenPagesHeader" | "PrimaryHeader" | "EvenPagesFooter" | "PrimaryFooter" | "FirstPageHeader" | "FirstPageFooter" | "FootnoteSeparator" | "FootnoteContinuationSeparator" | "FootnoteContinuationNotice" | "EndnoteSeparator" | "EndnoteContinuationSeparator" | "EndnoteContinuationNotice";
        /**
         * Specifies the text in the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        text: string;
        /**
         * Returns the selection type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.SelectionType | "NoSelection" | "InsertionPoint" | "Normal" | "Frame" | "Column" | "Row" | "Block" | "InlineShape" | "SelectionShape";
        /**
         * Calculates the first mathematical expression within the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         * @returns The result of the calculation.
         */
        calculate(): OfficeExtension.ClientResult<number>;
        /**
         * Cancels a mode such as extend or column select. This is equivalent to pressing the Esc key.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cancelMode(): void;
        /**
         * Removes character formatting applied through character styles.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        clearCharacterStyleFormatting(): void;
        /**
         * Removes character and paragraph formatting from the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        clearFormatting(): void;
        /**
         * Removes manually applied character formatting from the selected text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        clearManualCharacterFormatting(): void;
        /**
         * Removes manually applied paragraph formatting from the selected text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        clearManualParagraphFormatting(): void;
        /**
         * Removes all paragraph formatting from the selected text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        clearParagraphFormatting(): void;
        /**
         * Removes paragraph formatting applied through paragraph styles.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        clearParagraphStyle(): void;
        /**
         * Collapses the selection to the starting or ending position.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param direction - Optional. Direction to collapse.
         */
        collapse(direction?: Word.CollapseDirection): void;
        /**
         * Collapses the selection to the starting or ending position.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param direction - Optional. Direction to collapse.
         */
        collapse(direction?: "Start" | "End"): void;
        /**
         * Converts text within a range to a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for converting text to a table.
         * @returns A `Table` object that represents the newly created table.
         */
        convertToTable(options?: Word.SelectionConvertToTableOptions): Word.Table;
        /**
         * Copies the selection to the Clipboard as a picture.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        copyAsPictureToClipboard(): void;
        /**
         * Copies the character formatting of the first character in the selected text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        copyFormat(): void;
        /**
         * Copies the selection to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        copyToClipboard(): void;
        /**
         * Adds a default-sized text box around the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        createTextBox(): void;
        /**
         * Removes the selected content from the document and moves it to the Clipboard.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cut(): void;
        /**
         * Deletes the specified number of characters or words.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for deleting text.
         * @returns The number of characters deleted.
         */
        delete(options?: Word.SelectionDeleteOptions): OfficeExtension.ClientResult<number>;
        /**
         * Analyzes the selected text to determine the language that it's written in.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        detectLanguage(): void;
        /**
         * Expands the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param unit - Optional. The unit to expand.
         * @returns The number of characters added to the range or selection.
         */
        expand(unit?: Word.OperationUnit): OfficeExtension.ClientResult<number>;
        /**
         * Expands the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param unit - Optional. The unit to expand.
         * @returns The number of characters added to the range or selection.
         */
        expand(unit?: "Character" | "Word" | "Sentence" | "Paragraph" | "Line" | "Story" | "Screen" | "Section" | "Column" | "Row" | "Window" | "Cell" | "CharacterFormat" | "ParagraphFormat" | "Table" | "Item"): OfficeExtension.ClientResult<number>;
        /**
         * Expands the selection to include the entire story.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        expandToWholeStory(): void;
        /**
         * Turns on extend mode, or if extend mode is already on, extends the selection to the next larger unit of text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param character - Optional. The character through which the selection is extended. This argument is case-sensitive and must evaluate to a string or an error occurs. Also, if the value of this argument is longer than a single character, Microsoft Word ignores the command entirely.
         */
        extend(character?: Word.OperationUnit): void;
        /**
         * Turns on extend mode, or if extend mode is already on, extends the selection to the next larger unit of text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param character - Optional. The character through which the selection is extended. This argument is case-sensitive and must evaluate to a string or an error occurs. Also, if the value of this argument is longer than a single character, Microsoft Word ignores the command entirely.
         */
        extend(character?: "Character" | "Word" | "Sentence" | "Paragraph" | "Line" | "Story" | "Screen" | "Section" | "Column" | "Row" | "Window" | "Cell" | "CharacterFormat" | "ParagraphFormat" | "Table" | "Item"): void;
        /**
         * Returns a `Range` object that represents the next unit relative to the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for the `next` operation.
         * @returns A `Range` object that represents the next unit relative to the selection.
         */
        getNextRange(options?: Word.SelectionNextOptions): Word.Range;
        /**
         * Returns a `Range` object that represents the previous unit relative to the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for the `previous` operation.
         * @returns A `Range` object that represents the previous unit relative to the selection.
         */
        getPreviousRange(options?: Word.SelectionPreviousOptions): Word.Range;
        /**
         * Returns a `Range` object that represents the area specified by the `options` and moves the insertion point to the character position immediately preceding the specified item.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for the `goTo` operation.
         * @returns A `Range` object that is now selected.
         */
        goTo(options?: Word.SelectionGoToOptions): Word.Range;
        /**
         * Returns a `Range` object that refers to the start position of the next item or location specified by the `what` argument and moves the selection to the specified item.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param what - The item type to go to.
         * @returns A `Range` object that refers to the start position of the next item or location specified by the `what` argument.
         */
        goToNext(what: Word.GoToItem): Word.Range;
        /**
         * Returns a `Range` object that refers to the start position of the next item or location specified by the `what` argument and moves the selection to the specified item.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param what - The item type to go to.
         * @returns A `Range` object that refers to the start position of the next item or location specified by the `what` argument.
         */
        goToNext(what: "Bookmark" | "Comment" | "Endnote" | "Field" | "Footnote" | "Graphic" | "Heading" | "Line" | "Page" | "Section" | "Table" | "EmbeddedObject" | "Equation" | "Percent" | "SpellingError" | "GrammaticalError" | "ProofreadingError"): Word.Range;
        /**
         * Returns a `Range` object that refers to the start position of the previous item or location specified by the `what` argument and moves the selection to the specified item.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param what - The item type to go to.
         * @returns A `Range` object that refers to the start position of the previous item or location specified by the `what` argument.
         */
        goToPrevious(what: Word.GoToItem): Word.Range;
        /**
         * Returns a `Range` object that refers to the start position of the previous item or location specified by the `what` argument and moves the selection to the specified item.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param what - The item type to go to.
         * @returns A `Range` object that refers to the start position of the previous item or location specified by the `what` argument.
         */
        goToPrevious(what: "Bookmark" | "Comment" | "Endnote" | "Field" | "Footnote" | "Graphic" | "Heading" | "Line" | "Page" | "Section" | "Table" | "EmbeddedObject" | "Equation" | "Percent" | "SpellingError" | "GrammaticalError" | "ProofreadingError"): Word.Range;
        /**
         * Inserts the specified text at the end of the range or selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param text - Text to insert.
         */
        insertAfter(text: string): void;
        /**
         * Inserts the specified text before the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param text - Text to insert.
         */
        insertBefore(text: string): void;
        /**
         * Adds cells to an existing table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param shiftCells - Optional. Specifies how to insert the cells into the existing columns and rows of the table. The default value is `shiftDown`.
         */
        insertCells(shiftCells?: Word.TableCellInsertionLocation): void;
        /**
         * Adds cells to an existing table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param shiftCells - Optional. Specifies how to insert the cells into the existing columns and rows of the table. The default value is `shiftDown`.
         */
        insertCells(shiftCells?: "ShiftRight" | "ShiftDown" | "ShiftRowDown" | "ShiftColumnRight"): void;
        /**
         * Inserts columns to the left of the column that contains the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insertColumnsLeft(): void;
        /**
         * Inserts columns to the right of the current selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insertColumnsRight(): void;
        /**
         * Inserts the current date or time, or both, either as text or as a {@link https://support.microsoft.com/office/6cb8fcef-310a-4646-ae6b-886d88335c90 | TIME field}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Options for inserting the date or time.
         */
        insertDateTime(options?: Word.SelectionInsertDateTimeOptions): void;
        /**
         * Inserts a {@link https://support.microsoft.com/office/32d5c9de-3516-4ec3-80ed-d1fc2b5bc21d | Formula field} at the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for inserting the formula.
         */
        insertFormula(options?: Word.SelectionInsertFormulaOptions): void;
        /**
         * Inserts a new page at the position of the insertion point.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insertNewPage(): void;
        /**
         * Inserts a paragraph mark after the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insertParagraphAfter(): void;
        /**
         * Inserts a new paragraph before the selection or range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insertParagraphBefore(): void;
        /**
         * Inserts a special hidden paragraph mark that allows Word to join paragraphs formatted using different paragraph styles.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insertParagraphStyleSeparator(): void;
        /**
         * Inserts rows above the current selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param numRows - Optional. Number of rows to insert.
         */
        insertRowsAbove(numRows: number): void;
        /**
         * Inserts rows below the current selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param numRows - Optional. Number of rows to insert.
         */
        insertRowsBelow(numRows: number): void;
        /**
         * Inserts a symbol in place of the specified selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param characterNumber - The character number of the symbol.
         * @param options - Optional. Options for inserting the symbol.
         */
        insertSymbol(characterNumber: number, options?: Word.SelectionInsertSymbolOptions): void;
        /**
         * Inserts the specified text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param Text - The text to insert.
         */
        insertText(Text: string): void;
        /**
         * Inserts the specified XML into the document at the cursor, replacing any selected text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param xml - The XML string to insert.
         * @param transform - Optional. XSL transform to apply.
         */
        insertXML(xml: string, transform?: string): void;
        /**
         * Returns whether the selection is equal to the specified range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range to compare.
         * @returns `true` if the selection is equal to the specified range.
         */
        isEqual(range: Word.Range): OfficeExtension.ClientResult<boolean>;
        /**
         * Returns `true` if the selection is contained within the specified range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range to compare.
         * @returns `true` if the selection is contained within the specified range.
         */
        isInRange(range: Word.Range): OfficeExtension.ClientResult<boolean>;
        /**
         * Returns whether the selection is in the same story as the specified range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range to compare.
         * @returns `true` if the selection is in the same story as the specified range.
         */
        isInStory(range: Word.Range): OfficeExtension.ClientResult<boolean>;
        /**
         * Collapses the selection to its start or end position and then moves the collapsed object by the specified number of units.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for moving the selection.
         * @returns The number of characters by which the selection was moved.
         */
        move(options?: Word.SelectionMoveOptions): OfficeExtension.ClientResult<number>;
        /**
         * Moves the selection down.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for moving down.
         * @returns The number of characters by which the selection was moved.
         */
        moveDown(options?: Word.SelectionMoveUpDownOptions): OfficeExtension.ClientResult<number>;
        /**
         * Moves the ending character position of the range or selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for moving end.
         * @returns The number of characters by which the selection was moved.
         */
        moveEnd(options?: Word.SelectionMoveStartEndOptions): OfficeExtension.ClientResult<number>;
        /**
         * Moves the end position of the selection until any of the specified characters are found in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param characters - Characters to search for. For example. If you specify "a", the selection moves the end position to before the first "a" character.
         * @param count - Optional. Maximum number of characters to search.
         * @returns The number of characters by which the selection was moved.
         */
        moveEndUntil(characters: string, count?: number): OfficeExtension.ClientResult<number>;
        /**
         * Moves the ending character position of the selection while any of the specified characters are found in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param characters - Characters to search for. For example. If you specify "abcd", the selection moves the end position when any letter from "abcd" is found.
         * @param count - Optional. Maximum number of characters to search.
         * @returns The number of characters by which the selection was moved.
         */
        moveEndWhile(characters: string, count?: number): OfficeExtension.ClientResult<number>;
        /**
         * Moves the selection to the left.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for moving left.
         * @returns The number of characters by which the selection was moved.
         */
        moveLeft(options?: Word.SelectionMoveLeftRightOptions): OfficeExtension.ClientResult<number>;
        /**
         * Moves the selection to the right.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for moving right.
         * @returns The number of characters by which the selection was moved.
         */
        moveRight(options?: Word.SelectionMoveLeftRightOptions): OfficeExtension.ClientResult<number>;
        /**
         * Moves the start position of the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for the `moveStart` operation.
         * @returns The number of characters by which the selection was moved.
         */
        moveStart(options?: Word.SelectionMoveStartEndOptions): OfficeExtension.ClientResult<number>;
        /**
         * Moves the start position of the selection until one of the specified characters is found in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param characters - Characters to search for. If you specify "a", the selection moves the start position to before the first "a" character.
         * @param count - Optional. Maximum number of characters to search.
         * @returns The number of characters by which the selection was moved.
         */
        moveStartUntil(characters: string, count?: number): OfficeExtension.ClientResult<number>;
        /**
         * Moves the start position of the selection while any of the specified characters are found in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param characters - Characters to search for. For example. If you specify "abcd", the selection moves the start position when any letter from "abcd" is found.
         * @param count - Optional. Maximum number of characters to search.
         * @returns The number of characters by which the selection was moved.
         */
        moveStartWhile(characters: string, count?: number): OfficeExtension.ClientResult<number>;
        /**
         * Moves the selection until one of the specified characters is found in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param characters - Characters to search for. For example. If you specify "a", the selection moves to the position before the first "a" character.
         * @param count - Optional. Maximum number of characters to search.
         * @returns The number of characters by which the selection was moved.
         */
        moveUntil(characters: string, count?: number): OfficeExtension.ClientResult<number>;
        /**
         * Moves the selection up.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for moving up.
         * @returns The number of characters by which the selection was moved.
         */
        moveUp(options?: Word.SelectionMoveUpDownOptions): OfficeExtension.ClientResult<number>;
        /**
         * Moves the selection while any of the specified characters are found in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param characters - Characters to search for. For example. If you specify "abcd", the selection moves to the position when any letter from "abcd" is found.
         * @param count - Optional. Maximum number of characters to search.
         * @returns The number of characters by which the selection was moved.
         */
        moveWhile(characters: string, count?: number): OfficeExtension.ClientResult<number>;
        /**
         * Selects the next field.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         * @returns The next field.
         */
        nextField(): Word.Field;
        /**
         * Moves the selection to the next subDocument.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nextSubdocument(): void;
        /**
         * Pastes the content from clipboard and formats them as specified.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param type - The format paste type for table cells
         */
        pasteAndFormat(type: Word.PasteFormatType): void;
        /**
         * Pastes the content from clipboard and formats them as specified.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param type - The format paste type for table cells
         */
        pasteAndFormat(type: "PasteDefault" | "SingleCellText" | "SingleCellTable" | "ListContinueNumbering" | "ListRestartNumbering" | "TableAppendTable" | "TableInsertAsRows" | "TableOriginalFormatting" | "ChartPicture" | "Chart" | "ChartLinked" | "FormatOriginalFormatting" | "FormatSurroundingFormattingWithEmphasis" | "FormatPlainText" | "TableOverwriteCells" | "ListCombineWithExistingList" | "ListDontMerge" | "UseDestinationStylesRecovery"): void;
        /**
         * Pastes and formats a Microsoft Excel table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param linkedToExcel - Whether the table is linked to Excel.
         * @param wordFormatting - Whether to apply Word formatting.
         * @param rtf - Whether to paste as Rich Text Format (RTF).
         */
        pasteExcelTable(linkedToExcel: boolean, wordFormatting: boolean, rtf: boolean): void;
        /**
         * Applies formatting copied with the `copyFormat` method to the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pasteFormat(): void;
        /**
         * Merges pasted cells into an existing table by inserting the pasted rows between the selected rows.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pasteTableCellsAppendTable(): void;
        /**
         * Pastes a cell or group of cells as a nested table into the selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pasteTableCellsAsNestedTable(): void;
        /**
         * Selects and returns the previous field.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         * @returns The previous field.
         */
        previousField(): Word.Field;
        /**
         * Moves the selection to the previous subDocument.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        previousSubdocument(): void;
        /**
         * Replaces the selection with a new paragraph.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        replaceParagraph(): void;
        /**
         * Selects the current text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        select(): void;
        /**
         * Selects the entire cell containing the current selection when the selection is in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        selectCell(): void;
        /**
         * Selects the column that contains the insertion point, or selects all columns that contain the selection when the selection is in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        selectColumn(): void;
        /**
         * Extends the selection forward until text with a different paragraph alignment is encountered.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        selectCurrentAlignment(): void;
        /**
         * Extends the selection forward until text with a different color is encountered.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        selectCurrentColor(): void;
        /**
         * Extends the selection forward until text in a different font or font size is encountered.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        selectCurrentFont(): void;
        /**
         * Extends the selection forward until text with different left or right paragraph indents is encountered.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        selectCurrentIndent(): void;
        /**
         * Extends the selection forward until a paragraph with different line spacing is encountered.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        selectCurrentSpacing(): void;
        /**
         * Extends the selection forward until a paragraph with different tab stops is encountered.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        selectCurrentTabs(): void;
        /**
         * Selects the row that contains the insertion point, or selects all rows that contain the selection when the selection is in a table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        selectRow(): void;
        /**
         * Sets the starting and ending character positions for the selection.
                    Character position values start at the beginning of the story, with the first value being 0. All characters are counted, including nonprinting characters. Hidden characters are counted even if they're not displayed.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param start - The starting character position of the current story.
         * @param end - The ending character position of the current story.
         */
        setRange(start: number, end: number): void;
        /**
         * Shrinks the selection to the next smaller unit of text.
                    The unit progression for this method is as follows: entire document, section, paragraph, sentence, word, insertion point.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shrink(): void;
        /**
         * Cancels the selection of all but the most recently selected text when the current selection contains multiple, unconnected selections.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shrinkDiscontiguousSelection(): void;
        /**
         * Inserts an empty paragraph above the first row in the selection.
                    If the selection isn't in the first row of the table, the table is split into two tables. If the selection isn't in a table, an error occurs.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        splitTable(): void;
        /**
         * Switches the selection between a Unicode character and its corresponding hexadecimal value.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        toggleCharacterCode(): void;
        /**
         * Deletes the character preceding the selection (if collapsed) or the insertion point.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        typeBackspace(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.SelectionLoadOptions): Word.Selection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Selection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Selection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Selection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Selection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Selection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SelectionData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.SelectionData;
    }
    /**
     * Represents a collection of {@link Word.Range} objects that represents each character, word or sentence.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class RangeScopedCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Range[];
        /**
         * Gets a `Range` object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The location of a `Range` object in the collection.
         */
        getItem(index: number): Word.Range;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.RangeScopedCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.RangeScopedCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.RangeScopedCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.RangeScopedCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.RangeScopedCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.RangeScopedCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.RangeScopedCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RangeScopedCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.RangeScopedCollectionData;
    }
    /**
     * Specifies the direction in which text flows from one text column to the next.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum FlowDirection {
        /**
         * Text flows from left to right.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        leftToRight = "LeftToRight",
        /**
         * Text flows from right to left.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rightToLeft = "RightToLeft",
    }
    /**
     * Specifies where the gutter appears in the document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum GutterPosition {
        /**
         * The gutter appears on the left side of the document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        left = "Left",
        /**
         * The gutter appears on the right side of the document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        right = "Right",
        /**
         * The gutter appears at the top of the document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        top = "Top",
    }
    /**
     * Specifies whether the gutter style should conform to left-to-right text flow or right-to-left text flow.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum GutterStyle {
        /**
         * Gutter style for bidirectional text flow. This is mainly right to left.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bidirectional = "Bidirectional",
        /**
         * Gutter style for Latin text flow. This is mainly left to right.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        latin = "Latin",
    }
    /**
     * Specifies how text is laid out in the layout mode for the current document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum LayoutMode {
        /**
         * Default layout mode.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        default = "Default",
        /**
         * Grid layout mode.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid = "Grid",
        /**
         * Line grid layout mode.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lineGrid = "LineGrid",
        /**
         * Genko layout mode.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        genko = "Genko",
    }
    /**
     * Specifies the numbering rule to apply.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum NumberingRule {
        /**
         * Restart numbering continuously.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        restartContinuous = "RestartContinuous",
        /**
         * Restart numbering at the beginning of each section.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        restartSection = "RestartSection",
        /**
         * Restart numbering at the beginning of each page.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        restartPage = "RestartPage",
    }
    /**
     * Specifies a page layout orientation.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PageOrientation {
        /**
         * Portrait orientation.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        portrait = "Portrait",
        /**
         * Landscape orientation.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        landscape = "Landscape",
    }
    /**
     * Specifies the type of vertical alignment to apply.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PageSetupVerticalAlignment {
        /**
         * Align text to the top.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        top = "Top",
        /**
         * Align text to the center.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        center = "Center",
        /**
         * Justify text vertically.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        justify = "Justify",
        /**
         * Align text to the bottom.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottom = "Bottom",
    }
    /**
     * Specifies a paper size.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PaperSize {
        /**
         * 10x14 paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        size10x14 = "Size10x14",
        /**
         * 11x17 paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        size11x17 = "Size11x17",
        /**
         * Letter paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        letter = "Letter",
        /**
         * Small letter paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        letterSmall = "LetterSmall",
        /**
         * Legal paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        legal = "Legal",
        /**
         * Executive paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        executive = "Executive",
        /**
         * A3 paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        a3 = "A3",
        /**
         * A4 paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        a4 = "A4",
        /**
         * Small A4 paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        a4Small = "A4Small",
        /**
         * A5 paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        a5 = "A5",
        /**
         * B4 paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        b4 = "B4",
        /**
         * B5 paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        b5 = "B5",
        /**
         * C-sheet paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        csheet = "CSheet",
        /**
         * D-sheet paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dsheet = "DSheet",
        /**
         * E-sheet paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        esheet = "ESheet",
        /**
         * Fanfold legal German paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fanfoldLegalGerman = "FanfoldLegalGerman",
        /**
         * Fanfold standard German paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fanfoldStdGerman = "FanfoldStdGerman",
        /**
         * Fanfold US paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fanfoldUS = "FanfoldUS",
        /**
         * Folio paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        folio = "Folio",
        /**
         * Ledger paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ledger = "Ledger",
        /**
         * Note paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        note = "Note",
        /**
         * Quarto paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        quarto = "Quarto",
        /**
         * Statement paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        statement = "Statement",
        /**
         * Tabloid paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tabloid = "Tabloid",
        /**
         * Envelope size 9.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelope9 = "Envelope9",
        /**
         * Envelope size 10.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelope10 = "Envelope10",
        /**
         * Envelope size 11.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelope11 = "Envelope11",
        /**
         * Envelope size 12.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelope12 = "Envelope12",
        /**
         * Envelope size 14.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelope14 = "Envelope14",
        /**
         * Envelope B4 size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelopeB4 = "EnvelopeB4",
        /**
         * Envelope B5 size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelopeB5 = "EnvelopeB5",
        /**
         * Envelope B6 size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelopeB6 = "EnvelopeB6",
        /**
         * Envelope C3 size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelopeC3 = "EnvelopeC3",
        /**
         * Envelope C4 size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelopeC4 = "EnvelopeC4",
        /**
         * Envelope C5 size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelopeC5 = "EnvelopeC5",
        /**
         * Envelope C6 size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelopeC6 = "EnvelopeC6",
        /**
         * Envelope C65 size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelopeC65 = "EnvelopeC65",
        /**
         * Envelope DL size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelopeDL = "EnvelopeDL",
        /**
         * Envelope Italy size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelopeItaly = "EnvelopeItaly",
        /**
         * Envelope Monarch size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelopeMonarch = "EnvelopeMonarch",
        /**
         * Envelope Personal size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        envelopePersonal = "EnvelopePersonal",
        /**
         * Custom paper size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        custom = "Custom",
    }
    /**
     * Specifies how Word displays the reading order and alignment for the specified sections.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum SectionDirection {
        /**
         * Right-to-left reading order.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rightToLeft = "RightToLeft",
        /**
         * Left-to-right reading order.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        leftToRight = "LeftToRight",
    }
    /**
     * Specifies the type of section break for the specified item.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum SectionStart {
        /**
         * Continuous section break.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        continuous = "Continuous",
        /**
         * New column section break.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        newColumn = "NewColumn",
        /**
         * New page section break.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        newPage = "NewPage",
        /**
         * Even page section break.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        evenPage = "EvenPage",
        /**
         * Odd page section break.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        oddPage = "OddPage",
    }
    /**
     * Specifies how a table is resized to fit its contents or the window.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum AutoFitBehavior {
        /**
         * Disables automatic resizing. The table retains its current size.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fixedSize = "FixedSize",
        /**
         * Automatically resizes the table columns to fit the contents.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        content = "Content",
        /**
         * Automatically resizes the table to fit the window width.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        window = "Window",
    }
    /**
     * Specifies the type of bidirectional calendar to use.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum CalendarTypeBidirectional {
        /**
         * Uses the Gregorian calendar.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        gregorian = "Gregorian",
        /**
         * Uses the Bidirectional calendar.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bidirectional = "Bidirectional",
    }
    /**
     * Specifies the type of caption label to use.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum CaptionLabelType {
        /**
         * Specifies a figure caption label.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        figure = "Figure",
        /**
         * Specifies a table caption label.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        table = "Table",
        /**
         * Specifies an equation caption label.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        equation = "Equation",
    }
    /**
     * Specifies the position of a caption relative to the object it describes.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum CaptionPosition {
        /**
         * Places the caption above the selected item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        above = "Above",
        /**
         * Places the caption below the selected item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        below = "Below",
    }
    /**
     * Specifies the direction in which to collapse a selection.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum CollapseDirection {
        /**
         * Collapses the selection to the start position.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        start = "Start",
        /**
         * Collapses the selection to the end position.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        end = "End",
    }
    /**
     * Specifies the language to use for date formatting.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum DateLanguage {
        /**
         * Uses the bidirectional date/time format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bidirectional = "Bidirectional",
        /**
         * Uses the latin date/time format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        latin = "Latin",
    }
    /**
     * Specifies the default behavior when inserting a new table.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum DefaultTableBehavior {
        /**
         * Disables AutoFit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        disableAutoFit = "DisableAutoFit",
        /**
         * Enables AutoFit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        enableAutoFit = "EnableAutoFit",
    }
    /**
     * Specifies the location of endnotes in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum EndnoteLocation {
        /**
         * Places endnotes at the end of the section.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endOfSection = "EndOfSection",
        /**
         * Places endnotes at the end of the document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endOfDocument = "EndOfDocument",
    }
    /**
     * Specifies the font bias to use when formatting East Asian text.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum FontBias {
        /**
         * Uses the default font bias.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        standard = "Standard",
        /**
         * Uses the font bias for Far East text.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        farEast = "FarEast",
        /**
         * No font bias specified.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        noSpecified = "NoSpecified",
    }
    /**
     * Specifies the location of footnotes in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum FootnoteLocation {
        /**
         * Places footnotes at the bottom of the page.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottomOfPage = "BottomOfPage",
        /**
         * Places footnotes below the text on the page.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        beneathText = "BeneathText",
    }
    /**
     * Specifies the direction in which to move when using the {@link Word.Selection | Selection.goTo} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum GoToDirection {
        /**
         * Moves to the first item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        first = "First",
        /**
         * Moves to the last item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        last = "Last",
        /**
         * Moves to the next item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        next = "Next",
        /**
         * Moves to the previous item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        previous = "Previous",
    }
    /**
     * Specifies the item or location to which to move or extend a {@link Word.Selection | selection}.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum GoToItem {
        /**
         * Moves to a bookmark.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bookmark = "Bookmark",
        /**
         * Moves to a comment.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        comment = "Comment",
        /**
         * Moves to a endnote.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endnote = "Endnote",
        /**
         * Moves to a field.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        field = "Field",
        /**
         * Moves to a footnote.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footnote = "Footnote",
        /**
         * Moves to a graphic.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        graphic = "Graphic",
        /**
         * Moves to a heading.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        heading = "Heading",
        /**
         * Moves to a line.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        line = "Line",
        /**
         * Moves to a page.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        page = "Page",
        /**
         * Moves to a section.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        section = "Section",
        /**
         * Moves to a table.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        table = "Table",
        /**
         * Moves to an embedded object.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        embeddedObject = "EmbeddedObject",
        /**
         * Moves to an equation.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        equation = "Equation",
        /**
         * Moves to a percent.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        percent = "Percent",
        /**
         * Moves to a spelling error.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spellingError = "SpellingError",
        /**
         * Moves to a grammatical error.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grammaticalError = "GrammaticalError",
        /**
         * Moves to a proofreading error.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        proofreadingError = "ProofreadingError",
    }
    /**
     * Specifies the type of movement when navigating through a document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum MovementType {
        /**
         * Moves the insertion point or selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        move = "Move",
        /**
         * Extends the selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        extend = "Extend",
    }
    /**
     * Specifies the numbering style to use for footnotes or endnotes.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum NoteNumberStyle {
        /**
         * Uses Arabic numerals (1, 2, 3...).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabic = "Arabic",
        /**
         * Uses uppercase Roman numerals (I, II, III...).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        uppercaseRoman = "UppercaseRoman",
        /**
         * Uses lowercase Roman numerals (i, ii, iii...).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lowercaseRoman = "LowercaseRoman",
        /**
         * Uses uppercase letters (A, B, C...).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        uppercaseLetter = "UppercaseLetter",
        /**
         * Uses lowercase letters (a, b, c...).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lowercaseLetter = "LowercaseLetter",
        /**
         * Uses a symbol instead of a number.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        symbol = "Symbol",
        /**
         * Uses full-width Arabic numerals.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicFullWidth = "ArabicFullWidth",
        /**
         * Uses Kanji characters.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        kanji = "Kanji",
        /**
         * Uses Kanji digits.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        kanjiDigit = "KanjiDigit",
        /**
         * Uses traditional Kanji characters.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        kanjiTraditional = "KanjiTraditional",
        /**
         * Uses numbers enclosed in circles.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numberInCircle = "NumberInCircle",
        /**
         * Uses Hanja characters with phonetic reading.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hanjaRead = "HanjaRead",
        /**
         * Uses Hanja digits with phonetic reading.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hanjaReadDigit = "HanjaReadDigit",
        /**
         * Uses traditional Chinese numerals (style 1).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        traditionalChineseNumeral1 = "traditionalChineseNumeral1",
        /**
         * Uses traditional Chinese numerals (style 2).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        traditionalChineseNumeral2 = "traditionalChineseNumeral2",
        /**
         * Uses simplified Chinese numerals (style 1).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        simplifiedChineseNumeral1 = "simplifiedChineseNumeral1",
        /**
         * Uses simplified Chinese numerals (style 2).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        simplifiedChineseNumeral2 = "simplifiedChineseNumeral2",
        /**
         * Uses Hebrew letters (style 1).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hebrewLetter1 = "HebrewLetter1",
        /**
         * Uses Arabic letters (style 1).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicLetter1 = "ArabicLetter1",
        /**
         * Uses Hebrew letters (style 2).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hebrewLetter2 = "HebrewLetter2",
        /**
         * Uses Arabic letters (style 2).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        arabicLetter2 = "ArabicLetter2",
        /**
         * Uses Hindi letters (style 1).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hindiLetter1 = "HindiLetter1",
        /**
         * Uses Hindi letters (style 2).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hindiLetter2 = "HindiLetter2",
        /**
         * Uses Hindi Arabic numerals.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hindiArabic = "HindiArabic",
        /**
         * Uses Hindi cardinal text.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hindiCardinalText = "HindiCardinalText",
        /**
         * Uses Thai letters.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thaiLetter = "ThaiLetter",
        /**
         * Uses Thai Arabic numerals.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thaiArabic = "ThaiArabic",
        /**
         * Uses Thai cardinal text.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        thaiCardinalText = "ThaiCardinalText",
        /**
         * Uses Vietnamese cardinal text.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        vietnameseCardinalText = "vietnameseCardinalText",
    }
    /**
     * Specifies the unit of measurement used in Word operations.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum OperationUnit {
        /**
         * Specifies a character unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        character = "Character",
        /**
         * Specifies a word unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        word = "Word",
        /**
         * Specifies a sentence unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sentence = "Sentence",
        /**
         * Specifies a paragraph unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        paragraph = "Paragraph",
        /**
         * Specifies a line unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        line = "Line",
        /**
         * Specifies a story unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        story = "Story",
        /**
         * Specifies a screen unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        screen = "Screen",
        /**
         * Specifies a section unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        section = "Section",
        /**
         * Specifies a column unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        column = "Column",
        /**
         * Specifies a row unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        row = "Row",
        /**
         * Specifies a window unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        window = "Window",
        /**
         * Specifies a cell unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        cell = "Cell",
        /**
         * Specifies a character format unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        characterFormat = "CharacterFormat",
        /**
         * Specifies a paragraph format unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        paragraphFormat = "ParagraphFormat",
        /**
         * Specifies a table unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        table = "Table",
        /**
         * Specifies an item unit.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        item = "Item",
    }
    /**
     * Specifies the format to use when pasting data.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PasteDataType {
        /**
         * Pastes the data as an OLE object.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        oleObject = "OleObject",
        /**
         * Pastes the data as rich text format (RTF).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rtf = "Rtf",
        /**
         * Pastes the data as plain text.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        text = "Text",
        /**
         * Pastes the data as a metafile picture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        metafilePicture = "MetafilePicture",
        /**
         * Pastes the data as a bitmap.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bitmap = "Bitmap",
        /**
         * Pastes the data as a device-independent bitmap (DIB).
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        deviceIndependentBitmap = "DeviceIndependentBitmap",
        /**
         * Pastes the data as a hyperlink.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        hyperlink = "Hyperlink",
        /**
         * Pastes the data as a shape.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shape = "Shape",
        /**
         * Pastes the data as an enhanced metafile.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        enhancedMetafile = "EnhancedMetafile",
        /**
         * Pastes the data as HTML.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        html = "Html",
    }
    /**
     * Specifies the type of formatting when paste to a document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum PasteFormatType {
        /**
         * Uses the default paste behavior.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pasteDefault = "PasteDefault",
        /**
         * Pastes text into a single cell.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        singleCellText = "SingleCellText",
        /**
         * Pastes a table into a single cell.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        singleCellTable = "SingleCellTable",
        /**
         * Continues numbering from the previous list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listContinueNumbering = "ListContinueNumbering",
        /**
         * Restarts numbering for the new list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listRestartNumbering = "ListRestartNumbering",
        /**
         * Appends the pasted table to the existing table.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tableAppendTable = "TableAppendTable",
        /**
         * Inserts the pasted table as new rows.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tableInsertAsRows = "TableInsertAsRows",
        /**
         * Inserts the pasted table with its original formatting.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tableOriginalFormatting = "TableOriginalFormatting",
        /**
         * Pastes a chart as a picture.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        chartPicture = "ChartPicture",
        /**
         * Pastes a chart as an editable chart.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        chart = "Chart",
        /**
         * Pastes a chart with a link to the source data.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        chartLinked = "ChartLinked",
        /**
         * Applies the original formatting of the pasted content.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        formatOriginalFormatting = "FormatOriginalFormatting",
        /**
         * Applies surrounding formatting with emphasis.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        formatSurroundingFormattingWithEmphasis = "FormatSurroundingFormattingWithEmphasis",
        /**
         * Pastes content as plain text.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        formatPlainText = "FormatPlainText",
        /**
         * Overwrites existing cells with the pasted table.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tableOverwriteCells = "TableOverwriteCells",
        /**
         * Combines the pasted list with an existing list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listCombineWithExistingList = "ListCombineWithExistingList",
        /**
         * Prevents merging the pasted list with an existing list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        listDontMerge = "ListDontMerge",
        /**
         * Uses the destination styles for the pasted content.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        useDestinationStylesRecovery = "UseDestinationStylesRecovery",
    }
    /**
     * Specifies the kind of reference to insert.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ReferenceKind {
        /**
         * Inserts the full text of the referenced item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        contentText = "ContentText",
        /**
         * Inserts the number of the referenced item with relative context.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numberRelativeContext = "NumberRelativeContext",
        /**
         * Inserts only the number of the referenced item without context.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numberNoContext = "NumberNoContext",
        /**
         * Inserts the number of the referenced item with full context.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numberFullContext = "NumberFullContext",
        /**
         * Inserts the entire caption of the referenced item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        entireCaption = "EntireCaption",
        /**
         * Inserts only the label and number of the referenced item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        onlyLabelAndNumber = "OnlyLabelAndNumber",
        /**
         * Inserts only the caption text of the referenced item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        onlyCaptionText = "OnlyCaptionText",
        /**
         * Inserts the footnote number of the referenced item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footnoteNumber = "FootnoteNumber",
        /**
         * Inserts the endnote number of the referenced item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endnoteNumber = "EndnoteNumber",
        /**
         * Inserts the page number of the referenced item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        pageNumber = "PageNumber",
        /**
         * Inserts the position of the referenced item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        position = "Position",
        /**
         * Inserts the formatted footnote number of the referenced item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footnoteNumberFormatted = "FootnoteNumberFormatted",
        /**
         * Inserts the formatted endnote number of the referenced item.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endnoteNumberFormatted = "EndnoteNumberFormatted",
    }
    /**
     * Specifies the type of reference to insert.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ReferenceType {
        /**
         * Refers to a numbered item in the document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numberedItem = "NumberedItem",
        /**
         * Refers to a heading in the document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        heading = "Heading",
        /**
         * Refers to a bookmark in the document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bookmark = "Bookmark",
        /**
         * Refers to a footnote in the document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footnote = "Footnote",
        /**
         * Refers to an endnote in the document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endnote = "Endnote",
    }
    /**
     * Specifies the type of selection in the document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum SelectionType {
        /**
         * No selection is made.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        noSelection = "NoSelection",
        /**
         * Represents an insertion point (IP) selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        insertionPoint = "InsertionPoint",
        /**
         * Represents a normal selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        normal = "Normal",
        /**
         * Represents a frame selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        frame = "Frame",
        /**
         * Represents a column selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        column = "Column",
        /**
         * Represents a row selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        row = "Row",
        /**
         * Represents a block selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        block = "Block",
        /**
         * Represents an inline shape selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        inlineShape = "InlineShape",
        /**
         * Represents a shape selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        selectionShape = "SelectionShape",
    }
    /**
     * Specifies the type of field to sort by.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum SortFieldType {
        /**
         * Sorts content alphanumerically.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        alphanumeric = "Alphanumeric",
        /**
         * Sorts content numerically.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numeric = "Numeric",
        /**
         * Sorts content by date.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        date = "Date",
        /**
         * Sorts content by syllables.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        syllable = "Syllable",
        /**
         * Sorts content using the Japanese JIS standard.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        japanJis = "JapanJis",
        /**
         * Sorts content by stroke count.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        stroke = "Stroke",
        /**
         * Sorts content using the Korean KS standard.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        koreaKs = "KoreaKs",
    }
    /**
     * Specifies the sort order.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum SortOrder {
        /**
         * Sorts in ascending order.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ascending = "Ascending",
        /**
         * Sorts in descending order.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        descending = "Descending",
    }
    /**
     * Specifies where and what type of cells to add to an existing table.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum TableCellInsertionLocation {
        /**
         * Inserts new cells to the left of the selected cells.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shiftRight = "ShiftRight",
        /**
         * Inserts new cells above the selected cells.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shiftDown = "ShiftDown",
        /**
         * Inserts an entire row above the row that contains the selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shiftRowDown = "ShiftRowDown",
        /**
         * Inserts an entire column to the left of the column that contains the selection.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shiftColumnRight = "ShiftColumnRight",
    }
    /**
     * Specifies the predefined table formatting options.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum TableFormat {
        /**
         * No table format is applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Applies the simple 1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        simple1 = "Simple1",
        /**
         * Applies the simple 2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        simple2 = "Simple2",
        /**
         * Applies the simple 3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        simple3 = "Simple3",
        /**
         * Applies the classic 1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        classic1 = "Classic1",
        /**
         * Applies the classic 2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        classic2 = "Classic2",
        /**
         * Applies the classic 3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        classic3 = "Classic3",
        /**
         * Applies the classic 4 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        classic4 = "Classic4",
        /**
         * Applies the colorful 1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        colorful1 = "Colorful1",
        /**
         * Applies the colorful 2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        colorful2 = "Colorful2",
        /**
         * Applies the colorful 3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        colorful3 = "Colorful3",
        /**
         * Applies the columns 1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        columns1 = "Columns1",
        /**
         * Applies the columns 2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        columns2 = "Columns2",
        /**
         * Applies the columns 3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        columns3 = "Columns3",
        /**
         * Applies the columns 4 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        columns4 = "Columns4",
        /**
         * Applies the columns 5 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        columns5 = "Columns5",
        /**
         * Applies the grid 1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid1 = "Grid1",
        /**
         * Applies the grid 2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid2 = "Grid2",
        /**
         * Applies the grid 3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid3 = "Grid3",
        /**
         * Applies the grid 4 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid4 = "Grid4",
        /**
         * Applies the grid 5 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid5 = "Grid5",
        /**
         * Applies the grid 6 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid6 = "Grid6",
        /**
         * Applies the grid 7 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid7 = "Grid7",
        /**
         * Applies the grid 8 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid8 = "Grid8",
        /**
         * Applies the list 1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list1 = "List1",
        /**
         * Applies the list 2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list2 = "List2",
        /**
         * Applies the list 3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list3 = "List3",
        /**
         * Applies the list 4 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list4 = "List4",
        /**
         * Applies the list 5 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list5 = "List5",
        /**
         * Applies the list 6 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list6 = "List6",
        /**
         * Applies the list 7 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list7 = "List7",
        /**
         * Applies the list 8 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list8 = "List8",
        /**
         * Applies the 3D effects 1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        threeDEffects1 = "ThreeDEffects1",
        /**
         * Applies the 3D effects 2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        threeDEffects2 = "ThreeDEffects2",
        /**
         * Applies the 3D effects 3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        threeDEffects3 = "ThreeDEffects3",
        /**
         * Applies the contemporary table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        contemporary = "Contemporary",
        /**
         * Applies the elegant table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        elegant = "Elegant",
        /**
         * Applies the professional table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        professional = "Professional",
        /**
         * Applies the subtle 1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        subtle1 = "Subtle1",
        /**
         * Applies the subtle 2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        subtle2 = "Subtle2",
        /**
         * Applies the web 1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        web1 = "Web1",
        /**
         * Applies the web 2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        web2 = "Web2",
        /**
         * Applies the web 3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        web3 = "Web3",
    }
    /**
     * Specifies the orientation of text in a text frame or shape.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum TextOrientation {
        /**
         * Text is horizontal.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        horizontal = "Horizontal",
        /**
         * Text is vertical with letters rotated 90 degrees clockwise.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        upward = "Upward",
        /**
         * Text is vertical with letters rotated 90 degrees counterclockwise.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        downward = "Downward",
        /**
         * Text is vertical and reads downward from the top, right to left.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        verticalFarEast = "VerticalFarEast",
        /**
         * Text is horizontal but from right to left to accommodate right-to-left languages.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        horizontalRotatedFarEast = "HorizontalRotatedFarEast",
        /**
         * Text is vertical and reads downward from the top, left to right.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        vertical = "Vertical",
    }
    /**
     * Represents a single bookmark in a document, selection, or range. The `Bookmark` object is a member of the `Bookmark` collection.
                The {@link Word.BookmarkCollection} includes all the bookmarks listed in the **Bookmark** dialog box (**Insert** menu).
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Bookmark extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `Range` object that represents the portion of the document that's contained in the `Bookmark` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Specifies the ending character position of the bookmark.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        end: number;
        /**
         * Returns `true` if the bookmark is a table column.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isColumn: boolean;
        /**
         * Returns `true` if the bookmark is empty.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly isEmpty: boolean;
        /**
         * Returns the name of the `Bookmark` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly name: string;
        /**
         * Specifies the starting character position of the bookmark.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        start: number;
        /**
         * Returns the story type for the bookmark.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly storyType: Word.StoryType | "MainText" | "Footnotes" | "Endnotes" | "Comments" | "TextFrame" | "EvenPagesHeader" | "PrimaryHeader" | "EvenPagesFooter" | "PrimaryFooter" | "FirstPageHeader" | "FirstPageFooter" | "FootnoteSeparator" | "FootnoteContinuationSeparator" | "FootnoteContinuationNotice" | "EndnoteSeparator" | "EndnoteContinuationSeparator" | "EndnoteContinuationNotice";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.BookmarkUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Bookmark): void;
        /**
         * Copies this bookmark to the new bookmark specified in the `name` argument and returns a `Bookmark` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param name - The name of the new bookmark.
         */
        copyTo(name: string): Word.Bookmark;
        /**
         * Deletes the bookmark.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Selects the bookmark.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        select(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BookmarkLoadOptions): Word.Bookmark;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Bookmark;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Bookmark;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Bookmark;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Bookmark;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Bookmark` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BookmarkData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.BookmarkData;
    }
    /**
     * A collection of {@link Word.Bookmark} objects that represent the bookmarks in the specified selection, range, or document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class BookmarkCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Bookmark[];
        /**
         * Determines whether the specified bookmark exists.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param name - A bookmark name than cannot include more than 40 characters or more than one word.
         * @returns `true` if the bookmark exists.
         */
        exists(name: string): OfficeExtension.ClientResult<boolean>;
        /**
         * Gets a `Bookmark` object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - A number that identifies the index location of a `Bookmark` object.
         */
        getItem(index: number): Word.Bookmark;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.BookmarkCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.BookmarkCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.BookmarkCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.BookmarkCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.BookmarkCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.BookmarkCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.BookmarkCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BookmarkCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.BookmarkCollectionData;
    }
    /**
     * Specifies the type of story in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum StoryType {
        /**
         * Main text story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mainText = "MainText",
        /**
         * Footnotes story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footnotes = "Footnotes",
        /**
         * Endnotes story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endnotes = "Endnotes",
        /**
         * Comments story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        comments = "Comments",
        /**
         * Text frame story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        textFrame = "TextFrame",
        /**
         * Even pages header story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        evenPagesHeader = "EvenPagesHeader",
        /**
         * Primary header story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        primaryHeader = "PrimaryHeader",
        /**
         * Even pages footer story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        evenPagesFooter = "EvenPagesFooter",
        /**
         * Primary footer story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        primaryFooter = "PrimaryFooter",
        /**
         * First page header story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        firstPageHeader = "FirstPageHeader",
        /**
         * First page footer story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        firstPageFooter = "FirstPageFooter",
        /**
         * Footnote separator story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footnoteSeparator = "FootnoteSeparator",
        /**
         * Footnote continuation separator story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footnoteContinuationSeparator = "FootnoteContinuationSeparator",
        /**
         * Footnote continuation notice story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        footnoteContinuationNotice = "FootnoteContinuationNotice",
        /**
         * Endnote separator story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endnoteSeparator = "EndnoteSeparator",
        /**
         * Endnote continuation separator story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endnoteContinuationSeparator = "EndnoteContinuationSeparator",
        /**
         * Endnote continuation notice story.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        endnoteContinuationNotice = "EndnoteContinuationNotice",
    }
    /**
     * Represents a single index. The `Index` object is a member of the {@link Word.IndexCollection}. The `IndexCollection` includes all the
                indexes in the document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class Index extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `Range` object that represents the portion of the document that is contained within the index.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly range: Word.Range;
        /**
         * Gets a value that represents how Microsoft Word classifies the first character of entries in the index.
                    See `IndexFilter` for available values.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly filter: Word.IndexFilter | "None" | "Aiueo" | "Akasatana" | "Chosung" | "Low" | "Medium" | "Full";
        /**
         * Gets the text between alphabetical groups (entries that start with the same letter) in the index. Corresponds to
                    the **\h** switch for an {@link https://support.microsoft.com/office/adafcf4a-cb30-43f6-85c7-743da1635d9e | INDEX field}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly headingSeparator: Word.HeadingSeparator | "None" | "BlankLine" | "Letter" | "LetterLow" | "LetterFull";
        /**
         * Gets a `LanguageId` value that represents the sorting language to use for the index.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly indexLanguage: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * Gets the number of columns for each page of the index.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly numberOfColumns: number;
        /**
         * Specifies if page numbers are aligned with the right margin in the index.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly rightAlignPageNumbers: boolean;
        /**
         * Gets if the index contains separate headings for accented letters (for example, words that begin with "À" are under
                    one heading and words that begin with "A" are under another).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly separateAccentedLetterHeadings: boolean;
        /**
         * Specifies the sorting criteria for the index.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly sortBy: Word.IndexSortBy | "Stroke" | "Syllable";
        /**
         * Specifies the leader character between entries in the index and their associated page numbers.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tabLeader: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
        /**
         * Gets the index type.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly type: Word.IndexType | "Indent" | "Runin";
        /**
         * Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.
         * @param properties - A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.
         * @param options - Provides an option to suppress errors if the properties object tries to set any read-only properties.
         */
        set(properties: Interfaces.IndexUpdateData, options?: OfficeExtension.UpdateOptions): void;
        /** Sets multiple properties on the object at the same time, based on an existing loaded object. */
        set(properties: Word.Index): void;
        /**
         * Deletes this index.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        delete(): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.IndexLoadOptions): Word.Index;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.Index;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.Index;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.Index;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.Index;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.Index` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.IndexData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.IndexData;
    }
    /**
     * A collection of {@link Word.Index} objects that represents all the indexes in the document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class IndexCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.Index[];
        /**
         * Returns an `Index` object that represents a new index added to the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range where you want the index to appear. The index replaces the range, if the range is not collapsed.
         * @param indexAddOptions - Optional. The options for adding the index.
         */
        add(range: Word.Range, indexAddOptions?: Word.IndexAddOptions): Word.Index;
        /**
         * Gets the `IndexFormat` value that represents the formatting for the indexes in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getFormat(): OfficeExtension.ClientResult<Word.IndexFormat>;
        /**
         * Gets an `Index` object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - A number that identifies the index location of an `Index` object.
         */
        getItem(index: number): Word.Index;
        /**
         * Inserts an {@link https://support.microsoft.com/office/abaf7c78-6e21-418d-bf8b-f8186d2e4d08 | XE (Index Entry) field} after all instances of the text in the range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param range - The range whose text is marked with an `XE` field throughout the document.
         * @param markAllEntriesOptions - Optional. The options for marking all entries.
         */
        markAllEntries(range: Word.Range, markAllEntriesOptions?: Word.IndexMarkAllEntriesOptions): void;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.IndexCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.IndexCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.IndexCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.IndexCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.IndexCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.IndexCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.IndexCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.IndexCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.IndexCollectionData;
    }
    /**
     * Represents options for creating an index in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface IndexAddOptions {
        /**
         * If provided, specifies the text between alphabetical groups (entries that start with the same letter) in the index.
                    See `HeadingSeparator` for available values. The default value is `Word.HeadingSeparator.blankLine`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        headingSeparator?: Word.HeadingSeparator | "None" | "BlankLine" | "Letter" | "LetterLow" | "LetterFull";
        /**
         * If provided, specifies the sorting language to be used for the index being added.
                    See `LanguageId` for available values. The default value is the installed language of the Word application.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        indexLanguage?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * If provided, specifies the number of columns for each page of the index.
                    Specifying 0 (zero) sets the number of columns in the index to the same number as in the document. The default value is 1.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numberOfColumns?: number;
        /**
         * If provided, specifies whether the page numbers in the generated index are aligned with the right margin. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rightAlignPageNumbers?: boolean;
        /**
         * If provided, specifies whether to include separate headings for accented letters in the index. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        separateAccentedLetterHeadings?: boolean;
        /**
         * If provided, specifies the sorting criteria to be used for the index being added. Can be either of the following `IndexSortBy` values: `stroke` or `syllable`. The default value is `Word.IndexSortBy.stroke`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sortBy?: Word.IndexSortBy | "Stroke" | "Syllable";
        /**
         * If provided, specifies whether subentries are on the same line (run-in) as the main entry or on a separate line (indented) from the main entry.
                    Can be either of the following `IndexType` values: `indent` or `runin`. The default value is `Word.IndexType.indent`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        type?: Word.IndexType | "Indent" | "Runin";
    }
    /**
     * Represents options for marking all index entries in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface IndexMarkAllEntriesOptions {
        /**
         * If provided, specifies whether to add bold formatting to page numbers for index entries. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bold?: boolean;
        /**
         * If provided, specifies the bookmark name that marks the range of pages you want to appear in the index. If this property is omitted, the number of the page that contains the `XE` field appears in the index. The default value is "".
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bookmarkName?: string;
        /**
         * If provided, specifies the cross-reference that will appear in the index. The default value is "".
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        crossReference?: string;
        /**
         * If provided, specifies the name of the `AutoText` entry that contains the text for a cross-reference (if this property is specified, `crossReference` is ignored). The default value is "".
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        crossReferenceAutoText?: string;
        /**
         * If provided, specifies the text you want to appear in the index, in the form `MainEntry[:Subentry]`. The default value is "".
                    Either this property or `entryAutoText` must be provided.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        entry?: string;
        /**
         * If provided, specifies the `AutoText` entry that contains the text you want to appear in the index (if this property is specified, `entry` is ignored). The default value is "".
                    Either this property or `entry` must be provided.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        entryAutoText?: string;
        /**
         * If provided, specifies whether to add italic formatting to page numbers for index entries. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        italic?: boolean;
    }
    /**
     * Represents options for marking an index entry in a Word document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface IndexMarkEntryOptions {
        /**
         * If provided, specifies whether to add bold formatting to page numbers for index entries. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bold?: boolean;
        /**
         * If provided, specifies the bookmark name that marks the range of pages you want to appear in the index. If this property is omitted, the number of the page that contains the `XE` field appears in the index. The default value is "".
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bookmarkName?: string;
        /**
         * If provided, specifies the cross-reference that will appear in the index. The default value is "".
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        crossReference?: string;
        /**
         * If provided, specifies the name of the `AutoText` entry that contains the text for a cross-reference (if this property is specified, `crossReference` is ignored). The default value is "".
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        crossReferenceAutoText?: string;
        /**
         * If provided, specifies the text you want to appear in the index, in the form `MainEntry[:Subentry]`. The default value is "".
                    Either this property or `entryAutoText` must be provided.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        entry?: string;
        /**
         * If provided, specifies the `AutoText` entry that contains the text you want to appear in the index (if this property is specified, `entry` is ignored). The default value is "".
                    Either this property or `entry` must be provided.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        entryAutoText?: string;
        /**
         * If provided, specifies whether to add italic formatting to page numbers for index entries. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        italic?: boolean;
        /**
         * If provided, specifies whether to show an index entry in the right location when indexes are sorted phonetically (East Asian languages only). The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        reading?: boolean;
    }
    /**
     * Specifies the type of separator to use for headings.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum HeadingSeparator {
        /**
         * No separator is used for headings.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * A blank line is used as a separator for headings.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        blankLine = "BlankLine",
        /**
         * A single letter is used as a separator for headings.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        letter = "Letter",
        /**
         * A lowercase letter is used as a separator for headings.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        letterLow = "LetterLow",
        /**
         * A full-width letter is used as a separator for headings.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        letterFull = "LetterFull",
    }
    /**
     * Represents the position of a dropped capital letter.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum DropPosition {
        /**
         * Represents that there's no dropped capital letter.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Represents a normal dropped capital letter.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        normal = "Normal",
        /**
         * Represents a dropped capital letter in the margin.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        margin = "Margin",
    }
    /**
     * Represents the type of line spacing.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum LineSpacing {
        /**
         * Represents single line spacing.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        single = "Single",
        /**
         * Represents 1.5 line spacing.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        onePt5 = "OnePt5",
        /**
         * Represents double line spacing.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        double = "Double",
        /**
         * Represents at least line spacing.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        atLeast = "AtLeast",
        /**
         * Represents exact line spacing.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        exactly = "Exactly",
        /**
         * Represents multiple line spacing.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        multiple = "Multiple",
    }
    /**
     * Represents the alignment of a tab stop.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum TabAlignment {
        /**
         * Represents that the tab stop is aligned to the left.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        left = "Left",
        /**
         * Represents that the tab stop is aligned to the center.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        center = "Center",
        /**
         * Represents that the tab stop is aligned to the right.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        right = "Right",
        /**
         * Represents that the tab stop is aligned to the decimal point.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        decimal = "Decimal",
        /**
         * Represents that the tab stop is aligned to the bar.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bar = "Bar",
        /**
         * Represents that the tab stop is aligned to the list.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list = "List",
    }
    /**
     * Represents the type of tight wrap for a text box.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum TextboxTightWrap {
        /**
         * Represents that there's no tight wrap.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Represents tight wrap around all lines.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        all = "All",
        /**
         * Represents tight wrap around the first and last lines.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        firstAndLastLines = "FirstAndLastLines",
        /**
         * Represents tight wrap around the first line only.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        firstLineOnly = "FirstLineOnly",
        /**
         * Represents tight wrap around the last line only.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lastLineOnly = "LastLineOnly",
    }
    /**
     * Specifies the filter type for an index.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum IndexFilter {
        /**
         * No filter is applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Aiueo filter is applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        aiueo = "Aiueo",
        /**
         * Akasatana filter is applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        akasatana = "Akasatana",
        /**
         * Chosung filter is applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        chosung = "Chosung",
        /**
         * Low filter is applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        low = "Low",
        /**
         * Medium filter is applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        medium = "Medium",
        /**
         * Full filter is applied.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        full = "Full",
    }
    /**
     * Specifies the format for an index.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum IndexFormat {
        /**
         * Template format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        template = "Template",
        /**
         * Classic format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        classic = "Classic",
        /**
         * Fancy format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fancy = "Fancy",
        /**
         * Modern format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        modern = "Modern",
        /**
         * Bulleted format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bulleted = "Bulleted",
        /**
         * Formal format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        formal = "Formal",
        /**
         * Simple format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        simple = "Simple",
    }
    /**
     * Specifies how an index is sorted.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum IndexSortBy {
        /**
         * Sort by stroke.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        stroke = "Stroke",
        /**
         * Sort by syllable.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        syllable = "Syllable",
    }
    /**
     * Specifies the type of index to create.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum IndexType {
        /**
         * Creates an indented index.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        indent = "Indent",
        /**
         * Creates a run-in index.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        runin = "Runin",
    }
    /**
     * Specifies the tab leader style.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum TabLeader {
        /**
         * Spaces are used as the tab leader.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        spaces = "Spaces",
        /**
         * Dots are used as the tab leader.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dots = "Dots",
        /**
         * Dashes are used as the tab leader.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        dashes = "Dashes",
        /**
         * Lines are used as the tab leader.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lines = "Lines",
        /**
         * Heavy lines are used as the tab leader.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        heavy = "Heavy",
        /**
         * Middle dots are used as the tab leader.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        middleDot = "MiddleDot",
    }
    /**
     * Specifies the area of a table to which to apply special style formatting.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ConditionCode {
        /**
         * Applies formatting to the first row in a table.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        firstRow = "FirstRow",
        /**
         * Applies formatting to the last row in a table.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lastRow = "LastRow",
        /**
         * Applies formatting to odd-numbered rows.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        oddRowBanding = "OddRowBanding",
        /**
         * Applies formatting to even-numbered rows.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        evenRowBanding = "EvenRowBanding",
        /**
         * Applies formatting to the first column in a table.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        firstColumn = "FirstColumn",
        /**
         * Applies formatting to the last column in a table.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        lastColumn = "LastColumn",
        /**
         * Applies formatting to odd-numbered columns.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        oddColumnBanding = "OddColumnBanding",
        /**
         * Applies formatting to even-numbered columns.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        evenColumnBanding = "EvenColumnBanding",
        /**
         * Applies formatting to the last cell in the first row.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        topRightCell = "TopRightCell",
        /**
         * Applies formatting to the first cell in the first row.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        topLeftCell = "TopLeftCell",
        /**
         * Applies formatting to the last cell in the table.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottomRightCell = "BottomRightCell",
        /**
         * Applies formatting to first cell in the last row of the table.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bottomLeftCell = "BottomLeftCell",
    }
    /**
     * Specifies a range of cells to be deleted from a table in a delete cells action or the behavior of the remaining cells after the deletion has occurred.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum DeleteCells {
        /**
         * Shift remaining cells left in the row where the deletion occurred after a cell or range of cells has been deleted.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shiftLeft = "ShiftLeft",
        /**
         * Shift remaining cells up in the column where the deletion occurred after a cell or range of cells has been deleted.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        shiftUp = "ShiftUp",
        /**
         * Delete the entire row of cells from the table.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        entireRow = "EntireRow",
        /**
         * Delete the entire column of cells from the table.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        entireColumn = "EntireColumn",
    }
    /**
     * Specifies the rule for determining the height of the specified cells or rows.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum RowHeightRule {
        /**
         * The row height is adjusted to accommodate the tallest value in the row.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        auto = "Auto",
        /**
         * The row height is set to a minimum value.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        atLeast = "AtLeast",
        /**
         * The row height is set to an exact value.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        exactly = "Exactly",
    }
    /**
     * Specifies the direction in which Microsoft Word orders cells in the specified table or row.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum TableDirection {
        /**
         * The table is arranged with the first column in the rightmost position.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        rightToLeft = "RightToLeft",
        /**
         * The table is arranged with the first column in the leftmost position.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        leftToRight = "LeftToRight",
    }
    /**
     * Specifies the character used to separate fields in a table.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum TableFieldSeparator {
        /**
         * Uses the paragraph marker.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        paragraph = "Paragraph",
        /**
         * Uses the tab.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        tab = "Tab",
        /**
         * Uses the comma.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        comma = "Comma",
        /**
         * Uses the default list separator.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        defaultListSeparator = "DefaultListSeparator",
    }
    /**
     * Specifies the table format to apply.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum TableFormatType {
        /**
         * Applies no formatting to the table.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Applies the Simple1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        simple1 = "Simple1",
        /**
         * Applies the Simple2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        simple2 = "Simple2",
        /**
         * Applies the Simple3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        simple3 = "Simple3",
        /**
         * Applies the Classic1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        classic1 = "Classic1",
        /**
         * Applies the Classic2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        classic2 = "Classic2",
        /**
         * Applies the Classic3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        classic3 = "Classic3",
        /**
         * Applies the Classic4 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        classic4 = "Classic4",
        /**
         * Applies the Colorful1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        colorful1 = "Colorful1",
        /**
         * Applies the Colorful2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        colorful2 = "Colorful2",
        /**
         * Applies the Colorful3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        colorful3 = "Colorful3",
        /**
         * Applies the Columns1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        columns1 = "Columns1",
        /**
         * Applies the Columns2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        columns2 = "Columns2",
        /**
         * Applies the Columns3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        columns3 = "Columns3",
        /**
         * Applies the Columns4 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        columns4 = "Columns4",
        /**
         * Applies the Columns5 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        columns5 = "Columns5",
        /**
         * Applies the Grid1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid1 = "Grid1",
        /**
         * Applies the Grid2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid2 = "Grid2",
        /**
         * Applies the Grid3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid3 = "Grid3",
        /**
         * Applies the Grid4 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid4 = "Grid4",
        /**
         * Applies the Grid5 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid5 = "Grid5",
        /**
         * Applies the Grid6 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid6 = "Grid6",
        /**
         * Applies the Grid7 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid7 = "Grid7",
        /**
         * Applies the Grid8 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        grid8 = "Grid8",
        /**
         * Applies the List1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list1 = "List1",
        /**
         * Applies the List2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list2 = "List2",
        /**
         * Applies the List3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list3 = "List3",
        /**
         * Applies the List4 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list4 = "List4",
        /**
         * Applies the List5 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list5 = "List5",
        /**
         * Applies the List6 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list6 = "List6",
        /**
         * Applies the List7 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list7 = "List7",
        /**
         * Applies the List8 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        list8 = "List8",
        /**
         * Applies the 3D Effects1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        threeDEffects1 = "ThreeDEffects1",
        /**
         * Applies the 3D Effects2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        threeDEffects2 = "ThreeDEffects2",
        /**
         * Applies the 3D Effects3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        threeDEffects3 = "ThreeDEffects3",
        /**
         * Applies the Contemporary table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        contemporary = "Contemporary",
        /**
         * Applies the Elegant table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        elegant = "Elegant",
        /**
         * Applies the Professional table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        professional = "Professional",
        /**
         * Applies the Subtle1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        subtle1 = "Subtle1",
        /**
         * Applies the Subtle2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        subtle2 = "Subtle2",
        /**
         * Applies the Web1 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        web1 = "Web1",
        /**
         * Applies the Web2 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        web2 = "Web2",
        /**
         * Applies the Web3 table format.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        web3 = "Web3",
    }
    /**
     * Represents the options for the {@link Word.Table | Table.autoFormat} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface TableAutoFormatOptions {
        /**
         * If provided, specifies whether to apply borders of the specified format. The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyBorders?: boolean;
        /**
         * If provided, specifies whether to apply color of the specified format. The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyColor?: boolean;
        /**
         * If provided, specifies whether to apply first column formatting of the specified format. The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyFirstColumn?: boolean;
        /**
         * If provided, specifies whether to apply font of the specified format. The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyFont?: boolean;
        /**
         * If provided, specifies whether to apply heading row formatting of the specified format. The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyHeadingRows?: boolean;
        /**
         * If provided, specifies whether to apply last column formatting of the specified format. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyLastColumn?: boolean;
        /**
         * If provided, specifies whether to apply last row formatting of the specified format. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyLastRow?: boolean;
        /**
         * If provided, specifies whether to apply shading of the specified format. The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        applyShading?: boolean;
        /**
         * If provided, specifies whether to decrease the width of the table columns as much as possible without changing the way text wraps in the cells. The default value is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        autoFit?: boolean;
        /**
         * If provided, specifies the format to apply. The default value is `simple1`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        format?: Word.TableFormatType | "None" | "Simple1" | "Simple2" | "Simple3" | "Classic1" | "Classic2" | "Classic3" | "Classic4" | "Colorful1" | "Colorful2" | "Colorful3" | "Columns1" | "Columns2" | "Columns3" | "Columns4" | "Columns5" | "Grid1" | "Grid2" | "Grid3" | "Grid4" | "Grid5" | "Grid6" | "Grid7" | "Grid8" | "List1" | "List2" | "List3" | "List4" | "List5" | "List6" | "List7" | "List8" | "ThreeDEffects1" | "ThreeDEffects2" | "ThreeDEffects3" | "Contemporary" | "Elegant" | "Professional" | "Subtle1" | "Subtle2" | "Web1" | "Web2" | "Web3";
    }
    /**
     * Represents the options for the {@link Word.TableCellCollection | TableCellCollection.split} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface TableCellCollectionSplitOptions {
        /**
         * If provided, specifies whether to merge the cells with one another before splitting them. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        mergeBeforeSplit?: boolean;
        /**
         * If provided, specifies the number of columns that the group of cells is to be split into. The default value is 1.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numColumns?: number;
        /**
         * If provided, specifies the number of rows that the group of cells is to be split into. The default value is 1.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numRows?: number;
    }
    /**
     * Represents the options for the {@link Word.TableCell | TableCell.formula} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface TableCellFormulaOptions {
        /**
         * The mathematical formula you want the = (Formula) field to evaluate. Spreadsheet-type references to table cells are valid. For example, "=SUM(A4:C4)" specifies the first three values in the fourth row. For more information about the = (Formula) field, see {@link https://support.microsoft.com/office/32d5c9de-3516-4ec3-80ed-d1fc2b5bc21d | Field codes: = (Formula) field}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        formula?: string;
        /**
         * A format for the result of the {@link https://support.microsoft.com/office/32d5c9de-3516-4ec3-80ed-d1fc2b5bc21d | = (Formula) field}. For information about the types of formats you can apply, see the Numeric Picture (#) field switch.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        numFormat?: string;
    }
    /**
     * Represents the options for the {@link Word.Table | Table.convertToText}, {@link Word.TableRow | TableRow.convertToText}, and {@link Word.TableRowCollection | TableRowCollection.convertToText} methods.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface TableConvertToTextOptions {
        /**
         * If provided, specifies whether to convert the nested tables to text. This property is ignored if the `separator` property isn't set to `paragraph`. The default is `true`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        nestedTables?: boolean;
        /**
         * If provided, specifies the character that delimits the converted columns (paragraph marks delimit the converted rows). The default is `tab`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        separator?: Word.TableFieldSeparator | "Paragraph" | "Tab" | "Comma" | "DefaultListSeparator";
    }
    /**
     * Represents the options for the {@link Word.Table | Table.sort} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface TableSortOptions {
        /**
         * If provided, specifies whether to use bidirectional sort. `true` means to sort based on right-to-left language rules. This property may not be available to you, depending on the language support (U.S. English, for example) that you have selected or installed. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bidirectionalSort?: boolean;
        /**
         * If provided, specifies whether sorting is case-sensitive. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        caseSensitive?: boolean;
        /**
         * If provided, specifies whether to exclude the header row from the sort operation. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        excludeHeader?: boolean;
        /**
         * If provided, specifies the first field to sort by. Microsoft Word sorts by `fieldNumber`, then by `fieldNumber2`, and finally by `fieldNumber3`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fieldNumber?: string;
        /**
         * If provided, specifies the second field to sort by.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fieldNumber2?: string;
        /**
         * If provided, specifies the third field to sort by.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        fieldNumber3?: string;
        /**
         * If provided, specifies whether to ignore Arabic character alef lam when sorting right-to-left language text. This property may not be available to you, depending on the language support (U.S. English, for example) that you have selected or installed. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ignoreArabicThe?: boolean;
        /**
         * If provided, specifies whether to ignore bidirectional control characters when sorting right-to-left language text. This property may not be available to you, depending on the language support (U.S. English, for example) that you have selected or installed. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ignoreDiacritics?: boolean;
        /**
         * If provided, specifies whether to ignore Hebrew characters when sorting right-to-left language text. This property may not be available to you, depending on the language support (U.S. English, for example) that you have selected or installed. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ignoreHebrew?: boolean;
        /**
         * If provided, specifies whether to ignore kashida when sorting right-to-left language text. This property may not be available to you, depending on the language support (U.S. English, for example) that you have selected or installed. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ignoreKashida?: boolean;
        /**
         * If provided, specifies the sorting language.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        languageId?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        /**
         * If provided, specifies the type of the first field to sort by. The default value is `alphanumeric`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sortFieldType?: Word.SortFieldType | "Alphanumeric" | "Numeric" | "Date" | "Syllable" | "JapanJis" | "Stroke" | "KoreaKs";
        /**
         * If provided, specifies the type of the second field to sort by. The default value is `alphanumeric`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sortFieldType2?: Word.SortFieldType | "Alphanumeric" | "Numeric" | "Date" | "Syllable" | "JapanJis" | "Stroke" | "KoreaKs";
        /**
         * If provided, specifies the type of the third field to sort by. The default value is `alphanumeric`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sortFieldType3?: Word.SortFieldType | "Alphanumeric" | "Numeric" | "Date" | "Syllable" | "JapanJis" | "Stroke" | "KoreaKs";
        /**
         * If provided, specifies the sort order of the first field to sort by. The default value is `ascending`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sortOrder?: Word.SortOrder | "Ascending" | "Descending";
        /**
         * If provided, specifies the sort order of the second field to sort by. The default value is `ascending`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sortOrder2?: Word.SortOrder | "Ascending" | "Descending";
        /**
         * If provided, specifies the sort order of the third field to sort by. The default value is `ascending`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        sortOrder3?: Word.SortOrder | "Ascending" | "Descending";
    }
    /**
     * Represents a list of the names of all the available fonts.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class FontNameCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns the number of items in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        getCount(): OfficeExtension.ClientResult<number>;
        /**
         * Gets the font name at the specified index.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - The zero-based index of the font name to retrieve.
         */
        getItemAt(index: number): OfficeExtension.ClientResult<string>;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.FontNameCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.FontNameCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.FontNameCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.FontNameCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.FontNameCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.FontNameCollectionData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): {
            [key: string]: string;
        };
    }
    /**
     * Contains a collection of {@link Word.ListTemplate} objects in a document, list template gallery, or document template.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class ListTemplateCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.ListTemplate[];
        /**
         * Adds a new `ListTemplate` object. Note: This operation isn't allowed if the collection represents list templates from a {@link Word.ListTemplateGallery}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param options - Optional. Options for adding a new list template.
         */
        add(options?: Word.ListTemplateCollectionAddOptions): Word.ListTemplate;
        /**
         * Gets a `ListTemplate` object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - A number that identifies the index location of a `ListTemplate` object.
         */
        getItem(index: number): Word.ListTemplate;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param options - Provides options for which properties of the object to load.
         */
        load(options?: Word.Interfaces.ListTemplateCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ListTemplateCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ListTemplateCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.ListTemplateCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ListTemplateCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ListTemplateCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ListTemplateCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ListTemplateCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.ListTemplateCollectionData;
    }
    /**
     * Represents the options for the {@link Word.ListTemplateCollection | ListTemplateCollection.add} method.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export interface ListTemplateCollectionAddOptions {
        /**
         * If provided, specifies the name of the list template to be added.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        name?: string;
        /**
         * If provided, specifies whether to apply outline numbering to the new list template. The default value is `false`.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outlineNumbered?: boolean;
    }
    /**
     * Represents a gallery of list templates of the same {@link Word.ListTemplateGalleryType}.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class ListTemplateGallery extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /**
         * Returns a `ListTemplateCollection` object that represents all the list templates for the specified list gallery.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        readonly listTemplates: Word.ListTemplateCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ListTemplateGallery;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: {
            select?: string;
            expand?: string;
        }): Word.ListTemplateGallery;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ListTemplateGallery;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ListTemplateGallery;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ListTemplateGallery` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ListTemplateGalleryData`) that contains shallow copies of any loaded child properties from the original object.
         */
        toJSON(): Word.Interfaces.ListTemplateGalleryData;
    }
    /**
     * Contains a collection of {@link Word.ListTemplateGallery} objects available through the three bullets-and-numbering buttons on the **Home** tab (see {@link https://support.microsoft.com/office/6c06ef65-27ad-4893-80c9-0b944cb81f5f | Define new bullets, numbers, and multilevel lists} for how to access in the Word UI).
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    export class ListTemplateGalleryCollection extends OfficeExtension.ClientObject {
        /** The request context associated with the object. This connects the add-in's process to the Office host application's process. */
        context: RequestContext;
        /** Gets the loaded child items in this collection. */
        readonly items: Word.ListTemplateGallery[];
        /**
         * Gets a `ListTemplateGallery` object by its type in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param type - The type of list template gallery to retrieve.
         */
        getByType(type: Word.ListTemplateGalleryType): Word.ListTemplateGallery;
        /**
         * Gets a `ListTemplateGallery` object by its type in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param type - The type of list template gallery to retrieve.
         */
        getByType(type: "Bullets" | "Number" | "OutlineNumbered"): Word.ListTemplateGallery;
        /**
         * Gets a `ListTemplateGallery` object by its index in the collection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         *
         * @param index - A number that identifies the index location of a `ListTemplateGallery` object.
         */
        getItem(index: number): Word.ListTemplateGallery;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.
         */
        load(propertyNames?: string | string[]): Word.ListTemplateGalleryCollection;
        /**
         * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.
         *
         * @param propertyNamesAndPaths - `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
         */
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.ListTemplateGalleryCollection;
        /**
         * Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.add(thisObject)}. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.
         */
        track(): Word.ListTemplateGalleryCollection;
        /**
         * Release the memory associated with this object, if it has previously been tracked. This call is shorthand for {@link https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member | context.trackedObjects.remove(thisObject)}. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
         */
        untrack(): Word.ListTemplateGalleryCollection;
        /**
         * Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.)
         * Whereas the original `Word.ListTemplateGalleryCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ListTemplateGalleryCollectionData`) that contains an "items" array with shallow copies of any loaded properties from the collection's items.
         */
        toJSON(): Word.Interfaces.ListTemplateGalleryCollectionData;
    }
    /**
     * Describes the types of list template galleries available.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum ListTemplateGalleryType {
        /**
         * Represents the bullet list gallery.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        bullets = "Bullets",
        /**
         * Represents the number list gallery.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        number = "Number",
        /**
         * Represents the outline number list gallery.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        outlineNumbered = "OutlineNumbered",
    }
    /**
     * Represents the types of {@link Word.CoauthoringLock | coauthoring locks}.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum CoauthoringLockType {
        /**
         * Reserved for future use.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        none = "None",
        /**
         * Represents that the lock is a reservation.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        reservation = "Reservation",
        /**
         * Represents that the lock is ephemeral.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        ephemeral = "Ephemeral",
        /**
         * Represents that the lock has changed.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        changed = "Changed",
    }
    /**
     * Represents the classes of users who can edit authorized portions of a protected (read-only) document.
     *
     * @remarks
     * [Api set: WordApi BETA (PREVIEW ONLY)]
     * @beta
     */
    enum EditorType {
        /**
         * Represents the current user of the document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        current = "Current",
        /**
         * Represents the Editors group for documents that use Information Rights Management.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        editors = "Editors",
        /**
         * Represents all users who open a document.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        everyone = "Everyone",
        /**
         * Represents the Owners group for documents that use Information Rights Management.
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        owners = "Owners",
    }
    enum ErrorCodes {
        accessDenied = "AccessDenied",
        generalException = "GeneralException",
        invalidArgument = "InvalidArgument",
        itemNotFound = "ItemNotFound",
        notAllowed = "NotAllowed",
        notImplemented = "NotImplemented",
        searchDialogIsOpen = "SearchDialogIsOpen",
        searchStringInvalidOrTooLong = "SearchStringInvalidOrTooLong",
    }
    export namespace Interfaces {
        /**
         * Provides ways to load properties of only a subset of members of a collection.
         */
        export interface CollectionLoadOptions {
            /**
             * Specify the number of items in the queried collection to be included in the result.
             */
            $top?: number;
            /**
             * Specify the number of items in the collection that are to be skipped and not included in the result. If top is specified, the selection of result will start after skipping the specified number of items.
             */
            $skip?: number;
        }
        /** An interface for updating data on the `Editor` object, for use in `editor.set({ ... })`. */
        export interface EditorUpdateData {
            /**
             * Gets a `Range` object that represents the next range that the editor has permissions to modify.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nextRange?: Word.Interfaces.RangeUpdateData;
            /**
             * Gets a `Range` object that represents the portion of the document that's contained in the `Editor` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
        }
        /** An interface for updating data on the `ConflictCollection` object, for use in `conflictCollection.set({ ... })`. */
        export interface ConflictCollectionUpdateData {
            items?: Word.Interfaces.ConflictData[];
        }
        /** An interface for updating data on the `Conflict` object, for use in `conflict.set({ ... })`. */
        export interface ConflictUpdateData {
            /**
             * Gets a `Range` object that represents the portion of the document that's contained in the `Conflict` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
        }
        /** An interface for updating data on the `AnnotationCollection` object, for use in `annotationCollection.set({ ... })`. */
        export interface AnnotationCollectionUpdateData {
            items?: Word.Interfaces.AnnotationData[];
        }
        /** An interface for updating data on the `Application` object, for use in `application.set({ ... })`. */
        export interface ApplicationUpdateData {
            /**
             * Returns a `Bibliography` object that represents the bibliography reference sources stored in Microsoft Word.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bibliography?: Word.Interfaces.BibliographyUpdateData;
            /**
             * Specifies if Microsoft Word automatically detects the language you are using as you type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            checkLanguage?: boolean;
        }
        /** An interface for updating data on the `Body` object, for use in `body.set({ ... })`. */
        export interface BodyUpdateData {
            /**
             * Gets the text format of the body. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontUpdateData;
            /**
             * Specifies the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: string;
            /**
             * Specifies the built-in style name for the body. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
        }
        /** An interface for updating data on the `Border` object, for use in `border.set({ ... })`. */
        export interface BorderUpdateData {
            /**
             * Specifies the color for the border. Color is specified in ‘#RRGGBB’ format or by using the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            color?: string;
            /**
             * Specifies the border type for the border.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            type?: Word.BorderType | "Mixed" | "None" | "Single" | "Double" | "Dotted" | "Dashed" | "DotDashed" | "Dot2Dashed" | "Triple" | "ThinThickSmall" | "ThickThinSmall" | "ThinThickThinSmall" | "ThinThickMed" | "ThickThinMed" | "ThinThickThinMed" | "ThinThickLarge" | "ThickThinLarge" | "ThinThickThinLarge" | "Wave" | "DoubleWave" | "DashedSmall" | "DashDotStroked" | "ThreeDEmboss" | "ThreeDEngrave";
            /**
             * Specifies whether the border is visible.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            visible?: boolean;
            /**
             * Specifies the width for the border.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            width?: Word.BorderWidth | "None" | "Pt025" | "Pt050" | "Pt075" | "Pt100" | "Pt150" | "Pt225" | "Pt300" | "Pt450" | "Pt600" | "Mixed";
        }
        /** An interface for updating data on the `BorderUniversal` object, for use in `borderUniversal.set({ ... })`. */
        export interface BorderUniversalUpdateData {
            /**
             * Specifies the graphical page-border design for the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            artStyle?: Word.PageBorderArt | "Apples" | "MapleMuffins" | "CakeSlice" | "CandyCorn" | "IceCreamCones" | "ChampagneBottle" | "PartyGlass" | "ChristmasTree" | "Trees" | "PalmsColor" | "Balloons3Colors" | "BalloonsHotAir" | "PartyFavor" | "ConfettiStreamers" | "Hearts" | "HeartBalloon" | "Stars3D" | "StarsShadowed" | "Stars" | "Sun" | "Earth2" | "Earth1" | "PeopleHats" | "Sombrero" | "Pencils" | "Packages" | "Clocks" | "Firecrackers" | "Rings" | "MapPins" | "Confetti" | "CreaturesButterfly" | "CreaturesLadyBug" | "CreaturesFish" | "BirdsFlight" | "ScaredCat" | "Bats" | "FlowersRoses" | "FlowersRedRose" | "Poinsettias" | "Holly" | "FlowersTiny" | "FlowersPansy" | "FlowersModern2" | "FlowersModern1" | "WhiteFlowers" | "Vine" | "FlowersDaisies" | "FlowersBlockPrint" | "DecoArchColor" | "Fans" | "Film" | "Lightning1" | "Compass" | "DoubleD" | "ClassicalWave" | "ShadowedSquares" | "TwistedLines1" | "Waveline" | "Quadrants" | "CheckedBarColor" | "Swirligig" | "PushPinNote1" | "PushPinNote2" | "Pumpkin1" | "EggsBlack" | "Cup" | "HeartGray" | "GingerbreadMan" | "BabyPacifier" | "BabyRattle" | "Cabins" | "HouseFunky" | "StarsBlack" | "Snowflakes" | "SnowflakeFancy" | "Skyrocket" | "Seattle" | "MusicNotes" | "PalmsBlack" | "MapleLeaf" | "PaperClips" | "ShorebirdTracks" | "People" | "PeopleWaving" | "EclipsingSquares2" | "Hypnotic" | "DiamondsGray" | "DecoArch" | "DecoBlocks" | "CirclesLines" | "Papyrus" | "Woodwork" | "WeavingBraid" | "WeavingRibbon" | "WeavingAngles" | "ArchedScallops" | "Safari" | "CelticKnotwork" | "CrazyMaze" | "EclipsingSquares1" | "Birds" | "FlowersTeacup" | "Northwest" | "Southwest" | "Tribal6" | "Tribal4" | "Tribal3" | "Tribal2" | "Tribal5" | "XIllusions" | "ZanyTriangles" | "Pyramids" | "PyramidsAbove" | "ConfettiGrays" | "ConfettiOutline" | "ConfettiWhite" | "Mosaic" | "Lightning2" | "HeebieJeebies" | "LightBulb" | "Gradient" | "TriangleParty" | "TwistedLines2" | "Moons" | "Ovals" | "DoubleDiamonds" | "ChainLink" | "Triangles" | "Tribal1" | "MarqueeToothed" | "SharksTeeth" | "Sawtooth" | "SawtoothGray" | "PostageStamp" | "WeavingStrips" | "ZigZag" | "CrossStitch" | "Gems" | "CirclesRectangles" | "CornerTriangles" | "CreaturesInsects" | "ZigZagStitch" | "Checkered" | "CheckedBarBlack" | "Marquee" | "BasicWhiteDots" | "BasicWideMidline" | "BasicWideOutline" | "BasicWideInline" | "BasicThinLines" | "BasicWhiteDashes" | "BasicWhiteSquares" | "BasicBlackSquares" | "BasicBlackDashes" | "BasicBlackDots" | "StarsTop" | "CertificateBanner" | "Handmade1" | "Handmade2" | "TornPaper" | "TornPaperBlack" | "CouponCutoutDashes" | "CouponCutoutDots";
            /**
             * Specifies the width (in points) of the graphical page border specified in the `artStyle` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            artWidth?: number;
            /**
             * Specifies the color for the `BorderUniversal` object. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: string;
            /**
             * Specifies the color for the `BorderUniversal` or {@link Word.Font} object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            colorIndex?: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
            /**
             * Specifies whether the border is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies the line style of the border.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lineStyle?: Word.BorderLineStyle | "None" | "Single" | "Dot" | "DashSmallGap" | "DashLargeGap" | "DashDot" | "DashDotDot" | "Double" | "Triple" | "ThinThickSmallGap" | "ThickThinSmallGap" | "ThinThickThinSmallGap" | "ThinThickMedGap" | "ThickThinMedGap" | "ThinThickThinMedGap" | "ThinThickLargeGap" | "ThickThinLargeGap" | "ThinThickThinLargeGap" | "SingleWavy" | "DoubleWavy" | "DashDotStroked" | "Emboss3D" | "Engrave3D" | "Outset" | "Inset";
            /**
             * Specifies the line width of an object's border.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lineWidth?: Word.LineWidth | "Pt025" | "Pt050" | "Pt075" | "Pt100" | "Pt150" | "Pt225" | "Pt300" | "Pt450" | "Pt600";
        }
        /** An interface for updating data on the `BorderCollection` object, for use in `borderCollection.set({ ... })`. */
        export interface BorderCollectionUpdateData {
            /**
             * Specifies the 24-bit color of the inside borders. Color is specified in ‘#RRGGBB’ format or by using the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            insideBorderColor?: string;
            /**
             * Specifies the border type of the inside borders.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            insideBorderType?: Word.BorderType | "Mixed" | "None" | "Single" | "Double" | "Dotted" | "Dashed" | "DotDashed" | "Dot2Dashed" | "Triple" | "ThinThickSmall" | "ThickThinSmall" | "ThinThickThinSmall" | "ThinThickMed" | "ThickThinMed" | "ThinThickThinMed" | "ThinThickLarge" | "ThickThinLarge" | "ThinThickThinLarge" | "Wave" | "DoubleWave" | "DashedSmall" | "DashDotStroked" | "ThreeDEmboss" | "ThreeDEngrave";
            /**
             * Specifies the width of the inside borders.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            insideBorderWidth?: Word.BorderWidth | "None" | "Pt025" | "Pt050" | "Pt075" | "Pt100" | "Pt150" | "Pt225" | "Pt300" | "Pt450" | "Pt600" | "Mixed";
            /**
             * Specifies the 24-bit color of the outside borders. Color is specified in ‘#RRGGBB’ format or by using the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            outsideBorderColor?: string;
            /**
             * Specifies the border type of the outside borders.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            outsideBorderType?: Word.BorderType | "Mixed" | "None" | "Single" | "Double" | "Dotted" | "Dashed" | "DotDashed" | "Dot2Dashed" | "Triple" | "ThinThickSmall" | "ThickThinSmall" | "ThinThickThinSmall" | "ThinThickMed" | "ThickThinMed" | "ThinThickThinMed" | "ThinThickLarge" | "ThickThinLarge" | "ThinThickThinLarge" | "Wave" | "DoubleWave" | "DashedSmall" | "DashDotStroked" | "ThreeDEmboss" | "ThreeDEngrave";
            /**
             * Specifies the width of the outside borders.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            outsideBorderWidth?: Word.BorderWidth | "None" | "Pt025" | "Pt050" | "Pt075" | "Pt100" | "Pt150" | "Pt225" | "Pt300" | "Pt450" | "Pt600" | "Mixed";
            items?: Word.Interfaces.BorderData[];
        }
        /** An interface for updating data on the `BorderUniversalCollection` object, for use in `borderUniversalCollection.set({ ... })`. */
        export interface BorderUniversalCollectionUpdateData {
            items?: Word.Interfaces.BorderUniversalData[];
        }
        /** An interface for updating data on the `Break` object, for use in `break.set({ ... })`. */
        export interface BreakUpdateData {
            /**
             * Returns a `Range` object that represents the portion of the document that's contained in the break.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
        }
        /** An interface for updating data on the `BreakCollection` object, for use in `breakCollection.set({ ... })`. */
        export interface BreakCollectionUpdateData {
            items?: Word.Interfaces.BreakData[];
        }
        /** An interface for updating data on the `BuildingBlock` object, for use in `buildingBlock.set({ ... })`. */
        export interface BuildingBlockUpdateData {
            /**
             * Specifies the description for the building block.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            description?: string;
            /**
             * Specifies a `DocPartInsertType` value that represents how to insert the contents of the building block into the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            insertType?: Word.DocPartInsertType | "Content" | "Paragraph" | "Page";
            /**
             * Specifies the name of the building block.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
            /**
             * Specifies the contents of the building block.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            value?: string;
        }
        /** An interface for updating data on the `CheckboxContentControl` object, for use in `checkboxContentControl.set({ ... })`. */
        export interface CheckboxContentControlUpdateData {
            /**
             * Specifies the current state of the checkbox.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            isChecked?: boolean;
        }
        /** An interface for updating data on the `CoauthoringLock` object, for use in `coauthoringLock.set({ ... })`. */
        export interface CoauthoringLockUpdateData {
            /**
             * Gets a `Range` object that represents the portion of the document that's contained in the `CoauthoringLock` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
        }
        /** An interface for updating data on the `CoauthoringLockCollection` object, for use in `coauthoringLockCollection.set({ ... })`. */
        export interface CoauthoringLockCollectionUpdateData {
            items?: Word.Interfaces.CoauthoringLockData[];
        }
        /** An interface for updating data on the `CoauthorCollection` object, for use in `coauthorCollection.set({ ... })`. */
        export interface CoauthorCollectionUpdateData {
            items?: Word.Interfaces.CoauthorData[];
        }
        /** An interface for updating data on the `CoauthoringUpdate` object, for use in `coauthoringUpdate.set({ ... })`. */
        export interface CoauthoringUpdateUpdateData {
            /**
             * Gets a `Range` object that represents the portion of the document that's contained in the `CoauthoringUpdate` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
        }
        /** An interface for updating data on the `CoauthoringUpdateCollection` object, for use in `coauthoringUpdateCollection.set({ ... })`. */
        export interface CoauthoringUpdateCollectionUpdateData {
            items?: Word.Interfaces.CoauthoringUpdateData[];
        }
        /** An interface for updating data on the `Comment` object, for use in `comment.set({ ... })`. */
        export interface CommentUpdateData {
            /**
             * Specifies the comment's content range.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            contentRange?: Word.Interfaces.CommentContentRangeUpdateData;
            /**
             * Specifies the comment's content as plain text.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            content?: string;
            /**
             * Specifies the comment thread's status. Setting to true resolves the comment thread. Getting a value of true means that the comment thread is resolved.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            resolved?: boolean;
        }
        /** An interface for updating data on the `CommentCollection` object, for use in `commentCollection.set({ ... })`. */
        export interface CommentCollectionUpdateData {
            items?: Word.Interfaces.CommentData[];
        }
        /** An interface for updating data on the `CommentContentRange` object, for use in `commentContentRange.set({ ... })`. */
        export interface CommentContentRangeUpdateData {
            /**
             * Specifies a value that indicates whether the comment text is bold.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            bold?: boolean;
            /**
             * Gets the first hyperlink in the range, or sets a hyperlink on the range. All hyperlinks in the range are deleted when you set a new hyperlink on the range.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            hyperlink?: string;
            /**
             * Specifies a value that indicates whether the comment text is italicized.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            italic?: boolean;
            /**
             * Specifies a value that indicates whether the comment text has a strikethrough.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            strikeThrough?: boolean;
            /**
             * Specifies a value that indicates the comment text's underline type. 'None' if the comment text isn't underlined.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            underline?: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";
        }
        /** An interface for updating data on the `CommentReply` object, for use in `commentReply.set({ ... })`. */
        export interface CommentReplyUpdateData {
            /**
             * Specifies the commentReply's content range.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            contentRange?: Word.Interfaces.CommentContentRangeUpdateData;
            /**
             * Gets the parent comment of this reply.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentComment?: Word.Interfaces.CommentUpdateData;
            /**
             * Specifies the comment reply's content. The string is plain text.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            content?: string;
        }
        /** An interface for updating data on the `CommentReplyCollection` object, for use in `commentReplyCollection.set({ ... })`. */
        export interface CommentReplyCollectionUpdateData {
            items?: Word.Interfaces.CommentReplyData[];
        }
        /** An interface for updating data on the `ConditionalStyle` object, for use in `conditionalStyle.set({ ... })`. */
        export interface ConditionalStyleUpdateData {
            /**
             * Specifies the amount of space (in points) to add below the contents of a single cell or all the cells in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bottomPadding?: number;
            /**
             * Specifies the amount of space (in points) to add to the left of the contents of a single cell or all the cells in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            leftPadding?: number;
            /**
             * Specifies the amount of space (in points) to add to the right of the contents of a single cell or all the cells in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rightPadding?: number;
            /**
             * Specifies the amount of space (in points) to add above the contents of a single cell or all the cells in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            topPadding?: number;
        }
        /** An interface for updating data on the `XmlMapping` object, for use in `xmlMapping.set({ ... })`. */
        export interface XmlMappingUpdateData {
            /**
             * Returns a `CustomXmlNode` object that represents the custom XML node in the data store that the content control in the document maps to.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            customXmlNode?: Word.Interfaces.CustomXmlNodeUpdateData;
            /**
             * Returns a `CustomXmlPart` object that represents the custom XML part to which the content control in the document maps.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            customXmlPart?: Word.Interfaces.CustomXmlPartUpdateData;
        }
        /** An interface for updating data on the `CustomXmlPrefixMappingCollection` object, for use in `customXmlPrefixMappingCollection.set({ ... })`. */
        export interface CustomXmlPrefixMappingCollectionUpdateData {
            items?: Word.Interfaces.CustomXmlPrefixMappingData[];
        }
        /** An interface for updating data on the `CustomXmlSchemaCollection` object, for use in `customXmlSchemaCollection.set({ ... })`. */
        export interface CustomXmlSchemaCollectionUpdateData {
            items?: Word.Interfaces.CustomXmlSchemaData[];
        }
        /** An interface for updating data on the `CustomXmlValidationErrorCollection` object, for use in `customXmlValidationErrorCollection.set({ ... })`. */
        export interface CustomXmlValidationErrorCollectionUpdateData {
            items?: Word.Interfaces.CustomXmlValidationErrorData[];
        }
        /** An interface for updating data on the `CustomXmlValidationError` object, for use in `customXmlValidationError.set({ ... })`. */
        export interface CustomXmlValidationErrorUpdateData {
            /**
             * Gets the node associated with this `CustomXmlValidationError` object, if any exist.If no nodes exist, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            node?: Word.Interfaces.CustomXmlNodeUpdateData;
        }
        /** An interface for updating data on the `CustomXmlNodeCollection` object, for use in `customXmlNodeCollection.set({ ... })`. */
        export interface CustomXmlNodeCollectionUpdateData {
            items?: Word.Interfaces.CustomXmlNodeData[];
        }
        /** An interface for updating data on the `CustomXmlNode` object, for use in `customXmlNode.set({ ... })`. */
        export interface CustomXmlNodeUpdateData {
            /**
             * Gets a `CustomXmlNode` object corresponding to the first child element of the current node. If the node has no child elements (or if it isn't of type {@link Word.CustomXmlNodeType | CustomXmlNodeType.element}), returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            firstChild?: Word.Interfaces.CustomXmlNodeUpdateData;
            /**
             * Gets a `CustomXmlNode` object corresponding to the last child element of the current node. If the node has no child elements (or if it isn't of type {@link Word.CustomXmlNodeType | CustomXmlNodeType.element}), the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lastChild?: Word.Interfaces.CustomXmlNodeUpdateData;
            /**
             * Gets the next sibling node (element, comment, or processing instruction) of the current node. If the node is the last sibling at its level, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nextSibling?: Word.Interfaces.CustomXmlNodeUpdateData;
            /**
             * Gets the object representing the part associated with this node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            ownerPart?: Word.Interfaces.CustomXmlPartUpdateData;
            /**
             * Gets the parent element node of the current node. If the current node is at the root level, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            parentNode?: Word.Interfaces.CustomXmlNodeUpdateData;
            /**
             * Gets the previous sibling node (element, comment, or processing instruction) of the current node. If the current node is the first sibling at its level, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            previousSibling?: Word.Interfaces.CustomXmlNodeUpdateData;
            /**
             * Specifies the value of the current node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nodeValue?: string;
            /**
             * Specifies the text for the current node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            text?: string;
        }
        /** An interface for updating data on the `ContentControl` object, for use in `contentControl.set({ ... })`. */
        export interface ContentControlUpdateData {
            /**
             * Gets the building block gallery-related data if the content control's {@link Word.ContentControlType} is `BuildingBlockGallery`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            buildingBlockGalleryContentControl?: Word.Interfaces.BuildingBlockGalleryContentControlUpdateData;
            /**
             * Gets the data of the content control when its type is `CheckBox`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            checkboxContentControl?: Word.Interfaces.CheckboxContentControlUpdateData;
            /**
             * Gets the date picker-related data if the content control's {@link Word.ContentControlType} is `DatePicker`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            datePickerContentControl?: Word.Interfaces.DatePickerContentControlUpdateData;
            /**
             * Gets the text format of the content control. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontUpdateData;
            /**
             * Gets the group-related data if the content control's {@link Word.ContentControlType} is `Group`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            groupContentControl?: Word.Interfaces.GroupContentControlUpdateData;
            /**
             * Gets the picture-related data if the content control's {@link Word.ContentControlType} is `Picture`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pictureContentControl?: Word.Interfaces.PictureContentControlUpdateData;
            /**
             * Gets the repeating section-related data if the content control's {@link Word.ContentControlType} is `RepeatingSection`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            repeatingSectionContentControl?: Word.Interfaces.RepeatingSectionContentControlUpdateData;
            /**
             * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingUpdateData;
            /**
             * Specifies the appearance of the content control. The value can be 'BoundingBox', 'Tags', or 'Hidden'.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            appearance?: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
            /**
             * Specifies a value that indicates whether the user can delete the content control. Mutually exclusive with removeWhenEdited.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            cannotDelete?: boolean;
            /**
             * Specifies a value that indicates whether the user can edit the contents of the content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            cannotEdit?: boolean;
            /**
             * Specifies the color of the content control. Color is specified in '#RRGGBB' format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            color?: string;
            /**
             * Specifies the placeholder text of the content control. Dimmed text will be displayed when the content control is empty.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            placeholderText?: string;
            /**
             * Specifies a value that indicates whether the content control is removed after it is edited. Mutually exclusive with cannotDelete.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            removeWhenEdited?: boolean;
            /**
             * Specifies the style name for the content control. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: string;
            /**
             * Specifies the built-in style name for the content control. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
            /**
             * Specifies a tag to identify a content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            tag?: string;
            /**
             * Specifies the title for a content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            title?: string;
        }
        /** An interface for updating data on the `ContentControlCollection` object, for use in `contentControlCollection.set({ ... })`. */
        export interface ContentControlCollectionUpdateData {
            items?: Word.Interfaces.ContentControlData[];
        }
        /** An interface for updating data on the `ContentControlListItem` object, for use in `contentControlListItem.set({ ... })`. */
        export interface ContentControlListItemUpdateData {
            /**
             * Specifies the display text of a list item for a dropdown list or combo box content control.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            displayText?: string;
            /**
             * Specifies the index location of a content control list item in the collection of list items.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            index?: number;
            /**
             * Specifies the programmatic value of a list item for a dropdown list or combo box content control.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            value?: string;
        }
        /** An interface for updating data on the `ContentControlListItemCollection` object, for use in `contentControlListItemCollection.set({ ... })`. */
        export interface ContentControlListItemCollectionUpdateData {
            items?: Word.Interfaces.ContentControlListItemData[];
        }
        /** An interface for updating data on the `CustomProperty` object, for use in `customProperty.set({ ... })`. */
        export interface CustomPropertyUpdateData {
            /**
             * Specifies the value of the custom property. Note that even though Word on the web and the docx file format allow these properties to be arbitrarily long, the desktop version of Word will truncate string values to 255 16-bit chars (possibly creating invalid unicode by breaking up a surrogate pair).
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            value?: any;
        }
        /** An interface for updating data on the `CustomPropertyCollection` object, for use in `customPropertyCollection.set({ ... })`. */
        export interface CustomPropertyCollectionUpdateData {
            items?: Word.Interfaces.CustomPropertyData[];
        }
        /** An interface for updating data on the `CustomXmlPart` object, for use in `customXmlPart.set({ ... })`. */
        export interface CustomXmlPartUpdateData {
            /**
             * Gets the root element of a bound region of data in the document. If the region is empty, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            documentElement?: Word.Interfaces.CustomXmlNodeUpdateData;
        }
        /** An interface for updating data on the `CustomXmlPartCollection` object, for use in `customXmlPartCollection.set({ ... })`. */
        export interface CustomXmlPartCollectionUpdateData {
            items?: Word.Interfaces.CustomXmlPartData[];
        }
        /** An interface for updating data on the `CustomXmlPartScopedCollection` object, for use in `customXmlPartScopedCollection.set({ ... })`. */
        export interface CustomXmlPartScopedCollectionUpdateData {
            items?: Word.Interfaces.CustomXmlPartData[];
        }
        /** An interface for updating data on the `Document` object, for use in `document.set({ ... })`. */
        export interface DocumentUpdateData {
            /**
             * Gets the active window for the document.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            activeWindow?: Word.Interfaces.WindowUpdateData;
            /**
             * Returns a `Bibliography` object that represents the bibliography references contained within the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bibliography?: Word.Interfaces.BibliographyUpdateData;
            /**
             * Gets the body object of the main document. The body is the text that excludes headers, footers, footnotes, textboxes, etc.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            body?: Word.Interfaces.BodyUpdateData;
            /**
             * Returns a `PageSetup` object that's associated with the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageSetup?: Word.Interfaces.PageSetupUpdateData;
            /**
             * Gets the properties of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            properties?: Word.Interfaces.DocumentPropertiesUpdateData;
            /**
             * Specifies if automatic hyphenation is turned on for the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            autoHyphenation?: boolean;
            /**
             * Specifies if the edits in the document are automatically saved.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            autoSaveOn?: boolean;
            /**
             * Specifies the ChangeTracking mode.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            changeTrackingMode?: Word.ChangeTrackingMode | "Off" | "TrackAll" | "TrackMineOnly";
            /**
             * Specifies the maximum number of consecutive lines that can end with hyphens.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            consecutiveHyphensLimit?: number;
            /**
             * Specifies whether words in all capital letters can be hyphenated.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hyphenateCaps?: boolean;
            /**
             * Specifies whether Microsoft Word has detected the language of the document text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageDetected?: boolean;
        }
        /** An interface for updating data on the `DocumentCreated` object, for use in `documentCreated.set({ ... })`. */
        export interface DocumentCreatedUpdateData {
            /**
             * Gets the body object of the document. The body is the text that excludes headers, footers, footnotes, textboxes, etc.
             *
             * @remarks
             * [Api set: WordApiHiddenDocument 1.3]
             */
            body?: Word.Interfaces.BodyUpdateData;
            /**
             * Gets the properties of the document.
             *
             * @remarks
             * [Api set: WordApiHiddenDocument 1.3]
             */
            properties?: Word.Interfaces.DocumentPropertiesUpdateData;
        }
        /** An interface for updating data on the `DocumentProperties` object, for use in `documentProperties.set({ ... })`. */
        export interface DocumentPropertiesUpdateData {
            /**
             * Specifies the author of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            author?: string;
            /**
             * Specifies the category of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            category?: string;
            /**
             * Specifies the Comments field in the metadata of the document. These have no connection to comments by users made in the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            comments?: string;
            /**
             * Specifies the company of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            company?: string;
            /**
             * Specifies the format of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            format?: string;
            /**
             * Specifies the keywords of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            keywords?: string;
            /**
             * Specifies the manager of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            manager?: string;
            /**
             * Specifies the subject of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            subject?: string;
            /**
             * Specifies the title of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            title?: string;
        }
        /** An interface for updating data on the `Field` object, for use in `field.set({ ... })`. */
        export interface FieldUpdateData {
            /**
             * Gets the field's result data.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            result?: Word.Interfaces.RangeUpdateData;
            /**
             * Specifies the field's code instruction.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             *
             * Note: The ability to set the code was introduced in WordApi 1.5.
             */
            code?: string;
            /**
             * Specifies data in an "Addin" field. If the field isn't an "Addin" field, it is `null` and it will throw a general exception when code attempts to set it.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            data?: string;
            /**
             * Specifies whether the field is locked. `true` if the field is locked, `false` otherwise.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            locked?: boolean;
            /**
             * Specifies whether the field codes are displayed for the specified field. `true` if the field codes are displayed, `false` otherwise.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            showCodes?: boolean;
        }
        /** An interface for updating data on the `FieldCollection` object, for use in `fieldCollection.set({ ... })`. */
        export interface FieldCollectionUpdateData {
            items?: Word.Interfaces.FieldData[];
        }
        /** An interface for updating data on the `Font` object, for use in `font.set({ ... })`. */
        export interface FontUpdateData {
            /**
             * Returns a `FillFormat` object that contains fill formatting properties for the font used by the range of text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fill?: Word.Interfaces.FillFormatUpdateData;
            /**
             * Returns a `GlowFormat` object that represents the glow formatting for the font used by the range of text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            glow?: Word.Interfaces.GlowFormatUpdateData;
            /**
             * Returns a `LineFormat` object that specifies the formatting for a line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            line?: Word.Interfaces.LineFormatUpdateData;
            /**
             * Returns a `ReflectionFormat` object that represents the reflection formatting for a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            reflection?: Word.Interfaces.ReflectionFormatUpdateData;
            /**
             * Returns a `ColorFormat` object that represents the color for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textColor?: Word.Interfaces.ColorFormatUpdateData;
            /**
             * Returns a `ShadowFormat` object that specifies the shadow formatting for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textShadow?: Word.Interfaces.ShadowFormatUpdateData;
            /**
             * Returns a `ThreeDimensionalFormat` object that contains 3-dimensional (3D) effect formatting properties for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            threeDimensionalFormat?: Word.Interfaces.ThreeDimensionalFormatUpdateData;
            /**
             * Specifies whether the font is formatted as all capital letters, which makes lowercase letters appear as uppercase letters. The possible values are as follows:
                        
                        - `true`: All the text has the **All Caps** attribute.
                        
                        - `false`: None of the text has the **All Caps** attribute.
                        
                        - `null`: Returned if some, but not all, of the text has the **All Caps** attribute.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            allCaps?: boolean;
            /**
             * Specifies a value that indicates whether the font is bold. True if the font is formatted as bold, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            bold?: boolean;
            /**
             * Specifies whether the font is formatted as bold in a right-to-left language document. The possible values are as follows:
                        
                        - `true`: All the text is bold.
                        
                        - `false`: None of the text is bold.
                        
                        - `null`: Returned if some, but not all, of the text is bold.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            boldBidirectional?: boolean;
            /**
             * Specifies the color for the specified font. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            color?: string;
            /**
             * Specifies a `ColorIndex` value that represents the color for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            colorIndex?: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
            /**
             * Specifies the color for the `Font` object in a right-to-left language document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            colorIndexBidirectional?: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
            /**
             * Specifies whether contextual alternates are enabled for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            contextualAlternates?: boolean;
            /**
             * Specifies the color to be used for diacritics for the `Font` object. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            diacriticColor?: string;
            /**
             * Specifies whether Microsoft Word ignores the number of characters per line for the corresponding `Font` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            disableCharacterSpaceGrid?: boolean;
            /**
             * Specifies a value that indicates whether the font has a double strikethrough. True if the font is formatted as double strikethrough text, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            doubleStrikeThrough?: boolean;
            /**
             * Specifies whether the font is formatted as embossed. The possible values are as follows:
                        
                        - `true`: All the text is embossed.
                        
                        - `false`: None of the text is embossed.
                        
                        - `null`: Returned if some, but not all, of the text is embossed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emboss?: boolean;
            /**
             * Specifies an `EmphasisMark` value that represents the emphasis mark for a character or designated character string.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emphasisMark?: Word.EmphasisMark | "None" | "OverSolidCircle" | "OverComma" | "OverWhiteCircle" | "UnderSolidCircle";
            /**
             * Specifies whether the font is formatted as engraved. The possible values are as follows:
                        
                        - `true`: All the text is engraved.
                        
                        - `false`: None of the text is engraved.
                        
                        - `null`: Returned if some, but not all, of the text is engraved.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            engrave?: boolean;
            /**
             * Specifies a value that indicates whether the font is tagged as hidden. True if the font is formatted as hidden text, otherwise, false.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            hidden?: boolean;
            /**
             * Specifies the highlight color. To set it, use a value either in the '#RRGGBB' format or the color name. To remove highlight color, set it to null. The returned highlight color can be in the '#RRGGBB' format, an empty string for mixed highlight colors, or `null` for no highlight color. Note: Only the default highlight colors are available in Office for Windows Desktop. These are "Yellow", "Lime", "Turquoise", "Pink", "Blue", "Red", "DarkBlue", "Teal", "Green", "Purple", "DarkRed", "Olive", "Gray", "LightGray", and "Black". When the add-in runs in Office for Windows Desktop, any other color is converted to the closest color when applied to the font.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            highlightColor?: string;
            /**
             * Specifies a value that indicates whether the font is italicized. True if the font is italicized, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            italic?: boolean;
            /**
             * Specifies whether the font is italicized in a right-to-left language document. The possible values are as follows:
                        
                        - `true`: All the text is italicized.
                        
                        - `false`: None of the text is italicized.
                        
                        - `null`: Returned if some, but not all, of the text is italicized.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            italicBidirectional?: boolean;
            /**
             * Specifies the minimum font size for which Microsoft Word will adjust kerning automatically.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            kerning?: number;
            /**
             * Specifies the ligature setting for the `Font` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            ligature?: Word.Ligature | "None" | "Standard" | "Contextual" | "StandardContextual" | "Historical" | "StandardHistorical" | "ContextualHistorical" | "StandardContextualHistorical" | "Discretional" | "StandardDiscretional" | "ContextualDiscretional" | "StandardContextualDiscretional" | "HistoricalDiscretional" | "StandardHistoricalDiscretional" | "ContextualHistoricalDiscretional" | "All";
            /**
             * Specifies a value that represents the name of the font.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            name?: string;
            /**
             * Specifies the font used for Latin text (characters with character codes from 0 (zero) through 127).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nameAscii?: string;
            /**
             * Specifies the font name in a right-to-left language document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nameBidirectional?: string;
            /**
             * Specifies the East Asian font name.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nameFarEast?: string;
            /**
             * Specifies the font used for characters with codes from 128 through 255.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nameOther?: string;
            /**
             * Specifies the number form setting for an OpenType font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            numberForm?: Word.NumberForm | "Default" | "Lining" | "OldStyle";
            /**
             * Specifies the number spacing setting for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            numberSpacing?: Word.NumberSpacing | "Default" | "Proportional" | "Tabular";
            /**
             * Specifies if the font is formatted as outlined. The possible values are as follows:
                        
                        - `true`: All the text is outlined.
                        
                        - `false`: None of the text is outlined.
                        
                        - `null`: Returned if some, but not all, of the text is outlined.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            outline?: boolean;
            /**
             * Specifies the position of text (in points) relative to the base line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            position?: number;
            /**
             * Specifies the scaling percentage applied to the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            scaling?: number;
            /**
             * Specifies if the font is formatted as shadowed. The possible values are as follows:
                        
                        - `true`: All the text is shadowed.
                        
                        - `false`: None of the text is shadowed.
                        
                        - `null`: Returned if some, but not all, of the text is shadowed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shadow?: boolean;
            /**
             * Specifies a value that represents the font size in points.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            size?: number;
            /**
             * Specifies the font size in points for right-to-left text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sizeBidirectional?: number;
            /**
             * Specifies whether the font is formatted as small caps, which makes lowercase letters appear as small uppercase letters. The possible values are as follows:
                        
                        - `true`: All the text has the **Small Caps** attribute.
                        
                        - `false`: None of the text has the **Small Caps** attribute.
                        
                        - `null`: Returned if some, but not all, of the text has the **Small Caps** attribute.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            smallCaps?: boolean;
            /**
             * Specifies the spacing between characters.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            spacing?: number;
            /**
             * Specifies a value that indicates whether the font has a strikethrough. True if the font is formatted as strikethrough text, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            strikeThrough?: boolean;
            /**
             * Specifies the stylistic set for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            stylisticSet?: Word.StylisticSet | "Default" | "Set01" | "Set02" | "Set03" | "Set04" | "Set05" | "Set06" | "Set07" | "Set08" | "Set09" | "Set10" | "Set11" | "Set12" | "Set13" | "Set14" | "Set15" | "Set16" | "Set17" | "Set18" | "Set19" | "Set20";
            /**
             * Specifies a value that indicates whether the font is a subscript. True if the font is formatted as subscript, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            subscript?: boolean;
            /**
             * Specifies a value that indicates whether the font is a superscript. True if the font is formatted as superscript, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            superscript?: boolean;
            /**
             * Specifies a value that indicates the font's underline type. 'None' if the font isn't underlined.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            underline?: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";
            /**
             * Specifies the color of the underline for the `Font` object. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            underlineColor?: string;
        }
        /** An interface for updating data on the `HeadingStyle` object, for use in `headingStyle.set({ ... })`. */
        export interface HeadingStyleUpdateData {
            /**
             * Specifies the level for the heading style in a table of contents or table of figures. Must be a value from 1 to 9.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: number;
            /**
             * Specifies the name of style for a heading.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
        }
        /** An interface for updating data on the `HeadingStyleCollection` object, for use in `headingStyleCollection.set({ ... })`. */
        export interface HeadingStyleCollectionUpdateData {
            items?: Word.Interfaces.HeadingStyleData[];
        }
        /** An interface for updating data on the `Hyperlink` object, for use in `hyperlink.set({ ... })`. */
        export interface HyperlinkUpdateData {
            /**
             * Returns a `Range` object that represents the portion of the document that's contained within the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
            /**
             * Specifies the address (for example, a file name or URL) of the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            address?: string;
            /**
             * Specifies the text string for the hyperlink's subject line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emailSubject?: string;
            /**
             * Specifies the text that appears as a ScreenTip when the mouse pointer is positioned over the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            screenTip?: string;
            /**
             * Specifies a named location in the destination of the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            subAddress?: string;
            /**
             * Specifies the name of the frame or window in which to load the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            target?: string;
            /**
             * Specifies the hyperlink's visible text in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textToDisplay?: string;
        }
        /** An interface for updating data on the `HyperlinkCollection` object, for use in `hyperlinkCollection.set({ ... })`. */
        export interface HyperlinkCollectionUpdateData {
            items?: Word.Interfaces.HyperlinkData[];
        }
        /** An interface for updating data on the `InlinePicture` object, for use in `inlinePicture.set({ ... })`. */
        export interface InlinePictureUpdateData {
            /**
             * Specifies a string that represents the alternative text associated with the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            altTextDescription?: string;
            /**
             * Specifies a string that contains the title for the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            altTextTitle?: string;
            /**
             * Specifies a number that describes the height of the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            height?: number;
            /**
             * Specifies a hyperlink on the image. Use a '#' to separate the address part from the optional location part.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            hyperlink?: string;
            /**
             * Specifies a value that indicates whether the inline image retains its original proportions when you resize it.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lockAspectRatio?: boolean;
            /**
             * Specifies a number that describes the width of the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            width?: number;
        }
        /** An interface for updating data on the `InlinePictureCollection` object, for use in `inlinePictureCollection.set({ ... })`. */
        export interface InlinePictureCollectionUpdateData {
            items?: Word.Interfaces.InlinePictureData[];
        }
        /** An interface for updating data on the `LinkFormat` object, for use in `linkFormat.set({ ... })`. */
        export interface LinkFormatUpdateData {
            /**
             * Specifies if the link is updated automatically when the container file is opened or when the source file is changed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isAutoUpdated?: boolean;
            /**
             * Specifies if a `Field`, `InlineShape`, or `Shape` object is locked to prevent automatic updating.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLocked?: boolean;
            /**
             * Specifies if the linked picture is saved with the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isPictureSavedWithDocument?: boolean;
            /**
             * Specifies the path and name of the source file for the linked OLE object, picture, or field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sourceFullName?: string;
        }
        /** An interface for updating data on the `ListCollection` object, for use in `listCollection.set({ ... })`. */
        export interface ListCollectionUpdateData {
            items?: Word.Interfaces.ListData[];
        }
        /** An interface for updating data on the `ListItem` object, for use in `listItem.set({ ... })`. */
        export interface ListItemUpdateData {
            /**
             * Specifies the level of the item in the list.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            level?: number;
        }
        /** An interface for updating data on the `ListLevel` object, for use in `listLevel.set({ ... })`. */
        export interface ListLevelUpdateData {
            /**
             * Gets a Font object that represents the character formatting of the specified object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            font?: Word.Interfaces.FontUpdateData;
            /**
             * Specifies the horizontal alignment of the list level. The value can be 'Left', 'Centered', or 'Right'.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            alignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Specifies the name of the style that's linked to the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            linkedStyle?: string;
            /**
             * Specifies the number format for the specified list level.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            numberFormat?: string;
            /**
             * Specifies the position (in points) of the number or bullet for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            numberPosition?: number;
            /**
             * Specifies the number style for the list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            numberStyle?: Word.ListBuiltInNumberStyle | "None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter" | "Ordinal" | "CardinalText" | "OrdinalText" | "Kanji" | "KanjiDigit" | "AiueoHalfWidth" | "IrohaHalfWidth" | "ArabicFullWidth" | "KanjiTraditional" | "KanjiTraditional2" | "NumberInCircle" | "Aiueo" | "Iroha" | "ArabicLZ" | "Bullet" | "Ganada" | "Chosung" | "GBNum1" | "GBNum2" | "GBNum3" | "GBNum4" | "Zodiac1" | "Zodiac2" | "Zodiac3" | "TradChinNum1" | "TradChinNum2" | "TradChinNum3" | "TradChinNum4" | "SimpChinNum1" | "SimpChinNum2" | "SimpChinNum3" | "SimpChinNum4" | "HanjaRead" | "HanjaReadDigit" | "Hangul" | "Hanja" | "Hebrew1" | "Arabic1" | "Hebrew2" | "Arabic2" | "HindiLetter1" | "HindiLetter2" | "HindiArabic" | "HindiCardinalText" | "ThaiLetter" | "ThaiArabic" | "ThaiCardinalText" | "VietCardinalText" | "LowercaseRussian" | "UppercaseRussian" | "LowercaseGreek" | "UppercaseGreek" | "ArabicLZ2" | "ArabicLZ3" | "ArabicLZ4" | "LowercaseTurkish" | "UppercaseTurkish" | "LowercaseBulgarian" | "UppercaseBulgarian" | "PictureBullet" | "Legal" | "LegalLZ";
            /**
             * Specifies the list level that must appear before the specified list level restarts numbering at 1.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            resetOnHigher?: number;
            /**
             * Specifies the starting number for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            startAt?: number;
            /**
             * Specifies the tab position for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            tabPosition?: number;
            /**
             * Specifies the position (in points) for the second line of wrapping text for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            textPosition?: number;
            /**
             * Specifies the character inserted after the number for the specified list level.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            trailingCharacter?: Word.TrailingCharacter | "TrailingTab" | "TrailingSpace" | "TrailingNone";
        }
        /** An interface for updating data on the `ListLevelCollection` object, for use in `listLevelCollection.set({ ... })`. */
        export interface ListLevelCollectionUpdateData {
            items?: Word.Interfaces.ListLevelData[];
        }
        /** An interface for updating data on the `ListTemplate` object, for use in `listTemplate.set({ ... })`. */
        export interface ListTemplateUpdateData {
            /**
             * Specifies the name of the list template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
            /**
             * Specifies whether the list template is outline numbered.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            outlineNumbered?: boolean;
        }
        /** An interface for updating data on the `NoteItem` object, for use in `noteItem.set({ ... })`. */
        export interface NoteItemUpdateData {
            /**
             * Represents the body object of the note item. It's the portion of the text within the footnote or endnote.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            body?: Word.Interfaces.BodyUpdateData;
            /**
             * Represents a footnote or endnote reference in the main document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            reference?: Word.Interfaces.RangeUpdateData;
        }
        /** An interface for updating data on the `NoteItemCollection` object, for use in `noteItemCollection.set({ ... })`. */
        export interface NoteItemCollectionUpdateData {
            items?: Word.Interfaces.NoteItemData[];
        }
        /** An interface for updating data on the `OleFormat` object, for use in `oleFormat.set({ ... })`. */
        export interface OleFormatUpdateData {
            /**
             * Specifies the class type for the specified OLE object, picture, or field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            classType?: string;
            /**
             * Specifies the icon that is used when the `displayAsIcon` property is `true`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            iconIndex?: number;
            /**
             * Specifies the text displayed below the icon for the OLE object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            iconLabel?: string;
            /**
             * Specifies the program file in which the icon for the OLE object is stored.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            iconName?: string;
            /**
             * Specifies whether formatting done in Microsoft Word to the linked OLE object is preserved.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFormattingPreservedOnUpdate?: boolean;
        }
        /** An interface for updating data on the `PageCollection` object, for use in `pageCollection.set({ ... })`. */
        export interface PageCollectionUpdateData {
            items?: Word.Interfaces.PageData[];
        }
        /** An interface for updating data on the `PaneCollection` object, for use in `paneCollection.set({ ... })`. */
        export interface PaneCollectionUpdateData {
            items?: Word.Interfaces.PaneData[];
        }
        /** An interface for updating data on the `Window` object, for use in `window.set({ ... })`. */
        export interface WindowUpdateData {
            /**
             * Gets the next document window in the collection of open document windows.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            next?: Word.Interfaces.WindowUpdateData;
            /**
             * Gets the previous document window in the collection open document windows.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            previous?: Word.Interfaces.WindowUpdateData;
            /**
             * Specifies whether rulers are displayed for the window or pane.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areRulersDisplayed?: boolean;
            /**
             * Specifies whether thumbnail images of the pages in a document are displayed along the left side of the Microsoft Word document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areThumbnailsDisplayed?: boolean;
            /**
             * Specifies the caption text for the window that is displayed in the title bar of the document or application window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            caption?: string;
            /**
             * Specifies the horizontal scroll position as a percentage of the document width.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalPercentScrolled?: number;
            /**
             * Specifies the default start-up mode for the Japanese Input Method Editor (IME).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            imeMode?: Word.ImeMode | "NoControl" | "On" | "Off" | "Hiragana" | "Katakana" | "KatakanaHalf" | "AlphaFull" | "Alpha" | "HangulFull" | "Hangul";
            /**
             * Specifies whether the document map is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isDocumentMapVisible?: boolean;
            /**
             * Specifies whether the email message header is visible in the document window. The default value is `False`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEnvelopeVisible?: boolean;
            /**
             * Specifies whether a horizontal scroll bar is displayed for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isHorizontalScrollBarDisplayed?: boolean;
            /**
             * Specifies whether the vertical scroll bar appears on the left side of the document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLeftScrollBarDisplayed?: boolean;
            /**
             * Specifies whether the vertical ruler appears on the right side of the document window in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isRightRulerDisplayed?: boolean;
            /**
             * Specifies whether the window is split into multiple panes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isSplit?: boolean;
            /**
             * Specifies whether a vertical ruler is displayed for the window or pane.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVerticalRulerDisplayed?: boolean;
            /**
             * Specifies whether a vertical scroll bar is displayed for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVerticalScrollBarDisplayed?: boolean;
            /**
             * Specifies whether the window is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies how Microsoft Word displays source documents after a compare and merge process.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showSourceDocuments?: Word.ShowSourceDocuments | "None" | "Original" | "Revised" | "Both";
            /**
             * Specifies the vertical split percentage for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            splitVertical?: number;
            /**
             * Specifies the width of the style area in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            styleAreaWidth?: number;
            /**
             * Specifies the vertical scroll position as a percentage of the document length.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalPercentScrolled?: number;
            /**
             * Specifies the state of the document window or task window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            windowState?: Word.WindowState | "Normal" | "Maximize" | "Minimize";
        }
        /** An interface for updating data on the `WindowCollection` object, for use in `windowCollection.set({ ... })`. */
        export interface WindowCollectionUpdateData {
            items?: Word.Interfaces.WindowData[];
        }
        /** An interface for updating data on the `Paragraph` object, for use in `paragraph.set({ ... })`. */
        export interface ParagraphUpdateData {
            /**
             * Gets the text format of the paragraph. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontUpdateData;
            /**
             * Gets the ListItem for the paragraph. Throws an `ItemNotFound` error if the paragraph isn't part of a list.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            listItem?: Word.Interfaces.ListItemUpdateData;
            /**
             * Gets the ListItem for the paragraph. If the paragraph isn't part of a list, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            listItemOrNullObject?: Word.Interfaces.ListItemUpdateData;
            /**
             * Returns a `ShadingUniversal` object that refers to the shading formatting for the paragraph.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalUpdateData;
            /**
             * Specifies the alignment for a paragraph. The value can be 'left', 'centered', 'right', or 'justified'.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            alignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Specifies the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            firstLineIndent?: number;
            /**
             * Specifies the left indent value, in points, for the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            leftIndent?: number;
            /**
             * Specifies the line spacing, in points, for the specified paragraph. In the Word UI, this value is divided by 12.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lineSpacing?: number;
            /**
             * Specifies the amount of spacing, in grid lines, after the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lineUnitAfter?: number;
            /**
             * Specifies the amount of spacing, in grid lines, before the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lineUnitBefore?: number;
            /**
             * Specifies the outline level for the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            outlineLevel?: number;
            /**
             * Specifies the right indent value, in points, for the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            rightIndent?: number;
            /**
             * Specifies the spacing, in points, after the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            spaceAfter?: number;
            /**
             * Specifies the spacing, in points, before the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            spaceBefore?: number;
            /**
             * Specifies the style name for the paragraph. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: string;
            /**
             * Specifies the built-in style name for the paragraph. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
        }
        /** An interface for updating data on the `ParagraphCollection` object, for use in `paragraphCollection.set({ ... })`. */
        export interface ParagraphCollectionUpdateData {
            items?: Word.Interfaces.ParagraphData[];
        }
        /** An interface for updating data on the `ParagraphFormat` object, for use in `paragraphFormat.set({ ... })`. */
        export interface ParagraphFormatUpdateData {
            /**
             * Specifies the alignment for the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            alignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Specifies the value (in points) for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            firstLineIndent?: number;
            /**
             * Specifies whether all lines in the specified paragraphs remain on the same page when Microsoft Word repaginates the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            keepTogether?: boolean;
            /**
             * Specifies whether the specified paragraph remains on the same page as the paragraph that follows it when Microsoft Word repaginates the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            keepWithNext?: boolean;
            /**
             * Specifies the left indent.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            leftIndent?: number;
            /**
             * Specifies the line spacing (in points) for the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            lineSpacing?: number;
            /**
             * Specifies the amount of spacing (in gridlines) after the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            lineUnitAfter?: number;
            /**
             * Specifies the amount of spacing (in gridlines) before the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            lineUnitBefore?: number;
            /**
             * Specifies whether left and right indents are the same width.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            mirrorIndents?: boolean;
            /**
             * Specifies the outline level for the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            outlineLevel?: Word.OutlineLevel | "OutlineLevel1" | "OutlineLevel2" | "OutlineLevel3" | "OutlineLevel4" | "OutlineLevel5" | "OutlineLevel6" | "OutlineLevel7" | "OutlineLevel8" | "OutlineLevel9" | "OutlineLevelBodyText";
            /**
             * Specifies the right indent (in points) for the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            rightIndent?: number;
            /**
             * Specifies the amount of spacing (in points) after the specified paragraph or text column.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            spaceAfter?: number;
            /**
             * Specifies the spacing (in points) before the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            spaceBefore?: number;
            /**
             * Specifies whether the first and last lines in the specified paragraph remain on the same page as the rest of the paragraph when Microsoft Word repaginates the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            widowControl?: boolean;
        }
        /** An interface for updating data on the `Range` object, for use in `range.set({ ... })`. */
        export interface RangeUpdateData {
            /**
             * Gets the text format of the range. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontUpdateData;
            /**
             * Returns a `ListFormat` object that represents all the list formatting characteristics of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listFormat?: Word.Interfaces.ListFormatUpdateData;
            /**
             * Returns a `ShadingUniversal` object that refers to the shading formatting for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalUpdateData;
            /**
             * Specifies a `CharacterCase` value that represents the case of the text in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            case?: Word.CharacterCase | "Next" | "Lower" | "Upper" | "TitleWord" | "TitleSentence" | "Toggle" | "HalfWidth" | "FullWidth" | "Katakana" | "Hiragana";
            /**
             * Specifies the character width of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            characterWidth?: Word.CharacterWidth | "Half" | "Full";
            /**
             * Specifies if the range contains combined characters.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            combineCharacters?: boolean;
            /**
             * Specifies the ending character position of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            end?: number;
            /**
             * Specifies the width (in the current measurement units) in which Microsoft Word fits the text in the current selection or range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fitTextWidth?: number;
            /**
             * Specifies if a grammar check has been run on the range or document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            grammarChecked?: boolean;
            /**
             * Specifies the proofing status (spelling and grammar checking) of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasNoProofing?: boolean;
            /**
             * Specifies the formatting for horizontal text set within vertical text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalInVertical?: Word.HorizontalInVerticalType | "None" | "FitInLine" | "ResizeLine";
            /**
             * Gets the first hyperlink in the range, or sets a hyperlink on the range. All hyperlinks in the range are deleted when you set a new hyperlink on the range. Use a '#' to separate the address part from the optional location part.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            hyperlink?: string;
            /**
             * Specifies the ID for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: string;
            /**
             * Specifies whether the range of Japanese language text is hiragana or katakana.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            kana?: Word.Kana | "Katakana" | "Hiragana";
            /**
             * Specifies whether Microsoft Word has detected the language of the text in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageDetected?: boolean;
            /**
             * Specifies a `LanguageId` value that represents the language for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies an East Asian language for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies a language for the range that isn't classified as an East Asian language.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdOther?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies if all nonprinting characters (such as hidden text, tab marks, space marks, and paragraph marks) are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showAll?: boolean;
            /**
             * Specifies if spelling has been checked throughout the range or document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            spellingChecked?: boolean;
            /**
             * Specifies the starting character position of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            start?: number;
            /**
             * Specifies the style name for the range. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: string;
            /**
             * Specifies the built-in style name for the range. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
            /**
             * Specifies whether Microsoft Word sets two lines of text in one and specifies the characters that enclose the text, if any.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            twoLinesInOne?: Word.TwoLinesInOneType | "None" | "NoBrackets" | "Parentheses" | "SquareBrackets" | "AngleBrackets" | "CurlyBrackets";
        }
        /** An interface for updating data on the `RangeCollection` object, for use in `rangeCollection.set({ ... })`. */
        export interface RangeCollectionUpdateData {
            items?: Word.Interfaces.RangeData[];
        }
        /** An interface for updating data on the `SearchOptions` object, for use in `searchOptions.set({ ... })`. */
        export interface SearchOptionsUpdateData {
            /**
             * Specifies a value that indicates whether to ignore all punctuation characters between words. Corresponds to the Ignore punctuation check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            ignorePunct?: boolean;
            /**
             * Specifies a value that indicates whether to ignore all whitespace between words. Corresponds to the Ignore whitespace characters check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            ignoreSpace?: boolean;
            /**
             * Specifies a value that indicates whether to perform a case sensitive search. Corresponds to the Match case check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchCase?: boolean;
            /**
             * Specifies a value that indicates whether to match words that begin with the search string. Corresponds to the Match prefix check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchPrefix?: boolean;
            /**
             * Specifies a value that indicates whether to match words that end with the search string. Corresponds to the Match suffix check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchSuffix?: boolean;
            /**
             * Specifies a value that indicates whether to find operation only entire words, not text that is part of a larger word. Corresponds to the Find whole words only check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchWholeWord?: boolean;
            /**
             * Specifies a value that indicates whether the search will be performed using special search operators. Corresponds to the Use wildcards check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchWildcards?: boolean;
        }
        /** An interface for updating data on the `Section` object, for use in `section.set({ ... })`. */
        export interface SectionUpdateData {
            /**
             * Gets the body object of the section. This doesn't include the header/footer and other section metadata.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            body?: Word.Interfaces.BodyUpdateData;
            /**
             * Returns a `PageSetup` object that's associated with the section.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageSetup?: Word.Interfaces.PageSetupUpdateData;
            /**
             * Specifies if the section is protected for forms.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            protectedForForms?: boolean;
        }
        /** An interface for updating data on the `SectionCollection` object, for use in `sectionCollection.set({ ... })`. */
        export interface SectionCollectionUpdateData {
            items?: Word.Interfaces.SectionData[];
        }
        /** An interface for updating data on the `Setting` object, for use in `setting.set({ ... })`. */
        export interface SettingUpdateData {
            /**
             * Specifies the value of the setting.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            value?: any;
        }
        /** An interface for updating data on the `SettingCollection` object, for use in `settingCollection.set({ ... })`. */
        export interface SettingCollectionUpdateData {
            items?: Word.Interfaces.SettingData[];
        }
        /** An interface for updating data on the `StyleCollection` object, for use in `styleCollection.set({ ... })`. */
        export interface StyleCollectionUpdateData {
            items?: Word.Interfaces.StyleData[];
        }
        /** An interface for updating data on the `Style` object, for use in `style.set({ ... })`. */
        export interface StyleUpdateData {
            /**
             * Specifies a BorderCollection object that represents all the borders for the specified style.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            borders?: Word.Interfaces.BorderCollectionUpdateData;
            /**
             * Gets a font object that represents the character formatting of the specified style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            font?: Word.Interfaces.FontUpdateData;
            /**
             * Returns a `Frame` object that represents the frame formatting for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            frame?: Word.Interfaces.FrameUpdateData;
            /**
             * Specifies a link between a paragraph and a character style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            linkStyle?: Word.Interfaces.StyleUpdateData;
            /**
             * Gets a ListTemplate object that represents the list formatting for the specified Style object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            listTemplate?: Word.Interfaces.ListTemplateUpdateData;
            /**
             * Gets a ParagraphFormat object that represents the paragraph settings for the specified style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            paragraphFormat?: Word.Interfaces.ParagraphFormatUpdateData;
            /**
             * Gets a Shading object that represents the shading for the specified style. Not applicable to List style.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            shading?: Word.Interfaces.ShadingUpdateData;
            /**
             * Gets a TableStyle object representing Style properties that can be applied to a table.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            tableStyle?: Word.Interfaces.TableStyleUpdateData;
            /**
             * Specifies whether the style is automatically redefined based on the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            automaticallyUpdate?: boolean;
            /**
             * Specifies the name of an existing style to use as the base formatting of another style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             *
             * Note: The ability to set `baseStyle` was introduced in WordApi 1.6.
             */
            baseStyle?: string;
            /**
             * Specifies whether the spelling and grammar checker ignores text formatted with this style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasProofing?: boolean;
            /**
             * Specifies a `LanguageId` value that represents the language for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies an East Asian language for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies whether the style cannot be changed or edited.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            locked?: boolean;
            /**
             * Specifies the name of the style to be applied automatically to a new paragraph that is inserted after a paragraph formatted with the specified style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             *
             * Note: The ability to set `nextParagraphStyle` was introduced in WordApi 1.6.
             */
            nextParagraphStyle?: string;
            /**
             * Specifies whether to remove spacing between paragraphs that are formatted using the same style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            noSpaceBetweenParagraphsOfSameStyle?: boolean;
            /**
             * Specifies the priority.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            priority?: number;
            /**
             * Specifies whether the style corresponds to an available quick style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            quickStyle?: boolean;
            /**
             * Specifies whether the specified style is made visible as a recommended style in the Styles and in the Styles task pane in Microsoft Word after it's used in the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            unhideWhenUsed?: boolean;
            /**
             * Specifies whether the specified style is visible as a recommended style in the Styles gallery and in the Styles task pane.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            visibility?: boolean;
        }
        /** An interface for updating data on the `Shading` object, for use in `shading.set({ ... })`. */
        export interface ShadingUpdateData {
            /**
             * Specifies the color for the background of the object. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            backgroundPatternColor?: string;
            /**
             * Specifies the color for the foreground of the object. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            foregroundPatternColor?: string;
            /**
             * Specifies the shading texture of the object. To learn more about how to apply backgrounds like textures, see {@link https://support.microsoft.com/office/db481e61-7af6-4063-bbcd-b276054a5515 | Add, change, or delete the background color in Word}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            texture?: Word.ShadingTextureType | "DarkDiagonalDown" | "DarkDiagonalUp" | "DarkGrid" | "DarkHorizontal" | "DarkTrellis" | "DarkVertical" | "LightDiagonalDown" | "LightDiagonalUp" | "LightGrid" | "LightHorizontal" | "LightTrellis" | "LightVertical" | "None" | "Percent10" | "Percent12Pt5" | "Percent15" | "Percent20" | "Percent25" | "Percent30" | "Percent35" | "Percent37Pt5" | "Percent40" | "Percent45" | "Percent5" | "Percent50" | "Percent55" | "Percent60" | "Percent62Pt5" | "Percent65" | "Percent70" | "Percent75" | "Percent80" | "Percent85" | "Percent87Pt5" | "Percent90" | "Percent95" | "Solid";
        }
        /** An interface for updating data on the `ShadingUniversal` object, for use in `shadingUniversal.set({ ... })`. */
        export interface ShadingUniversalUpdateData {
            /**
             * Specifies the color that's applied to the background of the `ShadingUniversal` object. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            backgroundPatternColor?: string;
            /**
             * Specifies the color that's applied to the background of the `ShadingUniversal` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            backgroundPatternColorIndex?: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
            /**
             * Specifies the color that's applied to the foreground of the `ShadingUniversal` object. This color is applied to the dots and lines in the shading pattern. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundPatternColor?: string;
            /**
             * Specifies the color that's applied to the foreground of the `ShadingUniversal` object. This color is applied to the dots and lines in the shading pattern.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundPatternColorIndex?: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
            /**
             * Specifies the shading texture of the object. To learn more about how to apply backgrounds like textures, see {@link https://support.microsoft.com/office/db481e61-7af6-4063-bbcd-b276054a5515 | Add, change, or delete the background color in Word}.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            texture?: Word.ShadingTextureType | "DarkDiagonalDown" | "DarkDiagonalUp" | "DarkGrid" | "DarkHorizontal" | "DarkTrellis" | "DarkVertical" | "LightDiagonalDown" | "LightDiagonalUp" | "LightGrid" | "LightHorizontal" | "LightTrellis" | "LightVertical" | "None" | "Percent10" | "Percent12Pt5" | "Percent15" | "Percent20" | "Percent25" | "Percent30" | "Percent35" | "Percent37Pt5" | "Percent40" | "Percent45" | "Percent5" | "Percent50" | "Percent55" | "Percent60" | "Percent62Pt5" | "Percent65" | "Percent70" | "Percent75" | "Percent80" | "Percent85" | "Percent87Pt5" | "Percent90" | "Percent95" | "Solid";
        }
        /** An interface for updating data on the `Table` object, for use in `table.set({ ... })`. */
        export interface TableUpdateData {
            /**
             * Gets the font. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            font?: Word.Interfaces.FontUpdateData;
            /**
             * Specifies the alignment of the table against the page column. The value can be 'Left', 'Centered', or 'Right'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            alignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Specifies the description of the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            description?: string;
            /**
             * Specifies the number of header rows.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            headerRowCount?: number;
            /**
             * Specifies the horizontal alignment of every cell in the table. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            horizontalAlignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Specifies the shading color. Color is specified in "#RRGGBB" format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            shadingColor?: string;
            /**
             * Specifies the style name for the table. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            style?: string;
            /**
             * Specifies whether the table has banded columns.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBandedColumns?: boolean;
            /**
             * Specifies whether the table has banded rows.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBandedRows?: boolean;
            /**
             * Specifies the built-in style name for the table. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
            /**
             * Specifies whether the table has a first column with a special style.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleFirstColumn?: boolean;
            /**
             * Specifies whether the table has a last column with a special style.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleLastColumn?: boolean;
            /**
             * Specifies whether the table has a total (last) row with a special style.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleTotalRow?: boolean;
            /**
             * Specifies the title of the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: string;
            /**
             * Specifies the text values in the table, as a 2D JavaScript array.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            values?: string[][];
            /**
             * Specifies the vertical alignment of every cell in the table. The value can be 'Top', 'Center', or 'Bottom'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            verticalAlignment?: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom";
            /**
             * Specifies the width of the table in points.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            width?: number;
        }
        /** An interface for updating data on the `TableStyle` object, for use in `tableStyle.set({ ... })`. */
        export interface TableStyleUpdateData {
            /**
             * Specifies the table's alignment against the page margin.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            alignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Specifies whether lines in tables formatted with a specified style break across pages.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            allowBreakAcrossPage?: boolean;
            /**
             * Specifies the amount of space to add between the contents and the bottom borders of the cells.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            bottomCellMargin?: number;
            /**
             * Specifies the spacing (in points) between the cells in a table style.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            cellSpacing?: number;
            /**
             * Specifies the number of columns in the banding when a style specifies odd- or even-column banding.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            columnStripe?: number;
            /**
             * Specifies whether Microsoft Word allows to break the specified table across pages.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isBreakAcrossPagesAllowed?: boolean;
            /**
             * Specifies the amount of space to add between the contents and the left borders of the cells.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            leftCellMargin?: number;
            /**
             * Specifies the left indent value (in points) for the rows in the table style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            leftIndent?: number;
            /**
             * Specifies the amount of space to add between the contents and the right borders of the cells.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            rightCellMargin?: number;
            /**
             * Specifies the number of rows to include in the banding when the style specifies odd- or even-row banding.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rowStripe?: number;
            /**
             * Specifies the direction in which Microsoft Word orders cells in the table style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tableDirection?: Word.TableDirection | "RightToLeft" | "LeftToRight";
            /**
             * Specifies the amount of space to add between the contents and the top borders of the cells.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            topCellMargin?: number;
        }
        /** An interface for updating data on the `TabStopCollection` object, for use in `tabStopCollection.set({ ... })`. */
        export interface TabStopCollectionUpdateData {
            items?: Word.Interfaces.TabStopData[];
        }
        /** An interface for updating data on the `TableCollection` object, for use in `tableCollection.set({ ... })`. */
        export interface TableCollectionUpdateData {
            items?: Word.Interfaces.TableData[];
        }
        /** An interface for updating data on the `TableColumn` object, for use in `tableColumn.set({ ... })`. */
        export interface TableColumnUpdateData {
            /**
             * Returns a `ShadingUniversal` object that refers to the shading formatting for the column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalUpdateData;
            /**
             * Specifies the preferred width (in points or as a percentage of the window width) for the column.
                        The unit of measurement can be specified by the `preferredWidthType` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            preferredWidth?: number;
            /**
             * Specifies the preferred unit of measurement to use for the width of the table column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            preferredWidthType?: Word.PreferredWidthType | "Auto" | "Percent" | "Points";
            /**
             * Specifies the width of the column, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: number;
        }
        /** An interface for updating data on the `TableColumnCollection` object, for use in `tableColumnCollection.set({ ... })`. */
        export interface TableColumnCollectionUpdateData {
            items?: Word.Interfaces.TableColumnData[];
        }
        /** An interface for updating data on the `TableOfAuthorities` object, for use in `tableOfAuthorities.set({ ... })`. */
        export interface TableOfAuthoritiesUpdateData {
            /**
             * Specifies the name of the bookmark from which to collect table of authorities entries.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bookmark?: string;
            /**
             * Specifies the category of entries to be included in the table of authorities.
                        Values 0 through 16 correspond to the items listed in the Category box of the Table of Authorities dialog. To learn how to access this through the Word UI, see {@link https://support.microsoft.com/office/ddd126ae-52bc-4299-9558-06dd0e4fe8c0 | Create a table of authorities}.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            category?: number;
            /**
             * Specifies a separator of up to five characters. This appears between the table of authorities entry and its page number.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            entrySeparator?: string;
            /**
             * Specifies whether the category name for a group of entries appears in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isCategoryHeaderIncluded?: boolean;
            /**
             * Specifies whether the entries in the table of authorities are displayed with their formatting in the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEntryFormattingKept?: boolean;
            /**
             * Specifies whether references to the same authority that are repeated on five or more pages are replaced with "Passim".
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isPassimUsed?: boolean;
            /**
             * Specifies a separator of up to five characters. This appears between individual page references in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageNumberSeparator?: string;
            /**
             * Specifies a separator of up to five characters. This appears between ranges of pages in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageRangeSeparator?: string;
            /**
             * Specifies the {@link https://support.microsoft.com/office/062a387b-dfc9-4ef8-8235-29ee113d59be | Sequence (SEQ) field} identifier for the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sequenceName?: string;
            /**
             * Specifies a separator of up to five characters. This appears between the sequence number and the page number in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sequenceSeparator?: string;
            /**
             * Specifies the leader character that appears between entries and their associated page numbers in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
        }
        /** An interface for updating data on the `TableOfAuthoritiesCollection` object, for use in `tableOfAuthoritiesCollection.set({ ... })`. */
        export interface TableOfAuthoritiesCollectionUpdateData {
            items?: Word.Interfaces.TableOfAuthoritiesData[];
        }
        /** An interface for updating data on the `TableOfAuthoritiesCategoryCollection` object, for use in `tableOfAuthoritiesCategoryCollection.set({ ... })`. */
        export interface TableOfAuthoritiesCategoryCollectionUpdateData {
            items?: Word.Interfaces.TableOfAuthoritiesCategoryData[];
        }
        /** An interface for updating data on the `TableOfContents` object, for use in `tableOfContents.set({ ... })`. */
        export interface TableOfContentsUpdateData {
            /**
             * Specifies whether built-in heading styles are used for the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areBuiltInHeadingStylesUsed?: boolean;
            /**
             * Specifies whether {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) fields} are included in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFieldsUsed?: boolean;
            /**
             * Specifies whether entries in the table of contents should be formatted as hyperlinks when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areHyperlinksUsedOnWeb?: boolean;
            /**
             * Specifies whether the page numbers in the table of contents should be hidden when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersHiddenOnWeb?: boolean;
            /**
             * Specifies whether page numbers are included in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersIncluded?: boolean;
            /**
             * Specifies whether page numbers are aligned with the right margin in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersRightAligned?: boolean;
            /**
             * Specifies the ending heading level for the table of contents. Must be a value from 1 to 9 and greater than `upperHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lowerHeadingLevel?: number;
            /**
             * Specifies the character between entries and their page numbers in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
            /**
             * Specifies a one-letter identifier from {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | TC fields} that's used for the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tableId?: string;
            /**
             * Specifies the starting heading level for the table of contents. Must be a value from 1 to 9 and smaller than `lowerHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            upperHeadingLevel?: number;
        }
        /** An interface for updating data on the `TableOfContentsCollection` object, for use in `tableOfContentsCollection.set({ ... })`. */
        export interface TableOfContentsCollectionUpdateData {
            items?: Word.Interfaces.TableOfContentsData[];
        }
        /** An interface for updating data on the `TableOfFigures` object, for use in `tableOfFigures.set({ ... })`. */
        export interface TableOfFiguresUpdateData {
            /**
             * Specifies whether built-in heading styles are used for the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areBuiltInHeadingStylesUsed?: boolean;
            /**
             * Specifies whether {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) fields} are included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFieldsUsed?: boolean;
            /**
             * Specifies whether entries in the table of figures should be formatted as hyperlinks when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areHyperlinksUsedOnWeb?: boolean;
            /**
             * Specifies whether the page numbers in the table of figures should be hidden when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersHiddenOnWeb?: boolean;
            /**
             * Specifies whether page numbers are included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersIncluded?: boolean;
            /**
             * Specifies whether page numbers are aligned with the right margin in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersRightAligned?: boolean;
            /**
             * Specifies the label that identifies the items to be included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            captionLabel?: string;
            /**
             * Specifies whether the caption label and caption number are included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLabelIncluded?: boolean;
            /**
             * Specifies the ending heading level for the table of figures. Must be a value from 1 to 9 and greater than `upperHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lowerHeadingLevel?: number;
            /**
             * Specifies the character between entries and their page numbers in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
            /**
             * Specifies a one-letter identifier from {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | TC fields} that's used for the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tableId?: string;
            /**
             * Specifies the starting heading level for the table of figures. Must be a value from 1 to 9 and smaller than `lowerHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            upperHeadingLevel?: number;
        }
        /** An interface for updating data on the `TableOfFiguresCollection` object, for use in `tableOfFiguresCollection.set({ ... })`. */
        export interface TableOfFiguresCollectionUpdateData {
            items?: Word.Interfaces.TableOfFiguresData[];
        }
        /** An interface for updating data on the `TableRow` object, for use in `tableRow.set({ ... })`. */
        export interface TableRowUpdateData {
            /**
             * Gets the font. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            font?: Word.Interfaces.FontUpdateData;
            /**
             * Specifies the horizontal alignment of every cell in the row. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            horizontalAlignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Specifies the preferred height of the row in points.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            preferredHeight?: number;
            /**
             * Specifies the shading color. Color is specified in "#RRGGBB" format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            shadingColor?: string;
            /**
             * Specifies the text values in the row, as a 2D JavaScript array.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            values?: string[][];
            /**
             * Specifies the vertical alignment of the cells in the row. The value can be 'Top', 'Center', or 'Bottom'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            verticalAlignment?: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom";
        }
        /** An interface for updating data on the `TableRowCollection` object, for use in `tableRowCollection.set({ ... })`. */
        export interface TableRowCollectionUpdateData {
            items?: Word.Interfaces.TableRowData[];
        }
        /** An interface for updating data on the `TableCell` object, for use in `tableCell.set({ ... })`. */
        export interface TableCellUpdateData {
            /**
             * Gets the body object of the cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            body?: Word.Interfaces.BodyUpdateData;
            /**
             * Specifies the width of the cell's column in points. This is applicable to uniform tables.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            columnWidth?: number;
            /**
             * Specifies the horizontal alignment of the cell. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            horizontalAlignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Specifies the shading color of the cell. Color is specified in "#RRGGBB" format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            shadingColor?: string;
            /**
             * Specifies the text of the cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            value?: string;
            /**
             * Specifies the vertical alignment of the cell. The value can be 'Top', 'Center', or 'Bottom'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            verticalAlignment?: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom";
        }
        /** An interface for updating data on the `TableCellCollection` object, for use in `tableCellCollection.set({ ... })`. */
        export interface TableCellCollectionUpdateData {
            items?: Word.Interfaces.TableCellData[];
        }
        /** An interface for updating data on the `TableBorder` object, for use in `tableBorder.set({ ... })`. */
        export interface TableBorderUpdateData {
            /**
             * Specifies the table border color.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            color?: string;
            /**
             * Specifies the type of the table border.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            type?: Word.BorderType | "Mixed" | "None" | "Single" | "Double" | "Dotted" | "Dashed" | "DotDashed" | "Dot2Dashed" | "Triple" | "ThinThickSmall" | "ThickThinSmall" | "ThinThickThinSmall" | "ThinThickMed" | "ThickThinMed" | "ThinThickThinMed" | "ThinThickLarge" | "ThickThinLarge" | "ThinThickThinLarge" | "Wave" | "DoubleWave" | "DashedSmall" | "DashDotStroked" | "ThreeDEmboss" | "ThreeDEngrave";
            /**
             * Specifies the width, in points, of the table border. Not applicable to table border types that have fixed widths.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            width?: number;
        }
        /** An interface for updating data on the `Template` object, for use in `template.set({ ... })`. */
        export interface TemplateUpdateData {
            /**
             * Specifies the East Asian language to use when breaking lines of text in the document or template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            farEastLineBreakLanguage?: Word.FarEastLineBreakLanguageId | "TraditionalChinese" | "Japanese" | "Korean" | "SimplifiedChinese";
            /**
             * Specifies the line break control level for the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            farEastLineBreakLevel?: Word.FarEastLineBreakLevel | "Normal" | "Strict" | "Custom";
            /**
             * Specifies whether the spelling and grammar checker ignores documents based on this template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasNoProofing?: boolean;
            /**
             * Specifies the character spacing adjustment for the template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            justificationMode?: Word.JustificationMode | "Expand" | "Compress" | "CompressKana";
            /**
             * Specifies if Microsoft Word kerns half-width Latin characters and punctuation marks in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            kerningByAlgorithm?: boolean;
            /**
             * Specifies a `LanguageId` value that represents the language in the template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies an East Asian language for the language in the template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies the kinsoku characters after which Microsoft Word will not break a line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            noLineBreakAfter?: string;
            /**
             * Specifies the kinsoku characters before which Microsoft Word will not break a line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            noLineBreakBefore?: string;
            /**
             * Specifies `true` if the template has not changed since it was last saved, `false` if Microsoft Word displays a prompt to save changes when the document is closed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            saved?: boolean;
        }
        /** An interface for updating data on the `TemplateCollection` object, for use in `templateCollection.set({ ... })`. */
        export interface TemplateCollectionUpdateData {
            items?: Word.Interfaces.TemplateData[];
        }
        /** An interface for updating data on the `TrackedChangeCollection` object, for use in `trackedChangeCollection.set({ ... })`. */
        export interface TrackedChangeCollectionUpdateData {
            items?: Word.Interfaces.TrackedChangeData[];
        }
        /** An interface for updating data on the `View` object, for use in `view.set({ ... })`. */
        export interface ViewUpdateData {
            /**
             * Specifies whether all nonprinting characters are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areAllNonprintingCharactersDisplayed?: boolean;
            /**
             * Gets whether background colors and images are shown when the document is displayed in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areBackgroundsDisplayed?: boolean;
            /**
             * Specifies whether Microsoft Word displays the comments in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areCommentsDisplayed?: boolean;
            /**
             * Specifies whether Microsoft Word displays connecting lines from the text to the revision and comment balloons.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areConnectingLinesToRevisionsBalloonDisplayed?: boolean;
            /**
             * Specifies whether shading is applied to the ranges in the document that users have permission to modify.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areEditableRangesShaded?: boolean;
            /**
             * Specifies whether field codes are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFieldCodesDisplayed?: boolean;
            /**
             * Specifies whether Microsoft Word displays formatting changes made to the document with Track Changes enabled.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFormatChangesDisplayed?: boolean;
            /**
             * Specifies whether handwritten ink annotations are shown or hidden.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areInkAnnotationsDisplayed?: boolean;
            /**
             * Specifies whether Microsoft Word displays insertions and deletions made to the document with Track Changes enabled.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areInsertionsAndDeletionsDisplayed?: boolean;
            /**
             * Gets whether other authors' presence should be visible in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areOtherAuthorsVisible?: boolean;
            /**
             * Specifies whether Microsoft Word displays revisions and comments made to the document with Track Changes enabled.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areRevisionsAndCommentsDisplayed?: boolean;
            /**
             * Specifies whether table gridlines are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areTableGridlinesDisplayed?: boolean;
            /**
             * Specifies the column width in Reading mode.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            columnWidth?: Word.ColumnWidth | "Narrow" | "Default" | "Wide";
            /**
             * Specifies whether all the text in a window is displayed in the same sans-serif font with minimal formatting to speed up display.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isDraft?: boolean;
            /**
             * Specifies whether only the first line of body text is shown in outline view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFirstLineOnlyDisplayed?: boolean;
            /**
             * Specifies whether character formatting is visible in outline view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFormatDisplayed?: boolean;
            /**
             * Specifies whether the window is in full-screen view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFullScreen?: boolean;
            /**
             * Specifies whether the document is in conflict mode view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isInConflictMode?: boolean;
            /**
             * Specifies whether Microsoft Word is in Panning mode.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isInPanning?: boolean;
            /**
             * Specifies whether the document is being viewed in reading layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isInReadingLayout?: boolean;
            /**
             * Specifies whether mail merge data is displayed instead of mail merge fields.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isMailMergeDataView?: boolean;
            /**
             * Specifies whether the text in the document is visible when the header and footer areas are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isMainTextLayerVisible?: boolean;
            /**
             * Specifies whether the pointer is displayed as a magnifying glass in print preview.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isPointerShownAsMagnifier?: boolean;
            /**
             * Specifies whether pages displayed in reading layout view are displayed using the same layout as printed pages.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isReadingLayoutActualView?: boolean;
            /**
             * Specifies whether XML tags are visible in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isXmlMarkupVisible?: boolean;
            /**
             * Specifies the display mode for tracked changes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            markupMode?: Word.RevisionsMode | "Balloon" | "Inline" | "Mixed";
            /**
             * Specifies the page color in Reading mode.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageColor?: Word.PageColor | "None" | "Sepia" | "Inverse";
            /**
             * Specifies the page movement type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageMovementType?: Word.PageMovementType | "Vertical" | "SideToSide";
            /**
             * Specifies whether margins are visible or hidden when the document is viewed in Full Screen Reading view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            readingLayoutTruncateMargins?: Word.ReadingLayoutMargin | "Automatic" | "Suppress" | "Full";
            /**
             * Specifies the width of the revision balloons.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            revisionsBalloonWidth?: number;
            /**
             * Specifies how Microsoft Word measures the width of revision balloons.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            revisionsBalloonWidthType?: Word.RevisionsBalloonWidthType | "Percent" | "Points";
            /**
             * Specifies the document element displayed in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            seekView?: Word.SeekView | "MainDocument" | "PrimaryHeader" | "FirstPageHeader" | "EvenPagesHeader" | "PrimaryFooter" | "FirstPageFooter" | "EvenPagesFooter" | "Footnotes" | "Endnotes" | "CurrentPageHeader" | "CurrentPageFooter";
            /**
             * Specifies the active window pane.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            splitSpecial?: Word.SpecialPane | "None" | "PrimaryHeader" | "FirstPageHeader" | "EvenPagesHeader" | "PrimaryFooter" | "FirstPageFooter" | "EvenPagesFooter" | "Footnotes" | "Endnotes" | "FootnoteContinuationNotice" | "FootnoteContinuationSeparator" | "FootnoteSeparator" | "EndnoteContinuationNotice" | "EndnoteContinuationSeparator" | "EndnoteSeparator" | "Comments" | "CurrentPageHeader" | "CurrentPageFooter" | "Revisions" | "RevisionsHoriz" | "RevisionsVert";
            /**
             * Specifies the view type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.ViewType | "Normal" | "Outline" | "Print" | "PrintPreview" | "Master" | "Web" | "Reading" | "Conflict";
        }
        /** An interface for updating data on the `Shape` object, for use in `shape.set({ ... })`. */
        export interface ShapeUpdateData {
            /**
             * Represents the body object of the shape. Only applies to text boxes and geometric shapes.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            body?: Word.Interfaces.BodyUpdateData;
            /**
             * Gets the canvas associated with the shape. An object with its `isNullObject` property set to `true` will be returned if the shape type isn't "Canvas". For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            canvas?: Word.Interfaces.CanvasUpdateData;
            /**
             * Returns the fill formatting of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            fill?: Word.Interfaces.ShapeFillUpdateData;
            /**
             * Gets the top-level parent canvas shape of this child shape. It will be null if it isn't a child shape of a canvas.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            parentCanvas?: Word.Interfaces.ShapeUpdateData;
            /**
             * Gets the top-level parent group shape of this child shape. It will be null if it isn't a child shape of a group.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            parentGroup?: Word.Interfaces.ShapeUpdateData;
            /**
             * Gets the shape group associated with the shape. An object with its `isNullObject` property set to `true` will be returned if the shape type isn't "GroupShape". For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shapeGroup?: Word.Interfaces.ShapeGroupUpdateData;
            /**
             * Gets the text frame object of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            textFrame?: Word.Interfaces.TextFrameUpdateData;
            /**
             * Returns the text wrap formatting of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            textWrap?: Word.Interfaces.ShapeTextWrapUpdateData;
            /**
             * Specifies whether a given shape can overlap other shapes.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            allowOverlap?: boolean;
            /**
             * Specifies a string that represents the alternative text associated with the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            altTextDescription?: string;
            /**
             * The geometric shape type of the shape. It will be null if isn't a geometric shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            geometricShapeType?: Word.GeometricShapeType | "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus";
            /**
             * The height, in points, of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            height?: number;
            /**
             * The percentage of shape height to vertical relative size, see {@link Word.RelativeSize}. For an inline or child shape, it can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            heightRelative?: number;
            /**
             * The distance, in points, from the left side of the shape to the horizontal relative position, see {@link Word.RelativeHorizontalPosition}. For an inline shape, it will return 0 and can't be set. For a child shape in a canvas or group, it's relative to the top left corner.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            left?: number;
            /**
             * The relative left position as a percentage from the left side of the shape to the horizontal relative position, see {@link Word.RelativeHorizontalPosition}. For an inline or child shape, it will return 0 and can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            leftRelative?: number;
            /**
             * Specifies if the aspect ratio of this shape is locked.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            lockAspectRatio?: boolean;
            /**
             * The name of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            name?: string;
            /**
             * The relative horizontal position of the shape. For an inline shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeHorizontalPosition?: Word.RelativeHorizontalPosition | "Margin" | "Page" | "Column" | "Character" | "LeftMargin" | "RightMargin" | "InsideMargin" | "OutsideMargin";
            /**
             * The relative horizontal size of the shape. For an inline or child shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeHorizontalSize?: Word.RelativeSize | "Margin" | "Page" | "TopMargin" | "BottomMargin" | "InsideMargin" | "OutsideMargin";
            /**
             * The relative vertical position of the shape. For an inline shape, it can't be set. For details, see {@link Word.RelativeVerticalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeVerticalPosition?: Word.RelativeVerticalPosition | "Margin" | "Page" | "Paragraph" | "Line" | "TopMargin" | "BottomMargin" | "InsideMargin" | "OutsideMargin";
            /**
             * The relative vertical size of the shape. For an inline or child shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeVerticalSize?: Word.RelativeSize | "Margin" | "Page" | "TopMargin" | "BottomMargin" | "InsideMargin" | "OutsideMargin";
            /**
             * Specifies the rotation, in degrees, of the shape. Not applicable to Canvas shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            rotation?: number;
            /**
             * The distance, in points, from the top edge of the shape to the vertical relative position (see {@link Word.RelativeVerticalPosition}). For an inline shape, it will return 0 and can't be set. For a child shape in a canvas or group, it's relative to the top left corner.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            top?: number;
            /**
             * The relative top position as a percentage from the top edge of the shape to the vertical relative position, see {@link Word.RelativeVerticalPosition}. For an inline or child shape, it will return 0 and can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            topRelative?: number;
            /**
             * Specifies if the shape is visible. Not applicable to inline shapes.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            visible?: boolean;
            /**
             * The width, in points, of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            width?: number;
            /**
             * The percentage of shape width to horizontal relative size, see {@link Word.RelativeSize}. For an inline or child shape, it can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            widthRelative?: number;
        }
        /** An interface for updating data on the `ShapeGroup` object, for use in `shapeGroup.set({ ... })`. */
        export interface ShapeGroupUpdateData {
            /**
             * Gets the Shape object associated with the group.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shape?: Word.Interfaces.ShapeUpdateData;
        }
        /** An interface for updating data on the `Canvas` object, for use in `canvas.set({ ... })`. */
        export interface CanvasUpdateData {
            /**
             * Gets the Shape object associated with the canvas.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shape?: Word.Interfaces.ShapeUpdateData;
        }
        /** An interface for updating data on the `ShapeCollection` object, for use in `shapeCollection.set({ ... })`. */
        export interface ShapeCollectionUpdateData {
            items?: Word.Interfaces.ShapeData[];
        }
        /** An interface for updating data on the `ShapeFill` object, for use in `shapeFill.set({ ... })`. */
        export interface ShapeFillUpdateData {
            /**
             * Specifies the shape fill background color. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            backgroundColor?: string;
            /**
             * Specifies the shape fill foreground color. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            foregroundColor?: string;
            /**
             * Specifies the transparency percentage of the fill as a value from 0.0 (opaque) through 1.0 (clear). Returns `null` if the shape type does not support transparency or the shape fill has inconsistent transparency, such as with a gradient fill type.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            transparency?: number;
        }
        /** An interface for updating data on the `TextFrame` object, for use in `textFrame.set({ ... })`. */
        export interface TextFrameUpdateData {
            /**
             * The automatic sizing settings for the text frame. A text frame can be set to automatically fit the text to the text frame, to automatically fit the text frame to the text, or not perform any automatic sizing.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            autoSizeSetting?: Word.ShapeAutoSize | "None" | "TextToFitShape" | "ShapeToFitText" | "Mixed";
            /**
             * Represents the bottom margin, in points, of the text frame.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            bottomMargin?: number;
            /**
             * Represents the left margin, in points, of the text frame.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            leftMargin?: number;
            /**
             * Returns True if text in the text frame shouldn't rotate when the shape is rotated.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            noTextRotation?: boolean;
            /**
             * Represents the angle to which the text is oriented for the text frame. See `Word.ShapeTextOrientation` for details.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            orientation?: Word.ShapeTextOrientation | "None" | "Horizontal" | "EastAsianVertical" | "Vertical270" | "Vertical" | "EastAsianHorizontalRotated" | "Mixed";
            /**
             * Represents the right margin, in points, of the text frame.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            rightMargin?: number;
            /**
             * Represents the top margin, in points, of the text frame.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            topMargin?: number;
            /**
             * Represents the vertical alignment of the text frame. See `Word.ShapeTextVerticalAlignment` for details.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            verticalAlignment?: Word.ShapeTextVerticalAlignment | "Top" | "Middle" | "Bottom";
            /**
             * Determines whether lines break automatically to fit text inside the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            wordWrap?: boolean;
        }
        /** An interface for updating data on the `ShapeTextWrap` object, for use in `shapeTextWrap.set({ ... })`. */
        export interface ShapeTextWrapUpdateData {
            /**
             * Specifies the distance (in points) between the document text and the bottom edge of the text-free area surrounding the specified shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            bottomDistance?: number;
            /**
             * Specifies the distance (in points) between the document text and the left edge of the text-free area surrounding the specified shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            leftDistance?: number;
            /**
             * Specifies the distance (in points) between the document text and the right edge of the text-free area surrounding the specified shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            rightDistance?: number;
            /**
             * Specifies whether the document text should wrap on both sides of the specified shape, on either the left or right side only, or on the side of the shape that's farthest from the page margin.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            side?: Word.ShapeTextWrapSide | "None" | "Both" | "Left" | "Right" | "Largest";
            /**
             * Specifies the distance (in points) between the document text and the top edge of the text-free area surrounding the specified shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            topDistance?: number;
            /**
             * Specifies the text wrap type around the shape. See `Word.ShapeTextWrapType` for details.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            type?: Word.ShapeTextWrapType | "Inline" | "Square" | "Tight" | "Through" | "TopBottom" | "Behind" | "Front";
        }
        /** An interface for updating data on the `Reviewer` object, for use in `reviewer.set({ ... })`. */
        export interface ReviewerUpdateData {
            /**
             * Specifies if the `Reviewer` object is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
        }
        /** An interface for updating data on the `ReviewerCollection` object, for use in `reviewerCollection.set({ ... })`. */
        export interface ReviewerCollectionUpdateData {
            items?: Word.Interfaces.ReviewerData[];
        }
        /** An interface for updating data on the `RevisionsFilter` object, for use in `revisionsFilter.set({ ... })`. */
        export interface RevisionsFilterUpdateData {
            /**
             * Specifies a `RevisionsMarkup` value that represents the extent of reviewer markup displayed in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            markup?: Word.RevisionsMarkup | "None" | "Simple" | "All";
            /**
             * Specifies a `RevisionsView` value that represents globally whether Word displays the original version of the document or the final version, which might have revisions and formatting changes applied.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            view?: Word.RevisionsView | "Final" | "Original";
        }
        /** An interface for updating data on the `RepeatingSectionItem` object, for use in `repeatingSectionItem.set({ ... })`. */
        export interface RepeatingSectionItemUpdateData {
            /**
             * Returns the range of this repeating section item, excluding the start and end tags.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
        }
        /** An interface for updating data on the `Revision` object, for use in `revision.set({ ... })`. */
        export interface RevisionUpdateData {
            /**
             * Gets a `Range` object that represents the range of text that was moved from one place to another in the document with tracked changes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            movedRange?: Word.Interfaces.RangeUpdateData;
            /**
             * Gets a `Range` object that represents the portion of the document that's contained within a revision mark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
        }
        /** An interface for updating data on the `RevisionCollection` object, for use in `revisionCollection.set({ ... })`. */
        export interface RevisionCollectionUpdateData {
            items?: Word.Interfaces.RevisionData[];
        }
        /** An interface for updating data on the `DatePickerContentControl` object, for use in `datePickerContentControl.set({ ... })`. */
        export interface DatePickerContentControlUpdateData {
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockUpdateData;
            /**
             * Gets a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
            /**
             * Gets an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingUpdateData;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: string;
            /**
             * Specifies a `CalendarType` value that represents the calendar type for the date picker content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dateCalendarType?: Word.CalendarType | "Western" | "Arabic" | "Hebrew" | "Taiwan" | "Japan" | "Thai" | "Korean" | "SakaEra" | "TranslitEnglish" | "TranslitFrench" | "Umalqura";
            /**
             * Specifies the format in which dates are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dateDisplayFormat?: string;
            /**
             * Specifies a `LanguageId` that represents the language format for the date displayed in the date picker content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dateDisplayLocale?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies a `ContentControlDateStorageFormat` value that represents the format for storage and retrieval of dates when the date picker content control is bound to the XML data store of the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dateStorageFormat?: Word.ContentControlDateStorageFormat | "Text" | "Date" | "DateTime";
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: string;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: string;
        }
        /** An interface for updating data on the `PictureContentControl` object, for use in `pictureContentControl.set({ ... })`. */
        export interface PictureContentControlUpdateData {
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockUpdateData;
            /**
             * Returns a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
            /**
             * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingUpdateData;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: string;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: string;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: string;
        }
        /** An interface for updating data on the `GroupContentControl` object, for use in `groupContentControl.set({ ... })`. */
        export interface GroupContentControlUpdateData {
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockUpdateData;
            /**
             * Gets a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
            /**
             * Gets an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingUpdateData;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: string;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: string;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: string;
        }
        /** An interface for updating data on the `BuildingBlockGalleryContentControl` object, for use in `buildingBlockGalleryContentControl.set({ ... })`. */
        export interface BuildingBlockGalleryContentControlUpdateData {
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockUpdateData;
            /**
             * Returns a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
            /**
             * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingUpdateData;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
            /**
             * Specifies the category for the building block content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            buildingBlockCategory?: string;
            /**
             * Specifies a `BuildingBlockType` value that represents the type of building block for the building block content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            buildingBlockType?: Word.BuildingBlockType | "QuickParts" | "CoverPage" | "Equations" | "Footers" | "Headers" | "PageNumber" | "Tables" | "Watermarks" | "AutoText" | "TextBox" | "PageNumberTop" | "PageNumberBottom" | "PageNumberPage" | "TableOfContents" | "CustomQuickParts" | "CustomCoverPage" | "CustomEquations" | "CustomFooters" | "CustomHeaders" | "CustomPageNumber" | "CustomTables" | "CustomWatermarks" | "CustomAutoText" | "CustomTextBox" | "CustomPageNumberTop" | "CustomPageNumberBottom" | "CustomPageNumberPage" | "CustomTableOfContents" | "Custom1" | "Custom2" | "Custom3" | "Custom4" | "Custom5" | "Bibliography" | "CustomBibliography";
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: string;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: string;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: string;
        }
        /** An interface for updating data on the `RepeatingSectionContentControl` object, for use in `repeatingSectionContentControl.set({ ... })`. */
        export interface RepeatingSectionContentControlUpdateData {
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockUpdateData;
            /**
             * Gets a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
            /**
             * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlapping?: Word.Interfaces.XmlMappingUpdateData;
            /**
             * Specifies whether users can add or remove sections from this repeating section content control by using the user interface.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            allowInsertDeleteSection?: boolean;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: string;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Specifies the name of the repeating section items used in the context menu associated with this repeating section content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            repeatingSectionItemTitle?: string;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: string;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: string;
        }
        /** An interface for updating data on the `Frame` object, for use in `frame.set({ ... })`. */
        export interface FrameUpdateData {
            /**
             * Returns a `Range` object that represents the portion of the document that's contained within the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
            /**
             * Returns a `ShadingUniversal` object that refers to the shading formatting for the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalUpdateData;
            /**
             * Specifies the height (in points) of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            height?: number;
            /**
             * Specifies a `FrameSizeRule` value that represents the rule for determining the height of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            heightRule?: Word.FrameSizeRule | "Auto" | "AtLeast" | "Exact";
            /**
             * Specifies the horizontal distance between the frame and the surrounding text, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalDistanceFromText?: number;
            /**
             * Specifies the horizontal distance between the edge of the frame and the item specified by the `relativeHorizontalPosition` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalPosition?: number;
            /**
             * Specifies if the frame is locked.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockAnchor?: boolean;
            /**
             * Specifies the relative horizontal position of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            relativeHorizontalPosition?: Word.RelativeHorizontalPosition | "Margin" | "Page" | "Column" | "Character" | "LeftMargin" | "RightMargin" | "InsideMargin" | "OutsideMargin";
            /**
             * Specifies the relative vertical position of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            relativeVerticalPosition?: Word.RelativeVerticalPosition | "Margin" | "Page" | "Paragraph" | "Line" | "TopMargin" | "BottomMargin" | "InsideMargin" | "OutsideMargin";
            /**
             * Specifies if document text wraps around the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textWrap?: boolean;
            /**
             * Specifies the vertical distance (in points) between the frame and the surrounding text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalDistanceFromText?: number;
            /**
             * Specifies the vertical distance between the edge of the frame and the item specified by the `relativeVerticalPosition` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalPosition?: number;
            /**
             * Specifies the width (in points) of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: number;
            /**
             * Specifies the rule used to determine the width of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            widthRule?: Word.FrameSizeRule | "Auto" | "AtLeast" | "Exact";
        }
        /** An interface for updating data on the `FrameCollection` object, for use in `frameCollection.set({ ... })`. */
        export interface FrameCollectionUpdateData {
            items?: Word.Interfaces.FrameData[];
        }
        /** An interface for updating data on the `DocumentLibraryVersionCollection` object, for use in `documentLibraryVersionCollection.set({ ... })`. */
        export interface DocumentLibraryVersionCollectionUpdateData {
            items?: Word.Interfaces.DocumentLibraryVersionData[];
        }
        /** An interface for updating data on the `ListFormat` object, for use in `listFormat.set({ ... })`. */
        export interface ListFormatUpdateData {
            /**
             * Gets the list template associated with the `ListFormat` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listTemplate?: Word.Interfaces.ListTemplateUpdateData;
            /**
             * Specifies the list level number for the first paragraph for the `ListFormat` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listLevelNumber?: number;
        }
        /** An interface for updating data on the `FillFormat` object, for use in `fillFormat.set({ ... })`. */
        export interface FillFormatUpdateData {
            /**
             * Returns a `ColorFormat` object that represents the background color for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            backgroundColor?: Word.Interfaces.ColorFormatUpdateData;
            /**
             * Returns a `ColorFormat` object that represents the foreground color for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundColor?: Word.Interfaces.ColorFormatUpdateData;
            /**
             * Specifies the angle of the gradient fill. The valid range of values is from 0 to 359.9.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gradientAngle?: number;
            /**
             * Specifies if the object, or the formatting applied to it, is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies whether the fill rotates with the shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotateWithObject?: boolean;
            /**
             * Specifies the alignment (the origin of the coordinate grid) for the tiling of the texture fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureAlignment?: Word.TextureAlignment | "Mixed" | "TopLeft" | "Top" | "TopRight" | "Left" | "Center" | "Right" | "BottomLeft" | "Bottom" | "BottomRight";
            /**
             * Specifies the horizontal scaling factor for the texture fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureHorizontalScale?: number;
            /**
             * Specifies the horizontal offset of the texture from the origin in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureOffsetX?: number;
            /**
             * Specifies the vertical offset of the texture.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureOffsetY?: number;
            /**
             * Specifies whether the texture is tiled.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureTile?: boolean;
            /**
             * Specifies the vertical scaling factor for the texture fill as a value between 0.0 and 1.0.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureVerticalScale?: number;
            /**
             * Specifies the degree of transparency of the fill for a shape as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: number;
        }
        /** An interface for updating data on the `GlowFormat` object, for use in `glowFormat.set({ ... })`. */
        export interface GlowFormatUpdateData {
            /**
             * Returns a `ColorFormat` object that represents the color for a glow effect.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: Word.Interfaces.ColorFormatUpdateData;
            /**
             * Specifies the length of the radius for a glow effect.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            radius?: number;
            /**
             * Specifies the degree of transparency for the glow effect as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: number;
        }
        /** An interface for updating data on the `LineFormat` object, for use in `lineFormat.set({ ... })`. */
        export interface LineFormatUpdateData {
            /**
             * Gets a `ColorFormat` object that represents the background color for a patterned line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            backgroundColor?: Word.Interfaces.ColorFormatUpdateData;
            /**
             * Gets a `ColorFormat` object that represents the foreground color for the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundColor?: Word.Interfaces.ColorFormatUpdateData;
            /**
             * Specifies the length of the arrowhead at the beginning of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            beginArrowheadLength?: Word.ArrowheadLength | "Mixed" | "Short" | "Medium" | "Long";
            /**
             * Specifies the style of the arrowhead at the beginning of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            beginArrowheadStyle?: Word.ArrowheadStyle | "Mixed" | "None" | "Triangle" | "Open" | "Stealth" | "Diamond" | "Oval";
            /**
             * Specifies the width of the arrowhead at the beginning of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            beginArrowheadWidth?: Word.ArrowheadWidth | "Mixed" | "Narrow" | "Medium" | "Wide";
            /**
             * Specifies the dash style for the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dashStyle?: Word.LineDashStyle | "Mixed" | "Solid" | "SquareDot" | "RoundDot" | "Dash" | "DashDot" | "DashDotDot" | "LongDash" | "LongDashDot" | "LongDashDotDot" | "SysDash" | "SysDot" | "SysDashDot";
            /**
             * Specifies the length of the arrowhead at the end of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            endArrowheadLength?: Word.ArrowheadLength | "Mixed" | "Short" | "Medium" | "Long";
            /**
             * Specifies the style of the arrowhead at the end of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            endArrowheadStyle?: Word.ArrowheadStyle | "Mixed" | "None" | "Triangle" | "Open" | "Stealth" | "Diamond" | "Oval";
            /**
             * Specifies the width of the arrowhead at the end of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            endArrowheadWidth?: Word.ArrowheadWidth | "Mixed" | "Narrow" | "Medium" | "Wide";
            /**
             * Specifies if to draw lines inside a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            insetPen?: boolean;
            /**
             * Specifies if the object, or the formatting applied to it, is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies the pattern applied to the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pattern?: Word.PatternType | "Mixed" | "Percent5" | "Percent10" | "Percent20" | "Percent25" | "Percent30" | "Percent40" | "Percent50" | "Percent60" | "Percent70" | "Percent75" | "Percent80" | "Percent90" | "DarkHorizontal" | "DarkVertical" | "DarkDownwardDiagonal" | "DarkUpwardDiagonal" | "SmallCheckerBoard" | "Trellis" | "LightHorizontal" | "LightVertical" | "LightDownwardDiagonal" | "LightUpwardDiagonal" | "SmallGrid" | "DottedDiamond" | "WideDownwardDiagonal" | "WideUpwardDiagonal" | "DashedUpwardDiagonal" | "DashedDownwardDiagonal" | "NarrowVertical" | "NarrowHorizontal" | "DashedVertical" | "DashedHorizontal" | "LargeConfetti" | "LargeGrid" | "HorizontalBrick" | "LargeCheckerBoard" | "SmallConfetti" | "ZigZag" | "SolidDiamond" | "DiagonalBrick" | "OutlinedDiamond" | "Plaid" | "Sphere" | "Weave" | "DottedGrid" | "Divot" | "Shingle" | "Wave" | "Horizontal" | "Vertical" | "Cross" | "DownwardDiagonal" | "UpwardDiagonal" | "DiagonalCross";
            /**
             * Specifies the line format style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            style?: Word.LineFormatStyle | "Mixed" | "Single" | "ThinThin" | "ThinThick" | "ThickThin" | "ThickBetweenThin";
            /**
             * Specifies the degree of transparency of the line as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: number;
            /**
             * Specifies the thickness of the line in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            weight?: number;
        }
        /** An interface for updating data on the `ReflectionFormat` object, for use in `reflectionFormat.set({ ... })`. */
        export interface ReflectionFormatUpdateData {
            /**
             * Specifies the degree of blur effect applied to the `ReflectionFormat` object as a value between 0.0 and 100.0.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            blur?: number;
            /**
             * Specifies the amount of separation, in points, of the reflected image from the shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            offset?: number;
            /**
             * Specifies the size of the reflection as a percentage of the reflected shape from 0 to 100.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            size?: number;
            /**
             * Specifies the degree of transparency for the reflection effect as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: number;
            /**
             * Specifies a `ReflectionType` value that represents the type and direction of the lighting for a shape reflection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.ReflectionType | "Mixed" | "None" | "Type1" | "Type2" | "Type3" | "Type4" | "Type5" | "Type6" | "Type7" | "Type8" | "Type9";
        }
        /** An interface for updating data on the `ColorFormat` object, for use in `colorFormat.set({ ... })`. */
        export interface ColorFormatUpdateData {
            /**
             * Specifies the brightness of a specified shape color. Valid values are from `-1` (darkest) to `1` (lightest), `0` represents neutral.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            brightness?: number;
            /**
             * Specifies the theme color for a color format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            objectThemeColor?: Word.ThemeColorIndex | "NotThemeColor" | "MainDark1" | "MainLight1" | "MainDark2" | "MainLight2" | "Accent1" | "Accent2" | "Accent3" | "Accent4" | "Accent5" | "Accent6" | "Hyperlink" | "HyperlinkFollowed" | "Background1" | "Text1" | "Background2" | "Text2";
            /**
             * Specifies the red-green-blue (RGB) value of the specified color. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rgb?: string;
            /**
             * Specifies the lightening or darkening of a specified shape's color. Valid values are from `-1` (darkest) to `1` (lightest), `0` represents neutral.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tintAndShade?: number;
        }
        /** An interface for updating data on the `ShadowFormat` object, for use in `shadowFormat.set({ ... })`. */
        export interface ShadowFormatUpdateData {
            /**
             * Returns a `ColorFormat` object that represents the foreground color for the fill, line, or shadow.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundColor?: Word.Interfaces.ColorFormatUpdateData;
            /**
             * Specifies the blur level for a shadow format as a value between 0.0 and 100.0.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            blur?: number;
            /**
             * Specifies whether the object or the formatting applied to it is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies `true` if the shadow of the shape appears filled in and is obscured by the shape, even if the shape has no fill,
                        `false` if the shadow has no fill and the outline of the shadow is visible through the shape if the shape has no fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            obscured?: boolean;
            /**
             * Specifies the horizontal offset (in points) of the shadow from the shape.
                        A positive value offsets the shadow to the right of the shape; a negative value offsets it to the left.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            offsetX?: number;
            /**
             * Specifies the vertical offset (in points) of the shadow from the shape.
                        A positive value offsets the shadow to the top of the shape; a negative value offsets it to the bottom.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            offsetY?: number;
            /**
             * Specifies whether to rotate the shadow when rotating the shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotateWithShape?: boolean;
            /**
             * Specifies the width of the shadow.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            size?: number;
            /**
             * Specifies the type of shadow formatting to apply to a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            style?: Word.ShadowStyle | "Mixed" | "OuterShadow" | "InnerShadow";
            /**
             * Specifies the degree of transparency of the shadow as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: number;
            /**
             * Specifies the shape shadow type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.ShadowType | "Mixed" | "Type1" | "Type2" | "Type3" | "Type4" | "Type5" | "Type6" | "Type7" | "Type8" | "Type9" | "Type10" | "Type11" | "Type12" | "Type13" | "Type14" | "Type15" | "Type16" | "Type17" | "Type18" | "Type19" | "Type20" | "Type21" | "Type22" | "Type23" | "Type24" | "Type25" | "Type26" | "Type27" | "Type28" | "Type29" | "Type30" | "Type31" | "Type32" | "Type33" | "Type34" | "Type35" | "Type36" | "Type37" | "Type38" | "Type39" | "Type40" | "Type41" | "Type42" | "Type43";
        }
        /** An interface for updating data on the `ThreeDimensionalFormat` object, for use in `threeDimensionalFormat.set({ ... })`. */
        export interface ThreeDimensionalFormatUpdateData {
            /**
             * Returns a `ColorFormat` object that represents color of the contour of a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            contourColor?: Word.Interfaces.ColorFormatUpdateData;
            /**
             * Returns a `ColorFormat` object that represents the color of the shape's extrusion.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            extrusionColor?: Word.Interfaces.ColorFormatUpdateData;
            /**
             * Specifies the depth of the bottom bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelBottomDepth?: number;
            /**
             * Specifies the inset size for the bottom bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelBottomInset?: number;
            /**
             * Specifies a `BevelType` value that represents the bevel type for the bottom bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelBottomType?: Word.BevelType | "mixed" | "none" | "relaxedInset" | "circle" | "slope" | "cross" | "angle" | "softRound" | "convex" | "coolSlant" | "divot" | "riblet" | "hardEdge" | "artDeco";
            /**
             * Specifies the depth of the top bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelTopDepth?: number;
            /**
             * Specifies the inset size for the top bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelTopInset?: number;
            /**
             * Specifies a `BevelType` value that represents the bevel type for the top bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelTopType?: Word.BevelType | "mixed" | "none" | "relaxedInset" | "circle" | "slope" | "cross" | "angle" | "softRound" | "convex" | "coolSlant" | "divot" | "riblet" | "hardEdge" | "artDeco";
            /**
             * Specifies the width of the contour of a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            contourWidth?: number;
            /**
             * Specifies the depth of the shape's extrusion.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            depth?: number;
            /**
             * Specifies whether the extrusion color is based on the extruded shape's fill (the front face of the extrusion)
                        and automatically changes when the shape's fill changes, or whether the extrusion color is independent of the shape's fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            extrusionColorType?: Word.ExtrusionColorType | "mixed" | "automatic" | "custom";
            /**
             * Specifies the amount of perspective for a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fieldOfView?: number;
            /**
             * Specifies `true` if the extrusion appears in perspective — that is, if the walls of the extrusion narrow toward a vanishing point,
                        `false` if the extrusion is a parallel, or orthographic, projection — that is, if the walls don't narrow toward a vanishing point.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isPerspective?: boolean;
            /**
             * Specifies if the specified object, or the formatting applied to it, is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies the angle of the lighting.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lightAngle?: number;
            /**
             * Specifies a `LightRigType` value that represents the lighting preset.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetLighting?: Word.LightRigType | "Mixed" | "LegacyFlat1" | "LegacyFlat2" | "LegacyFlat3" | "LegacyFlat4" | "LegacyNormal1" | "LegacyNormal2" | "LegacyNormal3" | "LegacyNormal4" | "LegacyHarsh1" | "LegacyHarsh2" | "LegacyHarsh3" | "LegacyHarsh4" | "ThreePoint" | "Balanced" | "Soft" | "Harsh" | "Flood" | "Contrasting" | "Morning" | "Sunrise" | "Sunset" | "Chilly" | "Freezing" | "Flat" | "TwoPoint" | "Glow" | "BrightRoom";
            /**
             * Specifies the position of the light source relative to the extrusion.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetLightingDirection?: Word.PresetLightingDirection | "Mixed" | "TopLeft" | "Top" | "TopRight" | "Left" | "None" | "Right" | "BottomLeft" | "Bottom" | "BottomRight";
            /**
             * Specifies the intensity of the extrusion lighting.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetLightingSoftness?: Word.PresetLightingSoftness | "Mixed" | "Dim" | "Normal" | "Bright";
            /**
             * Specifies the extrusion surface material.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetMaterial?: Word.PresetMaterial | "Mixed" | "Matte" | "Plastic" | "Metal" | "WireFrame" | "Matte2" | "Plastic2" | "Metal2" | "WarmMatte" | "TranslucentPowder" | "Powder" | "DarkEdge" | "SoftEdge" | "Clear" | "Flat" | "SoftMetal";
            /**
             * Specifies whether text on a shape rotates with shape. `true` rotates the text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            projectText?: boolean;
            /**
             * Specifies the rotation of the extruded shape around the x-axis in degrees.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotationX?: number;
            /**
             * Specifies the rotation of the extruded shape around the y-axis in degrees.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotationY?: number;
            /**
             * Specifies the z-axis rotation of the camera.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotationZ?: number;
            /**
             * Specifies the position on the z-axis for the shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            z?: number;
        }
        /** An interface for updating data on the `Bibliography` object, for use in `bibliography.set({ ... })`. */
        export interface BibliographyUpdateData {
            /**
             * Specifies the name of the active style to use for the bibliography.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bibliographyStyle?: string;
        }
        /** An interface for updating data on the `SourceCollection` object, for use in `sourceCollection.set({ ... })`. */
        export interface SourceCollectionUpdateData {
            items?: Word.Interfaces.SourceData[];
        }
        /** An interface for updating data on the `PageSetup` object, for use in `pageSetup.set({ ... })`. */
        export interface PageSetupUpdateData {
            /**
             * Specifies a `LineNumbering` object that represents the line numbers for the `PageSetup` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lineNumbering?: Word.Interfaces.LineNumberingUpdateData;
            /**
             * Specifies whether Microsoft Word prints the document as a booklet.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bookFoldPrinting?: boolean;
            /**
             * Specifies the number of pages for each booklet.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bookFoldPrintingSheets?: number;
            /**
             * Specifies if Microsoft Word reverses the printing order for book fold printing of bidirectional or Asian language documents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bookFoldReversePrinting?: boolean;
            /**
             * Specifies the distance (in points) between the bottom edge of the page and the bottom boundary of the body text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bottomMargin?: number;
            /**
             * Specifies the number of characters per line in the document grid.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            charsLine?: number;
            /**
             * Specifies whether the first page has a different header and footer.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            differentFirstPageHeaderFooter?: boolean;
            /**
             * Specifies the distance between the footer and the bottom of the page in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            footerDistance?: number;
            /**
             * Specifies the amount (in points) of extra margin space added to each page in a document or section for binding.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gutter?: number;
            /**
             * Specifies on which side the gutter appears in a document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gutterPosition?: Word.GutterPosition | "Left" | "Right" | "Top";
            /**
             * Specifies whether Microsoft Word uses gutters for the current document based on a right-to-left language or a left-to-right language.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gutterStyle?: Word.GutterStyle | "Bidirectional" | "Latin";
            /**
             * Specifies the distance between the header and the top of the page in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            headerDistance?: number;
            /**
             * Specifies the layout mode for the current document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            layoutMode?: Word.LayoutMode | "Default" | "Grid" | "LineGrid" | "Genko";
            /**
             * Specifies the distance (in points) between the left edge of the page and the left boundary of the body text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            leftMargin?: number;
            /**
             * Specifies the number of lines per page in the document grid.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            linesPage?: number;
            /**
             * Specifies if the inside and outside margins of facing pages are the same width.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            mirrorMargins?: boolean;
            /**
             * Specifies whether odd and even pages have different headers and footers.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            oddAndEvenPagesHeaderFooter?: boolean;
            /**
             * Specifies the orientation of the page.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            orientation?: Word.PageOrientation | "Portrait" | "Landscape";
            /**
             * Specifies the page height in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageHeight?: number;
            /**
             * Specifies the page width in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageWidth?: number;
            /**
             * Specifies the paper size of the page.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            paperSize?: Word.PaperSize | "Size10x14" | "Size11x17" | "Letter" | "LetterSmall" | "Legal" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "CSheet" | "DSheet" | "ESheet" | "FanfoldLegalGerman" | "FanfoldStdGerman" | "FanfoldUS" | "Folio" | "Ledger" | "Note" | "Quarto" | "Statement" | "Tabloid" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC5" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeDL" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "Custom";
            /**
             * Specifies the distance (in points) between the right edge of the page and the right boundary of the body text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rightMargin?: number;
            /**
             * Specifies the reading order and alignment for the specified sections.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sectionDirection?: Word.SectionDirection | "RightToLeft" | "LeftToRight";
            /**
             * Specifies the type of section break for the specified object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sectionStart?: Word.SectionStart | "Continuous" | "NewColumn" | "NewPage" | "EvenPage" | "OddPage";
            /**
             * Specifies whether to show the grid.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showGrid?: boolean;
            /**
             * Specifies if endnotes are printed at the end of the next section that doesn't suppress endnotes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            suppressEndnotes?: boolean;
            /**
             * Specifies the top margin of the page in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            topMargin?: number;
            /**
             * Specifies whether to print two pages per sheet.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            twoPagesOnOne?: boolean;
            /**
             * Specifies the vertical alignment of text on each page in a document or section.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalAlignment?: Word.PageSetupVerticalAlignment | "Top" | "Center" | "Justify" | "Bottom";
        }
        /** An interface for updating data on the `LineNumbering` object, for use in `lineNumbering.set({ ... })`. */
        export interface LineNumberingUpdateData {
            /**
             * Specifies the numeric increment for line numbers.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            countBy?: number;
            /**
             * Specifies the distance (in points) between the right edge of line numbers and the left edge of the document text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            distanceFromText?: number;
            /**
             * Specifies if line numbering is active for the specified document, section, or sections.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isActive?: boolean;
            /**
             * Specifies the way line numbering runs; that is, whether it starts over at the beginning of a new page or section, or runs continuously.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            restartMode?: Word.NumberingRule | "RestartContinuous" | "RestartSection" | "RestartPage";
            /**
             * Specifies the starting line number.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            startingNumber?: number;
        }
        /** An interface for updating data on the `TextColumnCollection` object, for use in `textColumnCollection.set({ ... })`. */
        export interface TextColumnCollectionUpdateData {
            items?: Word.Interfaces.TextColumnData[];
        }
        /** An interface for updating data on the `TextColumn` object, for use in `textColumn.set({ ... })`. */
        export interface TextColumnUpdateData {
            /**
             * Specifies the amount of spacing (in points) after the specified paragraph or text column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            spaceAfter?: number;
            /**
             * Specifies the width, in points, of the specified text columns.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: number;
        }
        /** An interface for updating data on the `Selection` object, for use in `selection.set({ ... })`. */
        export interface SelectionUpdateData {
            /**
             * Specifies the ending character position of the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            end?: number;
            /**
             * Specifies the width in which Word fits the text in the current selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fitTextWidth?: number;
            /**
             * Specifies whether column selection mode is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isColumnSelectModeActive?: boolean;
            /**
             * Specifies whether Extend mode is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isExtendModeActive?: boolean;
            /**
             * Specifies whether the beginning of the selection is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isStartActive?: boolean;
            /**
             * Specifies whether Word has detected the language of the selected text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageDetected?: boolean;
            /**
             * Specifies the orientation of text in the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            orientation?: Word.TextOrientation | "Horizontal" | "Upward" | "Downward" | "VerticalFarEast" | "HorizontalRotatedFarEast" | "Vertical";
            /**
             * Specifies the starting character position of the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            start?: number;
            /**
             * Specifies the text in the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            text?: string;
        }
        /** An interface for updating data on the `RangeScopedCollection` object, for use in `rangeScopedCollection.set({ ... })`. */
        export interface RangeScopedCollectionUpdateData {
            items?: Word.Interfaces.RangeData[];
        }
        /** An interface for updating data on the `Bookmark` object, for use in `bookmark.set({ ... })`. */
        export interface BookmarkUpdateData {
            /**
             * Returns a `Range` object that represents the portion of the document that's contained in the `Bookmark` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
            /**
             * Specifies the ending character position of the bookmark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            end?: number;
            /**
             * Specifies the starting character position of the bookmark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            start?: number;
        }
        /** An interface for updating data on the `BookmarkCollection` object, for use in `bookmarkCollection.set({ ... })`. */
        export interface BookmarkCollectionUpdateData {
            items?: Word.Interfaces.BookmarkData[];
        }
        /** An interface for updating data on the `Index` object, for use in `index.set({ ... })`. */
        export interface IndexUpdateData {
            /**
             * Returns a `Range` object that represents the portion of the document that is contained within the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeUpdateData;
            /**
             * Specifies the leader character between entries in the index and their associated page numbers.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
        }
        /** An interface for updating data on the `IndexCollection` object, for use in `indexCollection.set({ ... })`. */
        export interface IndexCollectionUpdateData {
            items?: Word.Interfaces.IndexData[];
        }
        /** An interface for updating data on the `ListTemplateCollection` object, for use in `listTemplateCollection.set({ ... })`. */
        export interface ListTemplateCollectionUpdateData {
            items?: Word.Interfaces.ListTemplateData[];
        }
        /** An interface for updating data on the `ListTemplateGalleryCollection` object, for use in `listTemplateGalleryCollection.set({ ... })`. */
        export interface ListTemplateGalleryCollectionUpdateData {
            items?: Word.Interfaces.ListTemplateGalleryData[];
        }
        /** An interface describing the data returned by calling `editor.toJSON()`. */
        export interface EditorData {
            /**
             * Gets a `Range` object that represents the next range that the editor has permissions to modify.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nextRange?: Word.Interfaces.RangeData;
            /**
             * Gets a `Range` object that represents the portion of the document that's contained in the `Editor` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Gets the identifier for the `Editor` object when the parent document is saved as a webpage.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: string;
            /**
             * Gets the name of the editor.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
        }
        /** An interface describing the data returned by calling `conflictCollection.toJSON()`. */
        export interface ConflictCollectionData {
            items?: Word.Interfaces.ConflictData[];
        }
        /** An interface describing the data returned by calling `conflict.toJSON()`. */
        export interface ConflictData {
            /**
             * Gets a `Range` object that represents the portion of the document that's contained in the `Conflict` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Gets the `RevisionType` for the `Conflict` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.RevisionType | "None" | "Insert" | "Delete" | "Property" | "ParagraphNumber" | "DisplayField" | "Reconcile" | "Conflict" | "Style" | "Replace" | "ParagraphProperty" | "TableProperty" | "SectionProperty" | "StyleDefinition" | "MovedFrom" | "MovedTo" | "CellInsertion" | "CellDeletion" | "CellMerge" | "CellSplit" | "ConflictInsert" | "ConflictDelete";
        }
        /** An interface describing the data returned by calling `critiqueAnnotation.toJSON()`. */
        export interface CritiqueAnnotationData {
            /**
             * Gets the critique that was passed when the annotation was inserted.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            critique?: Word.Critique;
        }
        /** An interface describing the data returned by calling `annotation.toJSON()`. */
        export interface AnnotationData {
            /**
             * Gets the unique identifier, which is meant to be used for easier tracking of Annotation objects.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            id?: string;
            /**
             * Gets the state of the annotation.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            state?: Word.AnnotationState | "Created" | "Accepted" | "Rejected";
        }
        /** An interface describing the data returned by calling `annotationCollection.toJSON()`. */
        export interface AnnotationCollectionData {
            items?: Word.Interfaces.AnnotationData[];
        }
        /** An interface describing the data returned by calling `application.toJSON()`. */
        export interface ApplicationData {
            /**
             * Returns a `Bibliography` object that represents the bibliography reference sources stored in Microsoft Word.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bibliography?: Word.Interfaces.BibliographyData;
            /**
             * Returns a `ListTemplateGalleryCollection` object that represents all the list template galleries in Microsoft Word.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listTemplateGalleries?: Word.Interfaces.ListTemplateGalleryData[];
            /**
             * Specifies if Microsoft Word automatically detects the language you are using as you type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            checkLanguage?: boolean;
            /**
             * Gets a `LanguageId` value that represents the language selected for the Microsoft Word user interface.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            language?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
        }
        /** An interface describing the data returned by calling `body.toJSON()`. */
        export interface BodyData {
            /**
             * Gets the collection of rich text content control objects in the body.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            contentControls?: Word.Interfaces.ContentControlData[];
            /**
             * Gets the collection of field objects in the body.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            fields?: Word.Interfaces.FieldData[];
            /**
             * Gets the text format of the body. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontData;
            /**
             * Gets the collection of InlinePicture objects in the body. The collection doesn't include floating images.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            inlinePictures?: Word.Interfaces.InlinePictureData[];
            /**
             * Gets the collection of list objects in the body.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            lists?: Word.Interfaces.ListData[];
            /**
             * Gets the collection of paragraph objects in the body.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             *
             * Important: Paragraphs in tables aren't returned for requirement sets 1.1 and 1.2. From requirement set 1.3, paragraphs in tables are also returned.
             */
            paragraphs?: Word.Interfaces.ParagraphData[];
            /**
             * Gets the collection of shape objects in the body, including both inline and floating shapes. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shapes?: Word.Interfaces.ShapeData[];
            /**
             * Gets the collection of table objects in the body.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            tables?: Word.Interfaces.TableData[];
            /**
             * Specifies the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: string;
            /**
             * Specifies the built-in style name for the body. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
            /**
             * Gets the text of the body. Use the insertText method to insert text.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            text?: string;
            /**
             * Gets the type of the body. The type can be 'MainDoc', 'Section', 'Header', 'Footer', or 'TableCell'. Additional types ‘Footnote’, ‘Endnote’, and ‘NoteItem’ are supported in WordApiOnline 1.1 and later.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            type?: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell" | "Footnote" | "Endnote" | "NoteItem" | "Shape";
        }
        /** An interface describing the data returned by calling `border.toJSON()`. */
        export interface BorderData {
            /**
             * Specifies the color for the border. Color is specified in ‘#RRGGBB’ format or by using the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            color?: string;
            /**
             * Gets the location of the border.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            location?: Word.BorderLocation | "Top" | "Left" | "Bottom" | "Right" | "InsideHorizontal" | "InsideVertical" | "Inside" | "Outside" | "All";
            /**
             * Specifies the border type for the border.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            type?: Word.BorderType | "Mixed" | "None" | "Single" | "Double" | "Dotted" | "Dashed" | "DotDashed" | "Dot2Dashed" | "Triple" | "ThinThickSmall" | "ThickThinSmall" | "ThinThickThinSmall" | "ThinThickMed" | "ThickThinMed" | "ThinThickThinMed" | "ThinThickLarge" | "ThickThinLarge" | "ThinThickThinLarge" | "Wave" | "DoubleWave" | "DashedSmall" | "DashDotStroked" | "ThreeDEmboss" | "ThreeDEngrave";
            /**
             * Specifies whether the border is visible.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            visible?: boolean;
            /**
             * Specifies the width for the border.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            width?: Word.BorderWidth | "None" | "Pt025" | "Pt050" | "Pt075" | "Pt100" | "Pt150" | "Pt225" | "Pt300" | "Pt450" | "Pt600" | "Mixed";
        }
        /** An interface describing the data returned by calling `borderUniversal.toJSON()`. */
        export interface BorderUniversalData {
            /**
             * Specifies the graphical page-border design for the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            artStyle?: Word.PageBorderArt | "Apples" | "MapleMuffins" | "CakeSlice" | "CandyCorn" | "IceCreamCones" | "ChampagneBottle" | "PartyGlass" | "ChristmasTree" | "Trees" | "PalmsColor" | "Balloons3Colors" | "BalloonsHotAir" | "PartyFavor" | "ConfettiStreamers" | "Hearts" | "HeartBalloon" | "Stars3D" | "StarsShadowed" | "Stars" | "Sun" | "Earth2" | "Earth1" | "PeopleHats" | "Sombrero" | "Pencils" | "Packages" | "Clocks" | "Firecrackers" | "Rings" | "MapPins" | "Confetti" | "CreaturesButterfly" | "CreaturesLadyBug" | "CreaturesFish" | "BirdsFlight" | "ScaredCat" | "Bats" | "FlowersRoses" | "FlowersRedRose" | "Poinsettias" | "Holly" | "FlowersTiny" | "FlowersPansy" | "FlowersModern2" | "FlowersModern1" | "WhiteFlowers" | "Vine" | "FlowersDaisies" | "FlowersBlockPrint" | "DecoArchColor" | "Fans" | "Film" | "Lightning1" | "Compass" | "DoubleD" | "ClassicalWave" | "ShadowedSquares" | "TwistedLines1" | "Waveline" | "Quadrants" | "CheckedBarColor" | "Swirligig" | "PushPinNote1" | "PushPinNote2" | "Pumpkin1" | "EggsBlack" | "Cup" | "HeartGray" | "GingerbreadMan" | "BabyPacifier" | "BabyRattle" | "Cabins" | "HouseFunky" | "StarsBlack" | "Snowflakes" | "SnowflakeFancy" | "Skyrocket" | "Seattle" | "MusicNotes" | "PalmsBlack" | "MapleLeaf" | "PaperClips" | "ShorebirdTracks" | "People" | "PeopleWaving" | "EclipsingSquares2" | "Hypnotic" | "DiamondsGray" | "DecoArch" | "DecoBlocks" | "CirclesLines" | "Papyrus" | "Woodwork" | "WeavingBraid" | "WeavingRibbon" | "WeavingAngles" | "ArchedScallops" | "Safari" | "CelticKnotwork" | "CrazyMaze" | "EclipsingSquares1" | "Birds" | "FlowersTeacup" | "Northwest" | "Southwest" | "Tribal6" | "Tribal4" | "Tribal3" | "Tribal2" | "Tribal5" | "XIllusions" | "ZanyTriangles" | "Pyramids" | "PyramidsAbove" | "ConfettiGrays" | "ConfettiOutline" | "ConfettiWhite" | "Mosaic" | "Lightning2" | "HeebieJeebies" | "LightBulb" | "Gradient" | "TriangleParty" | "TwistedLines2" | "Moons" | "Ovals" | "DoubleDiamonds" | "ChainLink" | "Triangles" | "Tribal1" | "MarqueeToothed" | "SharksTeeth" | "Sawtooth" | "SawtoothGray" | "PostageStamp" | "WeavingStrips" | "ZigZag" | "CrossStitch" | "Gems" | "CirclesRectangles" | "CornerTriangles" | "CreaturesInsects" | "ZigZagStitch" | "Checkered" | "CheckedBarBlack" | "Marquee" | "BasicWhiteDots" | "BasicWideMidline" | "BasicWideOutline" | "BasicWideInline" | "BasicThinLines" | "BasicWhiteDashes" | "BasicWhiteSquares" | "BasicBlackSquares" | "BasicBlackDashes" | "BasicBlackDots" | "StarsTop" | "CertificateBanner" | "Handmade1" | "Handmade2" | "TornPaper" | "TornPaperBlack" | "CouponCutoutDashes" | "CouponCutoutDots";
            /**
             * Specifies the width (in points) of the graphical page border specified in the `artStyle` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            artWidth?: number;
            /**
             * Specifies the color for the `BorderUniversal` object. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: string;
            /**
             * Specifies the color for the `BorderUniversal` or {@link Word.Font} object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            colorIndex?: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
            /**
             * Returns `true` if an inside border can be applied to the specified object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            inside?: boolean;
            /**
             * Specifies whether the border is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies the line style of the border.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lineStyle?: Word.BorderLineStyle | "None" | "Single" | "Dot" | "DashSmallGap" | "DashLargeGap" | "DashDot" | "DashDotDot" | "Double" | "Triple" | "ThinThickSmallGap" | "ThickThinSmallGap" | "ThinThickThinSmallGap" | "ThinThickMedGap" | "ThickThinMedGap" | "ThinThickThinMedGap" | "ThinThickLargeGap" | "ThickThinLargeGap" | "ThinThickThinLargeGap" | "SingleWavy" | "DoubleWavy" | "DashDotStroked" | "Emboss3D" | "Engrave3D" | "Outset" | "Inset";
            /**
             * Specifies the line width of an object's border.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lineWidth?: Word.LineWidth | "Pt025" | "Pt050" | "Pt075" | "Pt100" | "Pt150" | "Pt225" | "Pt300" | "Pt450" | "Pt600";
        }
        /** An interface describing the data returned by calling `borderCollection.toJSON()`. */
        export interface BorderCollectionData {
            items?: Word.Interfaces.BorderData[];
        }
        /** An interface describing the data returned by calling `borderUniversalCollection.toJSON()`. */
        export interface BorderUniversalCollectionData {
            items?: Word.Interfaces.BorderUniversalData[];
        }
        /** An interface describing the data returned by calling `break.toJSON()`. */
        export interface BreakData {
            /**
             * Returns a `Range` object that represents the portion of the document that's contained in the break.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Returns the page number on which the break occurs.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageIndex?: number;
        }
        /** An interface describing the data returned by calling `breakCollection.toJSON()`. */
        export interface BreakCollectionData {
            items?: Word.Interfaces.BreakData[];
        }
        /** An interface describing the data returned by calling `buildingBlock.toJSON()`. */
        export interface BuildingBlockData {
            /**
             * Specifies the description for the building block.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            description?: string;
            /**
             * Returns the internal identification number for the building block.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: string;
            /**
             * Returns the position of this building block in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            index?: number;
            /**
             * Specifies a `DocPartInsertType` value that represents how to insert the contents of the building block into the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            insertType?: Word.DocPartInsertType | "Content" | "Paragraph" | "Page";
            /**
             * Specifies the name of the building block.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
            /**
             * Specifies the contents of the building block.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            value?: string;
        }
        /** An interface describing the data returned by calling `buildingBlockCategory.toJSON()`. */
        export interface BuildingBlockCategoryData {
            /**
             * Returns the position of the `BuildingBlockCategory` object in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            index?: number;
            /**
             * Returns the name of the `BuildingBlockCategory` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
        }
        /** An interface describing the data returned by calling `buildingBlockTypeItem.toJSON()`. */
        export interface BuildingBlockTypeItemData {
            /**
             * Returns the position of an item in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            index?: number;
            /**
             * Returns the localized name of a building block type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
        }
        /** An interface describing the data returned by calling `checkboxContentControl.toJSON()`. */
        export interface CheckboxContentControlData {
            /**
             * Specifies the current state of the checkbox.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            isChecked?: boolean;
        }
        /** An interface describing the data returned by calling `coauthoringLock.toJSON()`. */
        export interface CoauthoringLockData {
            /**
             * Gets the owner of the lock.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            owner?: Word.Interfaces.CoauthorData;
            /**
             * Gets a `Range` object that represents the portion of the document that's contained in the `CoauthoringLock` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Gets a `CoauthoringLockType` value that represents the lock type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.CoauthoringLockType | "None" | "Reservation" | "Ephemeral" | "Changed";
        }
        /** An interface describing the data returned by calling `coauthoringLockCollection.toJSON()`. */
        export interface CoauthoringLockCollectionData {
            items?: Word.Interfaces.CoauthoringLockData[];
        }
        /** An interface describing the data returned by calling `coauthor.toJSON()`. */
        export interface CoauthorData {
            /**
             * Gets a `CoauthoringLockCollection` object that represents the locks in the document that are associated with this coauthor.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            locks?: Word.Interfaces.CoauthoringLockData[];
            /**
             * Gets the email address of the coauthor.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emailAddress?: string;
            /**
             * Gets the unique identifier for the `Coauthor` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: string;
            /**
             * Gets whether this author represents the current user.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isMe?: boolean;
            /**
             * Gets the display name of the coauthor.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
        }
        /** An interface describing the data returned by calling `coauthorCollection.toJSON()`. */
        export interface CoauthorCollectionData {
            items?: Word.Interfaces.CoauthorData[];
        }
        /** An interface describing the data returned by calling `coauthoring.toJSON()`. */
        export interface CoauthoringData {
            /**
             * Gets a `CoauthorCollection` object that represents all the coauthors currently editing the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            authors?: Word.Interfaces.CoauthorData[];
            /**
             * Gets a `ConflictCollection` object that represents all the conflicts in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            conflicts?: Word.Interfaces.ConflictData[];
            /**
             * Gets a `CoauthoringLockCollection` object that represents the locks in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            locks?: Word.Interfaces.CoauthoringLockData[];
            /**
             * Gets a `Coauthor` object that represents the current user.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            me?: Word.Interfaces.CoauthorData;
            /**
             * Gets a `CoauthoringUpdateCollection` object that represents the most recent updates that were merged into the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            updates?: Word.Interfaces.CoauthoringUpdateData[];
            /**
             * Gets whether this document can be coauthored.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            canCoauthor?: boolean;
            /**
             * Gets whether the document can be automatically merged.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            canMerge?: boolean;
            /**
             * Gets whether the document has pending updates that have not been accepted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pendingUpdates?: boolean;
        }
        /** An interface describing the data returned by calling `coauthoringUpdate.toJSON()`. */
        export interface CoauthoringUpdateData {
            /**
             * Gets a `Range` object that represents the portion of the document that's contained in the `CoauthoringUpdate` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
        }
        /** An interface describing the data returned by calling `coauthoringUpdateCollection.toJSON()`. */
        export interface CoauthoringUpdateCollectionData {
            items?: Word.Interfaces.CoauthoringUpdateData[];
        }
        /** An interface describing the data returned by calling `comment.toJSON()`. */
        export interface CommentData {
            /**
             * Specifies the comment's content range.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            contentRange?: Word.Interfaces.CommentContentRangeData;
            /**
             * Gets the collection of reply objects associated with the comment.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            replies?: Word.Interfaces.CommentReplyData[];
            /**
             * Gets the email of the comment's author.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            authorEmail?: string;
            /**
             * Gets the name of the comment's author.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            authorName?: string;
            /**
             * Specifies the comment's content as plain text.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            content?: string;
            /**
             * Gets the creation date of the comment.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            creationDate?: Date;
            /**
             * Gets the ID of the comment.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            id?: string;
            /**
             * Specifies the comment thread's status. Setting to true resolves the comment thread. Getting a value of true means that the comment thread is resolved.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            resolved?: boolean;
        }
        /** An interface describing the data returned by calling `commentCollection.toJSON()`. */
        export interface CommentCollectionData {
            items?: Word.Interfaces.CommentData[];
        }
        /** An interface describing the data returned by calling `commentContentRange.toJSON()`. */
        export interface CommentContentRangeData {
            /**
             * Specifies a value that indicates whether the comment text is bold.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            bold?: boolean;
            /**
             * Gets the first hyperlink in the range, or sets a hyperlink on the range. All hyperlinks in the range are deleted when you set a new hyperlink on the range.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            hyperlink?: string;
            /**
             * Checks whether the range length is zero.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            isEmpty?: boolean;
            /**
             * Specifies a value that indicates whether the comment text is italicized.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            italic?: boolean;
            /**
             * Specifies a value that indicates whether the comment text has a strikethrough.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            strikeThrough?: boolean;
            /**
             * Gets the text of the comment range.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            text?: string;
            /**
             * Specifies a value that indicates the comment text's underline type. 'None' if the comment text isn't underlined.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            underline?: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";
        }
        /** An interface describing the data returned by calling `commentReply.toJSON()`. */
        export interface CommentReplyData {
            /**
            * Specifies the commentReply's content range.
            *
            * @remarks
            * [Api set: WordApi 1.4]
            */
            contentRange?: Word.Interfaces.CommentContentRangeData;
            /**
            * Gets the parent comment of this reply.
            *
            * @remarks
            * [Api set: WordApi 1.4]
            */
            parentComment?: Word.Interfaces.CommentData;
            /**
             * Gets the email of the comment reply's author.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            authorEmail?: string;
            /**
             * Gets the name of the comment reply's author.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            authorName?: string;
            /**
             * Specifies the comment reply's content. The string is plain text.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            content?: string;
            /**
             * Gets the creation date of the comment reply.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            creationDate?: Date;
            /**
             * Gets the ID of the comment reply.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            id?: string;
        }
        /** An interface describing the data returned by calling `commentReplyCollection.toJSON()`. */
        export interface CommentReplyCollectionData {
            items?: Word.Interfaces.CommentReplyData[];
        }
        /** An interface describing the data returned by calling `conditionalStyle.toJSON()`. */
        export interface ConditionalStyleData {
            /**
             * Specifies the amount of space (in points) to add below the contents of a single cell or all the cells in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bottomPadding?: number;
            /**
             * Specifies the amount of space (in points) to add to the left of the contents of a single cell or all the cells in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            leftPadding?: number;
            /**
             * Specifies the amount of space (in points) to add to the right of the contents of a single cell or all the cells in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rightPadding?: number;
            /**
             * Specifies the amount of space (in points) to add above the contents of a single cell or all the cells in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            topPadding?: number;
        }
        /** An interface describing the data returned by calling `xmlMapping.toJSON()`. */
        export interface XmlMappingData {
            /**
             * Returns a `CustomXmlNode` object that represents the custom XML node in the data store that the content control in the document maps to.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            customXmlNode?: Word.Interfaces.CustomXmlNodeData;
            /**
             * Returns a `CustomXmlPart` object that represents the custom XML part to which the content control in the document maps.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            customXmlPart?: Word.Interfaces.CustomXmlPartData;
            /**
             * Returns whether the content control in the document is mapped to an XML node in the document's XML data store.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isMapped?: boolean;
            /**
             * Returns the prefix mappings used to evaluate the XPath for the current XML mapping.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            prefixMappings?: string;
            /**
             * Returns the XPath for the XML mapping, which evaluates to the currently mapped XML node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xpath?: string;
        }
        /** An interface describing the data returned by calling `customXmlPrefixMappingCollection.toJSON()`. */
        export interface CustomXmlPrefixMappingCollectionData {
            items?: Word.Interfaces.CustomXmlPrefixMappingData[];
        }
        /** An interface describing the data returned by calling `customXmlPrefixMapping.toJSON()`. */
        export interface CustomXmlPrefixMappingData {
            /**
             * Gets the unique address identifier for the namespace of the `CustomXmlPrefixMapping` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            namespaceUri?: string;
            /**
             * Gets the prefix for the `CustomXmlPrefixMapping` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            prefix?: string;
        }
        /** An interface describing the data returned by calling `customXmlSchema.toJSON()`. */
        export interface CustomXmlSchemaData {
            /**
             * Gets the location of the schema on a computer.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            location?: string;
            /**
             * Gets the unique address identifier for the namespace of the `CustomXmlSchema` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            namespaceUri?: string;
        }
        /** An interface describing the data returned by calling `customXmlSchemaCollection.toJSON()`. */
        export interface CustomXmlSchemaCollectionData {
            items?: Word.Interfaces.CustomXmlSchemaData[];
        }
        /** An interface describing the data returned by calling `customXmlValidationErrorCollection.toJSON()`. */
        export interface CustomXmlValidationErrorCollectionData {
            items?: Word.Interfaces.CustomXmlValidationErrorData[];
        }
        /** An interface describing the data returned by calling `customXmlValidationError.toJSON()`. */
        export interface CustomXmlValidationErrorData {
            /**
             * Gets the node associated with this `CustomXmlValidationError` object, if any exist.If no nodes exist, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            node?: Word.Interfaces.CustomXmlNodeData;
            /**
             * Gets an integer representing the validation error in the `CustomXmlValidationError` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            errorCode?: number;
            /**
             * Gets the name of the error in the `CustomXmlValidationError` object.If no errors exist, the property returns `Nothing`
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
            /**
             * Gets the text in the `CustomXmlValidationError` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            text?: string;
            /**
             * Gets the type of error generated from the `CustomXmlValidationError` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.CustomXmlValidationErrorType | "schemaGenerated" | "automaticallyCleared" | "manual";
        }
        /** An interface describing the data returned by calling `customXmlNodeCollection.toJSON()`. */
        export interface CustomXmlNodeCollectionData {
            items?: Word.Interfaces.CustomXmlNodeData[];
        }
        /** An interface describing the data returned by calling `customXmlNode.toJSON()`. */
        export interface CustomXmlNodeData {
            /**
             * Gets a `CustomXmlNodeCollection` object representing the attributes of the current element in the current node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            attributes?: Word.Interfaces.CustomXmlNodeData[];
            /**
             * Gets a `CustomXmlNodeCollection` object containing all of the child elements of the current node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            childNodes?: Word.Interfaces.CustomXmlNodeData[];
            /**
             * Gets a `CustomXmlNode` object corresponding to the first child element of the current node. If the node has no child elements (or if it isn't of type {@link Word.CustomXmlNodeType | CustomXmlNodeType.element}), returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            firstChild?: Word.Interfaces.CustomXmlNodeData;
            /**
             * Gets a `CustomXmlNode` object corresponding to the last child element of the current node. If the node has no child elements (or if it isn't of type {@link Word.CustomXmlNodeType | CustomXmlNodeType.element}), the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lastChild?: Word.Interfaces.CustomXmlNodeData;
            /**
             * Gets the next sibling node (element, comment, or processing instruction) of the current node. If the node is the last sibling at its level, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nextSibling?: Word.Interfaces.CustomXmlNodeData;
            /**
             * Gets the object representing the part associated with this node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            ownerPart?: Word.Interfaces.CustomXmlPartData;
            /**
             * Gets the parent element node of the current node. If the current node is at the root level, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            parentNode?: Word.Interfaces.CustomXmlNodeData;
            /**
             * Gets the previous sibling node (element, comment, or processing instruction) of the current node. If the current node is the first sibling at its level, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            previousSibling?: Word.Interfaces.CustomXmlNodeData;
            /**
             * Gets the base name of the node without the namespace prefix, if one exists.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            baseName?: string;
            /**
             * Gets the unique address identifier for the namespace of the node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            namespaceUri?: string;
            /**
             * Gets the type of the current node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nodeType?: Word.CustomXmlNodeType | "element" | "attribute" | "text" | "cData" | "processingInstruction" | "comment" | "document";
            /**
             * Specifies the value of the current node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nodeValue?: string;
            /**
             * Specifies the text for the current node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            text?: string;
            /**
             * Gets a string with the canonicalized XPath for the current node. If the node is no longer in the Document Object Model (DOM), the property returns an error message.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xpath?: string;
            /**
             * Gets the XML representation of the current node and its children.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xml?: string;
        }
        /** An interface describing the data returned by calling `contentControl.toJSON()`. */
        export interface ContentControlData {
            /**
             * Gets the building block gallery-related data if the content control's {@link Word.ContentControlType} is `BuildingBlockGallery`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            buildingBlockGalleryContentControl?: Word.Interfaces.BuildingBlockGalleryContentControlData;
            /**
             * Gets the data of the content control when its type is `CheckBox`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            checkboxContentControl?: Word.Interfaces.CheckboxContentControlData;
            /**
             * Gets the data of the content control when its type is `ComboBox`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            comboBoxContentControl?: Word.Interfaces.ComboBoxContentControlData;
            /**
             * Gets the collection of content control objects in the content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            contentControls?: Word.Interfaces.ContentControlData[];
            /**
             * Gets the date picker-related data if the content control's {@link Word.ContentControlType} is `DatePicker`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            datePickerContentControl?: Word.Interfaces.DatePickerContentControlData;
            /**
             * Gets the data of the content control when its type is `DropDownList`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            dropDownListContentControl?: Word.Interfaces.DropDownListContentControlData;
            /**
             * Gets the collection of field objects in the content control.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            fields?: Word.Interfaces.FieldData[];
            /**
             * Gets the text format of the content control. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontData;
            /**
             * Gets the group-related data if the content control's {@link Word.ContentControlType} is `Group`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            groupContentControl?: Word.Interfaces.GroupContentControlData;
            /**
             * Gets the collection of InlinePicture objects in the content control. The collection doesn't include floating images.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            inlinePictures?: Word.Interfaces.InlinePictureData[];
            /**
             * Gets the collection of list objects in the content control.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            lists?: Word.Interfaces.ListData[];
            /**
             * Gets the collection of paragraph objects in the content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             *
             * Important: For requirement sets 1.1 and 1.2, paragraphs in tables wholly contained within this content control aren't returned. From requirement set 1.3, paragraphs in such tables are also returned.
             */
            paragraphs?: Word.Interfaces.ParagraphData[];
            /**
             * Gets the picture-related data if the content control's {@link Word.ContentControlType} is `Picture`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pictureContentControl?: Word.Interfaces.PictureContentControlData;
            /**
             * Gets the repeating section-related data if the content control's {@link Word.ContentControlType} is `RepeatingSection`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            repeatingSectionContentControl?: Word.Interfaces.RepeatingSectionContentControlData;
            /**
             * Gets the collection of table objects in the content control.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            tables?: Word.Interfaces.TableData[];
            /**
             * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingData;
            /**
             * Specifies the appearance of the content control. The value can be 'BoundingBox', 'Tags', or 'Hidden'.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            appearance?: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
            /**
             * Specifies a value that indicates whether the user can delete the content control. Mutually exclusive with removeWhenEdited.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            cannotDelete?: boolean;
            /**
             * Specifies a value that indicates whether the user can edit the contents of the content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            cannotEdit?: boolean;
            /**
             * Specifies the color of the content control. Color is specified in '#RRGGBB' format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            color?: string;
            /**
             * Gets an integer that represents the content control identifier.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            id?: number;
            /**
             * Specifies the placeholder text of the content control. Dimmed text will be displayed when the content control is empty.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            placeholderText?: string;
            /**
             * Specifies a value that indicates whether the content control is removed after it is edited. Mutually exclusive with cannotDelete.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            removeWhenEdited?: boolean;
            /**
             * Specifies the style name for the content control. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: string;
            /**
             * Specifies the built-in style name for the content control. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
            /**
             * Gets the content control subtype. The subtype can be 'RichTextInline', 'RichTextParagraphs', 'RichTextTableCell', 'RichTextTableRow' and 'RichTextTable' for rich text content controls, or 'PlainTextInline' and 'PlainTextParagraph' for plain text content controls, or 'CheckBox' for checkbox content controls.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            subtype?: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText" | "Group";
            /**
             * Specifies a tag to identify a content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            tag?: string;
            /**
             * Gets the text of the content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            text?: string;
            /**
             * Specifies the title for a content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            title?: string;
            /**
             * Gets the content control type. Only rich text, plain text, and checkbox content controls are supported currently.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            type?: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText" | "Group";
        }
        /** An interface describing the data returned by calling `contentControlCollection.toJSON()`. */
        export interface ContentControlCollectionData {
            items?: Word.Interfaces.ContentControlData[];
        }
        /** An interface describing the data returned by calling `contentControlListItem.toJSON()`. */
        export interface ContentControlListItemData {
            /**
             * Specifies the display text of a list item for a dropdown list or combo box content control.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            displayText?: string;
            /**
             * Specifies the index location of a content control list item in the collection of list items.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            index?: number;
            /**
             * Specifies the programmatic value of a list item for a dropdown list or combo box content control.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            value?: string;
        }
        /** An interface describing the data returned by calling `contentControlListItemCollection.toJSON()`. */
        export interface ContentControlListItemCollectionData {
            items?: Word.Interfaces.ContentControlListItemData[];
        }
        /** An interface describing the data returned by calling `customProperty.toJSON()`. */
        export interface CustomPropertyData {
            /**
             * Gets the key of the custom property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            key?: string;
            /**
             * Gets the value type of the custom property. Possible values are: String, Number, Date, Boolean.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            type?: Word.DocumentPropertyType | "String" | "Number" | "Date" | "Boolean";
            /**
             * Specifies the value of the custom property. Note that even though Word on the web and the docx file format allow these properties to be arbitrarily long, the desktop version of Word will truncate string values to 255 16-bit chars (possibly creating invalid unicode by breaking up a surrogate pair).
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            value?: any;
        }
        /** An interface describing the data returned by calling `customPropertyCollection.toJSON()`. */
        export interface CustomPropertyCollectionData {
            items?: Word.Interfaces.CustomPropertyData[];
        }
        /** An interface describing the data returned by calling `customXmlPart.toJSON()`. */
        export interface CustomXmlPartData {
            /**
             * Gets the root element of a bound region of data in the document. If the region is empty, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            documentElement?: Word.Interfaces.CustomXmlNodeData;
            /**
             * Gets a `CustomXmlValidationErrorCollection` object that provides access to any XML validation errors.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            errors?: Word.Interfaces.CustomXmlValidationErrorData[];
            /**
             * Gets the set of namespace prefix mappings used against the current `CustomXmlPart` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            namespaceManager?: Word.Interfaces.CustomXmlPrefixMappingData[];
            /**
             * Specifies a `CustomXmlSchemaCollection` object representing the set of schemas attached to a bound region of data in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            schemaCollection?: Word.Interfaces.CustomXmlSchemaData[];
            /**
             * Gets a value that indicates whether the `CustomXmlPart` is built-in.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            builtIn?: boolean;
            /**
             * Gets the ID of the custom XML part.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            id?: string;
            /**
             * Gets the namespace URI of the custom XML part.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            namespaceUri?: string;
            /**
             * Gets the XML representation of the current `CustomXmlPart` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xml?: string;
        }
        /** An interface describing the data returned by calling `customXmlPartCollection.toJSON()`. */
        export interface CustomXmlPartCollectionData {
            items?: Word.Interfaces.CustomXmlPartData[];
        }
        /** An interface describing the data returned by calling `customXmlPartScopedCollection.toJSON()`. */
        export interface CustomXmlPartScopedCollectionData {
            items?: Word.Interfaces.CustomXmlPartData[];
        }
        /** An interface describing the data returned by calling `document.toJSON()`. */
        export interface DocumentData {
            /**
             * Gets the active window for the document.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            activeWindow?: Word.Interfaces.WindowData;
            /**
             * Returns a `Bibliography` object that represents the bibliography references contained within the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bibliography?: Word.Interfaces.BibliographyData;
            /**
             * Gets the body object of the main document. The body is the text that excludes headers, footers, footnotes, textboxes, etc.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            body?: Word.Interfaces.BodyData;
            /**
             * Gets a `Coauthoring` object for managing coauthoring in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            coauthoring?: Word.Interfaces.CoauthoringData;
            /**
             * Gets the collection of content control objects in the document. This includes content controls in the body of the document, headers, footers, textboxes, etc.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            contentControls?: Word.Interfaces.ContentControlData[];
            /**
             * Gets the custom XML parts in the document.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            customXmlParts?: Word.Interfaces.CustomXmlPartData[];
            /**
             * Returns a `DocumentLibraryVersionCollection` object that represents the collection of versions of a shared document that has versioning enabled and that's stored in a document library on a server.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            documentLibraryVersions?: Word.Interfaces.DocumentLibraryVersionData[];
            /**
             * Returns a `FrameCollection` object that represents all the frames in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            frames?: Word.Interfaces.FrameData[];
            /**
             * Returns a `HyperlinkCollection` object that represents all the hyperlinks in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hyperlinks?: Word.Interfaces.HyperlinkData[];
            /**
             * Returns a `ListTemplateCollection` object that represents all the list templates in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listTemplates?: Word.Interfaces.ListTemplateData[];
            /**
             * Returns a `PageSetup` object that's associated with the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageSetup?: Word.Interfaces.PageSetupData;
            /**
             * Gets the properties of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            properties?: Word.Interfaces.DocumentPropertiesData;
            /**
             * Gets the collection of section objects in the document.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            sections?: Word.Interfaces.SectionData[];
            /**
             * Returns a `Selection` object that represents the current selection in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            selection?: Word.Interfaces.SelectionData;
            /**
             * Gets the add-in's settings in the document.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            settings?: Word.Interfaces.SettingData[];
            /**
             * Gets the collection of `Word.Window` objects for the document.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            windows?: Word.Interfaces.WindowData[];
            /**
             * Specifies if automatic hyphenation is turned on for the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            autoHyphenation?: boolean;
            /**
             * Specifies if the edits in the document are automatically saved.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            autoSaveOn?: boolean;
            /**
             * Specifies the ChangeTracking mode.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            changeTrackingMode?: Word.ChangeTrackingMode | "Off" | "TrackAll" | "TrackMineOnly";
            /**
             * Specifies the maximum number of consecutive lines that can end with hyphens.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            consecutiveHyphensLimit?: number;
            /**
             * Specifies whether words in all capital letters can be hyphenated.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hyphenateCaps?: boolean;
            /**
             * Specifies whether Microsoft Word has detected the language of the document text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageDetected?: boolean;
            /**
             * Indicates whether the changes in the document have been saved. A value of true indicates that the document hasn't changed since it was saved.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            saved?: boolean;
        }
        /** An interface describing the data returned by calling `documentCreated.toJSON()`. */
        export interface DocumentCreatedData {
            /**
            * Gets the body object of the document. The body is the text that excludes headers, footers, footnotes, textboxes, etc.
            *
            * @remarks
            * [Api set: WordApiHiddenDocument 1.3]
            */
            body?: Word.Interfaces.BodyData;
            /**
            * Gets the collection of content control objects in the document. This includes content controls in the body of the document, headers, footers, textboxes, etc.
            *
            * @remarks
            * [Api set: WordApiHiddenDocument 1.3]
            */
            contentControls?: Word.Interfaces.ContentControlData[];
            /**
            * Gets the custom XML parts in the document.
            *
            * @remarks
            * [Api set: WordApiHiddenDocument 1.4]
            */
            customXmlParts?: Word.Interfaces.CustomXmlPartData[];
            /**
            * Gets the properties of the document.
            *
            * @remarks
            * [Api set: WordApiHiddenDocument 1.3]
            */
            properties?: Word.Interfaces.DocumentPropertiesData;
            /**
            * Gets the collection of section objects in the document.
            *
            * @remarks
            * [Api set: WordApiHiddenDocument 1.3]
            */
            sections?: Word.Interfaces.SectionData[];
            /**
            * Gets the add-in's settings in the document.
            *
            * @remarks
            * [Api set: WordApiHiddenDocument 1.4]
            */
            settings?: Word.Interfaces.SettingData[];
            /**
             * Indicates whether the changes in the document have been saved. A value of true indicates that the document hasn't changed since it was saved.
             *
             * @remarks
             * [Api set: WordApiHiddenDocument 1.3]
             */
            saved?: boolean;
        }
        /** An interface describing the data returned by calling `documentProperties.toJSON()`. */
        export interface DocumentPropertiesData {
            /**
            * Gets the collection of custom properties of the document.
            *
            * @remarks
            * [Api set: WordApi 1.3]
            */
            customProperties?: Word.Interfaces.CustomPropertyData[];
            /**
             * Gets the application name of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            applicationName?: string;
            /**
             * Specifies the author of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            author?: string;
            /**
             * Specifies the category of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            category?: string;
            /**
             * Specifies the Comments field in the metadata of the document. These have no connection to comments by users made in the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            comments?: string;
            /**
             * Specifies the company of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            company?: string;
            /**
             * Gets the creation date of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            creationDate?: Date;
            /**
             * Specifies the format of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            format?: string;
            /**
             * Specifies the keywords of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            keywords?: string;
            /**
             * Gets the last author of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            lastAuthor?: string;
            /**
             * Gets the last print date of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            lastPrintDate?: Date;
            /**
             * Gets the last save time of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            lastSaveTime?: Date;
            /**
             * Specifies the manager of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            manager?: string;
            /**
             * Gets the revision number of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            revisionNumber?: string;
            /**
             * Gets security settings of the document. Some are access restrictions on the file on disk. Others are Document Protection settings. Some possible values are 0 = File on disk is read/write; 1 = Protect Document: File is encrypted and requires a password to open; 2 = Protect Document: Always Open as Read-Only; 3 = Protect Document: Both #1 and #2; 4 = File on disk is read-only; 5 = Both #1 and #4; 6 = Both #2 and #4; 7 = All of #1, #2, and #4; 8 = Protect Document: Restrict Edit to read-only; 9 = Both #1 and #8; 10 = Both #2 and #8; 11 = All of #1, #2, and #8; 12 = Both #4 and #8; 13 = All of #1, #4, and #8; 14 = All of #2, #4, and #8; 15 = All of #1, #2, #4, and #8.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            security?: number;
            /**
             * Specifies the subject of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            subject?: string;
            /**
             * Gets the template of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            template?: string;
            /**
             * Specifies the title of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            title?: string;
        }
        /** An interface describing the data returned by calling `dropDownListContentControl.toJSON()`. */
        export interface DropDownListContentControlData {
        }
        /** An interface describing the data returned by calling `comboBoxContentControl.toJSON()`. */
        export interface ComboBoxContentControlData {
        }
        /** An interface describing the data returned by calling `field.toJSON()`. */
        export interface FieldData {
            /**
            * Gets the field's result data.
            *
            * @remarks
            * [Api set: WordApi 1.4]
            */
            result?: Word.Interfaces.RangeData;
            /**
             * Specifies the field's code instruction.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             *
             * Note: The ability to set the code was introduced in WordApi 1.5.
             */
            code?: string;
            /**
             * Specifies data in an "Addin" field. If the field isn't an "Addin" field, it is `null` and it will throw a general exception when code attempts to set it.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            data?: string;
            /**
             * Gets the field's kind.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            kind?: Word.FieldKind | "None" | "Hot" | "Warm" | "Cold";
            /**
             * Specifies whether the field is locked. `true` if the field is locked, `false` otherwise.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            locked?: boolean;
            /**
             * Specifies whether the field codes are displayed for the specified field. `true` if the field codes are displayed, `false` otherwise.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            showCodes?: boolean;
            /**
             * Gets the field's type.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            type?: Word.FieldType | "Addin" | "AddressBlock" | "Advance" | "Ask" | "Author" | "AutoText" | "AutoTextList" | "BarCode" | "Bibliography" | "BidiOutline" | "Citation" | "Comments" | "Compare" | "CreateDate" | "Data" | "Database" | "Date" | "DisplayBarcode" | "DocProperty" | "DocVariable" | "EditTime" | "Embedded" | "EQ" | "Expression" | "FileName" | "FileSize" | "FillIn" | "FormCheckbox" | "FormDropdown" | "FormText" | "GotoButton" | "GreetingLine" | "Hyperlink" | "If" | "Import" | "Include" | "IncludePicture" | "IncludeText" | "Index" | "Info" | "Keywords" | "LastSavedBy" | "Link" | "ListNum" | "MacroButton" | "MergeBarcode" | "MergeField" | "MergeRec" | "MergeSeq" | "Next" | "NextIf" | "NoteRef" | "NumChars" | "NumPages" | "NumWords" | "OCX" | "Page" | "PageRef" | "Print" | "PrintDate" | "Private" | "Quote" | "RD" | "Ref" | "RevNum" | "SaveDate" | "Section" | "SectionPages" | "Seq" | "Set" | "Shape" | "SkipIf" | "StyleRef" | "Subject" | "Subscriber" | "Symbol" | "TA" | "TC" | "Template" | "Time" | "Title" | "TOA" | "TOC" | "UserAddress" | "UserInitials" | "UserName" | "XE" | "Empty" | "Others" | "Undefined";
        }
        /** An interface describing the data returned by calling `fieldCollection.toJSON()`. */
        export interface FieldCollectionData {
            items?: Word.Interfaces.FieldData[];
        }
        /** An interface describing the data returned by calling `font.toJSON()`. */
        export interface FontData {
            /**
             * Returns a `BorderUniversalCollection` object that represents all the borders for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            borders?: Word.Interfaces.BorderUniversalData[];
            /**
             * Returns a `FillFormat` object that contains fill formatting properties for the font used by the range of text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fill?: Word.Interfaces.FillFormatData;
            /**
             * Returns a `GlowFormat` object that represents the glow formatting for the font used by the range of text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            glow?: Word.Interfaces.GlowFormatData;
            /**
             * Returns a `LineFormat` object that specifies the formatting for a line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            line?: Word.Interfaces.LineFormatData;
            /**
             * Returns a `ReflectionFormat` object that represents the reflection formatting for a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            reflection?: Word.Interfaces.ReflectionFormatData;
            /**
             * Returns a `ColorFormat` object that represents the color for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textColor?: Word.Interfaces.ColorFormatData;
            /**
             * Returns a `ShadowFormat` object that specifies the shadow formatting for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textShadow?: Word.Interfaces.ShadowFormatData;
            /**
             * Returns a `ThreeDimensionalFormat` object that contains 3-dimensional (3D) effect formatting properties for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            threeDimensionalFormat?: Word.Interfaces.ThreeDimensionalFormatData;
            /**
             * Specifies whether the font is formatted as all capital letters, which makes lowercase letters appear as uppercase letters. The possible values are as follows:
                        
                        - `true`: All the text has the **All Caps** attribute.
                        
                        - `false`: None of the text has the **All Caps** attribute.
                        
                        - `null`: Returned if some, but not all, of the text has the **All Caps** attribute.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            allCaps?: boolean;
            /**
             * Specifies a value that indicates whether the font is bold. True if the font is formatted as bold, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            bold?: boolean;
            /**
             * Specifies whether the font is formatted as bold in a right-to-left language document. The possible values are as follows:
                        
                        - `true`: All the text is bold.
                        
                        - `false`: None of the text is bold.
                        
                        - `null`: Returned if some, but not all, of the text is bold.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            boldBidirectional?: boolean;
            /**
             * Specifies the color for the specified font. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            color?: string;
            /**
             * Specifies a `ColorIndex` value that represents the color for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            colorIndex?: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
            /**
             * Specifies the color for the `Font` object in a right-to-left language document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            colorIndexBidirectional?: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
            /**
             * Specifies whether contextual alternates are enabled for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            contextualAlternates?: boolean;
            /**
             * Specifies the color to be used for diacritics for the `Font` object. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            diacriticColor?: string;
            /**
             * Specifies whether Microsoft Word ignores the number of characters per line for the corresponding `Font` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            disableCharacterSpaceGrid?: boolean;
            /**
             * Specifies a value that indicates whether the font has a double strikethrough. True if the font is formatted as double strikethrough text, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            doubleStrikeThrough?: boolean;
            /**
             * Specifies whether the font is formatted as embossed. The possible values are as follows:
                        
                        - `true`: All the text is embossed.
                        
                        - `false`: None of the text is embossed.
                        
                        - `null`: Returned if some, but not all, of the text is embossed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emboss?: boolean;
            /**
             * Specifies an `EmphasisMark` value that represents the emphasis mark for a character or designated character string.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emphasisMark?: Word.EmphasisMark | "None" | "OverSolidCircle" | "OverComma" | "OverWhiteCircle" | "UnderSolidCircle";
            /**
             * Specifies whether the font is formatted as engraved. The possible values are as follows:
                        
                        - `true`: All the text is engraved.
                        
                        - `false`: None of the text is engraved.
                        
                        - `null`: Returned if some, but not all, of the text is engraved.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            engrave?: boolean;
            /**
             * Specifies a value that indicates whether the font is tagged as hidden. True if the font is formatted as hidden text, otherwise, false.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            hidden?: boolean;
            /**
             * Specifies the highlight color. To set it, use a value either in the '#RRGGBB' format or the color name. To remove highlight color, set it to null. The returned highlight color can be in the '#RRGGBB' format, an empty string for mixed highlight colors, or `null` for no highlight color. Note: Only the default highlight colors are available in Office for Windows Desktop. These are "Yellow", "Lime", "Turquoise", "Pink", "Blue", "Red", "DarkBlue", "Teal", "Green", "Purple", "DarkRed", "Olive", "Gray", "LightGray", and "Black". When the add-in runs in Office for Windows Desktop, any other color is converted to the closest color when applied to the font.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            highlightColor?: string;
            /**
             * Specifies a value that indicates whether the font is italicized. True if the font is italicized, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            italic?: boolean;
            /**
             * Specifies whether the font is italicized in a right-to-left language document. The possible values are as follows:
                        
                        - `true`: All the text is italicized.
                        
                        - `false`: None of the text is italicized.
                        
                        - `null`: Returned if some, but not all, of the text is italicized.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            italicBidirectional?: boolean;
            /**
             * Specifies the minimum font size for which Microsoft Word will adjust kerning automatically.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            kerning?: number;
            /**
             * Specifies the ligature setting for the `Font` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            ligature?: Word.Ligature | "None" | "Standard" | "Contextual" | "StandardContextual" | "Historical" | "StandardHistorical" | "ContextualHistorical" | "StandardContextualHistorical" | "Discretional" | "StandardDiscretional" | "ContextualDiscretional" | "StandardContextualDiscretional" | "HistoricalDiscretional" | "StandardHistoricalDiscretional" | "ContextualHistoricalDiscretional" | "All";
            /**
             * Specifies a value that represents the name of the font.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            name?: string;
            /**
             * Specifies the font used for Latin text (characters with character codes from 0 (zero) through 127).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nameAscii?: string;
            /**
             * Specifies the font name in a right-to-left language document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nameBidirectional?: string;
            /**
             * Specifies the East Asian font name.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nameFarEast?: string;
            /**
             * Specifies the font used for characters with codes from 128 through 255.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nameOther?: string;
            /**
             * Specifies the number form setting for an OpenType font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            numberForm?: Word.NumberForm | "Default" | "Lining" | "OldStyle";
            /**
             * Specifies the number spacing setting for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            numberSpacing?: Word.NumberSpacing | "Default" | "Proportional" | "Tabular";
            /**
             * Specifies if the font is formatted as outlined. The possible values are as follows:
                        
                        - `true`: All the text is outlined.
                        
                        - `false`: None of the text is outlined.
                        
                        - `null`: Returned if some, but not all, of the text is outlined.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            outline?: boolean;
            /**
             * Specifies the position of text (in points) relative to the base line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            position?: number;
            /**
             * Specifies the scaling percentage applied to the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            scaling?: number;
            /**
             * Specifies if the font is formatted as shadowed. The possible values are as follows:
                        
                        - `true`: All the text is shadowed.
                        
                        - `false`: None of the text is shadowed.
                        
                        - `null`: Returned if some, but not all, of the text is shadowed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shadow?: boolean;
            /**
             * Specifies a value that represents the font size in points.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            size?: number;
            /**
             * Specifies the font size in points for right-to-left text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sizeBidirectional?: number;
            /**
             * Specifies whether the font is formatted as small caps, which makes lowercase letters appear as small uppercase letters. The possible values are as follows:
                        
                        - `true`: All the text has the **Small Caps** attribute.
                        
                        - `false`: None of the text has the **Small Caps** attribute.
                        
                        - `null`: Returned if some, but not all, of the text has the **Small Caps** attribute.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            smallCaps?: boolean;
            /**
             * Specifies the spacing between characters.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            spacing?: number;
            /**
             * Specifies a value that indicates whether the font has a strikethrough. True if the font is formatted as strikethrough text, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            strikeThrough?: boolean;
            /**
             * Specifies the stylistic set for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            stylisticSet?: Word.StylisticSet | "Default" | "Set01" | "Set02" | "Set03" | "Set04" | "Set05" | "Set06" | "Set07" | "Set08" | "Set09" | "Set10" | "Set11" | "Set12" | "Set13" | "Set14" | "Set15" | "Set16" | "Set17" | "Set18" | "Set19" | "Set20";
            /**
             * Specifies a value that indicates whether the font is a subscript. True if the font is formatted as subscript, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            subscript?: boolean;
            /**
             * Specifies a value that indicates whether the font is a superscript. True if the font is formatted as superscript, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            superscript?: boolean;
            /**
             * Specifies a value that indicates the font's underline type. 'None' if the font isn't underlined.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            underline?: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";
            /**
             * Specifies the color of the underline for the `Font` object. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            underlineColor?: string;
        }
        /** An interface describing the data returned by calling `headingStyle.toJSON()`. */
        export interface HeadingStyleData {
            /**
             * Specifies the level for the heading style in a table of contents or table of figures. Must be a value from 1 to 9.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: number;
            /**
             * Specifies the name of style for a heading.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
        }
        /** An interface describing the data returned by calling `headingStyleCollection.toJSON()`. */
        export interface HeadingStyleCollectionData {
            items?: Word.Interfaces.HeadingStyleData[];
        }
        /** An interface describing the data returned by calling `hyperlink.toJSON()`. */
        export interface HyperlinkData {
            /**
             * Returns a `Range` object that represents the portion of the document that's contained within the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Specifies the address (for example, a file name or URL) of the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            address?: string;
            /**
             * Specifies the text string for the hyperlink's subject line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emailSubject?: string;
            /**
             * Returns `true` if extra information is required to resolve the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isExtraInfoRequired?: boolean;
            /**
             * Returns the name of the `Hyperlink` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
            /**
             * Specifies the text that appears as a ScreenTip when the mouse pointer is positioned over the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            screenTip?: string;
            /**
             * Specifies a named location in the destination of the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            subAddress?: string;
            /**
             * Specifies the name of the frame or window in which to load the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            target?: string;
            /**
             * Specifies the hyperlink's visible text in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textToDisplay?: string;
            /**
             * Returns the hyperlink type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.HyperlinkType | "Range" | "Shape" | "InlineShape";
        }
        /** An interface describing the data returned by calling `hyperlinkCollection.toJSON()`. */
        export interface HyperlinkCollectionData {
            items?: Word.Interfaces.HyperlinkData[];
        }
        /** An interface describing the data returned by calling `inlinePicture.toJSON()`. */
        export interface InlinePictureData {
            /**
             * Specifies a string that represents the alternative text associated with the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            altTextDescription?: string;
            /**
             * Specifies a string that contains the title for the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            altTextTitle?: string;
            /**
             * Specifies a number that describes the height of the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            height?: number;
            /**
             * Specifies a hyperlink on the image. Use a '#' to separate the address part from the optional location part.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            hyperlink?: string;
            /**
             * Gets the format of the inline image.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            imageFormat?: Word.ImageFormat | "Unsupported" | "Undefined" | "Bmp" | "Jpeg" | "Gif" | "Tiff" | "Png" | "Icon" | "Exif" | "Wmf" | "Emf" | "Pict" | "Pdf" | "Svg";
            /**
             * Specifies a value that indicates whether the inline image retains its original proportions when you resize it.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lockAspectRatio?: boolean;
            /**
             * Specifies a number that describes the width of the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            width?: number;
        }
        /** An interface describing the data returned by calling `inlinePictureCollection.toJSON()`. */
        export interface InlinePictureCollectionData {
            items?: Word.Interfaces.InlinePictureData[];
        }
        /** An interface describing the data returned by calling `linkFormat.toJSON()`. */
        export interface LinkFormatData {
            /**
             * Specifies if the link is updated automatically when the container file is opened or when the source file is changed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isAutoUpdated?: boolean;
            /**
             * Specifies if a `Field`, `InlineShape`, or `Shape` object is locked to prevent automatic updating.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLocked?: boolean;
            /**
             * Specifies if the linked picture is saved with the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isPictureSavedWithDocument?: boolean;
            /**
             * Specifies the path and name of the source file for the linked OLE object, picture, or field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sourceFullName?: string;
            /**
             * Gets the name of the source file for the linked OLE object, picture, or field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sourceName?: string;
            /**
             * Gets the path of the source file for the linked OLE object, picture, or field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sourcePath?: string;
            /**
             * Gets the link type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.LinkType | "Ole" | "Picture" | "Text" | "Reference" | "Include" | "Import" | "Dde" | "DdeAuto" | "Chart";
        }
        /** An interface describing the data returned by calling `list.toJSON()`. */
        export interface ListData {
            /**
            * Gets paragraphs in the list.
            *
            * @remarks
            * [Api set: WordApi 1.3]
            */
            paragraphs?: Word.Interfaces.ParagraphData[];
            /**
             * Gets the list's id.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            id?: number;
            /**
             * Checks whether each of the 9 levels exists in the list. A true value indicates the level exists, which means there is at least one list item at that level.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            levelExistences?: boolean[];
            /**
             * Gets all 9 level types in the list. Each type can be 'Bullet', 'Number', or 'Picture'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            levelTypes?: Word.ListLevelType[];
        }
        /** An interface describing the data returned by calling `listCollection.toJSON()`. */
        export interface ListCollectionData {
            items?: Word.Interfaces.ListData[];
        }
        /** An interface describing the data returned by calling `listItem.toJSON()`. */
        export interface ListItemData {
            /**
             * Specifies the level of the item in the list.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            level?: number;
            /**
             * Gets the list item bullet, number, or picture as a string.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            listString?: string;
            /**
             * Gets the list item order number in relation to its siblings.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            siblingIndex?: number;
        }
        /** An interface describing the data returned by calling `listLevel.toJSON()`. */
        export interface ListLevelData {
            /**
             * Gets a Font object that represents the character formatting of the specified object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            font?: Word.Interfaces.FontData;
            /**
             * Specifies the horizontal alignment of the list level. The value can be 'Left', 'Centered', or 'Right'.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            alignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Specifies the name of the style that's linked to the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            linkedStyle?: string;
            /**
             * Specifies the number format for the specified list level.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            numberFormat?: string;
            /**
             * Specifies the position (in points) of the number or bullet for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            numberPosition?: number;
            /**
             * Specifies the number style for the list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            numberStyle?: Word.ListBuiltInNumberStyle | "None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter" | "Ordinal" | "CardinalText" | "OrdinalText" | "Kanji" | "KanjiDigit" | "AiueoHalfWidth" | "IrohaHalfWidth" | "ArabicFullWidth" | "KanjiTraditional" | "KanjiTraditional2" | "NumberInCircle" | "Aiueo" | "Iroha" | "ArabicLZ" | "Bullet" | "Ganada" | "Chosung" | "GBNum1" | "GBNum2" | "GBNum3" | "GBNum4" | "Zodiac1" | "Zodiac2" | "Zodiac3" | "TradChinNum1" | "TradChinNum2" | "TradChinNum3" | "TradChinNum4" | "SimpChinNum1" | "SimpChinNum2" | "SimpChinNum3" | "SimpChinNum4" | "HanjaRead" | "HanjaReadDigit" | "Hangul" | "Hanja" | "Hebrew1" | "Arabic1" | "Hebrew2" | "Arabic2" | "HindiLetter1" | "HindiLetter2" | "HindiArabic" | "HindiCardinalText" | "ThaiLetter" | "ThaiArabic" | "ThaiCardinalText" | "VietCardinalText" | "LowercaseRussian" | "UppercaseRussian" | "LowercaseGreek" | "UppercaseGreek" | "ArabicLZ2" | "ArabicLZ3" | "ArabicLZ4" | "LowercaseTurkish" | "UppercaseTurkish" | "LowercaseBulgarian" | "UppercaseBulgarian" | "PictureBullet" | "Legal" | "LegalLZ";
            /**
             * Specifies the list level that must appear before the specified list level restarts numbering at 1.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            resetOnHigher?: number;
            /**
             * Specifies the starting number for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            startAt?: number;
            /**
             * Specifies the tab position for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            tabPosition?: number;
            /**
             * Specifies the position (in points) for the second line of wrapping text for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            textPosition?: number;
            /**
             * Specifies the character inserted after the number for the specified list level.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            trailingCharacter?: Word.TrailingCharacter | "TrailingTab" | "TrailingSpace" | "TrailingNone";
        }
        /** An interface describing the data returned by calling `listLevelCollection.toJSON()`. */
        export interface ListLevelCollectionData {
            items?: Word.Interfaces.ListLevelData[];
        }
        /** An interface describing the data returned by calling `listTemplate.toJSON()`. */
        export interface ListTemplateData {
            /**
             * Gets a `ListLevelCollection` object that represents all the levels for the list template.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            listLevels?: Word.Interfaces.ListLevelData[];
            /**
             * Specifies the name of the list template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
            /**
             * Specifies whether the list template is outline numbered.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            outlineNumbered?: boolean;
        }
        /** An interface describing the data returned by calling `noteItem.toJSON()`. */
        export interface NoteItemData {
            /**
             * Represents the body object of the note item. It's the portion of the text within the footnote or endnote.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            body?: Word.Interfaces.BodyData;
            /**
             * Represents a footnote or endnote reference in the main document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            reference?: Word.Interfaces.RangeData;
            /**
             * Represents the note item type: footnote or endnote.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            type?: Word.NoteItemType | "Footnote" | "Endnote";
        }
        /** An interface describing the data returned by calling `noteItemCollection.toJSON()`. */
        export interface NoteItemCollectionData {
            items?: Word.Interfaces.NoteItemData[];
        }
        /** An interface describing the data returned by calling `oleFormat.toJSON()`. */
        export interface OleFormatData {
            /**
             * Specifies the class type for the specified OLE object, picture, or field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            classType?: string;
            /**
             * Specifies the icon that is used when the `displayAsIcon` property is `true`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            iconIndex?: number;
            /**
             * Specifies the text displayed below the icon for the OLE object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            iconLabel?: string;
            /**
             * Specifies the program file in which the icon for the OLE object is stored.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            iconName?: string;
            /**
             * Gets the path of the file in which the icon for the OLE object is stored.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            iconPath?: string;
            /**
             * Gets whether the specified object is displayed as an icon.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isDisplayedAsIcon?: boolean;
            /**
             * Specifies whether formatting done in Microsoft Word to the linked OLE object is preserved.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFormattingPreservedOnUpdate?: boolean;
            /**
             * Gets a string that's used to identify the portion of the source file that's being linked.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            label?: string;
            /**
             * Gets the programmatic identifier (`ProgId`) for the specified OLE object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            progID?: string;
        }
        /** An interface describing the data returned by calling `page.toJSON()`. */
        export interface PageData {
            /**
             * Gets a `BreakCollection` object that represents the breaks on the page.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            breaks?: Word.Interfaces.BreakData[];
            /**
             * Gets the height, in points, of the paper defined in the Page Setup dialog box.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            height?: number;
            /**
             * Gets the index of the page. The page index is 1-based and independent of the user's custom page numbering.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            index?: number;
            /**
             * Gets the width, in points, of the paper defined in the Page Setup dialog box.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            width?: number;
        }
        /** An interface describing the data returned by calling `pageCollection.toJSON()`. */
        export interface PageCollectionData {
            items?: Word.Interfaces.PageData[];
        }
        /** An interface describing the data returned by calling `pane.toJSON()`. */
        export interface PaneData {
            /**
             * Gets the collection of pages in the pane.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            pages?: Word.Interfaces.PageData[];
            /**
             * Gets the `PageCollection` shown in the viewport of the pane. If a page is partially visible in the pane, the whole page is returned.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            pagesEnclosingViewport?: Word.Interfaces.PageData[];
        }
        /** An interface describing the data returned by calling `paneCollection.toJSON()`. */
        export interface PaneCollectionData {
            items?: Word.Interfaces.PaneData[];
        }
        /** An interface describing the data returned by calling `window.toJSON()`. */
        export interface WindowData {
            /**
             * Gets the next document window in the collection of open document windows.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            next?: Word.Interfaces.WindowData;
            /**
             * Gets the previous document window in the collection open document windows.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            previous?: Word.Interfaces.WindowData;
            /**
             * Specifies whether rulers are displayed for the window or pane.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areRulersDisplayed?: boolean;
            /**
             * Specifies whether comments, footnotes, endnotes, and hyperlinks are displayed as tips.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areScreenTipsDisplayed?: boolean;
            /**
             * Specifies whether thumbnail images of the pages in a document are displayed along the left side of the Microsoft Word document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areThumbnailsDisplayed?: boolean;
            /**
             * Specifies the caption text for the window that is displayed in the title bar of the document or application window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            caption?: string;
            /**
             * Specifies the height of the window (in points).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            height?: number;
            /**
             * Specifies the horizontal scroll position as a percentage of the document width.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalPercentScrolled?: number;
            /**
             * Specifies the default start-up mode for the Japanese Input Method Editor (IME).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            imeMode?: Word.ImeMode | "NoControl" | "On" | "Off" | "Hiragana" | "Katakana" | "KatakanaHalf" | "AlphaFull" | "Alpha" | "HangulFull" | "Hangul";
            /**
             * Gets the position of an item in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            index?: number;
            /**
             * Specifies whether the window is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isActive?: boolean;
            /**
             * Specifies whether the document map is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isDocumentMapVisible?: boolean;
            /**
             * Specifies whether the email message header is visible in the document window. The default value is `False`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEnvelopeVisible?: boolean;
            /**
             * Specifies whether a horizontal scroll bar is displayed for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isHorizontalScrollBarDisplayed?: boolean;
            /**
             * Specifies whether the vertical scroll bar appears on the left side of the document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLeftScrollBarDisplayed?: boolean;
            /**
             * Specifies whether the vertical ruler appears on the right side of the document window in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isRightRulerDisplayed?: boolean;
            /**
             * Specifies whether the window is split into multiple panes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isSplit?: boolean;
            /**
             * Specifies whether a vertical ruler is displayed for the window or pane.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVerticalRulerDisplayed?: boolean;
            /**
             * Specifies whether a vertical scroll bar is displayed for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVerticalScrollBarDisplayed?: boolean;
            /**
             * Specifies whether the window is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies the horizontal position of the window, measured in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            left?: number;
            /**
             * Specifies how Microsoft Word displays source documents after a compare and merge process.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showSourceDocuments?: Word.ShowSourceDocuments | "None" | "Original" | "Revised" | "Both";
            /**
             * Specifies the vertical split percentage for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            splitVertical?: number;
            /**
             * Specifies the width of the style area in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            styleAreaWidth?: number;
            /**
             * Specifies the vertical position of the document window, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            top?: number;
            /**
             * Gets the window type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.WindowType | "Document" | "Template";
            /**
             * Gets the height (in points) of the active working area in the document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            usableHeight?: number;
            /**
             * Gets the width (in points) of the active working area in the document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            usableWidth?: number;
            /**
             * Specifies the vertical scroll position as a percentage of the document length.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalPercentScrolled?: number;
            /**
             * Specifies the width of the document window, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: number;
            /**
             * Gets an integer that represents the position of the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            windowNumber?: number;
            /**
             * Specifies the state of the document window or task window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            windowState?: Word.WindowState | "Normal" | "Maximize" | "Minimize";
        }
        /** An interface describing the data returned by calling `windowCollection.toJSON()`. */
        export interface WindowCollectionData {
            items?: Word.Interfaces.WindowData[];
        }
        /** An interface describing the data returned by calling `paragraph.toJSON()`. */
        export interface ParagraphData {
            /**
             * Returns a `BorderUniversalCollection` object that represents all the borders for the paragraph.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            borders?: Word.Interfaces.BorderUniversalData[];
            /**
             * Gets the collection of fields in the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            fields?: Word.Interfaces.FieldData[];
            /**
             * Gets the text format of the paragraph. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontData;
            /**
             * Gets the collection of InlinePicture objects in the paragraph. The collection doesn't include floating images.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            inlinePictures?: Word.Interfaces.InlinePictureData[];
            /**
             * Gets the ListItem for the paragraph. Throws an `ItemNotFound` error if the paragraph isn't part of a list.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            listItem?: Word.Interfaces.ListItemData;
            /**
             * Gets the ListItem for the paragraph. If the paragraph isn't part of a list, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            listItemOrNullObject?: Word.Interfaces.ListItemData;
            /**
             * Returns a `ShadingUniversal` object that refers to the shading formatting for the paragraph.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalData;
            /**
             * Gets the collection of shape objects anchored in the paragraph, including both inline and floating shapes. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shapes?: Word.Interfaces.ShapeData[];
            /**
             * Specifies the alignment for a paragraph. The value can be 'left', 'centered', 'right', or 'justified'.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            alignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Specifies the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            firstLineIndent?: number;
            /**
             * Indicates the paragraph is the last one inside its parent body.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isLastParagraph?: boolean;
            /**
             * Checks whether the paragraph is a list item.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isListItem?: boolean;
            /**
             * Specifies the left indent value, in points, for the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            leftIndent?: number;
            /**
             * Specifies the line spacing, in points, for the specified paragraph. In the Word UI, this value is divided by 12.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lineSpacing?: number;
            /**
             * Specifies the amount of spacing, in grid lines, after the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lineUnitAfter?: number;
            /**
             * Specifies the amount of spacing, in grid lines, before the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lineUnitBefore?: number;
            /**
             * Specifies the outline level for the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            outlineLevel?: number;
            /**
             * Specifies the right indent value, in points, for the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            rightIndent?: number;
            /**
             * Specifies the spacing, in points, after the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            spaceAfter?: number;
            /**
             * Specifies the spacing, in points, before the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            spaceBefore?: number;
            /**
             * Specifies the style name for the paragraph. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: string;
            /**
             * Specifies the built-in style name for the paragraph. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
            /**
             * Gets the level of the paragraph's table. It returns 0 if the paragraph isn't in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            tableNestingLevel?: number;
            /**
             * Gets the text of the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            text?: string;
            /**
             * Gets a string that represents the paragraph identifier in the current session. ID is in standard 8-4-4-4-12 GUID format without curly braces and differs across sessions and coauthors.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            uniqueLocalId?: string;
        }
        /** An interface describing the data returned by calling `paragraphCollection.toJSON()`. */
        export interface ParagraphCollectionData {
            items?: Word.Interfaces.ParagraphData[];
        }
        /** An interface describing the data returned by calling `paragraphFormat.toJSON()`. */
        export interface ParagraphFormatData {
            /**
             * Specifies the alignment for the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            alignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Specifies the value (in points) for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            firstLineIndent?: number;
            /**
             * Specifies whether all lines in the specified paragraphs remain on the same page when Microsoft Word repaginates the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            keepTogether?: boolean;
            /**
             * Specifies whether the specified paragraph remains on the same page as the paragraph that follows it when Microsoft Word repaginates the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            keepWithNext?: boolean;
            /**
             * Specifies the left indent.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            leftIndent?: number;
            /**
             * Specifies the line spacing (in points) for the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            lineSpacing?: number;
            /**
             * Specifies the amount of spacing (in gridlines) after the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            lineUnitAfter?: number;
            /**
             * Specifies the amount of spacing (in gridlines) before the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            lineUnitBefore?: number;
            /**
             * Specifies whether left and right indents are the same width.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            mirrorIndents?: boolean;
            /**
             * Specifies the outline level for the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            outlineLevel?: Word.OutlineLevel | "OutlineLevel1" | "OutlineLevel2" | "OutlineLevel3" | "OutlineLevel4" | "OutlineLevel5" | "OutlineLevel6" | "OutlineLevel7" | "OutlineLevel8" | "OutlineLevel9" | "OutlineLevelBodyText";
            /**
             * Specifies the right indent (in points) for the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            rightIndent?: number;
            /**
             * Specifies the amount of spacing (in points) after the specified paragraph or text column.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            spaceAfter?: number;
            /**
             * Specifies the spacing (in points) before the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            spaceBefore?: number;
            /**
             * Specifies whether the first and last lines in the specified paragraph remain on the same page as the rest of the paragraph when Microsoft Word repaginates the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            widowControl?: boolean;
        }
        /** An interface describing the data returned by calling `range.toJSON()`. */
        export interface RangeData {
            /**
             * Returns a `BorderUniversalCollection` object that represents all the borders for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            borders?: Word.Interfaces.BorderUniversalData[];
            /**
             * Returns a `ConflictCollection` object that contains all the {@link Word.Conflict} objects in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            conflicts?: Word.Interfaces.ConflictData[];
            /**
             * Gets the collection of field objects in the range.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            fields?: Word.Interfaces.FieldData[];
            /**
             * Gets the text format of the range. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontData;
            /**
             * Gets a `FrameCollection` object that represents all the frames in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            frames?: Word.Interfaces.FrameData[];
            /**
             * Returns a `HyperlinkCollection` object that represents all the hyperlinks in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hyperlinks?: Word.Interfaces.HyperlinkData[];
            /**
             * Gets the collection of inline picture objects in the range.
             *
             * @remarks
             * [Api set: WordApi 1.2]
             */
            inlinePictures?: Word.Interfaces.InlinePictureData[];
            /**
             * Returns a `ListFormat` object that represents all the list formatting characteristics of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listFormat?: Word.Interfaces.ListFormatData;
            /**
             * Gets the collection of pages in the range.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            pages?: Word.Interfaces.PageData[];
            /**
             * Gets the collection of sections in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sections?: Word.Interfaces.SectionData[];
            /**
             * Returns a `ShadingUniversal` object that refers to the shading formatting for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalData;
            /**
             * Gets the collection of shape objects anchored in the range, including both inline and floating shapes. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shapes?: Word.Interfaces.ShapeData[];
            /**
             * Gets a `TableColumnCollection` object that represents all the table columns in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tableColumns?: Word.Interfaces.TableColumnData[];
            /**
             * Specifies whether the range is formatted as bold.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bold?: boolean;
            /**
             * Specifies whether the range is formatted as bold in a right-to-left language document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            boldBidirectional?: boolean;
            /**
             * Specifies a `CharacterCase` value that represents the case of the text in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            case?: Word.CharacterCase | "Next" | "Lower" | "Upper" | "TitleWord" | "TitleSentence" | "Toggle" | "HalfWidth" | "FullWidth" | "Katakana" | "Hiragana";
            /**
             * Specifies the character width of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            characterWidth?: Word.CharacterWidth | "Half" | "Full";
            /**
             * Specifies if the range contains combined characters.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            combineCharacters?: boolean;
            /**
             * Specifies if Microsoft Word ignores the number of characters per line for the corresponding `Range` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            disableCharacterSpaceGrid?: boolean;
            /**
             * Specifies the emphasis mark for a character or designated character string.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emphasisMark?: Word.EmphasisMark | "None" | "OverSolidCircle" | "OverComma" | "OverWhiteCircle" | "UnderSolidCircle";
            /**
             * Specifies the ending character position of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            end?: number;
            /**
             * Specifies the width (in the current measurement units) in which Microsoft Word fits the text in the current selection or range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fitTextWidth?: number;
            /**
             * Specifies if a grammar check has been run on the range or document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            grammarChecked?: boolean;
            /**
             * Specifies the proofing status (spelling and grammar checking) of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasNoProofing?: boolean;
            /**
             * Specifies the highlight color for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            highlightColorIndex?: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
            /**
             * Specifies the formatting for horizontal text set within vertical text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalInVertical?: Word.HorizontalInVerticalType | "None" | "FitInLine" | "ResizeLine";
            /**
             * Gets the first hyperlink in the range, or sets a hyperlink on the range. All hyperlinks in the range are deleted when you set a new hyperlink on the range. Use a '#' to separate the address part from the optional location part.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            hyperlink?: string;
            /**
             * Specifies the ID for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: string;
            /**
             * Checks whether the range length is zero.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isEmpty?: boolean;
            /**
             * Gets if the range is collapsed and is located at the end-of-row mark in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEndOfRowMark?: boolean;
            /**
             * Gets whether the text in the range is visible on the screen.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTextVisibleOnScreen?: boolean;
            /**
             * Specifies if the font or range is formatted as italic.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            italic?: boolean;
            /**
             * Specifies if the font or range is formatted as italic (right-to-left languages).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            italicBidirectional?: boolean;
            /**
             * Specifies whether the range of Japanese language text is hiragana or katakana.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            kana?: Word.Kana | "Katakana" | "Hiragana";
            /**
             * Specifies whether Microsoft Word has detected the language of the text in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageDetected?: boolean;
            /**
             * Specifies a `LanguageId` value that represents the language for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies an East Asian language for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies a language for the range that isn't classified as an East Asian language.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdOther?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies if all nonprinting characters (such as hidden text, tab marks, space marks, and paragraph marks) are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showAll?: boolean;
            /**
             * Specifies if spelling has been checked throughout the range or document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            spellingChecked?: boolean;
            /**
             * Specifies the starting character position of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            start?: number;
            /**
             * Gets the number of characters in the story that contains the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyLength?: number;
            /**
             * Gets the story type for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyType?: Word.StoryType | "MainText" | "Footnotes" | "Endnotes" | "Comments" | "TextFrame" | "EvenPagesHeader" | "PrimaryHeader" | "EvenPagesFooter" | "PrimaryFooter" | "FirstPageHeader" | "FirstPageFooter" | "FootnoteSeparator" | "FootnoteContinuationSeparator" | "FootnoteContinuationNotice" | "EndnoteSeparator" | "EndnoteContinuationSeparator" | "EndnoteContinuationNotice";
            /**
             * Specifies the style name for the range. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: string;
            /**
             * Specifies the built-in style name for the range. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
            /**
             * Gets the text of the range.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            text?: string;
            /**
             * Specifies whether Microsoft Word sets two lines of text in one and specifies the characters that enclose the text, if any.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            twoLinesInOne?: Word.TwoLinesInOneType | "None" | "NoBrackets" | "Parentheses" | "SquareBrackets" | "AngleBrackets" | "CurlyBrackets";
            /**
             * Specifies the type of underline applied to the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            underline?: Word.Underline | "None" | "Single" | "Words" | "Double" | "Dotted" | "Thick" | "Dash" | "DotDash" | "DotDotDash" | "Wavy" | "WavyHeavy" | "DottedHeavy" | "DashHeavy" | "DotDashHeavy" | "DotDotDashHeavy" | "DashLong" | "DashLongHeavy" | "WavyDouble";
        }
        /** An interface describing the data returned by calling `rangeCollection.toJSON()`. */
        export interface RangeCollectionData {
            items?: Word.Interfaces.RangeData[];
        }
        /** An interface describing the data returned by calling `searchOptions.toJSON()`. */
        export interface SearchOptionsData {
            /**
             * Specifies a value that indicates whether to ignore all punctuation characters between words. Corresponds to the Ignore punctuation check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            ignorePunct?: boolean;
            /**
             * Specifies a value that indicates whether to ignore all whitespace between words. Corresponds to the Ignore whitespace characters check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            ignoreSpace?: boolean;
            /**
             * Specifies a value that indicates whether to perform a case sensitive search. Corresponds to the Match case check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchCase?: boolean;
            /**
             * Specifies a value that indicates whether to match words that begin with the search string. Corresponds to the Match prefix check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchPrefix?: boolean;
            /**
             * Specifies a value that indicates whether to match words that end with the search string. Corresponds to the Match suffix check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchSuffix?: boolean;
            /**
             * Specifies a value that indicates whether to find operation only entire words, not text that is part of a larger word. Corresponds to the Find whole words only check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchWholeWord?: boolean;
            /**
             * Specifies a value that indicates whether the search will be performed using special search operators. Corresponds to the Use wildcards check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchWildcards?: boolean;
        }
        /** An interface describing the data returned by calling `section.toJSON()`. */
        export interface SectionData {
            /**
             * Gets the body object of the section. This doesn't include the header/footer and other section metadata.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            body?: Word.Interfaces.BodyData;
            /**
             * Returns a `BorderUniversalCollection` object that represents all the borders in the section.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            borders?: Word.Interfaces.BorderUniversalData[];
            /**
             * Returns a `PageSetup` object that's associated with the section.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageSetup?: Word.Interfaces.PageSetupData;
            /**
             * Specifies if the section is protected for forms.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            protectedForForms?: boolean;
        }
        /** An interface describing the data returned by calling `sectionCollection.toJSON()`. */
        export interface SectionCollectionData {
            items?: Word.Interfaces.SectionData[];
        }
        /** An interface describing the data returned by calling `setting.toJSON()`. */
        export interface SettingData {
            /**
             * Gets the key of the setting.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            key?: string;
            /**
             * Specifies the value of the setting.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            value?: any;
        }
        /** An interface describing the data returned by calling `settingCollection.toJSON()`. */
        export interface SettingCollectionData {
            items?: Word.Interfaces.SettingData[];
        }
        /** An interface describing the data returned by calling `styleCollection.toJSON()`. */
        export interface StyleCollectionData {
            items?: Word.Interfaces.StyleData[];
        }
        /** An interface describing the data returned by calling `style.toJSON()`. */
        export interface StyleData {
            /**
             * Specifies a BorderCollection object that represents all the borders for the specified style.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            borders?: Word.Interfaces.BorderData[];
            /**
             * Gets a font object that represents the character formatting of the specified style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            font?: Word.Interfaces.FontData;
            /**
             * Returns a `Frame` object that represents the frame formatting for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            frame?: Word.Interfaces.FrameData;
            /**
             * Specifies a link between a paragraph and a character style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            linkStyle?: Word.Interfaces.StyleData;
            /**
             * Gets a ListTemplate object that represents the list formatting for the specified Style object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            listTemplate?: Word.Interfaces.ListTemplateData;
            /**
             * Gets a ParagraphFormat object that represents the paragraph settings for the specified style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            paragraphFormat?: Word.Interfaces.ParagraphFormatData;
            /**
             * Gets a Shading object that represents the shading for the specified style. Not applicable to List style.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            shading?: Word.Interfaces.ShadingData;
            /**
             * Gets a TableStyle object representing Style properties that can be applied to a table.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            tableStyle?: Word.Interfaces.TableStyleData;
            /**
             * Specifies whether the style is automatically redefined based on the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            automaticallyUpdate?: boolean;
            /**
             * Specifies the name of an existing style to use as the base formatting of another style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             *
             * Note: The ability to set `baseStyle` was introduced in WordApi 1.6.
             */
            baseStyle?: string;
            /**
             * Gets whether the specified style is a built-in style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            builtIn?: boolean;
            /**
             * Gets the description of the specified style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            description?: string;
            /**
             * Specifies whether the spelling and grammar checker ignores text formatted with this style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasProofing?: boolean;
            /**
             * Gets whether the specified style is a built-in style that has been modified or applied in the document or a new style that has been created in the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            inUse?: boolean;
            /**
             * Specifies a `LanguageId` value that represents the language for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies an East Asian language for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Gets whether a style is a linked style that can be used for both paragraph and character formatting.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            linked?: boolean;
            /**
             * Returns the list level for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listLevelNumber?: number;
            /**
             * Specifies whether the style cannot be changed or edited.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            locked?: boolean;
            /**
             * Gets the name of a style in the language of the user.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            nameLocal?: string;
            /**
             * Specifies the name of the style to be applied automatically to a new paragraph that is inserted after a paragraph formatted with the specified style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             *
             * Note: The ability to set `nextParagraphStyle` was introduced in WordApi 1.6.
             */
            nextParagraphStyle?: string;
            /**
             * Specifies whether to remove spacing between paragraphs that are formatted using the same style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            noSpaceBetweenParagraphsOfSameStyle?: boolean;
            /**
             * Specifies the priority.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            priority?: number;
            /**
             * Specifies whether the style corresponds to an available quick style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            quickStyle?: boolean;
            /**
             * Gets the style type.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            type?: Word.StyleType | "Character" | "List" | "Paragraph" | "Table";
            /**
             * Specifies whether the specified style is made visible as a recommended style in the Styles and in the Styles task pane in Microsoft Word after it's used in the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            unhideWhenUsed?: boolean;
            /**
             * Specifies whether the specified style is visible as a recommended style in the Styles gallery and in the Styles task pane.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            visibility?: boolean;
        }
        /** An interface describing the data returned by calling `shading.toJSON()`. */
        export interface ShadingData {
            /**
             * Specifies the color for the background of the object. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            backgroundPatternColor?: string;
            /**
             * Specifies the color for the foreground of the object. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            foregroundPatternColor?: string;
            /**
             * Specifies the shading texture of the object. To learn more about how to apply backgrounds like textures, see {@link https://support.microsoft.com/office/db481e61-7af6-4063-bbcd-b276054a5515 | Add, change, or delete the background color in Word}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            texture?: Word.ShadingTextureType | "DarkDiagonalDown" | "DarkDiagonalUp" | "DarkGrid" | "DarkHorizontal" | "DarkTrellis" | "DarkVertical" | "LightDiagonalDown" | "LightDiagonalUp" | "LightGrid" | "LightHorizontal" | "LightTrellis" | "LightVertical" | "None" | "Percent10" | "Percent12Pt5" | "Percent15" | "Percent20" | "Percent25" | "Percent30" | "Percent35" | "Percent37Pt5" | "Percent40" | "Percent45" | "Percent5" | "Percent50" | "Percent55" | "Percent60" | "Percent62Pt5" | "Percent65" | "Percent70" | "Percent75" | "Percent80" | "Percent85" | "Percent87Pt5" | "Percent90" | "Percent95" | "Solid";
        }
        /** An interface describing the data returned by calling `shadingUniversal.toJSON()`. */
        export interface ShadingUniversalData {
            /**
             * Specifies the color that's applied to the background of the `ShadingUniversal` object. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            backgroundPatternColor?: string;
            /**
             * Specifies the color that's applied to the background of the `ShadingUniversal` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            backgroundPatternColorIndex?: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
            /**
             * Specifies the color that's applied to the foreground of the `ShadingUniversal` object. This color is applied to the dots and lines in the shading pattern. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundPatternColor?: string;
            /**
             * Specifies the color that's applied to the foreground of the `ShadingUniversal` object. This color is applied to the dots and lines in the shading pattern.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundPatternColorIndex?: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
            /**
             * Specifies the shading texture of the object. To learn more about how to apply backgrounds like textures, see {@link https://support.microsoft.com/office/db481e61-7af6-4063-bbcd-b276054a5515 | Add, change, or delete the background color in Word}.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            texture?: Word.ShadingTextureType | "DarkDiagonalDown" | "DarkDiagonalUp" | "DarkGrid" | "DarkHorizontal" | "DarkTrellis" | "DarkVertical" | "LightDiagonalDown" | "LightDiagonalUp" | "LightGrid" | "LightHorizontal" | "LightTrellis" | "LightVertical" | "None" | "Percent10" | "Percent12Pt5" | "Percent15" | "Percent20" | "Percent25" | "Percent30" | "Percent35" | "Percent37Pt5" | "Percent40" | "Percent45" | "Percent5" | "Percent50" | "Percent55" | "Percent60" | "Percent62Pt5" | "Percent65" | "Percent70" | "Percent75" | "Percent80" | "Percent85" | "Percent87Pt5" | "Percent90" | "Percent95" | "Solid";
        }
        /** An interface describing the data returned by calling `table.toJSON()`. */
        export interface TableData {
            /**
             * Gets the collection of field objects in the table.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            fields?: Word.Interfaces.FieldData[];
            /**
             * Gets the font. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            font?: Word.Interfaces.FontData;
            /**
             * Gets all of the table rows.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            rows?: Word.Interfaces.TableRowData[];
            /**
             * Gets the child tables nested one level deeper.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            tables?: Word.Interfaces.TableData[];
            /**
             * Specifies the alignment of the table against the page column. The value can be 'Left', 'Centered', or 'Right'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            alignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Specifies the description of the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            description?: string;
            /**
             * Specifies the number of header rows.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            headerRowCount?: number;
            /**
             * Specifies the horizontal alignment of every cell in the table. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            horizontalAlignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Indicates whether all of the table rows are uniform.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isUniform?: boolean;
            /**
             * Gets the nesting level of the table. Top-level tables have level 1.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            nestingLevel?: number;
            /**
             * Gets the number of rows in the table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            rowCount?: number;
            /**
             * Specifies the shading color. Color is specified in "#RRGGBB" format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            shadingColor?: string;
            /**
             * Specifies the style name for the table. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            style?: string;
            /**
             * Specifies whether the table has banded columns.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBandedColumns?: boolean;
            /**
             * Specifies whether the table has banded rows.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBandedRows?: boolean;
            /**
             * Specifies the built-in style name for the table. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
            /**
             * Specifies whether the table has a first column with a special style.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleFirstColumn?: boolean;
            /**
             * Specifies whether the table has a last column with a special style.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleLastColumn?: boolean;
            /**
             * Specifies whether the table has a total (last) row with a special style.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleTotalRow?: boolean;
            /**
             * Specifies the title of the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: string;
            /**
             * Specifies the text values in the table, as a 2D JavaScript array.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            values?: string[][];
            /**
             * Specifies the vertical alignment of every cell in the table. The value can be 'Top', 'Center', or 'Bottom'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            verticalAlignment?: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom";
            /**
             * Specifies the width of the table in points.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            width?: number;
        }
        /** An interface describing the data returned by calling `tableStyle.toJSON()`. */
        export interface TableStyleData {
            /**
             * Specifies the table's alignment against the page margin.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            alignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Specifies whether lines in tables formatted with a specified style break across pages.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            allowBreakAcrossPage?: boolean;
            /**
             * Specifies the amount of space to add between the contents and the bottom borders of the cells.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            bottomCellMargin?: number;
            /**
             * Specifies the spacing (in points) between the cells in a table style.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            cellSpacing?: number;
            /**
             * Specifies the number of columns in the banding when a style specifies odd- or even-column banding.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            columnStripe?: number;
            /**
             * Specifies whether Microsoft Word allows to break the specified table across pages.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isBreakAcrossPagesAllowed?: boolean;
            /**
             * Specifies the amount of space to add between the contents and the left borders of the cells.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            leftCellMargin?: number;
            /**
             * Specifies the left indent value (in points) for the rows in the table style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            leftIndent?: number;
            /**
             * Specifies the amount of space to add between the contents and the right borders of the cells.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            rightCellMargin?: number;
            /**
             * Specifies the number of rows to include in the banding when the style specifies odd- or even-row banding.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rowStripe?: number;
            /**
             * Specifies the direction in which Microsoft Word orders cells in the table style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tableDirection?: Word.TableDirection | "RightToLeft" | "LeftToRight";
            /**
             * Specifies the amount of space to add between the contents and the top borders of the cells.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            topCellMargin?: number;
        }
        /** An interface describing the data returned by calling `tabStop.toJSON()`. */
        export interface TabStopData {
            /**
             * Gets a `TabAlignment` value that represents the alignment for the tab stop.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            alignment?: Word.TabAlignment | "Left" | "Center" | "Right" | "Decimal" | "Bar" | "List";
            /**
             * Gets whether this tab stop is a custom tab stop.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            customTab?: boolean;
            /**
             * Gets a `TabLeader` value that represents the leader for this `TabStop` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            leader?: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
            /**
             * Gets the position of the tab stop relative to the left margin.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            position?: number;
        }
        /** An interface describing the data returned by calling `tabStopCollection.toJSON()`. */
        export interface TabStopCollectionData {
            items?: Word.Interfaces.TabStopData[];
        }
        /** An interface describing the data returned by calling `tableCollection.toJSON()`. */
        export interface TableCollectionData {
            items?: Word.Interfaces.TableData[];
        }
        /** An interface describing the data returned by calling `tableColumn.toJSON()`. */
        export interface TableColumnData {
            /**
             * Returns a `BorderUniversalCollection` object that represents all the borders for the table column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            borders?: Word.Interfaces.BorderUniversalData[];
            /**
             * Returns a `ShadingUniversal` object that refers to the shading formatting for the column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalData;
            /**
             * Returns the position of this column in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            columnIndex?: number;
            /**
             * Returns `true` if the column or row is the first one in the table; `false` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFirst?: boolean;
            /**
             * Returns `true` if the column or row is the last one in the table; `false` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLast?: boolean;
            /**
             * Returns the nesting level of the column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nestingLevel?: number;
            /**
             * Specifies the preferred width (in points or as a percentage of the window width) for the column.
                        The unit of measurement can be specified by the `preferredWidthType` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            preferredWidth?: number;
            /**
             * Specifies the preferred unit of measurement to use for the width of the table column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            preferredWidthType?: Word.PreferredWidthType | "Auto" | "Percent" | "Points";
            /**
             * Specifies the width of the column, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: number;
        }
        /** An interface describing the data returned by calling `tableColumnCollection.toJSON()`. */
        export interface TableColumnCollectionData {
            items?: Word.Interfaces.TableColumnData[];
        }
        /** An interface describing the data returned by calling `tableOfAuthorities.toJSON()`. */
        export interface TableOfAuthoritiesData {
            /**
             * Specifies the name of the bookmark from which to collect table of authorities entries.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bookmark?: string;
            /**
             * Specifies the category of entries to be included in the table of authorities.
                        Values 0 through 16 correspond to the items listed in the Category box of the Table of Authorities dialog. To learn how to access this through the Word UI, see {@link https://support.microsoft.com/office/ddd126ae-52bc-4299-9558-06dd0e4fe8c0 | Create a table of authorities}.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            category?: number;
            /**
             * Specifies a separator of up to five characters. This appears between the table of authorities entry and its page number.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            entrySeparator?: string;
            /**
             * Specifies whether the category name for a group of entries appears in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isCategoryHeaderIncluded?: boolean;
            /**
             * Specifies whether the entries in the table of authorities are displayed with their formatting in the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEntryFormattingKept?: boolean;
            /**
             * Specifies whether references to the same authority that are repeated on five or more pages are replaced with "Passim".
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isPassimUsed?: boolean;
            /**
             * Specifies a separator of up to five characters. This appears between individual page references in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageNumberSeparator?: string;
            /**
             * Specifies a separator of up to five characters. This appears between ranges of pages in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageRangeSeparator?: string;
            /**
             * Specifies the {@link https://support.microsoft.com/office/062a387b-dfc9-4ef8-8235-29ee113d59be | Sequence (SEQ) field} identifier for the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sequenceName?: string;
            /**
             * Specifies a separator of up to five characters. This appears between the sequence number and the page number in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sequenceSeparator?: string;
            /**
             * Specifies the leader character that appears between entries and their associated page numbers in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
        }
        /** An interface describing the data returned by calling `tableOfAuthoritiesCollection.toJSON()`. */
        export interface TableOfAuthoritiesCollectionData {
            items?: Word.Interfaces.TableOfAuthoritiesData[];
        }
        /** An interface describing the data returned by calling `tableOfAuthoritiesCategory.toJSON()`. */
        export interface TableOfAuthoritiesCategoryData {
            /**
             * Specifies the name of this table of authorities category.
                        Changing the name of the category doesn't change the index in the collection. The value for {@link Word.TableOfAuthorities | TableOfAuthorities.category} will remain the same.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
        }
        /** An interface describing the data returned by calling `tableOfAuthoritiesCategoryCollection.toJSON()`. */
        export interface TableOfAuthoritiesCategoryCollectionData {
            items?: Word.Interfaces.TableOfAuthoritiesCategoryData[];
        }
        /** An interface describing the data returned by calling `tableOfContents.toJSON()`. */
        export interface TableOfContentsData {
            /**
             * Specifies whether built-in heading styles are used for the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areBuiltInHeadingStylesUsed?: boolean;
            /**
             * Specifies whether {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) fields} are included in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFieldsUsed?: boolean;
            /**
             * Specifies whether entries in the table of contents should be formatted as hyperlinks when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areHyperlinksUsedOnWeb?: boolean;
            /**
             * Specifies whether the page numbers in the table of contents should be hidden when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersHiddenOnWeb?: boolean;
            /**
             * Specifies whether page numbers are included in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersIncluded?: boolean;
            /**
             * Specifies whether page numbers are aligned with the right margin in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersRightAligned?: boolean;
            /**
             * Specifies the ending heading level for the table of contents. Must be a value from 1 to 9 and greater than `upperHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lowerHeadingLevel?: number;
            /**
             * Specifies the character between entries and their page numbers in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
            /**
             * Specifies a one-letter identifier from {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | TC fields} that's used for the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tableId?: string;
            /**
             * Specifies the starting heading level for the table of contents. Must be a value from 1 to 9 and smaller than `lowerHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            upperHeadingLevel?: number;
        }
        /** An interface describing the data returned by calling `tableOfContentsCollection.toJSON()`. */
        export interface TableOfContentsCollectionData {
            items?: Word.Interfaces.TableOfContentsData[];
        }
        /** An interface describing the data returned by calling `tableOfFigures.toJSON()`. */
        export interface TableOfFiguresData {
            /**
             * Specifies whether built-in heading styles are used for the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areBuiltInHeadingStylesUsed?: boolean;
            /**
             * Specifies whether {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) fields} are included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFieldsUsed?: boolean;
            /**
             * Specifies whether entries in the table of figures should be formatted as hyperlinks when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areHyperlinksUsedOnWeb?: boolean;
            /**
             * Specifies whether the page numbers in the table of figures should be hidden when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersHiddenOnWeb?: boolean;
            /**
             * Specifies whether page numbers are included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersIncluded?: boolean;
            /**
             * Specifies whether page numbers are aligned with the right margin in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersRightAligned?: boolean;
            /**
             * Specifies the label that identifies the items to be included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            captionLabel?: string;
            /**
             * Specifies whether the caption label and caption number are included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLabelIncluded?: boolean;
            /**
             * Specifies the ending heading level for the table of figures. Must be a value from 1 to 9 and greater than `upperHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lowerHeadingLevel?: number;
            /**
             * Specifies the character between entries and their page numbers in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
            /**
             * Specifies a one-letter identifier from {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | TC fields} that's used for the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tableId?: string;
            /**
             * Specifies the starting heading level for the table of figures. Must be a value from 1 to 9 and smaller than `lowerHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            upperHeadingLevel?: number;
        }
        /** An interface describing the data returned by calling `tableOfFiguresCollection.toJSON()`. */
        export interface TableOfFiguresCollectionData {
            items?: Word.Interfaces.TableOfFiguresData[];
        }
        /** An interface describing the data returned by calling `tableRow.toJSON()`. */
        export interface TableRowData {
            /**
            * Gets cells.
            *
            * @remarks
            * [Api set: WordApi 1.3]
            */
            cells?: Word.Interfaces.TableCellData[];
            /**
            * Gets the collection of field objects in the table row.
            *
            * @remarks
            * [Api set: WordApi 1.4]
            */
            fields?: Word.Interfaces.FieldData[];
            /**
            * Gets the font. Use this to get and set font name, size, color, and other properties.
            *
            * @remarks
            * [Api set: WordApi 1.3]
            */
            font?: Word.Interfaces.FontData;
            /**
             * Gets the number of cells in the row.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            cellCount?: number;
            /**
             * Specifies the horizontal alignment of every cell in the row. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            horizontalAlignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Checks whether the row is a header row. To set the number of header rows, use `headerRowCount` on the Table object.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isHeader?: boolean;
            /**
             * Specifies the preferred height of the row in points.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            preferredHeight?: number;
            /**
             * Gets the index of the row in its parent table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            rowIndex?: number;
            /**
             * Specifies the shading color. Color is specified in "#RRGGBB" format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            shadingColor?: string;
            /**
             * Specifies the text values in the row, as a 2D JavaScript array.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            values?: string[][];
            /**
             * Specifies the vertical alignment of the cells in the row. The value can be 'Top', 'Center', or 'Bottom'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            verticalAlignment?: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom";
        }
        /** An interface describing the data returned by calling `tableRowCollection.toJSON()`. */
        export interface TableRowCollectionData {
            items?: Word.Interfaces.TableRowData[];
        }
        /** An interface describing the data returned by calling `tableCell.toJSON()`. */
        export interface TableCellData {
            /**
             * Gets the body object of the cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            body?: Word.Interfaces.BodyData;
            /**
             * Gets the index of the cell in its row.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            cellIndex?: number;
            /**
             * Specifies the width of the cell's column in points. This is applicable to uniform tables.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            columnWidth?: number;
            /**
             * Specifies the horizontal alignment of the cell. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            horizontalAlignment?: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";
            /**
             * Gets the index of the cell's row in the table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            rowIndex?: number;
            /**
             * Specifies the shading color of the cell. Color is specified in "#RRGGBB" format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            shadingColor?: string;
            /**
             * Specifies the text of the cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            value?: string;
            /**
             * Specifies the vertical alignment of the cell. The value can be 'Top', 'Center', or 'Bottom'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            verticalAlignment?: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom";
            /**
             * Gets the width of the cell in points.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            width?: number;
        }
        /** An interface describing the data returned by calling `tableCellCollection.toJSON()`. */
        export interface TableCellCollectionData {
            items?: Word.Interfaces.TableCellData[];
        }
        /** An interface describing the data returned by calling `tableBorder.toJSON()`. */
        export interface TableBorderData {
            /**
             * Specifies the table border color.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            color?: string;
            /**
             * Specifies the type of the table border.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            type?: Word.BorderType | "Mixed" | "None" | "Single" | "Double" | "Dotted" | "Dashed" | "DotDashed" | "Dot2Dashed" | "Triple" | "ThinThickSmall" | "ThickThinSmall" | "ThinThickThinSmall" | "ThinThickMed" | "ThickThinMed" | "ThinThickThinMed" | "ThinThickLarge" | "ThickThinLarge" | "ThinThickThinLarge" | "Wave" | "DoubleWave" | "DashedSmall" | "DashDotStroked" | "ThreeDEmboss" | "ThreeDEngrave";
            /**
             * Specifies the width, in points, of the table border. Not applicable to table border types that have fixed widths.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            width?: number;
        }
        /** An interface describing the data returned by calling `template.toJSON()`. */
        export interface TemplateData {
            /**
             * Specifies the East Asian language to use when breaking lines of text in the document or template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            farEastLineBreakLanguage?: Word.FarEastLineBreakLanguageId | "TraditionalChinese" | "Japanese" | "Korean" | "SimplifiedChinese";
            /**
             * Specifies the line break control level for the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            farEastLineBreakLevel?: Word.FarEastLineBreakLevel | "Normal" | "Strict" | "Custom";
            /**
             * Returns the name of the template, including the drive or Web path.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fullName?: string;
            /**
             * Specifies whether the spelling and grammar checker ignores documents based on this template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasNoProofing?: boolean;
            /**
             * Specifies the character spacing adjustment for the template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            justificationMode?: Word.JustificationMode | "Expand" | "Compress" | "CompressKana";
            /**
             * Specifies if Microsoft Word kerns half-width Latin characters and punctuation marks in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            kerningByAlgorithm?: boolean;
            /**
             * Specifies a `LanguageId` value that represents the language in the template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies an East Asian language for the language in the template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Returns only the name of the document template (excluding any path or other location information).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
            /**
             * Specifies the kinsoku characters after which Microsoft Word will not break a line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            noLineBreakAfter?: string;
            /**
             * Specifies the kinsoku characters before which Microsoft Word will not break a line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            noLineBreakBefore?: string;
            /**
             * Returns the path to the document template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            path?: string;
            /**
             * Specifies `true` if the template has not changed since it was last saved, `false` if Microsoft Word displays a prompt to save changes when the document is closed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            saved?: boolean;
            /**
             * Returns the template type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.TemplateType | "Normal" | "Global" | "Attached";
        }
        /** An interface describing the data returned by calling `templateCollection.toJSON()`. */
        export interface TemplateCollectionData {
            items?: Word.Interfaces.TemplateData[];
        }
        /** An interface describing the data returned by calling `trackedChange.toJSON()`. */
        export interface TrackedChangeData {
            /**
             * Gets the author of the tracked change.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            author?: string;
            /**
             * Gets the date of the tracked change.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            date?: Date;
            /**
             * Gets the text of the tracked change.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            text?: string;
            /**
             * Gets the type of the tracked change.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            type?: Word.TrackedChangeType | "None" | "Added" | "Deleted" | "Formatted";
        }
        /** An interface describing the data returned by calling `trackedChangeCollection.toJSON()`. */
        export interface TrackedChangeCollectionData {
            items?: Word.Interfaces.TrackedChangeData[];
        }
        /** An interface describing the data returned by calling `view.toJSON()`. */
        export interface ViewData {
            /**
             * Specifies whether all nonprinting characters are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areAllNonprintingCharactersDisplayed?: boolean;
            /**
             * Gets whether background colors and images are shown when the document is displayed in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areBackgroundsDisplayed?: boolean;
            /**
             * Gets whether square brackets are displayed at the beginning and end of each bookmark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areBookmarksIndicated?: boolean;
            /**
             * Specifies whether Microsoft Word displays the comments in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areCommentsDisplayed?: boolean;
            /**
             * Specifies whether Microsoft Word displays connecting lines from the text to the revision and comment balloons.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areConnectingLinesToRevisionsBalloonDisplayed?: boolean;
            /**
             * Gets whether crop marks are shown in the corners of pages to indicate where margins are located.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areCropMarksDisplayed?: boolean;
            /**
             * Gets whether objects created with the drawing tools are displayed in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areDrawingsDisplayed?: boolean;
            /**
             * Specifies whether shading is applied to the ranges in the document that users have permission to modify.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areEditableRangesShaded?: boolean;
            /**
             * Specifies whether field codes are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFieldCodesDisplayed?: boolean;
            /**
             * Specifies whether Microsoft Word displays formatting changes made to the document with Track Changes enabled.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFormatChangesDisplayed?: boolean;
            /**
             * Specifies whether handwritten ink annotations are shown or hidden.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areInkAnnotationsDisplayed?: boolean;
            /**
             * Specifies whether Microsoft Word displays insertions and deletions made to the document with Track Changes enabled.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areInsertionsAndDeletionsDisplayed?: boolean;
            /**
             * Gets whether lines wrap at the right edge of the document window rather than at the right margin or the right column boundary.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areLinesWrappedToWindow?: boolean;
            /**
             * Gets whether object anchors are displayed next to items that can be positioned in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areObjectAnchorsDisplayed?: boolean;
            /**
             * Gets whether Microsoft Word displays optional line breaks.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areOptionalBreaksDisplayed?: boolean;
            /**
             * Gets whether optional hyphens are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areOptionalHyphensDisplayed?: boolean;
            /**
             * Gets whether other authors' presence should be visible in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areOtherAuthorsVisible?: boolean;
            /**
             * Gets whether the top and bottom margins and the gray area between pages in the document are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageBoundariesDisplayed?: boolean;
            /**
             * Gets whether paragraph marks are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areParagraphsMarksDisplayed?: boolean;
            /**
             * Gets whether blank boxes are displayed as placeholders for pictures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePicturePlaceholdersDisplayed?: boolean;
            /**
             * Specifies whether Microsoft Word displays revisions and comments made to the document with Track Changes enabled.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areRevisionsAndCommentsDisplayed?: boolean;
            /**
             * Gets whether space characters are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areSpacesIndicated?: boolean;
            /**
             * Specifies whether table gridlines are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areTableGridlinesDisplayed?: boolean;
            /**
             * Gets whether tab characters are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areTabsDisplayed?: boolean;
            /**
             * Gets whether dotted lines are displayed around page margins, text columns, objects, and frames in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areTextBoundariesDisplayed?: boolean;
            /**
             * Specifies the column width in Reading mode.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            columnWidth?: Word.ColumnWidth | "Narrow" | "Default" | "Wide";
            /**
             * Gets on-screen shading for fields.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fieldShading?: Word.FieldShading | "Never" | "Always" | "WhenSelected";
            /**
             * Specifies whether all the text in a window is displayed in the same sans-serif font with minimal formatting to speed up display.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isDraft?: boolean;
            /**
             * Specifies whether only the first line of body text is shown in outline view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFirstLineOnlyDisplayed?: boolean;
            /**
             * Specifies whether character formatting is visible in outline view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFormatDisplayed?: boolean;
            /**
             * Specifies whether the window is in full-screen view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFullScreen?: boolean;
            /**
             * Gets whether text formatted as hidden text is displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isHiddenTextDisplayed?: boolean;
            /**
             * Gets whether highlight formatting is displayed and printed with the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isHighlightingDisplayed?: boolean;
            /**
             * Specifies whether the document is in conflict mode view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isInConflictMode?: boolean;
            /**
             * Specifies whether Microsoft Word is in Panning mode.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isInPanning?: boolean;
            /**
             * Specifies whether the document is being viewed in reading layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isInReadingLayout?: boolean;
            /**
             * Specifies whether mail merge data is displayed instead of mail merge fields.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isMailMergeDataView?: boolean;
            /**
             * Specifies whether the text in the document is visible when the header and footer areas are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isMainTextLayerVisible?: boolean;
            /**
             * Specifies whether the pointer is displayed as a magnifying glass in print preview.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isPointerShownAsMagnifier?: boolean;
            /**
             * Specifies whether pages displayed in reading layout view are displayed using the same layout as printed pages.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isReadingLayoutActualView?: boolean;
            /**
             * Specifies whether XML tags are visible in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isXmlMarkupVisible?: boolean;
            /**
             * Specifies the display mode for tracked changes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            markupMode?: Word.RevisionsMode | "Balloon" | "Inline" | "Mixed";
            /**
             * Specifies the page color in Reading mode.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageColor?: Word.PageColor | "None" | "Sepia" | "Inverse";
            /**
             * Specifies the page movement type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageMovementType?: Word.PageMovementType | "Vertical" | "SideToSide";
            /**
             * Specifies whether margins are visible or hidden when the document is viewed in Full Screen Reading view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            readingLayoutTruncateMargins?: Word.ReadingLayoutMargin | "Automatic" | "Suppress" | "Full";
            /**
             * Gets whether Word displays revision balloons in the left or right margin in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            revisionsBalloonSide?: Word.RevisionsBalloonMargin | "Left" | "Right";
            /**
             * Specifies the width of the revision balloons.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            revisionsBalloonWidth?: number;
            /**
             * Specifies how Microsoft Word measures the width of revision balloons.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            revisionsBalloonWidthType?: Word.RevisionsBalloonWidthType | "Percent" | "Points";
            /**
             * Specifies the document element displayed in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            seekView?: Word.SeekView | "MainDocument" | "PrimaryHeader" | "FirstPageHeader" | "EvenPagesHeader" | "PrimaryFooter" | "FirstPageFooter" | "EvenPagesFooter" | "Footnotes" | "Endnotes" | "CurrentPageHeader" | "CurrentPageFooter";
            /**
             * Specifies the active window pane.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            splitSpecial?: Word.SpecialPane | "None" | "PrimaryHeader" | "FirstPageHeader" | "EvenPagesHeader" | "PrimaryFooter" | "FirstPageFooter" | "EvenPagesFooter" | "Footnotes" | "Endnotes" | "FootnoteContinuationNotice" | "FootnoteContinuationSeparator" | "FootnoteSeparator" | "EndnoteContinuationNotice" | "EndnoteContinuationSeparator" | "EndnoteSeparator" | "Comments" | "CurrentPageHeader" | "CurrentPageFooter" | "Revisions" | "RevisionsHoriz" | "RevisionsVert";
            /**
             * Specifies the view type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.ViewType | "Normal" | "Outline" | "Print" | "PrintPreview" | "Master" | "Web" | "Reading" | "Conflict";
        }
        /** An interface describing the data returned by calling `shape.toJSON()`. */
        export interface ShapeData {
            /**
             * Represents the body object of the shape. Only applies to text boxes and geometric shapes.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            body?: Word.Interfaces.BodyData;
            /**
             * Gets the canvas associated with the shape. An object with its `isNullObject` property set to `true` will be returned if the shape type isn't "Canvas". For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            canvas?: Word.Interfaces.CanvasData;
            /**
             * Returns the fill formatting of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            fill?: Word.Interfaces.ShapeFillData;
            /**
             * Gets the top-level parent canvas shape of this child shape. It will be null if it isn't a child shape of a canvas.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            parentCanvas?: Word.Interfaces.ShapeData;
            /**
             * Gets the top-level parent group shape of this child shape. It will be null if it isn't a child shape of a group.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            parentGroup?: Word.Interfaces.ShapeData;
            /**
             * Gets the shape group associated with the shape. An object with its `isNullObject` property set to `true` will be returned if the shape type isn't "GroupShape". For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shapeGroup?: Word.Interfaces.ShapeGroupData;
            /**
             * Gets the text frame object of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            textFrame?: Word.Interfaces.TextFrameData;
            /**
             * Returns the text wrap formatting of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            textWrap?: Word.Interfaces.ShapeTextWrapData;
            /**
             * Specifies whether a given shape can overlap other shapes.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            allowOverlap?: boolean;
            /**
             * Specifies a string that represents the alternative text associated with the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            altTextDescription?: string;
            /**
             * The geometric shape type of the shape. It will be null if isn't a geometric shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            geometricShapeType?: Word.GeometricShapeType | "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus";
            /**
             * The height, in points, of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            height?: number;
            /**
             * The percentage of shape height to vertical relative size, see {@link Word.RelativeSize}. For an inline or child shape, it can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            heightRelative?: number;
            /**
             * Gets an integer that represents the shape identifier.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            id?: number;
            /**
             * Check whether this shape is a child of a group shape or a canvas shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            isChild?: boolean;
            /**
             * The distance, in points, from the left side of the shape to the horizontal relative position, see {@link Word.RelativeHorizontalPosition}. For an inline shape, it will return 0 and can't be set. For a child shape in a canvas or group, it's relative to the top left corner.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            left?: number;
            /**
             * The relative left position as a percentage from the left side of the shape to the horizontal relative position, see {@link Word.RelativeHorizontalPosition}. For an inline or child shape, it will return 0 and can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            leftRelative?: number;
            /**
             * Specifies if the aspect ratio of this shape is locked.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            lockAspectRatio?: boolean;
            /**
             * The name of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            name?: string;
            /**
             * The relative horizontal position of the shape. For an inline shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeHorizontalPosition?: Word.RelativeHorizontalPosition | "Margin" | "Page" | "Column" | "Character" | "LeftMargin" | "RightMargin" | "InsideMargin" | "OutsideMargin";
            /**
             * The relative horizontal size of the shape. For an inline or child shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeHorizontalSize?: Word.RelativeSize | "Margin" | "Page" | "TopMargin" | "BottomMargin" | "InsideMargin" | "OutsideMargin";
            /**
             * The relative vertical position of the shape. For an inline shape, it can't be set. For details, see {@link Word.RelativeVerticalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeVerticalPosition?: Word.RelativeVerticalPosition | "Margin" | "Page" | "Paragraph" | "Line" | "TopMargin" | "BottomMargin" | "InsideMargin" | "OutsideMargin";
            /**
             * The relative vertical size of the shape. For an inline or child shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeVerticalSize?: Word.RelativeSize | "Margin" | "Page" | "TopMargin" | "BottomMargin" | "InsideMargin" | "OutsideMargin";
            /**
             * Specifies the rotation, in degrees, of the shape. Not applicable to Canvas shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            rotation?: number;
            /**
             * The distance, in points, from the top edge of the shape to the vertical relative position (see {@link Word.RelativeVerticalPosition}). For an inline shape, it will return 0 and can't be set. For a child shape in a canvas or group, it's relative to the top left corner.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            top?: number;
            /**
             * The relative top position as a percentage from the top edge of the shape to the vertical relative position, see {@link Word.RelativeVerticalPosition}. For an inline or child shape, it will return 0 and can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            topRelative?: number;
            /**
             * Gets the shape type. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            type?: Word.ShapeType | "Unsupported" | "TextBox" | "GeometricShape" | "Group" | "Picture" | "Canvas";
            /**
             * Specifies if the shape is visible. Not applicable to inline shapes.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            visible?: boolean;
            /**
             * The width, in points, of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            width?: number;
            /**
             * The percentage of shape width to horizontal relative size, see {@link Word.RelativeSize}. For an inline or child shape, it can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            widthRelative?: number;
        }
        /** An interface describing the data returned by calling `shapeGroup.toJSON()`. */
        export interface ShapeGroupData {
            /**
             * Gets the Shape object associated with the group.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shape?: Word.Interfaces.ShapeData;
            /**
             * Gets the collection of Shape objects. Currently, only text boxes, geometric shapes, and pictures are supported.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shapes?: Word.Interfaces.ShapeData[];
            /**
             * Gets an integer that represents the shape group identifier.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            id?: number;
        }
        /** An interface describing the data returned by calling `canvas.toJSON()`. */
        export interface CanvasData {
            /**
             * Gets the Shape object associated with the canvas.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shape?: Word.Interfaces.ShapeData;
            /**
             * Gets the collection of Shape objects. Currently, only text boxes, pictures, and geometric shapes are supported.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shapes?: Word.Interfaces.ShapeData[];
            /**
             * Gets an integer that represents the canvas identifier.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            id?: number;
        }
        /** An interface describing the data returned by calling `shapeCollection.toJSON()`. */
        export interface ShapeCollectionData {
            items?: Word.Interfaces.ShapeData[];
        }
        /** An interface describing the data returned by calling `shapeFill.toJSON()`. */
        export interface ShapeFillData {
            /**
             * Specifies the shape fill background color. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            backgroundColor?: string;
            /**
             * Specifies the shape fill foreground color. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            foregroundColor?: string;
            /**
             * Specifies the transparency percentage of the fill as a value from 0.0 (opaque) through 1.0 (clear). Returns `null` if the shape type does not support transparency or the shape fill has inconsistent transparency, such as with a gradient fill type.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            transparency?: number;
            /**
             * Returns the fill type of the shape. See `Word.ShapeFillType` for details.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            type?: Word.ShapeFillType | "NoFill" | "Solid" | "Gradient" | "Pattern" | "Picture" | "Texture" | "Mixed";
        }
        /** An interface describing the data returned by calling `textFrame.toJSON()`. */
        export interface TextFrameData {
            /**
             * The automatic sizing settings for the text frame. A text frame can be set to automatically fit the text to the text frame, to automatically fit the text frame to the text, or not perform any automatic sizing.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            autoSizeSetting?: Word.ShapeAutoSize | "None" | "TextToFitShape" | "ShapeToFitText" | "Mixed";
            /**
             * Represents the bottom margin, in points, of the text frame.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            bottomMargin?: number;
            /**
             * Specifies if the text frame contains text.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            hasText?: boolean;
            /**
             * Represents the left margin, in points, of the text frame.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            leftMargin?: number;
            /**
             * Returns True if text in the text frame shouldn't rotate when the shape is rotated.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            noTextRotation?: boolean;
            /**
             * Represents the angle to which the text is oriented for the text frame. See `Word.ShapeTextOrientation` for details.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            orientation?: Word.ShapeTextOrientation | "None" | "Horizontal" | "EastAsianVertical" | "Vertical270" | "Vertical" | "EastAsianHorizontalRotated" | "Mixed";
            /**
             * Represents the right margin, in points, of the text frame.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            rightMargin?: number;
            /**
             * Represents the top margin, in points, of the text frame.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            topMargin?: number;
            /**
             * Represents the vertical alignment of the text frame. See `Word.ShapeTextVerticalAlignment` for details.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            verticalAlignment?: Word.ShapeTextVerticalAlignment | "Top" | "Middle" | "Bottom";
            /**
             * Determines whether lines break automatically to fit text inside the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            wordWrap?: boolean;
        }
        /** An interface describing the data returned by calling `shapeTextWrap.toJSON()`. */
        export interface ShapeTextWrapData {
            /**
             * Specifies the distance (in points) between the document text and the bottom edge of the text-free area surrounding the specified shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            bottomDistance?: number;
            /**
             * Specifies the distance (in points) between the document text and the left edge of the text-free area surrounding the specified shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            leftDistance?: number;
            /**
             * Specifies the distance (in points) between the document text and the right edge of the text-free area surrounding the specified shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            rightDistance?: number;
            /**
             * Specifies whether the document text should wrap on both sides of the specified shape, on either the left or right side only, or on the side of the shape that's farthest from the page margin.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            side?: Word.ShapeTextWrapSide | "None" | "Both" | "Left" | "Right" | "Largest";
            /**
             * Specifies the distance (in points) between the document text and the top edge of the text-free area surrounding the specified shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            topDistance?: number;
            /**
             * Specifies the text wrap type around the shape. See `Word.ShapeTextWrapType` for details.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            type?: Word.ShapeTextWrapType | "Inline" | "Square" | "Tight" | "Through" | "TopBottom" | "Behind" | "Front";
        }
        /** An interface describing the data returned by calling `reviewer.toJSON()`. */
        export interface ReviewerData {
            /**
             * Specifies if the `Reviewer` object is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
        }
        /** An interface describing the data returned by calling `reviewerCollection.toJSON()`. */
        export interface ReviewerCollectionData {
            items?: Word.Interfaces.ReviewerData[];
        }
        /** An interface describing the data returned by calling `revisionsFilter.toJSON()`. */
        export interface RevisionsFilterData {
            /**
             * Specifies a `RevisionsMarkup` value that represents the extent of reviewer markup displayed in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            markup?: Word.RevisionsMarkup | "None" | "Simple" | "All";
            /**
             * Specifies a `RevisionsView` value that represents globally whether Word displays the original version of the document or the final version, which might have revisions and formatting changes applied.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            view?: Word.RevisionsView | "Final" | "Original";
        }
        /** An interface describing the data returned by calling `repeatingSectionItem.toJSON()`. */
        export interface RepeatingSectionItemData {
            /**
             * Returns the range of this repeating section item, excluding the start and end tags.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
        }
        /** An interface describing the data returned by calling `revision.toJSON()`. */
        export interface RevisionData {
            /**
             * Gets a `Range` object that represents the range of text that was moved from one place to another in the document with tracked changes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            movedRange?: Word.Interfaces.RangeData;
            /**
             * Gets a `Range` object that represents the portion of the document that's contained within a revision mark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Gets the name of the user who made the tracked change.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            author?: string;
            /**
             * Gets the date and time when the tracked change was made.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            date?: Date;
            /**
             * Gets the description of tracked formatting changes in the revision.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            formatDescription?: string;
            /**
             * Gets a number that represents the position of this item in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            index?: number;
            /**
             * Gets the revision type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.RevisionType | "None" | "Insert" | "Delete" | "Property" | "ParagraphNumber" | "DisplayField" | "Reconcile" | "Conflict" | "Style" | "Replace" | "ParagraphProperty" | "TableProperty" | "SectionProperty" | "StyleDefinition" | "MovedFrom" | "MovedTo" | "CellInsertion" | "CellDeletion" | "CellMerge" | "CellSplit" | "ConflictInsert" | "ConflictDelete";
        }
        /** An interface describing the data returned by calling `revisionCollection.toJSON()`. */
        export interface RevisionCollectionData {
            items?: Word.Interfaces.RevisionData[];
        }
        /** An interface describing the data returned by calling `datePickerContentControl.toJSON()`. */
        export interface DatePickerContentControlData {
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
             placeholderText?: Word.Interfaces.BuildingBlockData;
            /**
             * Gets a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Gets an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingData;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: string;
            /**
             * Specifies a `CalendarType` value that represents the calendar type for the date picker content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dateCalendarType?: Word.CalendarType | "Western" | "Arabic" | "Hebrew" | "Taiwan" | "Japan" | "Thai" | "Korean" | "SakaEra" | "TranslitEnglish" | "TranslitFrench" | "Umalqura";
            /**
             * Specifies the format in which dates are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dateDisplayFormat?: string;
            /**
             * Specifies a `LanguageId` that represents the language format for the date displayed in the date picker content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dateDisplayLocale?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies a `ContentControlDateStorageFormat` value that represents the format for storage and retrieval of dates when the date picker content control is bound to the XML data store of the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dateStorageFormat?: Word.ContentControlDateStorageFormat | "Text" | "Date" | "DateTime";
            /**
             * Gets the identification for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: string;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Specifies the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: Word.ContentControlLevel | "Inline" | "Paragraph" | "Row" | "Cell";
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Gets whether the placeholder text for the content control is being displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showingPlaceholderText?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: string;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: string;
        }
        /** An interface describing the data returned by calling `pictureContentControl.toJSON()`. */
        export interface PictureContentControlData {
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockData;
            /**
             * Returns a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingData;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: string;
            /**
             * Returns the identification for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: string;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Returns the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: Word.ContentControlLevel | "Inline" | "Paragraph" | "Row" | "Cell";
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Returns whether the placeholder text for the content control is being displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showingPlaceholderText?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: string;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: string;
        }
        /** An interface describing the data returned by calling `groupContentControl.toJSON()`. */
        export interface GroupContentControlData {
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockData;
            /**
             * Gets a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Gets an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingData;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: string;
            /**
             * Returns the identification for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: string;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Gets the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: Word.ContentControlLevel | "Inline" | "Paragraph" | "Row" | "Cell";
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Returns whether the placeholder text for the content control is being displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showingPlaceholderText?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: string;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: string;
        }
        /** An interface describing the data returned by calling `buildingBlockGalleryContentControl.toJSON()`. */
        export interface BuildingBlockGalleryContentControlData {
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockData;
            /**
             * Returns a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingData;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
            /**
             * Specifies the category for the building block content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            buildingBlockCategory?: string;
            /**
             * Specifies a `BuildingBlockType` value that represents the type of building block for the building block content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            buildingBlockType?: Word.BuildingBlockType | "QuickParts" | "CoverPage" | "Equations" | "Footers" | "Headers" | "PageNumber" | "Tables" | "Watermarks" | "AutoText" | "TextBox" | "PageNumberTop" | "PageNumberBottom" | "PageNumberPage" | "TableOfContents" | "CustomQuickParts" | "CustomCoverPage" | "CustomEquations" | "CustomFooters" | "CustomHeaders" | "CustomPageNumber" | "CustomTables" | "CustomWatermarks" | "CustomAutoText" | "CustomTextBox" | "CustomPageNumberTop" | "CustomPageNumberBottom" | "CustomPageNumberPage" | "CustomTableOfContents" | "Custom1" | "Custom2" | "Custom3" | "Custom4" | "Custom5" | "Bibliography" | "CustomBibliography";
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: string;
            /**
             * Gets the identification for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: string;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Gets the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: Word.ContentControlLevel | "Inline" | "Paragraph" | "Row" | "Cell";
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Gets if the placeholder text for the content control is being displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showingPlaceholderText?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: string;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: string;
        }
        /** An interface describing the data returned by calling `repeatingSectionContentControl.toJSON()`. */
        export interface RepeatingSectionContentControlData {
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockData;
            /**
             * Gets a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlapping?: Word.Interfaces.XmlMappingData;
            /**
             * Specifies whether users can add or remove sections from this repeating section content control by using the user interface.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            allowInsertDeleteSection?: boolean;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: string;
            /**
             * Returns the identification for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: string;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Returns the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: Word.ContentControlLevel | "Inline" | "Paragraph" | "Row" | "Cell";
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Specifies the name of the repeating section items used in the context menu associated with this repeating section content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            repeatingSectionItemTitle?: string;
            /**
             * Returns whether the placeholder text for the content control is being displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showingPlaceholderText?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: string;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: string;
        }
        /** An interface describing the data returned by calling `frame.toJSON()`. */
        export interface FrameData {
            /**
             * Returns a `BorderUniversalCollection` object that represents all the borders for the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            borders?: Word.Interfaces.BorderUniversalData[];
            /**
             * Returns a `Range` object that represents the portion of the document that's contained within the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Returns a `ShadingUniversal` object that refers to the shading formatting for the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalData;
            /**
             * Specifies the height (in points) of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            height?: number;
            /**
             * Specifies a `FrameSizeRule` value that represents the rule for determining the height of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            heightRule?: Word.FrameSizeRule | "Auto" | "AtLeast" | "Exact";
            /**
             * Specifies the horizontal distance between the frame and the surrounding text, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalDistanceFromText?: number;
            /**
             * Specifies the horizontal distance between the edge of the frame and the item specified by the `relativeHorizontalPosition` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalPosition?: number;
            /**
             * Specifies if the frame is locked.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockAnchor?: boolean;
            /**
             * Specifies the relative horizontal position of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            relativeHorizontalPosition?: Word.RelativeHorizontalPosition | "Margin" | "Page" | "Column" | "Character" | "LeftMargin" | "RightMargin" | "InsideMargin" | "OutsideMargin";
            /**
             * Specifies the relative vertical position of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            relativeVerticalPosition?: Word.RelativeVerticalPosition | "Margin" | "Page" | "Paragraph" | "Line" | "TopMargin" | "BottomMargin" | "InsideMargin" | "OutsideMargin";
            /**
             * Specifies if document text wraps around the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textWrap?: boolean;
            /**
             * Specifies the vertical distance (in points) between the frame and the surrounding text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalDistanceFromText?: number;
            /**
             * Specifies the vertical distance between the edge of the frame and the item specified by the `relativeVerticalPosition` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalPosition?: number;
            /**
             * Specifies the width (in points) of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: number;
            /**
             * Specifies the rule used to determine the width of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            widthRule?: Word.FrameSizeRule | "Auto" | "AtLeast" | "Exact";
        }
        /** An interface describing the data returned by calling `frameCollection.toJSON()`. */
        export interface FrameCollectionData {
            items?: Word.Interfaces.FrameData[];
        }
        /** An interface describing the data returned by calling `documentLibraryVersion.toJSON()`. */
        export interface DocumentLibraryVersionData {
            /**
             * Gets any optional comments associated with this version of the shared document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            comments?: string;
            /**
             * Gets the date and time at which this version of the shared document was last saved to the server.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            modified?: any;
            /**
             * Gets the name of the user who last saved this version of the shared document to the server.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            modifiedBy?: string;
        }
        /** An interface describing the data returned by calling `documentLibraryVersionCollection.toJSON()`. */
        export interface DocumentLibraryVersionCollectionData {
            items?: Word.Interfaces.DocumentLibraryVersionData[];
        }
        /** An interface describing the data returned by calling `dropCap.toJSON()`. */
        export interface DropCapData {
            /**
             * Gets the distance (in points) between the dropped capital letter and the paragraph text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            distanceFromText?: number;
            /**
             * Gets the name of the font for the dropped capital letter.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fontName?: string;
            /**
             * Gets the height (in lines) of the dropped capital letter.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            linesToDrop?: number;
            /**
             * Gets the position of the dropped capital letter.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            position?: Word.DropPosition | "None" | "Normal" | "Margin";
        }
        /** An interface describing the data returned by calling `listFormat.toJSON()`. */
        export interface ListFormatData {
            /**
             * Returns a `List` object that represents the first formatted list contained in the `ListFormat` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            list?: Word.Interfaces.ListData;
            /**
             * Gets the list template associated with the `ListFormat` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listTemplate?: Word.Interfaces.ListTemplateData;
            /**
             * Indicates whether the `ListFormat` object contains a single list.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isSingleList?: boolean;
            /**
             * Indicates whether the `ListFormat` object contains a single list template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isSingleListTemplate?: boolean;
            /**
             * Specifies the list level number for the first paragraph for the `ListFormat` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listLevelNumber?: number;
            /**
             * Gets the string representation of the list value of the first paragraph in the range for the `ListFormat` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listString?: string;
            /**
             * Gets the type of the list for the `ListFormat` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listType?: Word.ListType | "ListNoNumbering" | "ListListNumOnly" | "ListBullet" | "ListSimpleNumbering" | "ListOutlineNumbering" | "ListMixedNumbering" | "ListPictureBullet";
            /**
             * Gets the numeric value of the the first paragraph in the range for the `ListFormat` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listValue?: number;
        }
        /** An interface describing the data returned by calling `fillFormat.toJSON()`. */
        export interface FillFormatData {
            /**
             * Returns a `ColorFormat` object that represents the background color for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            backgroundColor?: Word.Interfaces.ColorFormatData;
            /**
             * Returns a `ColorFormat` object that represents the foreground color for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundColor?: Word.Interfaces.ColorFormatData;
            /**
             * Specifies the angle of the gradient fill. The valid range of values is from 0 to 359.9.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gradientAngle?: number;
            /**
             * Gets the gradient color type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gradientColorType?: Word.GradientColorType | "Mixed" | "OneColor" | "TwoColors" | "PresetColors" | "MultiColor";
            /**
             * Returns how dark or light a one-color gradient fill is.
                        A value of 0 means that black is mixed in with the shape's foreground color to form the gradient.
                        A value of 1 means that white is mixed in.
                        Values between 0 and 1 mean that a darker or lighter shade of the foreground color is mixed in.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gradientDegree?: number;
            /**
             * Returns the gradient style for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gradientStyle?: Word.GradientStyle | "Mixed" | "Horizontal" | "Vertical" | "DiagonalUp" | "DiagonalDown" | "FromCorner" | "FromTitle" | "FromCenter";
            /**
             * Returns the gradient variant for the fill as an integer value from 1 to 4 for most gradient fills.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gradientVariant?: number;
            /**
             * Specifies if the object, or the formatting applied to it, is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Returns a `PatternType` value that represents the pattern applied to the fill or line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pattern?: Word.PatternType | "Mixed" | "Percent5" | "Percent10" | "Percent20" | "Percent25" | "Percent30" | "Percent40" | "Percent50" | "Percent60" | "Percent70" | "Percent75" | "Percent80" | "Percent90" | "DarkHorizontal" | "DarkVertical" | "DarkDownwardDiagonal" | "DarkUpwardDiagonal" | "SmallCheckerBoard" | "Trellis" | "LightHorizontal" | "LightVertical" | "LightDownwardDiagonal" | "LightUpwardDiagonal" | "SmallGrid" | "DottedDiamond" | "WideDownwardDiagonal" | "WideUpwardDiagonal" | "DashedUpwardDiagonal" | "DashedDownwardDiagonal" | "NarrowVertical" | "NarrowHorizontal" | "DashedVertical" | "DashedHorizontal" | "LargeConfetti" | "LargeGrid" | "HorizontalBrick" | "LargeCheckerBoard" | "SmallConfetti" | "ZigZag" | "SolidDiamond" | "DiagonalBrick" | "OutlinedDiamond" | "Plaid" | "Sphere" | "Weave" | "DottedGrid" | "Divot" | "Shingle" | "Wave" | "Horizontal" | "Vertical" | "Cross" | "DownwardDiagonal" | "UpwardDiagonal" | "DiagonalCross";
            /**
             * Returns the preset gradient type for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetGradientType?: Word.PresetGradientType | "Mixed" | "EarlySunset" | "LateSunset" | "Nightfall" | "Daybreak" | "Horizon" | "Desert" | "Ocean" | "CalmWater" | "Fire" | "Fog" | "Moss" | "Peacock" | "Wheat" | "Parchment" | "Mahogany" | "Rainbow" | "RainbowII" | "Gold" | "GoldII" | "Brass" | "Chrome" | "ChromeII" | "Silver" | "Sapphire";
            /**
             * Gets the preset texture.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetTexture?: Word.PresetTexture | "Mixed" | "Papyrus" | "Canvas" | "Denim" | "WovenMat" | "WaterDroplets" | "PaperBag" | "FishFossil" | "Sand" | "GreenMarble" | "WhiteMarble" | "BrownMarble" | "Granite" | "Newsprint" | "RecycledPaper" | "Parchment" | "Stationery" | "BlueTissuePaper" | "PinkTissuePaper" | "PurpleMesh" | "Bouquet" | "Cork" | "Walnut" | "Oak" | "MediumWood";
            /**
             * Specifies whether the fill rotates with the shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotateWithObject?: boolean;
            /**
             * Specifies the alignment (the origin of the coordinate grid) for the tiling of the texture fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureAlignment?: Word.TextureAlignment | "Mixed" | "TopLeft" | "Top" | "TopRight" | "Left" | "Center" | "Right" | "BottomLeft" | "Bottom" | "BottomRight";
            /**
             * Specifies the horizontal scaling factor for the texture fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureHorizontalScale?: number;
            /**
             * Returns the name of the custom texture file for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureName?: string;
            /**
             * Specifies the horizontal offset of the texture from the origin in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureOffsetX?: number;
            /**
             * Specifies the vertical offset of the texture.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureOffsetY?: number;
            /**
             * Specifies whether the texture is tiled.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureTile?: boolean;
            /**
             * Returns the texture type for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureType?: Word.TextureType | "Mixed" | "Preset" | "UserDefined";
            /**
             * Specifies the vertical scaling factor for the texture fill as a value between 0.0 and 1.0.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureVerticalScale?: number;
            /**
             * Specifies the degree of transparency of the fill for a shape as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: number;
            /**
             * Gets the fill format type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.FillType | "Mixed" | "Solid" | "Patterned" | "Gradient" | "Textured" | "Background" | "Picture";
        }
        /** An interface describing the data returned by calling `glowFormat.toJSON()`. */
        export interface GlowFormatData {
            /**
             * Returns a `ColorFormat` object that represents the color for a glow effect.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: Word.Interfaces.ColorFormatData;
            /**
             * Specifies the length of the radius for a glow effect.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            radius?: number;
            /**
             * Specifies the degree of transparency for the glow effect as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: number;
        }
        /** An interface describing the data returned by calling `lineFormat.toJSON()`. */
        export interface LineFormatData {
            /**
             * Gets a `ColorFormat` object that represents the background color for a patterned line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            backgroundColor?: Word.Interfaces.ColorFormatData;
            /**
             * Gets a `ColorFormat` object that represents the foreground color for the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundColor?: Word.Interfaces.ColorFormatData;
            /**
             * Specifies the length of the arrowhead at the beginning of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            beginArrowheadLength?: Word.ArrowheadLength | "Mixed" | "Short" | "Medium" | "Long";
            /**
             * Specifies the style of the arrowhead at the beginning of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            beginArrowheadStyle?: Word.ArrowheadStyle | "Mixed" | "None" | "Triangle" | "Open" | "Stealth" | "Diamond" | "Oval";
            /**
             * Specifies the width of the arrowhead at the beginning of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            beginArrowheadWidth?: Word.ArrowheadWidth | "Mixed" | "Narrow" | "Medium" | "Wide";
            /**
             * Specifies the dash style for the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dashStyle?: Word.LineDashStyle | "Mixed" | "Solid" | "SquareDot" | "RoundDot" | "Dash" | "DashDot" | "DashDotDot" | "LongDash" | "LongDashDot" | "LongDashDotDot" | "SysDash" | "SysDot" | "SysDashDot";
            /**
             * Specifies the length of the arrowhead at the end of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            endArrowheadLength?: Word.ArrowheadLength | "Mixed" | "Short" | "Medium" | "Long";
            /**
             * Specifies the style of the arrowhead at the end of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            endArrowheadStyle?: Word.ArrowheadStyle | "Mixed" | "None" | "Triangle" | "Open" | "Stealth" | "Diamond" | "Oval";
            /**
             * Specifies the width of the arrowhead at the end of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            endArrowheadWidth?: Word.ArrowheadWidth | "Mixed" | "Narrow" | "Medium" | "Wide";
            /**
             * Specifies if to draw lines inside a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            insetPen?: boolean;
            /**
             * Specifies if the object, or the formatting applied to it, is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies the pattern applied to the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pattern?: Word.PatternType | "Mixed" | "Percent5" | "Percent10" | "Percent20" | "Percent25" | "Percent30" | "Percent40" | "Percent50" | "Percent60" | "Percent70" | "Percent75" | "Percent80" | "Percent90" | "DarkHorizontal" | "DarkVertical" | "DarkDownwardDiagonal" | "DarkUpwardDiagonal" | "SmallCheckerBoard" | "Trellis" | "LightHorizontal" | "LightVertical" | "LightDownwardDiagonal" | "LightUpwardDiagonal" | "SmallGrid" | "DottedDiamond" | "WideDownwardDiagonal" | "WideUpwardDiagonal" | "DashedUpwardDiagonal" | "DashedDownwardDiagonal" | "NarrowVertical" | "NarrowHorizontal" | "DashedVertical" | "DashedHorizontal" | "LargeConfetti" | "LargeGrid" | "HorizontalBrick" | "LargeCheckerBoard" | "SmallConfetti" | "ZigZag" | "SolidDiamond" | "DiagonalBrick" | "OutlinedDiamond" | "Plaid" | "Sphere" | "Weave" | "DottedGrid" | "Divot" | "Shingle" | "Wave" | "Horizontal" | "Vertical" | "Cross" | "DownwardDiagonal" | "UpwardDiagonal" | "DiagonalCross";
            /**
             * Specifies the line format style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            style?: Word.LineFormatStyle | "Mixed" | "Single" | "ThinThin" | "ThinThick" | "ThickThin" | "ThickBetweenThin";
            /**
             * Specifies the degree of transparency of the line as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: number;
            /**
             * Specifies the thickness of the line in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            weight?: number;
        }
        /** An interface describing the data returned by calling `reflectionFormat.toJSON()`. */
        export interface ReflectionFormatData {
            /**
             * Specifies the degree of blur effect applied to the `ReflectionFormat` object as a value between 0.0 and 100.0.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            blur?: number;
            /**
             * Specifies the amount of separation, in points, of the reflected image from the shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            offset?: number;
            /**
             * Specifies the size of the reflection as a percentage of the reflected shape from 0 to 100.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            size?: number;
            /**
             * Specifies the degree of transparency for the reflection effect as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: number;
            /**
             * Specifies a `ReflectionType` value that represents the type and direction of the lighting for a shape reflection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.ReflectionType | "Mixed" | "None" | "Type1" | "Type2" | "Type3" | "Type4" | "Type5" | "Type6" | "Type7" | "Type8" | "Type9";
        }
        /** An interface describing the data returned by calling `colorFormat.toJSON()`. */
        export interface ColorFormatData {
            /**
             * Specifies the brightness of a specified shape color. Valid values are from `-1` (darkest) to `1` (lightest), `0` represents neutral.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            brightness?: number;
            /**
             * Specifies the theme color for a color format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            objectThemeColor?: Word.ThemeColorIndex | "NotThemeColor" | "MainDark1" | "MainLight1" | "MainDark2" | "MainLight2" | "Accent1" | "Accent2" | "Accent3" | "Accent4" | "Accent5" | "Accent6" | "Hyperlink" | "HyperlinkFollowed" | "Background1" | "Text1" | "Background2" | "Text2";
            /**
             * Specifies the red-green-blue (RGB) value of the specified color. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rgb?: string;
            /**
             * Specifies the lightening or darkening of a specified shape's color. Valid values are from `-1` (darkest) to `1` (lightest), `0` represents neutral.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tintAndShade?: number;
            /**
             * Returns the shape color type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.ColorType | "rgb" | "scheme";
        }
        /** An interface describing the data returned by calling `shadowFormat.toJSON()`. */
        export interface ShadowFormatData {
            /**
             * Returns a `ColorFormat` object that represents the foreground color for the fill, line, or shadow.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundColor?: Word.Interfaces.ColorFormatData;
            /**
             * Specifies the blur level for a shadow format as a value between 0.0 and 100.0.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            blur?: number;
            /**
             * Specifies whether the object or the formatting applied to it is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies `true` if the shadow of the shape appears filled in and is obscured by the shape, even if the shape has no fill,
                        `false` if the shadow has no fill and the outline of the shadow is visible through the shape if the shape has no fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            obscured?: boolean;
            /**
             * Specifies the horizontal offset (in points) of the shadow from the shape.
                        A positive value offsets the shadow to the right of the shape; a negative value offsets it to the left.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            offsetX?: number;
            /**
             * Specifies the vertical offset (in points) of the shadow from the shape.
                        A positive value offsets the shadow to the top of the shape; a negative value offsets it to the bottom.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            offsetY?: number;
            /**
             * Specifies whether to rotate the shadow when rotating the shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotateWithShape?: boolean;
            /**
             * Specifies the width of the shadow.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            size?: number;
            /**
             * Specifies the type of shadow formatting to apply to a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            style?: Word.ShadowStyle | "Mixed" | "OuterShadow" | "InnerShadow";
            /**
             * Specifies the degree of transparency of the shadow as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: number;
            /**
             * Specifies the shape shadow type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.ShadowType | "Mixed" | "Type1" | "Type2" | "Type3" | "Type4" | "Type5" | "Type6" | "Type7" | "Type8" | "Type9" | "Type10" | "Type11" | "Type12" | "Type13" | "Type14" | "Type15" | "Type16" | "Type17" | "Type18" | "Type19" | "Type20" | "Type21" | "Type22" | "Type23" | "Type24" | "Type25" | "Type26" | "Type27" | "Type28" | "Type29" | "Type30" | "Type31" | "Type32" | "Type33" | "Type34" | "Type35" | "Type36" | "Type37" | "Type38" | "Type39" | "Type40" | "Type41" | "Type42" | "Type43";
        }
        /** An interface describing the data returned by calling `threeDimensionalFormat.toJSON()`. */
        export interface ThreeDimensionalFormatData {
            /**
             * Returns a `ColorFormat` object that represents color of the contour of a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            contourColor?: Word.Interfaces.ColorFormatData;
            /**
             * Returns a `ColorFormat` object that represents the color of the shape's extrusion.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            extrusionColor?: Word.Interfaces.ColorFormatData;
            /**
             * Specifies the depth of the bottom bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelBottomDepth?: number;
            /**
             * Specifies the inset size for the bottom bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelBottomInset?: number;
            /**
             * Specifies a `BevelType` value that represents the bevel type for the bottom bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelBottomType?: Word.BevelType | "mixed" | "none" | "relaxedInset" | "circle" | "slope" | "cross" | "angle" | "softRound" | "convex" | "coolSlant" | "divot" | "riblet" | "hardEdge" | "artDeco";
            /**
             * Specifies the depth of the top bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelTopDepth?: number;
            /**
             * Specifies the inset size for the top bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelTopInset?: number;
            /**
             * Specifies a `BevelType` value that represents the bevel type for the top bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelTopType?: Word.BevelType | "mixed" | "none" | "relaxedInset" | "circle" | "slope" | "cross" | "angle" | "softRound" | "convex" | "coolSlant" | "divot" | "riblet" | "hardEdge" | "artDeco";
            /**
             * Specifies the width of the contour of a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            contourWidth?: number;
            /**
             * Specifies the depth of the shape's extrusion.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            depth?: number;
            /**
             * Specifies whether the extrusion color is based on the extruded shape's fill (the front face of the extrusion)
                        and automatically changes when the shape's fill changes, or whether the extrusion color is independent of the shape's fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            extrusionColorType?: Word.ExtrusionColorType | "mixed" | "automatic" | "custom";
            /**
             * Specifies the amount of perspective for a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fieldOfView?: number;
            /**
             * Specifies `true` if the extrusion appears in perspective — that is, if the walls of the extrusion narrow toward a vanishing point,
                        `false` if the extrusion is a parallel, or orthographic, projection — that is, if the walls don't narrow toward a vanishing point.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isPerspective?: boolean;
            /**
             * Specifies if the specified object, or the formatting applied to it, is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies the angle of the lighting.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lightAngle?: number;
            /**
             * Returns a `PresetCamera` value that represents the camera presets.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetCamera?: Word.PresetCamera | "Mixed" | "LegacyObliqueTopLeft" | "LegacyObliqueTop" | "LegacyObliqueTopRight" | "LegacyObliqueLeft" | "LegacyObliqueFront" | "LegacyObliqueRight" | "LegacyObliqueBottomLeft" | "LegacyObliqueBottom" | "LegacyObliqueBottomRight" | "LegacyPerspectiveTopLeft" | "LegacyPerspectiveTop" | "LegacyPerspectiveTopRight" | "LegacyPerspectiveLeft" | "LegacyPerspectiveFront" | "LegacyPerspectiveRight" | "LegacyPerspectiveBottomLeft" | "LegacyPerspectiveBottom" | "LegacyPerspectiveBottomRight" | "OrthographicFront" | "IsometricTopUp" | "IsometricTopDown" | "IsometricBottomUp" | "IsometricBottomDown" | "IsometricLeftUp" | "IsometricLeftDown" | "IsometricRightUp" | "IsometricRightDown" | "IsometricOffAxis1Left" | "IsometricOffAxis1Right" | "IsometricOffAxis1Top" | "IsometricOffAxis2Left" | "IsometricOffAxis2Right" | "IsometricOffAxis2Top" | "IsometricOffAxis3Left" | "IsometricOffAxis3Right" | "IsometricOffAxis3Bottom" | "IsometricOffAxis4Left" | "IsometricOffAxis4Right" | "IsometricOffAxis4Bottom" | "ObliqueTopLeft" | "ObliqueTop" | "ObliqueTopRight" | "ObliqueLeft" | "ObliqueRight" | "ObliqueBottomLeft" | "ObliqueBottom" | "ObliqueBottomRight" | "PerspectiveFront" | "PerspectiveLeft" | "PerspectiveRight" | "PerspectiveAbove" | "PerspectiveBelow" | "PerspectiveAboveLeftFacing" | "PerspectiveAboveRightFacing" | "PerspectiveContrastingLeftFacing" | "PerspectiveContrastingRightFacing" | "PerspectiveHeroicLeftFacing" | "PerspectiveHeroicRightFacing" | "PerspectiveHeroicExtremeLeftFacing" | "PerspectiveHeroicExtremeRightFacing" | "PerspectiveRelaxed" | "PerspectiveRelaxedModerately";
            /**
             * Returns the direction taken by the extrusion's sweep path leading away from the extruded shape (the front face of the extrusion).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetExtrusionDirection?: Word.PresetExtrusionDirection | "Mixed" | "BottomRight" | "Bottom" | "BottomLeft" | "Right" | "None" | "Left" | "TopRight" | "Top" | "TopLeft";
            /**
             * Specifies a `LightRigType` value that represents the lighting preset.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetLighting?: Word.LightRigType | "Mixed" | "LegacyFlat1" | "LegacyFlat2" | "LegacyFlat3" | "LegacyFlat4" | "LegacyNormal1" | "LegacyNormal2" | "LegacyNormal3" | "LegacyNormal4" | "LegacyHarsh1" | "LegacyHarsh2" | "LegacyHarsh3" | "LegacyHarsh4" | "ThreePoint" | "Balanced" | "Soft" | "Harsh" | "Flood" | "Contrasting" | "Morning" | "Sunrise" | "Sunset" | "Chilly" | "Freezing" | "Flat" | "TwoPoint" | "Glow" | "BrightRoom";
            /**
             * Specifies the position of the light source relative to the extrusion.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetLightingDirection?: Word.PresetLightingDirection | "Mixed" | "TopLeft" | "Top" | "TopRight" | "Left" | "None" | "Right" | "BottomLeft" | "Bottom" | "BottomRight";
            /**
             * Specifies the intensity of the extrusion lighting.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetLightingSoftness?: Word.PresetLightingSoftness | "Mixed" | "Dim" | "Normal" | "Bright";
            /**
             * Specifies the extrusion surface material.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetMaterial?: Word.PresetMaterial | "Mixed" | "Matte" | "Plastic" | "Metal" | "WireFrame" | "Matte2" | "Plastic2" | "Metal2" | "WarmMatte" | "TranslucentPowder" | "Powder" | "DarkEdge" | "SoftEdge" | "Clear" | "Flat" | "SoftMetal";
            /**
             * Returns the preset extrusion format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetThreeDimensionalFormat?: Word.PresetThreeDimensionalFormat | "Mixed" | "Format1" | "Format2" | "Format3" | "Format4" | "Format5" | "Format6" | "Format7" | "Format8" | "Format9" | "Format10" | "Format11" | "Format12" | "Format13" | "Format14" | "Format15" | "Format16" | "Format17" | "Format18" | "Format19" | "Format20";
            /**
             * Specifies whether text on a shape rotates with shape. `true` rotates the text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            projectText?: boolean;
            /**
             * Specifies the rotation of the extruded shape around the x-axis in degrees.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotationX?: number;
            /**
             * Specifies the rotation of the extruded shape around the y-axis in degrees.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotationY?: number;
            /**
             * Specifies the z-axis rotation of the camera.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotationZ?: number;
            /**
             * Specifies the position on the z-axis for the shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            z?: number;
        }
        /** An interface describing the data returned by calling `bibliography.toJSON()`. */
        export interface BibliographyData {
            /**
             * Returns a `SourceCollection` object that represents all the sources contained in the bibliography.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sources?: Word.Interfaces.SourceData[];
            /**
             * Specifies the name of the active style to use for the bibliography.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bibliographyStyle?: string;
        }
        /** An interface describing the data returned by calling `sourceCollection.toJSON()`. */
        export interface SourceCollectionData {
            items?: Word.Interfaces.SourceData[];
        }
        /** An interface describing the data returned by calling `source.toJSON()`. */
        export interface SourceData {
            /**
             * Gets if the `Source` object has been cited in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isCited?: boolean;
            /**
             * Gets the tag of the source.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: string;
            /**
             * Gets the XML representation of the source.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xml?: string;
        }
        /** An interface describing the data returned by calling `pageSetup.toJSON()`. */
        export interface PageSetupData {
            /**
             * Specifies a `LineNumbering` object that represents the line numbers for the `PageSetup` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lineNumbering?: Word.Interfaces.LineNumberingData;
            /**
             * Gets a `TextColumnCollection` object that represents the set of text columns for the `PageSetup` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textColumns?: Word.Interfaces.TextColumnData[];
            /**
             * Specifies whether Microsoft Word prints the document as a booklet.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bookFoldPrinting?: boolean;
            /**
             * Specifies the number of pages for each booklet.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bookFoldPrintingSheets?: number;
            /**
             * Specifies if Microsoft Word reverses the printing order for book fold printing of bidirectional or Asian language documents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bookFoldReversePrinting?: boolean;
            /**
             * Specifies the distance (in points) between the bottom edge of the page and the bottom boundary of the body text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bottomMargin?: number;
            /**
             * Specifies the number of characters per line in the document grid.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            charsLine?: number;
            /**
             * Specifies whether the first page has a different header and footer.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            differentFirstPageHeaderFooter?: boolean;
            /**
             * Specifies the distance between the footer and the bottom of the page in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            footerDistance?: number;
            /**
             * Specifies the amount (in points) of extra margin space added to each page in a document or section for binding.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gutter?: number;
            /**
             * Specifies on which side the gutter appears in a document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gutterPosition?: Word.GutterPosition | "Left" | "Right" | "Top";
            /**
             * Specifies whether Microsoft Word uses gutters for the current document based on a right-to-left language or a left-to-right language.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gutterStyle?: Word.GutterStyle | "Bidirectional" | "Latin";
            /**
             * Specifies the distance between the header and the top of the page in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            headerDistance?: number;
            /**
             * Specifies the layout mode for the current document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            layoutMode?: Word.LayoutMode | "Default" | "Grid" | "LineGrid" | "Genko";
            /**
             * Specifies the distance (in points) between the left edge of the page and the left boundary of the body text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            leftMargin?: number;
            /**
             * Specifies the number of lines per page in the document grid.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            linesPage?: number;
            /**
             * Specifies if the inside and outside margins of facing pages are the same width.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            mirrorMargins?: boolean;
            /**
             * Specifies whether odd and even pages have different headers and footers.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            oddAndEvenPagesHeaderFooter?: boolean;
            /**
             * Specifies the orientation of the page.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            orientation?: Word.PageOrientation | "Portrait" | "Landscape";
            /**
             * Specifies the page height in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageHeight?: number;
            /**
             * Specifies the page width in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageWidth?: number;
            /**
             * Specifies the paper size of the page.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            paperSize?: Word.PaperSize | "Size10x14" | "Size11x17" | "Letter" | "LetterSmall" | "Legal" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "CSheet" | "DSheet" | "ESheet" | "FanfoldLegalGerman" | "FanfoldStdGerman" | "FanfoldUS" | "Folio" | "Ledger" | "Note" | "Quarto" | "Statement" | "Tabloid" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC5" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeDL" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "Custom";
            /**
             * Specifies the distance (in points) between the right edge of the page and the right boundary of the body text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rightMargin?: number;
            /**
             * Specifies the reading order and alignment for the specified sections.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sectionDirection?: Word.SectionDirection | "RightToLeft" | "LeftToRight";
            /**
             * Specifies the type of section break for the specified object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sectionStart?: Word.SectionStart | "Continuous" | "NewColumn" | "NewPage" | "EvenPage" | "OddPage";
            /**
             * Specifies whether to show the grid.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showGrid?: boolean;
            /**
             * Specifies if endnotes are printed at the end of the next section that doesn't suppress endnotes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            suppressEndnotes?: boolean;
            /**
             * Specifies the top margin of the page in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            topMargin?: number;
            /**
             * Specifies whether to print two pages per sheet.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            twoPagesOnOne?: boolean;
            /**
             * Specifies the vertical alignment of text on each page in a document or section.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalAlignment?: Word.PageSetupVerticalAlignment | "Top" | "Center" | "Justify" | "Bottom";
        }
        /** An interface describing the data returned by calling `lineNumbering.toJSON()`. */
        export interface LineNumberingData {
            /**
             * Specifies the numeric increment for line numbers.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            countBy?: number;
            /**
             * Specifies the distance (in points) between the right edge of line numbers and the left edge of the document text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            distanceFromText?: number;
            /**
             * Specifies if line numbering is active for the specified document, section, or sections.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isActive?: boolean;
            /**
             * Specifies the way line numbering runs; that is, whether it starts over at the beginning of a new page or section, or runs continuously.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            restartMode?: Word.NumberingRule | "RestartContinuous" | "RestartSection" | "RestartPage";
            /**
             * Specifies the starting line number.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            startingNumber?: number;
        }
        /** An interface describing the data returned by calling `textColumnCollection.toJSON()`. */
        export interface TextColumnCollectionData {
            items?: Word.Interfaces.TextColumnData[];
        }
        /** An interface describing the data returned by calling `textColumn.toJSON()`. */
        export interface TextColumnData {
            /**
             * Specifies the amount of spacing (in points) after the specified paragraph or text column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            spaceAfter?: number;
            /**
             * Specifies the width, in points, of the specified text columns.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: number;
        }
        /** An interface describing the data returned by calling `selection.toJSON()`. */
        export interface SelectionData {
            /**
             * Specifies the ending character position of the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            end?: number;
            /**
             * Specifies the width in which Word fits the text in the current selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fitTextWidth?: number;
            /**
             * Returns whether the spelling and grammar checker ignores the selected text.
                        If the selected text contains a mix of proofed and un-proofed content, this API returns `null`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasNoProofing?: boolean;
            /**
             * Returns whether the selection in the specified window or pane is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isActive?: boolean;
            /**
             * Specifies whether column selection mode is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isColumnSelectModeActive?: boolean;
            /**
             * Returns whether the selection is at the end-of-row mark in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEndOfRowMark?: boolean;
            /**
             * Specifies whether Extend mode is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isExtendModeActive?: boolean;
            /**
             * Returns whether the insertion point is at the end of a line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isInsertionPointAtEndOfLine?: boolean;
            /**
             * Specifies whether the beginning of the selection is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isStartActive?: boolean;
            /**
             * Specifies whether Word has detected the language of the selected text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageDetected?: boolean;
            /**
             * Returns the language for the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Returns the East Asian language for the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Returns the language for the selection that isn't classified as an East Asian language.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdOther?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Specifies the orientation of text in the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            orientation?: Word.TextOrientation | "Horizontal" | "Upward" | "Downward" | "VerticalFarEast" | "HorizontalRotatedFarEast" | "Vertical";
            /**
             * Specifies the starting character position of the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            start?: number;
            /**
             * Returns the number of characters in the story that contains the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyLength?: number;
            /**
             * Returns the story type for the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyType?: Word.StoryType | "MainText" | "Footnotes" | "Endnotes" | "Comments" | "TextFrame" | "EvenPagesHeader" | "PrimaryHeader" | "EvenPagesFooter" | "PrimaryFooter" | "FirstPageHeader" | "FirstPageFooter" | "FootnoteSeparator" | "FootnoteContinuationSeparator" | "FootnoteContinuationNotice" | "EndnoteSeparator" | "EndnoteContinuationSeparator" | "EndnoteContinuationNotice";
            /**
             * Specifies the text in the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            text?: string;
            /**
             * Returns the selection type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.SelectionType | "NoSelection" | "InsertionPoint" | "Normal" | "Frame" | "Column" | "Row" | "Block" | "InlineShape" | "SelectionShape";
        }
        /** An interface describing the data returned by calling `rangeScopedCollection.toJSON()`. */
        export interface RangeScopedCollectionData {
            items?: Word.Interfaces.RangeData[];
        }
        /** An interface describing the data returned by calling `bookmark.toJSON()`. */
        export interface BookmarkData {
            /**
             * Returns a `Range` object that represents the portion of the document that's contained in the `Bookmark` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Specifies the ending character position of the bookmark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            end?: number;
            /**
             * Returns `true` if the bookmark is a table column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isColumn?: boolean;
            /**
             * Returns `true` if the bookmark is empty.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEmpty?: boolean;
            /**
             * Returns the name of the `Bookmark` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: string;
            /**
             * Specifies the starting character position of the bookmark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            start?: number;
            /**
             * Returns the story type for the bookmark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyType?: Word.StoryType | "MainText" | "Footnotes" | "Endnotes" | "Comments" | "TextFrame" | "EvenPagesHeader" | "PrimaryHeader" | "EvenPagesFooter" | "PrimaryFooter" | "FirstPageHeader" | "FirstPageFooter" | "FootnoteSeparator" | "FootnoteContinuationSeparator" | "FootnoteContinuationNotice" | "EndnoteSeparator" | "EndnoteContinuationSeparator" | "EndnoteContinuationNotice";
        }
        /** An interface describing the data returned by calling `bookmarkCollection.toJSON()`. */
        export interface BookmarkCollectionData {
            items?: Word.Interfaces.BookmarkData[];
        }
        /** An interface describing the data returned by calling `index.toJSON()`. */
        export interface IndexData {
            /**
             * Returns a `Range` object that represents the portion of the document that is contained within the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeData;
            /**
             * Gets a value that represents how Microsoft Word classifies the first character of entries in the index.
                        See `IndexFilter` for available values.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            filter?: Word.IndexFilter | "None" | "Aiueo" | "Akasatana" | "Chosung" | "Low" | "Medium" | "Full";
            /**
             * Gets the text between alphabetical groups (entries that start with the same letter) in the index. Corresponds to
                        the **\h** switch for an {@link https://support.microsoft.com/office/adafcf4a-cb30-43f6-85c7-743da1635d9e | INDEX field}.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            headingSeparator?: Word.HeadingSeparator | "None" | "BlankLine" | "Letter" | "LetterLow" | "LetterFull";
            /**
             * Gets a `LanguageId` value that represents the sorting language to use for the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            indexLanguage?: Word.LanguageId | "Afrikaans" | "Albanian" | "Amharic" | "Arabic" | "ArabicAlgeria" | "ArabicBahrain" | "ArabicEgypt" | "ArabicIraq" | "ArabicJordan" | "ArabicKuwait" | "ArabicLebanon" | "ArabicLibya" | "ArabicMorocco" | "ArabicOman" | "ArabicQatar" | "ArabicSyria" | "ArabicTunisia" | "ArabicUAE" | "ArabicYemen" | "Armenian" | "Assamese" | "AzeriCyrillic" | "AzeriLatin" | "Basque" | "BelgianDutch" | "BelgianFrench" | "Bengali" | "Bulgarian" | "Burmese" | "Belarusian" | "Catalan" | "Cherokee" | "ChineseHongKongSAR" | "ChineseMacaoSAR" | "ChineseSingapore" | "Croatian" | "Czech" | "Danish" | "Divehi" | "Dutch" | "Edo" | "EnglishAUS" | "EnglishBelize" | "EnglishCanadian" | "EnglishCaribbean" | "EnglishIndonesia" | "EnglishIreland" | "EnglishJamaica" | "EnglishNewZealand" | "EnglishPhilippines" | "EnglishSouthAfrica" | "EnglishTrinidadTobago" | "EnglishUK" | "EnglishUS" | "EnglishZimbabwe" | "Estonian" | "Faeroese" | "Filipino" | "Finnish" | "French" | "FrenchCameroon" | "FrenchCanadian" | "FrenchCongoDRC" | "FrenchCotedIvoire" | "FrenchHaiti" | "FrenchLuxembourg" | "FrenchMali" | "FrenchMonaco" | "FrenchMorocco" | "FrenchReunion" | "FrenchSenegal" | "FrenchWestIndies" | "FrisianNetherlands" | "Fulfulde" | "GaelicIreland" | "GaelicScotland" | "Galician" | "Georgian" | "German" | "GermanAustria" | "GermanLiechtenstein" | "GermanLuxembourg" | "Greek" | "Guarani" | "Gujarati" | "Hausa" | "Hawaiian" | "Hebrew" | "Hindi" | "Hungarian" | "Ibibio" | "Icelandic" | "Igbo" | "Indonesian" | "Inuktitut" | "Italian" | "Japanese" | "Kannada" | "Kanuri" | "Kashmiri" | "Kazakh" | "Khmer" | "Kirghiz" | "Konkani" | "Korean" | "Kyrgyz" | "LanguageNone" | "Lao" | "Latin" | "Latvian" | "Lithuanian" | "MacedonianFYROM" | "Malayalam" | "MalayBruneiDarussalam" | "Malaysian" | "Maltese" | "Manipuri" | "Marathi" | "MexicanSpanish" | "Mongolian" | "Nepali" | "NoProofing" | "NorwegianBokmol" | "NorwegianNynorsk" | "Oriya" | "Oromo" | "Pashto" | "Persian" | "Polish" | "Portuguese" | "PortugueseBrazil" | "Punjabi" | "RhaetoRomanic" | "Romanian" | "RomanianMoldova" | "Russian" | "RussianMoldova" | "SamiLappish" | "Sanskrit" | "SerbianCyrillic" | "SerbianLatin" | "Sesotho" | "SimplifiedChinese" | "Sindhi" | "SindhiPakistan" | "Sinhalese" | "Slovak" | "Slovenian" | "Somali" | "Sorbian" | "Spanish" | "SpanishArgentina" | "SpanishBolivia" | "SpanishChile" | "SpanishColombia" | "SpanishCostaRica" | "SpanishDominicanRepublic" | "SpanishEcuador" | "SpanishElSalvador" | "SpanishGuatemala" | "SpanishHonduras" | "SpanishModernSort" | "SpanishNicaragua" | "SpanishPanama" | "SpanishParaguay" | "SpanishPeru" | "SpanishPuertoRico" | "SpanishUruguay" | "SpanishVenezuela" | "Sutu" | "Swahili" | "Swedish" | "SwedishFinland" | "SwissFrench" | "SwissGerman" | "SwissItalian" | "Syriac" | "Tajik" | "Tamazight" | "TamazightLatin" | "Tamil" | "Tatar" | "Telugu" | "Thai" | "Tibetan" | "TigrignaEritrea" | "TigrignaEthiopic" | "TraditionalChinese" | "Tsonga" | "Tswana" | "Turkish" | "Turkmen" | "Ukrainian" | "Urdu" | "UzbekCyrillic" | "UzbekLatin" | "Venda" | "Vietnamese" | "Welsh" | "Xhosa" | "Yi" | "Yiddish" | "Yoruba" | "Zulu";
            /**
             * Gets the number of columns for each page of the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            numberOfColumns?: number;
            /**
             * Specifies if page numbers are aligned with the right margin in the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rightAlignPageNumbers?: boolean;
            /**
             * Gets if the index contains separate headings for accented letters (for example, words that begin with "À" are under
                        one heading and words that begin with "A" are under another).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            separateAccentedLetterHeadings?: boolean;
            /**
             * Specifies the sorting criteria for the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sortBy?: Word.IndexSortBy | "Stroke" | "Syllable";
            /**
             * Specifies the leader character between entries in the index and their associated page numbers.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: Word.TabLeader | "Spaces" | "Dots" | "Dashes" | "Lines" | "Heavy" | "MiddleDot";
            /**
             * Gets the index type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.IndexType | "Indent" | "Runin";
        }
        /** An interface describing the data returned by calling `indexCollection.toJSON()`. */
        export interface IndexCollectionData {
            items?: Word.Interfaces.IndexData[];
        }
        /** An interface describing the data returned by calling `listTemplateCollection.toJSON()`. */
        export interface ListTemplateCollectionData {
            items?: Word.Interfaces.ListTemplateData[];
        }
        /** An interface describing the data returned by calling `listTemplateGallery.toJSON()`. */
        export interface ListTemplateGalleryData {
        }
        /** An interface describing the data returned by calling `listTemplateGalleryCollection.toJSON()`. */
        export interface ListTemplateGalleryCollectionData {
            items?: Word.Interfaces.ListTemplateGalleryData[];
        }
        /**
         * Represents a user with permissions to edit authorized portions of a protected (read-only) Word document. To learn more, see {@link https://support.microsoft.com/office/187ed01c-8795-43e1-9fd0-c9fca419dadf  | Allow changes to parts of a protected Word document}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface EditorLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets a `Range` object that represents the next range that the editor has permissions to modify.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nextRange?: Word.Interfaces.RangeLoadOptions;
            /**
             * Gets a `Range` object that represents the portion of the document that's contained in the `Editor` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Gets the identifier for the `Editor` object when the parent document is saved as a webpage.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: boolean;
            /**
             * Gets the name of the editor.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
        }
        /**
         * Represents the coauthoring conflicts in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface ConflictCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets a `Range` object that represents the portion of the document that's contained in the `Conflict` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the `RevisionType` for the `Conflict` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents a coauthoring conflict in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface ConflictLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets a `Range` object that represents the portion of the document that's contained in the `Conflict` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Gets the `RevisionType` for the `Conflict` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents an annotation wrapper around critique displayed in the document.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        export interface CritiqueAnnotationLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the range of text that is annotated.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Gets the critique that was passed when the annotation was inserted.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            critique?: boolean;
        }
        /**
         * Represents an annotation attached to a paragraph.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        export interface AnnotationLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the critique annotation object.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            critiqueAnnotation?: Word.Interfaces.CritiqueAnnotationLoadOptions;
            /**
             * Gets the unique identifier, which is meant to be used for easier tracking of Annotation objects.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            id?: boolean;
            /**
             * Gets the state of the annotation.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            state?: boolean;
        }
        /**
         * Contains a collection of {@link Word.Annotation} objects.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        export interface AnnotationCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the critique annotation object.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            critiqueAnnotation?: Word.Interfaces.CritiqueAnnotationLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the unique identifier, which is meant to be used for easier tracking of Annotation objects.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            id?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the state of the annotation.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            state?: boolean;
        }
        /**
         * Represents the application object.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface ApplicationLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `Bibliography` object that represents the bibliography reference sources stored in Microsoft Word.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bibliography?: Word.Interfaces.BibliographyLoadOptions;
            /**
             * Specifies if Microsoft Word automatically detects the language you are using as you type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            checkLanguage?: boolean;
            /**
             * Gets a `LanguageId` value that represents the language selected for the Microsoft Word user interface.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            language?: boolean;
        }
        /**
         * Represents the body of a document or a section.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface BodyLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the text format of the body. Use this to get and set font name, size, color and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * Gets the parent body of the body. For example, a table cell body's parent body could be a header. Throws an `ItemNotFound` error if there isn't a parent body.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentBody?: Word.Interfaces.BodyLoadOptions;
            /**
             * Gets the parent body of the body. For example, a table cell body's parent body could be a header. If there isn't a parent body, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentBodyOrNullObject?: Word.Interfaces.BodyLoadOptions;
            /**
             * Gets the content control that contains the body. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the content control that contains the body. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the parent section of the body. Throws an `ItemNotFound` error if there isn't a parent section.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentSection?: Word.Interfaces.SectionLoadOptions;
            /**
             * Gets the parent section of the body. If there isn't a parent section, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentSectionOrNullObject?: Word.Interfaces.SectionLoadOptions;
            /**
             * Specifies the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: boolean;
            /**
             * Specifies the built-in style name for the body. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: boolean;
            /**
             * Gets the text of the body. Use the insertText method to insert text.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            text?: boolean;
            /**
             * Gets the type of the body. The type can be 'MainDoc', 'Section', 'Header', 'Footer', or 'TableCell'. Additional types ‘Footnote’, ‘Endnote’, and ‘NoteItem’ are supported in WordApiOnline 1.1 and later.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            type?: boolean;
        }
        /**
         * Represents the Border object for text, a paragraph, or a table.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        export interface BorderLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the color for the border. Color is specified in ‘#RRGGBB’ format or by using the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            color?: boolean;
            /**
             * Gets the location of the border.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            location?: boolean;
            /**
             * Specifies the border type for the border.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            type?: boolean;
            /**
             * Specifies whether the border is visible.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            visible?: boolean;
            /**
             * Specifies the width for the border.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            width?: boolean;
        }
        /**
         * Represents the `BorderUniversal` object, which manages borders for a range, paragraph, table, or frame.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface BorderUniversalLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the graphical page-border design for the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            artStyle?: boolean;
            /**
             * Specifies the width (in points) of the graphical page border specified in the `artStyle` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            artWidth?: boolean;
            /**
             * Specifies the color for the `BorderUniversal` object. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: boolean;
            /**
             * Specifies the color for the `BorderUniversal` or {@link Word.Font} object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            colorIndex?: boolean;
            /**
             * Returns `true` if an inside border can be applied to the specified object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            inside?: boolean;
            /**
             * Specifies whether the border is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies the line style of the border.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lineStyle?: boolean;
            /**
             * Specifies the line width of an object's border.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lineWidth?: boolean;
        }
        /**
         * Represents the collection of border styles.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        export interface BorderCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the color for the border. Color is specified in ‘#RRGGBB’ format or by using the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            color?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the location of the border.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            location?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the border type for the border.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            type?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the border is visible.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            visible?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the width for the border.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            width?: boolean;
        }
        /**
         * Represents the collection of {@link Word.BorderUniversal} objects.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface BorderUniversalCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the graphical page-border design for the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            artStyle?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the width (in points) of the graphical page border specified in the `artStyle` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            artWidth?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the color for the `BorderUniversal` object. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the color for the `BorderUniversal` or {@link Word.Font} object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            colorIndex?: boolean;
            /**
             * For EACH ITEM in the collection: Returns `true` if an inside border can be applied to the specified object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            inside?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the border is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the line style of the border.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lineStyle?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the line width of an object's border.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lineWidth?: boolean;
        }
        /**
         * Represents a break in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface BreakLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `Range` object that represents the portion of the document that's contained in the break.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Returns the page number on which the break occurs.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageIndex?: boolean;
        }
        /**
         * Contains a collection of {@link Word.Break} objects.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface BreakCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Returns a `Range` object that represents the portion of the document that's contained in the break.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns the page number on which the break occurs.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageIndex?: boolean;
        }
        /**
         * Represents a building block in a template. A building block is pre-built content, similar to autotext, that may contain text, images, and formatting.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface BuildingBlockLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `BuildingBlockCategory` object that represents the category for the building block.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            category?: Word.Interfaces.BuildingBlockCategoryLoadOptions;
            /**
             * Returns a `BuildingBlockTypeItem` object that represents the type for the building block.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.Interfaces.BuildingBlockTypeItemLoadOptions;
            /**
             * Specifies the description for the building block.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            description?: boolean;
            /**
             * Returns the internal identification number for the building block.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: boolean;
            /**
             * Returns the position of this building block in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            index?: boolean;
            /**
             * Specifies a `DocPartInsertType` value that represents how to insert the contents of the building block into the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            insertType?: boolean;
            /**
             * Specifies the name of the building block.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
            /**
             * Specifies the contents of the building block.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            value?: boolean;
        }
        /**
         * Represents a category of building blocks in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface BuildingBlockCategoryLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `BuildingBlockTypeItem` object that represents the type of building block for the building block category.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: Word.Interfaces.BuildingBlockTypeItemLoadOptions;
            /**
             * Returns the position of the `BuildingBlockCategory` object in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            index?: boolean;
            /**
             * Returns the name of the `BuildingBlockCategory` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
        }
        /**
         * Represents a type of building block in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface BuildingBlockTypeItemLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns the position of an item in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            index?: boolean;
            /**
             * Returns the localized name of a building block type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
        }
        /**
         * The data specific to content controls of type CheckBox.
         *
         * @remarks
         * [Api set: WordApi 1.7]
         */
        export interface CheckboxContentControlLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the current state of the checkbox.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            isChecked?: boolean;
        }
        /**
         * Represents a coauthoring lock in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CoauthoringLockLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the owner of the lock.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            owner?: Word.Interfaces.CoauthorLoadOptions;
            /**
             * Gets a `Range` object that represents the portion of the document that's contained in the `CoauthoringLock` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Gets a `CoauthoringLockType` value that represents the lock type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents a collection of coauthoring locks in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CoauthoringLockCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the owner of the lock.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            owner?: Word.Interfaces.CoauthorLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets a `Range` object that represents the portion of the document that's contained in the `CoauthoringLock` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets a `CoauthoringLockType` value that represents the lock type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents a coauthor in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CoauthorLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the email address of the coauthor.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emailAddress?: boolean;
            /**
             * Gets the unique identifier for the `Coauthor` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: boolean;
            /**
             * Gets whether this author represents the current user.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isMe?: boolean;
            /**
             * Gets the display name of the coauthor.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
        }
        /**
         * Contains a collection of {@link Word.Coauthor} objects.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CoauthorCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the email address of the coauthor.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emailAddress?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the unique identifier for the `Coauthor` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: boolean;
            /**
             * For EACH ITEM in the collection: Gets whether this author represents the current user.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isMe?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the display name of the coauthor.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
        }
        /**
         * Represents the `Coauthoring` object. This tracks the updates, changes, conflicts, and other interactions in the document done through coauthoring.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CoauthoringLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets a `Coauthor` object that represents the current user.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            me?: Word.Interfaces.CoauthorLoadOptions;
            /**
             * Gets whether this document can be coauthored.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            canCoauthor?: boolean;
            /**
             * Gets whether the document can be automatically merged.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            canMerge?: boolean;
            /**
             * Gets whether the document has pending updates that have not been accepted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pendingUpdates?: boolean;
        }
        /**
         * Represents a coauthoring update in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CoauthoringUpdateLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets a `Range` object that represents the portion of the document that's contained in the `CoauthoringUpdate` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
        }
        /**
         * Contains a collection of {@link Word.CoauthoringUpdate} objects.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CoauthoringUpdateCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets a `Range` object that represents the portion of the document that's contained in the `CoauthoringUpdate` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
        }
        /**
         * Represents a comment in the document.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        export interface CommentLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the comment's content range.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            contentRange?: Word.Interfaces.CommentContentRangeLoadOptions;
            /**
             * Gets the email of the comment's author.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            authorEmail?: boolean;
            /**
             * Gets the name of the comment's author.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            authorName?: boolean;
            /**
             * Specifies the comment's content as plain text.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            content?: boolean;
            /**
             * Gets the creation date of the comment.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            creationDate?: boolean;
            /**
             * Gets the ID of the comment.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            id?: boolean;
            /**
             * Specifies the comment thread's status. Setting to true resolves the comment thread. Getting a value of true means that the comment thread is resolved.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            resolved?: boolean;
        }
        /**
         * Contains a collection of {@link Word.Comment} objects.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        export interface CommentCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the comment's content range.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            contentRange?: Word.Interfaces.CommentContentRangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the email of the comment's author.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            authorEmail?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the name of the comment's author.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            authorName?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the comment's content as plain text.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            content?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the creation date of the comment.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            creationDate?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the ID of the comment.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            id?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the comment thread's status. Setting to true resolves the comment thread. Getting a value of true means that the comment thread is resolved.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            resolved?: boolean;
        }
        /**
         * @remarks
         * [Api set: WordApi 1.4]
         */
        export interface CommentContentRangeLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies a value that indicates whether the comment text is bold.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            bold?: boolean;
            /**
             * Gets the first hyperlink in the range, or sets a hyperlink on the range. All hyperlinks in the range are deleted when you set a new hyperlink on the range.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            hyperlink?: boolean;
            /**
             * Checks whether the range length is zero.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            isEmpty?: boolean;
            /**
             * Specifies a value that indicates whether the comment text is italicized.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            italic?: boolean;
            /**
             * Specifies a value that indicates whether the comment text has a strikethrough.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            strikeThrough?: boolean;
            /**
             * Gets the text of the comment range.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            text?: boolean;
            /**
             * Specifies a value that indicates the comment text's underline type. 'None' if the comment text isn't underlined.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            underline?: boolean;
        }
        /**
         * Represents a comment reply in the document.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        export interface CommentReplyLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the commentReply's content range.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            contentRange?: Word.Interfaces.CommentContentRangeLoadOptions;
            /**
             * Gets the parent comment of this reply.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentComment?: Word.Interfaces.CommentLoadOptions;
            /**
             * Gets the email of the comment reply's author.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            authorEmail?: boolean;
            /**
             * Gets the name of the comment reply's author.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            authorName?: boolean;
            /**
             * Specifies the comment reply's content. The string is plain text.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            content?: boolean;
            /**
             * Gets the creation date of the comment reply.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            creationDate?: boolean;
            /**
             * Gets the ID of the comment reply.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            id?: boolean;
        }
        /**
         * Contains a collection of {@link Word.CommentReply} objects. Represents all comment replies in one comment thread.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        export interface CommentReplyCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the commentReply's content range.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            contentRange?: Word.Interfaces.CommentContentRangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the parent comment of this reply.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentComment?: Word.Interfaces.CommentLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the email of the comment reply's author.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            authorEmail?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the name of the comment reply's author.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            authorName?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the comment reply's content. The string is plain text.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            content?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the creation date of the comment reply.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            creationDate?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the ID of the comment reply.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            id?: boolean;
        }
        /**
         * Represents special formatting applied to specified areas of a table when the selected table is formatted with a specified table style.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface ConditionalStyleLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `Font` object that represents the font formatting for the conditional style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * Returns a `ParagraphFormat` object that represents the paragraph formatting for the conditional style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            paragraphFormat?: Word.Interfaces.ParagraphFormatLoadOptions;
            /**
             * Returns a `ShadingUniversal` object that represents the shading of the conditional style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * Specifies the amount of space (in points) to add below the contents of a single cell or all the cells in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bottomPadding?: boolean;
            /**
             * Specifies the amount of space (in points) to add to the left of the contents of a single cell or all the cells in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            leftPadding?: boolean;
            /**
             * Specifies the amount of space (in points) to add to the right of the contents of a single cell or all the cells in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rightPadding?: boolean;
            /**
             * Specifies the amount of space (in points) to add above the contents of a single cell or all the cells in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            topPadding?: boolean;
        }
        /**
         * Represents the XML mapping on a {@link Word.ContentControl} object between custom XML and that content control. An XML mapping is a link between the text in a content control and an XML element in the custom XML data store for this document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface XmlMappingLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `CustomXmlNode` object that represents the custom XML node in the data store that the content control in the document maps to.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            customXmlNode?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * Returns a `CustomXmlPart` object that represents the custom XML part to which the content control in the document maps.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            customXmlPart?: Word.Interfaces.CustomXmlPartLoadOptions;
            /**
             * Returns whether the content control in the document is mapped to an XML node in the document's XML data store.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isMapped?: boolean;
            /**
             * Returns the prefix mappings used to evaluate the XPath for the current XML mapping.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            prefixMappings?: boolean;
            /**
             * Returns the XPath for the XML mapping, which evaluates to the currently mapped XML node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xpath?: boolean;
        }
        /**
         * Represents a collection of {@link Word.CustomXmlPrefixMapping} objects.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CustomXmlPrefixMappingCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the unique address identifier for the namespace of the `CustomXmlPrefixMapping` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            namespaceUri?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the prefix for the `CustomXmlPrefixMapping` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            prefix?: boolean;
        }
        /**
         * Represents a `CustomXmlPrefixMapping` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CustomXmlPrefixMappingLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the unique address identifier for the namespace of the `CustomXmlPrefixMapping` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            namespaceUri?: boolean;
            /**
             * Gets the prefix for the `CustomXmlPrefixMapping` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            prefix?: boolean;
        }
        /**
         * Represents a schema in a {@link Word.CustomXmlSchemaCollection} object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CustomXmlSchemaLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the location of the schema on a computer.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            location?: boolean;
            /**
             * Gets the unique address identifier for the namespace of the `CustomXmlSchema` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            namespaceUri?: boolean;
        }
        /**
         * Represents a collection of {@link Word.CustomXmlSchema} objects attached to a data stream.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CustomXmlSchemaCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the location of the schema on a computer.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            location?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the unique address identifier for the namespace of the `CustomXmlSchema` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            namespaceUri?: boolean;
        }
        /**
         * Represents a collection of {@link Word.CustomXmlValidationError} objects.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CustomXmlValidationErrorCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the node associated with this `CustomXmlValidationError` object, if any exist.If no nodes exist, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            node?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets an integer representing the validation error in the `CustomXmlValidationError` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            errorCode?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the name of the error in the `CustomXmlValidationError` object.If no errors exist, the property returns `Nothing`
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the text in the `CustomXmlValidationError` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            text?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the type of error generated from the `CustomXmlValidationError` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents a single validation error in a {@link Word.CustomXmlValidationErrorCollection} object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CustomXmlValidationErrorLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the node associated with this `CustomXmlValidationError` object, if any exist.If no nodes exist, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            node?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * Gets an integer representing the validation error in the `CustomXmlValidationError` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            errorCode?: boolean;
            /**
             * Gets the name of the error in the `CustomXmlValidationError` object.If no errors exist, the property returns `Nothing`
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
            /**
             * Gets the text in the `CustomXmlValidationError` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            text?: boolean;
            /**
             * Gets the type of error generated from the `CustomXmlValidationError` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Contains a collection of {@link Word.CustomXmlNode} objects representing the XML nodes in a document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CustomXmlNodeCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets a `CustomXmlNode` object corresponding to the first child element of the current node. If the node has no child elements (or if it isn't of type {@link Word.CustomXmlNodeType | CustomXmlNodeType.element}), returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            firstChild?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets a `CustomXmlNode` object corresponding to the last child element of the current node. If the node has no child elements (or if it isn't of type {@link Word.CustomXmlNodeType | CustomXmlNodeType.element}), the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lastChild?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the next sibling node (element, comment, or processing instruction) of the current node. If the node is the last sibling at its level, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nextSibling?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the object representing the part associated with this node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            ownerPart?: Word.Interfaces.CustomXmlPartLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the parent element node of the current node. If the current node is at the root level, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            parentNode?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the previous sibling node (element, comment, or processing instruction) of the current node. If the current node is the first sibling at its level, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            previousSibling?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the base name of the node without the namespace prefix, if one exists.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            baseName?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the unique address identifier for the namespace of the node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            namespaceUri?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the type of the current node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nodeType?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the value of the current node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nodeValue?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the text for the current node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            text?: boolean;
            /**
             * For EACH ITEM in the collection: Gets a string with the canonicalized XPath for the current node. If the node is no longer in the Document Object Model (DOM), the property returns an error message.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xpath?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the XML representation of the current node and its children.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xml?: boolean;
        }
        /**
         * Represents an XML node in a tree in the document. The `CustomXmlNode` object is a member of the {@link Word.CustomXmlNodeCollection} object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface CustomXmlNodeLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets a `CustomXmlNode` object corresponding to the first child element of the current node. If the node has no child elements (or if it isn't of type {@link Word.CustomXmlNodeType | CustomXmlNodeType.element}), returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            firstChild?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * Gets a `CustomXmlNode` object corresponding to the last child element of the current node. If the node has no child elements (or if it isn't of type {@link Word.CustomXmlNodeType | CustomXmlNodeType.element}), the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lastChild?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * Gets the next sibling node (element, comment, or processing instruction) of the current node. If the node is the last sibling at its level, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nextSibling?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * Gets the object representing the part associated with this node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            ownerPart?: Word.Interfaces.CustomXmlPartLoadOptions;
            /**
            * Gets the parent element node of the current node. If the current node is at the root level, the property returns `Nothing`.
            *
            * @remarks
            * [Api set: WordApi BETA (PREVIEW ONLY)]
            * @beta
            */
            parentNode?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
            * Gets the previous sibling node (element, comment, or processing instruction) of the current node. If the current node is the first sibling at its level, the property returns `Nothing`.
            *
            * @remarks
            * [Api set: WordApi BETA (PREVIEW ONLY)]
            * @beta
            */
            previousSibling?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * Gets the base name of the node without the namespace prefix, if one exists.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            baseName?: boolean;
            /**
             * Gets the unique address identifier for the namespace of the node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            namespaceUri?: boolean;
            /**
             * Gets the type of the current node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nodeType?: boolean;
            /**
             * Specifies the value of the current node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nodeValue?: boolean;
            /**
             * Specifies the text for the current node.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            text?: boolean;
            /**
             * Gets a string with the canonicalized XPath for the current node. If the node is no longer in the Document Object Model (DOM), the property returns an error message.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xpath?: boolean;
            /**
             * Gets the XML representation of the current node and its children.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xml?: boolean;
        }
        /**
         * Represents a content control. Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content. Individual content controls may contain contents such as images, tables, or paragraphs of formatted text. Currently, only rich text, plain text, checkbox, dropdown list, and combo box content controls are supported.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface ContentControlLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the building block gallery-related data if the content control's {@link Word.ContentControlType} is `BuildingBlockGallery`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            buildingBlockGalleryContentControl?: Word.Interfaces.BuildingBlockGalleryContentControlLoadOptions;
            /**
             * Gets the data of the content control when its type is `CheckBox`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            checkboxContentControl?: Word.Interfaces.CheckboxContentControlLoadOptions;
            /**
             * Gets the date picker-related data if the content control's {@link Word.ContentControlType} is `DatePicker`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            datePickerContentControl?: Word.Interfaces.DatePickerContentControlLoadOptions;
            /**
             * Gets the text format of the content control. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * Gets the group-related data if the content control's {@link Word.ContentControlType} is `Group`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            groupContentControl?: Word.Interfaces.GroupContentControlLoadOptions;
            /**
             * Gets the parent body of the content control.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentBody?: Word.Interfaces.BodyLoadOptions;
            /**
             * Gets the content control that contains the content control. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the content control that contains the content control. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the table that contains the content control. Throws an `ItemNotFound` error if it isn't contained in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * Gets the table cell that contains the content control. Throws an `ItemNotFound` error if it isn't contained in a table cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCell?: Word.Interfaces.TableCellLoadOptions;
            /**
             * Gets the table cell that contains the content control. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCellOrNullObject?: Word.Interfaces.TableCellLoadOptions;
            /**
             * Gets the table that contains the content control. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableOrNullObject?: Word.Interfaces.TableLoadOptions;
            /**
             * Gets the picture-related data if the content control's {@link Word.ContentControlType} is `Picture`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pictureContentControl?: Word.Interfaces.PictureContentControlLoadOptions;
            /**
             * Gets the repeating section-related data if the content control's {@link Word.ContentControlType} is `RepeatingSection`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            repeatingSectionContentControl?: Word.Interfaces.RepeatingSectionContentControlLoadOptions;
            /**
             * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingLoadOptions;
            /**
             * Specifies the appearance of the content control. The value can be 'BoundingBox', 'Tags', or 'Hidden'.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            appearance?: boolean;
            /**
             * Specifies a value that indicates whether the user can delete the content control. Mutually exclusive with removeWhenEdited.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            cannotDelete?: boolean;
            /**
             * Specifies a value that indicates whether the user can edit the contents of the content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            cannotEdit?: boolean;
            /**
             * Specifies the color of the content control. Color is specified in '#RRGGBB' format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            color?: boolean;
            /**
             * Gets an integer that represents the content control identifier.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            id?: boolean;
            /**
             * Specifies the placeholder text of the content control. Dimmed text will be displayed when the content control is empty.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            placeholderText?: boolean;
            /**
             * Specifies a value that indicates whether the content control is removed after it is edited. Mutually exclusive with cannotDelete.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            removeWhenEdited?: boolean;
            /**
             * Specifies the style name for the content control. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: boolean;
            /**
             * Specifies the built-in style name for the content control. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: boolean;
            /**
             * Gets the content control subtype. The subtype can be 'RichTextInline', 'RichTextParagraphs', 'RichTextTableCell', 'RichTextTableRow' and 'RichTextTable' for rich text content controls, or 'PlainTextInline' and 'PlainTextParagraph' for plain text content controls, or 'CheckBox' for checkbox content controls.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            subtype?: boolean;
            /**
             * Specifies a tag to identify a content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            tag?: boolean;
            /**
             * Gets the text of the content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            text?: boolean;
            /**
             * Specifies the title for a content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            title?: boolean;
            /**
             * Gets the content control type. Only rich text, plain text, and checkbox content controls are supported currently.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            type?: boolean;
        }
        /**
         * Contains a collection of {@link Word.ContentControl} objects. Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content. Individual content controls may contain contents such as images, tables, or paragraphs of formatted text. Currently, only rich text, plain text, checkbox, dropdown list, and combo box content controls are supported.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface ContentControlCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the building block gallery-related data if the content control's {@link Word.ContentControlType} is `BuildingBlockGallery`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            buildingBlockGalleryContentControl?: Word.Interfaces.BuildingBlockGalleryContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the data of the content control when its type is `CheckBox`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi 1.7]
             */
            checkboxContentControl?: Word.Interfaces.CheckboxContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the date picker-related data if the content control's {@link Word.ContentControlType} is `DatePicker`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            datePickerContentControl?: Word.Interfaces.DatePickerContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the text format of the content control. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the group-related data if the content control's {@link Word.ContentControlType} is `Group`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            groupContentControl?: Word.Interfaces.GroupContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the parent body of the content control.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentBody?: Word.Interfaces.BodyLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the content control that contains the content control. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the content control that contains the content control. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains the content control. Throws an `ItemNotFound` error if it isn't contained in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains the content control. Throws an `ItemNotFound` error if it isn't contained in a table cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCell?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains the content control. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCellOrNullObject?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains the content control. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableOrNullObject?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the picture-related data if the content control's {@link Word.ContentControlType} is `Picture`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pictureContentControl?: Word.Interfaces.PictureContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the repeating section-related data if the content control's {@link Word.ContentControlType} is `RepeatingSection`. It's `null` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            repeatingSectionContentControl?: Word.Interfaces.RepeatingSectionContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies the appearance of the content control. The value can be 'BoundingBox', 'Tags', or 'Hidden'.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            appearance?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a value that indicates whether the user can delete the content control. Mutually exclusive with removeWhenEdited.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            cannotDelete?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a value that indicates whether the user can edit the contents of the content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            cannotEdit?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the color of the content control. Color is specified in '#RRGGBB' format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            color?: boolean;
            /**
             * For EACH ITEM in the collection: Gets an integer that represents the content control identifier.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            id?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the placeholder text of the content control. Dimmed text will be displayed when the content control is empty.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            placeholderText?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a value that indicates whether the content control is removed after it is edited. Mutually exclusive with cannotDelete.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            removeWhenEdited?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the style name for the content control. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the built-in style name for the content control. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the content control subtype. The subtype can be 'RichTextInline', 'RichTextParagraphs', 'RichTextTableCell', 'RichTextTableRow' and 'RichTextTable' for rich text content controls, or 'PlainTextInline' and 'PlainTextParagraph' for plain text content controls, or 'CheckBox' for checkbox content controls.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            subtype?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a tag to identify a content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            tag?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the text of the content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            text?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the title for a content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            title?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the content control type. Only rich text, plain text, and checkbox content controls are supported currently.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            type?: boolean;
        }
        /**
         * Represents a list item in a dropdown list or combo box content control.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        export interface ContentControlListItemLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the display text of a list item for a dropdown list or combo box content control.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            displayText?: boolean;
            /**
             * Specifies the index location of a content control list item in the collection of list items.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            index?: boolean;
            /**
             * Specifies the programmatic value of a list item for a dropdown list or combo box content control.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            value?: boolean;
        }
        /**
         * Contains a collection of {@link Word.ContentControlListItem} objects that represent the items in a dropdown list or combo box content control.
         *
         * @remarks
         * [Api set: WordApi 1.9]
         */
        export interface ContentControlListItemCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the display text of a list item for a dropdown list or combo box content control.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            displayText?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the index location of a content control list item in the collection of list items.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            index?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the programmatic value of a list item for a dropdown list or combo box content control.
             *
             * @remarks
             * [Api set: WordApi 1.9]
             */
            value?: boolean;
        }
        /**
         * Represents a custom property.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface CustomPropertyLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the key of the custom property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            key?: boolean;
            /**
             * Gets the value type of the custom property. Possible values are: String, Number, Date, Boolean.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            type?: boolean;
            /**
             * Specifies the value of the custom property. Note that even though Word on the web and the docx file format allow these properties to be arbitrarily long, the desktop version of Word will truncate string values to 255 16-bit chars (possibly creating invalid unicode by breaking up a surrogate pair).
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            value?: boolean;
        }
        /**
         * Contains the collection of {@link Word.CustomProperty} objects.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface CustomPropertyCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the key of the custom property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            key?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the value type of the custom property. Possible values are: String, Number, Date, Boolean.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            type?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the value of the custom property. Note that even though Word on the web and the docx file format allow these properties to be arbitrarily long, the desktop version of Word will truncate string values to 255 16-bit chars (possibly creating invalid unicode by breaking up a surrogate pair).
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            value?: boolean;
        }
        /**
         * Represents a custom XML part.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        export interface CustomXmlPartLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the root element of a bound region of data in the document. If the region is empty, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            documentElement?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * Gets a value that indicates whether the `CustomXmlPart` is built-in.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            builtIn?: boolean;
            /**
             * Gets the ID of the custom XML part.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            id?: boolean;
            /**
             * Gets the namespace URI of the custom XML part.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            namespaceUri?: boolean;
            /**
             * Gets the XML representation of the current `CustomXmlPart` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xml?: boolean;
        }
        /**
         * Contains the collection of {@link Word.CustomXmlPart} objects.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        export interface CustomXmlPartCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the root element of a bound region of data in the document. If the region is empty, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            documentElement?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets a value that indicates whether the `CustomXmlPart` is built-in.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            builtIn?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the ID of the custom XML part.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            id?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the namespace URI of the custom XML part.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            namespaceUri?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the XML representation of the current `CustomXmlPart` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xml?: boolean;
        }
        /**
         * Contains the collection of {@link Word.CustomXmlPart} objects with a specific namespace.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        export interface CustomXmlPartScopedCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the root element of a bound region of data in the document. If the region is empty, the property returns `Nothing`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            documentElement?: Word.Interfaces.CustomXmlNodeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets a value that indicates whether the `CustomXmlPart` is built-in.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            builtIn?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the ID of the custom XML part.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            id?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the namespace URI of the custom XML part.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            namespaceUri?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the XML representation of the current `CustomXmlPart` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xml?: boolean;
        }
        /**
         * The Document object is the top level object. A Document object contains one or more sections, content controls, and the body that contains the contents of the document.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface DocumentLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the active window for the document.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            activeWindow?: Word.Interfaces.WindowLoadOptions;
            /**
             * Specifies a `Template` object that represents the template attached to the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            attachedTemplate?: Word.Interfaces.TemplateLoadOptions;
            /**
             * Returns a `Bibliography` object that represents the bibliography references contained within the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bibliography?: Word.Interfaces.BibliographyLoadOptions;
            /**
             * Gets the body object of the main document. The body is the text that excludes headers, footers, footnotes, textboxes, etc.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            body?: Word.Interfaces.BodyLoadOptions;
            /**
             * Gets a `Coauthoring` object for managing coauthoring in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            coauthoring?: Word.Interfaces.CoauthoringLoadOptions;
            /**
             * Returns a `PageSetup` object that's associated with the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageSetup?: Word.Interfaces.PageSetupLoadOptions;
            /**
             * Gets the properties of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            properties?: Word.Interfaces.DocumentPropertiesLoadOptions;
            /**
             * Returns a `Selection` object that represents the current selection in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            selection?: Word.Interfaces.SelectionLoadOptions;
            /**
             * Specifies if automatic hyphenation is turned on for the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            autoHyphenation?: boolean;
            /**
             * Specifies if the edits in the document are automatically saved.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            autoSaveOn?: boolean;
            /**
             * Specifies the ChangeTracking mode.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            changeTrackingMode?: boolean;
            /**
             * Specifies the maximum number of consecutive lines that can end with hyphens.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            consecutiveHyphensLimit?: boolean;
            /**
             * Specifies whether words in all capital letters can be hyphenated.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hyphenateCaps?: boolean;
            /**
             * Specifies whether Microsoft Word has detected the language of the document text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageDetected?: boolean;
            /**
             * Indicates whether the changes in the document have been saved. A value of true indicates that the document hasn't changed since it was saved.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            saved?: boolean;
        }
        /**
         * The DocumentCreated object is the top level object created by Application.CreateDocument. A DocumentCreated object is a special Document object.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface DocumentCreatedLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the body object of the document. The body is the text that excludes headers, footers, footnotes, textboxes, etc.
             *
             * @remarks
             * [Api set: WordApiHiddenDocument 1.3]
             */
            body?: Word.Interfaces.BodyLoadOptions;
            /**
             * Gets the properties of the document.
             *
             * @remarks
             * [Api set: WordApiHiddenDocument 1.3]
             */
            properties?: Word.Interfaces.DocumentPropertiesLoadOptions;
            /**
             * Indicates whether the changes in the document have been saved. A value of true indicates that the document hasn't changed since it was saved.
             *
             * @remarks
             * [Api set: WordApiHiddenDocument 1.3]
             */
            saved?: boolean;
        }
        /**
         * Represents document properties.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface DocumentPropertiesLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the application name of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            applicationName?: boolean;
            /**
             * Specifies the author of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            author?: boolean;
            /**
             * Specifies the category of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            category?: boolean;
            /**
             * Specifies the Comments field in the metadata of the document. These have no connection to comments by users made in the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            comments?: boolean;
            /**
             * Specifies the company of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            company?: boolean;
            /**
             * Gets the creation date of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            creationDate?: boolean;
            /**
             * Specifies the format of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            format?: boolean;
            /**
             * Specifies the keywords of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            keywords?: boolean;
            /**
             * Gets the last author of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            lastAuthor?: boolean;
            /**
             * Gets the last print date of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            lastPrintDate?: boolean;
            /**
             * Gets the last save time of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            lastSaveTime?: boolean;
            /**
             * Specifies the manager of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            manager?: boolean;
            /**
             * Gets the revision number of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            revisionNumber?: boolean;
            /**
             * Gets security settings of the document. Some are access restrictions on the file on disk. Others are Document Protection settings. Some possible values are 0 = File on disk is read/write; 1 = Protect Document: File is encrypted and requires a password to open; 2 = Protect Document: Always Open as Read-Only; 3 = Protect Document: Both #1 and #2; 4 = File on disk is read-only; 5 = Both #1 and #4; 6 = Both #2 and #4; 7 = All of #1, #2, and #4; 8 = Protect Document: Restrict Edit to read-only; 9 = Both #1 and #8; 10 = Both #2 and #8; 11 = All of #1, #2, and #8; 12 = Both #4 and #8; 13 = All of #1, #4, and #8; 14 = All of #2, #4, and #8; 15 = All of #1, #2, #4, and #8.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            security?: boolean;
            /**
             * Specifies the subject of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            subject?: boolean;
            /**
             * Gets the template of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            template?: boolean;
            /**
             * Specifies the title of the document.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            title?: boolean;
        }
        /**
         * Represents a field.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * Important: To learn more about which fields can be inserted, see the `Word.Range.insertField` API introduced in requirement set 1.5.
         * Support for managing fields is similar to what's available in the Word UI. However, the Word UI on the web primarily only supports fields as read-only (see {@link https://support.microsoft.com/office/d8f46094-13c3-4966-98c3-259748f3caf1 | Field codes in Word for the web}).
         * To learn more about Word UI clients that more fully support fields, see the product list at the beginning of {@link https://support.microsoft.com/office/c429bbb0-8669-48a7-bd24-bab6ba6b06bb | Insert, edit, and view fields in Word}.
         */
        export interface FieldLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets a `LinkFormat` object that represents the link options of the field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            linkFormat?: Word.Interfaces.LinkFormatLoadOptions;
            /**
             * Gets an `OleFormat` object that represents the OLE characteristics (other than linking) for the field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            oleFormat?: Word.Interfaces.OleFormatLoadOptions;
            /**
             * Gets the parent body of the field.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentBody?: Word.Interfaces.BodyLoadOptions;
            /**
             * Gets the content control that contains the field. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the content control that contains the field. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the table that contains the field. Throws an `ItemNotFound` error if it isn't contained in a table.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * Gets the table cell that contains the field. Throws an `ItemNotFound` error if it isn't contained in a table cell.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentTableCell?: Word.Interfaces.TableCellLoadOptions;
            /**
             * Gets the table cell that contains the field. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentTableCellOrNullObject?: Word.Interfaces.TableCellLoadOptions;
            /**
             * Gets the table that contains the field. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentTableOrNullObject?: Word.Interfaces.TableLoadOptions;
            /**
             * Gets the field's result data.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            result?: Word.Interfaces.RangeLoadOptions;
            /**
             * Specifies the field's code instruction.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             *
             * Note: The ability to set the code was introduced in WordApi 1.5.
             */
            code?: boolean;
            /**
             * Specifies data in an "Addin" field. If the field isn't an "Addin" field, it is `null` and it will throw a general exception when code attempts to set it.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            data?: boolean;
            /**
             * Gets the field's kind.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            kind?: boolean;
            /**
             * Specifies whether the field is locked. `true` if the field is locked, `false` otherwise.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            locked?: boolean;
            /**
             * Specifies whether the field codes are displayed for the specified field. `true` if the field codes are displayed, `false` otherwise.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            showCodes?: boolean;
            /**
             * Gets the field's type.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            type?: boolean;
        }
        /**
         * Contains a collection of {@link Word.Field} objects.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         *
         * Important: To learn more about which fields can be inserted, see the `Word.Range.insertField` API introduced in requirement set 1.5.
         * Support for managing fields is similar to what's available in the Word UI. However, the Word UI on the web primarily only supports fields as read-only (see {@link https://support.microsoft.com/office/d8f46094-13c3-4966-98c3-259748f3caf1 | Field codes in Word for the web}).
         * To learn more about Word UI clients that more fully support fields, see the product list at the beginning of {@link https://support.microsoft.com/office/c429bbb0-8669-48a7-bd24-bab6ba6b06bb | Insert, edit, and view fields in Word}.
         */
        export interface FieldCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets a `LinkFormat` object that represents the link options of the field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            linkFormat?: Word.Interfaces.LinkFormatLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets an `OleFormat` object that represents the OLE characteristics (other than linking) for the field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            oleFormat?: Word.Interfaces.OleFormatLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the parent body of the field.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentBody?: Word.Interfaces.BodyLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the content control that contains the field. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the content control that contains the field. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains the field. Throws an `ItemNotFound` error if it isn't contained in a table.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains the field. Throws an `ItemNotFound` error if it isn't contained in a table cell.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentTableCell?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains the field. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentTableCellOrNullObject?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains the field. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            parentTableOrNullObject?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the field's result data.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            result?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies the field's code instruction.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             *
             * Note: The ability to set the code was introduced in WordApi 1.5.
             */
            code?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies data in an "Addin" field. If the field isn't an "Addin" field, it is `null` and it will throw a general exception when code attempts to set it.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            data?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the field's kind.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            kind?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the field is locked. `true` if the field is locked, `false` otherwise.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            locked?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the field codes are displayed for the specified field. `true` if the field codes are displayed, `false` otherwise.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            showCodes?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the field's type.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            type?: boolean;
        }
        /**
         * Represents a font.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface FontLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `FillFormat` object that contains fill formatting properties for the font used by the range of text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fill?: Word.Interfaces.FillFormatLoadOptions;
            /**
             * Returns a `GlowFormat` object that represents the glow formatting for the font used by the range of text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            glow?: Word.Interfaces.GlowFormatLoadOptions;
            /**
             * Returns a `LineFormat` object that specifies the formatting for a line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            line?: Word.Interfaces.LineFormatLoadOptions;
            /**
             * Returns a `ReflectionFormat` object that represents the reflection formatting for a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            reflection?: Word.Interfaces.ReflectionFormatLoadOptions;
            /**
             * Returns a `ColorFormat` object that represents the color for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textColor?: Word.Interfaces.ColorFormatLoadOptions;
            /**
             * Returns a `ShadowFormat` object that specifies the shadow formatting for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textShadow?: Word.Interfaces.ShadowFormatLoadOptions;
            /**
             * Returns a `ThreeDimensionalFormat` object that contains 3-dimensional (3D) effect formatting properties for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            threeDimensionalFormat?: Word.Interfaces.ThreeDimensionalFormatLoadOptions;
            /**
             * Specifies whether the font is formatted as all capital letters, which makes lowercase letters appear as uppercase letters. The possible values are as follows:
                        
                        - `true`: All the text has the **All Caps** attribute.
                        
                        - `false`: None of the text has the **All Caps** attribute.
                        
                        - `null`: Returned if some, but not all, of the text has the **All Caps** attribute.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            allCaps?: boolean;
            /**
             * Specifies a value that indicates whether the font is bold. True if the font is formatted as bold, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            bold?: boolean;
            /**
             * Specifies whether the font is formatted as bold in a right-to-left language document. The possible values are as follows:
                        
                        - `true`: All the text is bold.
                        
                        - `false`: None of the text is bold.
                        
                        - `null`: Returned if some, but not all, of the text is bold.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            boldBidirectional?: boolean;
            /**
             * Specifies the color for the specified font. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            color?: boolean;
            /**
             * Specifies a `ColorIndex` value that represents the color for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            colorIndex?: boolean;
            /**
             * Specifies the color for the `Font` object in a right-to-left language document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            colorIndexBidirectional?: boolean;
            /**
             * Specifies whether contextual alternates are enabled for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            contextualAlternates?: boolean;
            /**
             * Specifies the color to be used for diacritics for the `Font` object. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            diacriticColor?: boolean;
            /**
             * Specifies whether Microsoft Word ignores the number of characters per line for the corresponding `Font` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            disableCharacterSpaceGrid?: boolean;
            /**
             * Specifies a value that indicates whether the font has a double strikethrough. True if the font is formatted as double strikethrough text, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            doubleStrikeThrough?: boolean;
            /**
             * Specifies whether the font is formatted as embossed. The possible values are as follows:
                        
                        - `true`: All the text is embossed.
                        
                        - `false`: None of the text is embossed.
                        
                        - `null`: Returned if some, but not all, of the text is embossed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emboss?: boolean;
            /**
             * Specifies an `EmphasisMark` value that represents the emphasis mark for a character or designated character string.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emphasisMark?: boolean;
            /**
             * Specifies whether the font is formatted as engraved. The possible values are as follows:
                        
                        - `true`: All the text is engraved.
                        
                        - `false`: None of the text is engraved.
                        
                        - `null`: Returned if some, but not all, of the text is engraved.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            engrave?: boolean;
            /**
             * Specifies a value that indicates whether the font is tagged as hidden. True if the font is formatted as hidden text, otherwise, false.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            hidden?: boolean;
            /**
             * Specifies the highlight color. To set it, use a value either in the '#RRGGBB' format or the color name. To remove highlight color, set it to null. The returned highlight color can be in the '#RRGGBB' format, an empty string for mixed highlight colors, or `null` for no highlight color. Note: Only the default highlight colors are available in Office for Windows Desktop. These are "Yellow", "Lime", "Turquoise", "Pink", "Blue", "Red", "DarkBlue", "Teal", "Green", "Purple", "DarkRed", "Olive", "Gray", "LightGray", and "Black". When the add-in runs in Office for Windows Desktop, any other color is converted to the closest color when applied to the font.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            highlightColor?: boolean;
            /**
             * Specifies a value that indicates whether the font is italicized. True if the font is italicized, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            italic?: boolean;
            /**
             * Specifies whether the font is italicized in a right-to-left language document. The possible values are as follows:
                        
                        - `true`: All the text is italicized.
                        
                        - `false`: None of the text is italicized.
                        
                        - `null`: Returned if some, but not all, of the text is italicized.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            italicBidirectional?: boolean;
            /**
             * Specifies the minimum font size for which Microsoft Word will adjust kerning automatically.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            kerning?: boolean;
            /**
             * Specifies the ligature setting for the `Font` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            ligature?: boolean;
            /**
             * Specifies a value that represents the name of the font.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            name?: boolean;
            /**
             * Specifies the font used for Latin text (characters with character codes from 0 (zero) through 127).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nameAscii?: boolean;
            /**
             * Specifies the font name in a right-to-left language document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nameBidirectional?: boolean;
            /**
             * Specifies the East Asian font name.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nameFarEast?: boolean;
            /**
             * Specifies the font used for characters with codes from 128 through 255.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nameOther?: boolean;
            /**
             * Specifies the number form setting for an OpenType font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            numberForm?: boolean;
            /**
             * Specifies the number spacing setting for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            numberSpacing?: boolean;
            /**
             * Specifies if the font is formatted as outlined. The possible values are as follows:
                        
                        - `true`: All the text is outlined.
                        
                        - `false`: None of the text is outlined.
                        
                        - `null`: Returned if some, but not all, of the text is outlined.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            outline?: boolean;
            /**
             * Specifies the position of text (in points) relative to the base line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            position?: boolean;
            /**
             * Specifies the scaling percentage applied to the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            scaling?: boolean;
            /**
             * Specifies if the font is formatted as shadowed. The possible values are as follows:
                        
                        - `true`: All the text is shadowed.
                        
                        - `false`: None of the text is shadowed.
                        
                        - `null`: Returned if some, but not all, of the text is shadowed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shadow?: boolean;
            /**
             * Specifies a value that represents the font size in points.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            size?: boolean;
            /**
             * Specifies the font size in points for right-to-left text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sizeBidirectional?: boolean;
            /**
             * Specifies whether the font is formatted as small caps, which makes lowercase letters appear as small uppercase letters. The possible values are as follows:
                        
                        - `true`: All the text has the **Small Caps** attribute.
                        
                        - `false`: None of the text has the **Small Caps** attribute.
                        
                        - `null`: Returned if some, but not all, of the text has the **Small Caps** attribute.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            smallCaps?: boolean;
            /**
             * Specifies the spacing between characters.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            spacing?: boolean;
            /**
             * Specifies a value that indicates whether the font has a strikethrough. True if the font is formatted as strikethrough text, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            strikeThrough?: boolean;
            /**
             * Specifies the stylistic set for the font.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            stylisticSet?: boolean;
            /**
             * Specifies a value that indicates whether the font is a subscript. True if the font is formatted as subscript, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            subscript?: boolean;
            /**
             * Specifies a value that indicates whether the font is a superscript. True if the font is formatted as superscript, otherwise, false.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            superscript?: boolean;
            /**
             * Specifies a value that indicates the font's underline type. 'None' if the font isn't underlined.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            underline?: boolean;
            /**
             * Specifies the color of the underline for the `Font` object. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            underlineColor?: boolean;
        }
        /**
         * Represents a heading style used in a table of contents or table of figures.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface HeadingStyleLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the level for the heading style in a table of contents or table of figures. Must be a value from 1 to 9.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: boolean;
            /**
             * Specifies the name of style for a heading.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
        }
        /**
         * Represents a collection of {@link Word.HeadingStyle} objects in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface HeadingStyleCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the level for the heading style in a table of contents or table of figures. Must be a value from 1 to 9.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the name of style for a heading.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
        }
        /**
         * Represents a hyperlink in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface HyperlinkLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `Range` object that represents the portion of the document that's contained within the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Specifies the address (for example, a file name or URL) of the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            address?: boolean;
            /**
             * Specifies the text string for the hyperlink's subject line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emailSubject?: boolean;
            /**
             * Returns `true` if extra information is required to resolve the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isExtraInfoRequired?: boolean;
            /**
             * Returns the name of the `Hyperlink` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
            /**
             * Specifies the text that appears as a ScreenTip when the mouse pointer is positioned over the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            screenTip?: boolean;
            /**
             * Specifies a named location in the destination of the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            subAddress?: boolean;
            /**
             * Specifies the name of the frame or window in which to load the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            target?: boolean;
            /**
             * Specifies the hyperlink's visible text in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textToDisplay?: boolean;
            /**
             * Returns the hyperlink type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Contains a collection of {@link Word.Hyperlink} objects.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface HyperlinkCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Returns a `Range` object that represents the portion of the document that's contained within the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies the address (for example, a file name or URL) of the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            address?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the text string for the hyperlink's subject line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emailSubject?: boolean;
            /**
             * For EACH ITEM in the collection: Returns `true` if extra information is required to resolve the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isExtraInfoRequired?: boolean;
            /**
             * For EACH ITEM in the collection: Returns the name of the `Hyperlink` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the text that appears as a ScreenTip when the mouse pointer is positioned over the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            screenTip?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a named location in the destination of the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            subAddress?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the name of the frame or window in which to load the hyperlink.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            target?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the hyperlink's visible text in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textToDisplay?: boolean;
            /**
             * For EACH ITEM in the collection: Returns the hyperlink type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents an inline picture.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface InlinePictureLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the parent paragraph that contains the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.2]
             */
            paragraph?: Word.Interfaces.ParagraphLoadOptions;
            /**
             * Gets the content control that contains the inline image. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the content control that contains the inline image. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the table that contains the inline image. Throws an `ItemNotFound` error if it isn't contained in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * Gets the table cell that contains the inline image. Throws an `ItemNotFound` error if it isn't contained in a table cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCell?: Word.Interfaces.TableCellLoadOptions;
            /**
             * Gets the table cell that contains the inline image. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCellOrNullObject?: Word.Interfaces.TableCellLoadOptions;
            /**
             * Gets the table that contains the inline image. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableOrNullObject?: Word.Interfaces.TableLoadOptions;
            /**
             * Specifies a string that represents the alternative text associated with the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            altTextDescription?: boolean;
            /**
             * Specifies a string that contains the title for the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            altTextTitle?: boolean;
            /**
             * Specifies a number that describes the height of the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            height?: boolean;
            /**
             * Specifies a hyperlink on the image. Use a '#' to separate the address part from the optional location part.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            hyperlink?: boolean;
            /**
             * Gets the format of the inline image.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            imageFormat?: boolean;
            /**
             * Specifies a value that indicates whether the inline image retains its original proportions when you resize it.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lockAspectRatio?: boolean;
            /**
             * Specifies a number that describes the width of the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            width?: boolean;
        }
        /**
         * Contains a collection of {@link Word.InlinePicture} objects.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface InlinePictureCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the parent paragraph that contains the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.2]
             */
            paragraph?: Word.Interfaces.ParagraphLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the content control that contains the inline image. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the content control that contains the inline image. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains the inline image. Throws an `ItemNotFound` error if it isn't contained in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains the inline image. Throws an `ItemNotFound` error if it isn't contained in a table cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCell?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains the inline image. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCellOrNullObject?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains the inline image. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableOrNullObject?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies a string that represents the alternative text associated with the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            altTextDescription?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a string that contains the title for the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            altTextTitle?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a number that describes the height of the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            height?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a hyperlink on the image. Use a '#' to separate the address part from the optional location part.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            hyperlink?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the format of the inline image.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            imageFormat?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a value that indicates whether the inline image retains its original proportions when you resize it.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lockAspectRatio?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a number that describes the width of the inline image.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            width?: boolean;
        }
        /**
         * Represents the linking characteristics for an OLE object or picture.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface LinkFormatLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies if the link is updated automatically when the container file is opened or when the source file is changed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isAutoUpdated?: boolean;
            /**
             * Specifies if a `Field`, `InlineShape`, or `Shape` object is locked to prevent automatic updating.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLocked?: boolean;
            /**
             * Specifies if the linked picture is saved with the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isPictureSavedWithDocument?: boolean;
            /**
             * Specifies the path and name of the source file for the linked OLE object, picture, or field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sourceFullName?: boolean;
            /**
             * Gets the name of the source file for the linked OLE object, picture, or field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sourceName?: boolean;
            /**
             * Gets the path of the source file for the linked OLE object, picture, or field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sourcePath?: boolean;
            /**
             * Gets the link type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Contains a collection of {@link Word.Paragraph} objects.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface ListLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the list's id.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            id?: boolean;
            /**
             * Checks whether each of the 9 levels exists in the list. A true value indicates the level exists, which means there is at least one list item at that level.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            levelExistences?: boolean;
            /**
             * Gets all 9 level types in the list. Each type can be 'Bullet', 'Number', or 'Picture'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            levelTypes?: boolean;
        }
        /**
         * Contains a collection of {@link Word.List} objects.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface ListCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the list's id.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            id?: boolean;
            /**
             * For EACH ITEM in the collection: Checks whether each of the 9 levels exists in the list. A true value indicates the level exists, which means there is at least one list item at that level.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            levelExistences?: boolean;
            /**
             * For EACH ITEM in the collection: Gets all 9 level types in the list. Each type can be 'Bullet', 'Number', or 'Picture'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            levelTypes?: boolean;
        }
        /**
         * Represents the paragraph list item format.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface ListItemLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the level of the item in the list.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            level?: boolean;
            /**
             * Gets the list item bullet, number, or picture as a string.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            listString?: boolean;
            /**
             * Gets the list item order number in relation to its siblings.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            siblingIndex?: boolean;
        }
        /**
         * Represents a list level.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        export interface ListLevelLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets a Font object that represents the character formatting of the specified object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * Specifies the horizontal alignment of the list level. The value can be 'Left', 'Centered', or 'Right'.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            alignment?: boolean;
            /**
             * Specifies the name of the style that's linked to the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            linkedStyle?: boolean;
            /**
             * Specifies the number format for the specified list level.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            numberFormat?: boolean;
            /**
             * Specifies the position (in points) of the number or bullet for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            numberPosition?: boolean;
            /**
             * Specifies the number style for the list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            numberStyle?: boolean;
            /**
             * Specifies the list level that must appear before the specified list level restarts numbering at 1.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            resetOnHigher?: boolean;
            /**
             * Specifies the starting number for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            startAt?: boolean;
            /**
             * Specifies the tab position for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            tabPosition?: boolean;
            /**
             * Specifies the position (in points) for the second line of wrapping text for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            textPosition?: boolean;
            /**
             * Specifies the character inserted after the number for the specified list level.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            trailingCharacter?: boolean;
        }
        /**
         * Contains a collection of {@link Word.ListLevel} objects.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        export interface ListLevelCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets a Font object that represents the character formatting of the specified object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies the horizontal alignment of the list level. The value can be 'Left', 'Centered', or 'Right'.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            alignment?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the name of the style that's linked to the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            linkedStyle?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the number format for the specified list level.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            numberFormat?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the position (in points) of the number or bullet for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            numberPosition?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the number style for the list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            numberStyle?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the list level that must appear before the specified list level restarts numbering at 1.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            resetOnHigher?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the starting number for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            startAt?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the tab position for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            tabPosition?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the position (in points) for the second line of wrapping text for the specified list level object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            textPosition?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the character inserted after the number for the specified list level.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            trailingCharacter?: boolean;
        }
        /**
         * Represents a list template.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.1]
         */
        export interface ListTemplateLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the name of the list template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
            /**
             * Specifies whether the list template is outline numbered.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            outlineNumbered?: boolean;
        }
        /**
         * Represents a footnote or endnote.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        export interface NoteItemLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Represents the body object of the note item. It's the portion of the text within the footnote or endnote.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            body?: Word.Interfaces.BodyLoadOptions;
            /**
             * Represents a footnote or endnote reference in the main document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            reference?: Word.Interfaces.RangeLoadOptions;
            /**
             * Represents the note item type: footnote or endnote.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            type?: boolean;
        }
        /**
         * Contains a collection of {@link Word.NoteItem} objects.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        export interface NoteItemCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Represents the body object of the note item. It's the portion of the text within the footnote or endnote.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            body?: Word.Interfaces.BodyLoadOptions;
            /**
             * For EACH ITEM in the collection: Represents a footnote or endnote reference in the main document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            reference?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Represents the note item type: footnote or endnote.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            type?: boolean;
        }
        /**
         * Represents the OLE characteristics (other than linking) for an OLE object, ActiveX control, or field.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface OleFormatLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the class type for the specified OLE object, picture, or field.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            classType?: boolean;
            /**
             * Specifies the icon that is used when the `displayAsIcon` property is `true`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            iconIndex?: boolean;
            /**
             * Specifies the text displayed below the icon for the OLE object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            iconLabel?: boolean;
            /**
             * Specifies the program file in which the icon for the OLE object is stored.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            iconName?: boolean;
            /**
             * Gets the path of the file in which the icon for the OLE object is stored.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            iconPath?: boolean;
            /**
             * Gets whether the specified object is displayed as an icon.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isDisplayedAsIcon?: boolean;
            /**
             * Specifies whether formatting done in Microsoft Word to the linked OLE object is preserved.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFormattingPreservedOnUpdate?: boolean;
            /**
             * Gets a string that's used to identify the portion of the source file that's being linked.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            label?: boolean;
            /**
             * Gets the programmatic identifier (`ProgId`) for the specified OLE object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            progID?: boolean;
        }
        /**
         * Represents a page in the document. `Page` objects manage the page layout and content.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        export interface PageLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the height, in points, of the paper defined in the Page Setup dialog box.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            height?: boolean;
            /**
             * Gets the index of the page. The page index is 1-based and independent of the user's custom page numbering.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            index?: boolean;
            /**
             * Gets the width, in points, of the paper defined in the Page Setup dialog box.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            width?: boolean;
        }
        /**
         * Represents the collection of page.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        export interface PageCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the height, in points, of the paper defined in the Page Setup dialog box.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            height?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the index of the page. The page index is 1-based and independent of the user's custom page numbering.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            index?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the width, in points, of the paper defined in the Page Setup dialog box.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            width?: boolean;
        }
        /**
         * Represents a window pane. The `Pane` object is a member of the pane collection. The pane collection includes all the window panes for a single window.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        export interface PaneLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `Selection` object that represents the current selection in the pane.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            selection?: Word.Interfaces.SelectionLoadOptions;
        }
        /**
         * Represents the collection of pane.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        export interface PaneCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Returns a `Selection` object that represents the current selection in the pane.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            selection?: Word.Interfaces.SelectionLoadOptions;
        }
        /**
         * Represents the window that displays the document. A window can be split to contain multiple reading panes.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        export interface WindowLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the active pane in the window.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            activePane?: Word.Interfaces.PaneLoadOptions;
            /**
             * Gets the next document window in the collection of open document windows.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            next?: Word.Interfaces.WindowLoadOptions;
            /**
             * Gets the previous document window in the collection open document windows.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            previous?: Word.Interfaces.WindowLoadOptions;
            /**
             * Gets the `View` object that represents the view for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            view?: Word.Interfaces.ViewLoadOptions;
            /**
             * Specifies whether rulers are displayed for the window or pane.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areRulersDisplayed?: boolean;
            /**
             * Specifies whether comments, footnotes, endnotes, and hyperlinks are displayed as tips.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areScreenTipsDisplayed?: boolean;
            /**
             * Specifies whether thumbnail images of the pages in a document are displayed along the left side of the Microsoft Word document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areThumbnailsDisplayed?: boolean;
            /**
             * Specifies the caption text for the window that is displayed in the title bar of the document or application window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            caption?: boolean;
            /**
             * Specifies the height of the window (in points).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            height?: boolean;
            /**
             * Specifies the horizontal scroll position as a percentage of the document width.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalPercentScrolled?: boolean;
            /**
             * Specifies the default start-up mode for the Japanese Input Method Editor (IME).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            imeMode?: boolean;
            /**
             * Gets the position of an item in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            index?: boolean;
            /**
             * Specifies whether the window is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isActive?: boolean;
            /**
             * Specifies whether the document map is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isDocumentMapVisible?: boolean;
            /**
             * Specifies whether the email message header is visible in the document window. The default value is `False`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEnvelopeVisible?: boolean;
            /**
             * Specifies whether a horizontal scroll bar is displayed for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isHorizontalScrollBarDisplayed?: boolean;
            /**
             * Specifies whether the vertical scroll bar appears on the left side of the document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLeftScrollBarDisplayed?: boolean;
            /**
             * Specifies whether the vertical ruler appears on the right side of the document window in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isRightRulerDisplayed?: boolean;
            /**
             * Specifies whether the window is split into multiple panes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isSplit?: boolean;
            /**
             * Specifies whether a vertical ruler is displayed for the window or pane.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVerticalRulerDisplayed?: boolean;
            /**
             * Specifies whether a vertical scroll bar is displayed for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVerticalScrollBarDisplayed?: boolean;
            /**
             * Specifies whether the window is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies the horizontal position of the window, measured in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            left?: boolean;
            /**
             * Specifies how Microsoft Word displays source documents after a compare and merge process.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showSourceDocuments?: boolean;
            /**
             * Specifies the vertical split percentage for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            splitVertical?: boolean;
            /**
             * Specifies the width of the style area in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            styleAreaWidth?: boolean;
            /**
             * Specifies the vertical position of the document window, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            top?: boolean;
            /**
             * Gets the window type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
            /**
             * Gets the height (in points) of the active working area in the document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            usableHeight?: boolean;
            /**
             * Gets the width (in points) of the active working area in the document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            usableWidth?: boolean;
            /**
             * Specifies the vertical scroll position as a percentage of the document length.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalPercentScrolled?: boolean;
            /**
             * Specifies the width of the document window, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: boolean;
            /**
             * Gets an integer that represents the position of the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            windowNumber?: boolean;
            /**
             * Specifies the state of the document window or task window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            windowState?: boolean;
        }
        /**
         * Represents the collection of window objects.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        export interface WindowCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the active pane in the window.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            activePane?: Word.Interfaces.PaneLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the next document window in the collection of open document windows.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            next?: Word.Interfaces.WindowLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the previous document window in the collection open document windows.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            previous?: Word.Interfaces.WindowLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the `View` object that represents the view for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            view?: Word.Interfaces.ViewLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies whether rulers are displayed for the window or pane.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areRulersDisplayed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether comments, footnotes, endnotes, and hyperlinks are displayed as tips.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areScreenTipsDisplayed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether thumbnail images of the pages in a document are displayed along the left side of the Microsoft Word document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areThumbnailsDisplayed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the caption text for the window that is displayed in the title bar of the document or application window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            caption?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the height of the window (in points).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            height?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the horizontal scroll position as a percentage of the document width.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalPercentScrolled?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the default start-up mode for the Japanese Input Method Editor (IME).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            imeMode?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the position of an item in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            index?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the window is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isActive?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the document map is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isDocumentMapVisible?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the email message header is visible in the document window. The default value is `False`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEnvelopeVisible?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether a horizontal scroll bar is displayed for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isHorizontalScrollBarDisplayed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the vertical scroll bar appears on the left side of the document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLeftScrollBarDisplayed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the vertical ruler appears on the right side of the document window in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isRightRulerDisplayed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the window is split into multiple panes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isSplit?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether a vertical ruler is displayed for the window or pane.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVerticalRulerDisplayed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether a vertical scroll bar is displayed for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVerticalScrollBarDisplayed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the window is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the horizontal position of the window, measured in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            left?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies how Microsoft Word displays source documents after a compare and merge process.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showSourceDocuments?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the vertical split percentage for the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            splitVertical?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the width of the style area in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            styleAreaWidth?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the vertical position of the document window, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            top?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the window type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the height (in points) of the active working area in the document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            usableHeight?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the width (in points) of the active working area in the document window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            usableWidth?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the vertical scroll position as a percentage of the document length.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalPercentScrolled?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the width of the document window, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: boolean;
            /**
             * For EACH ITEM in the collection: Gets an integer that represents the position of the window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            windowNumber?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the state of the document window or task window.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            windowState?: boolean;
        }
        /**
         * Represents a single paragraph in a selection, range, content control, or document body.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface ParagraphLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the text format of the paragraph. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * Gets the List to which this paragraph belongs. Throws an `ItemNotFound` error if the paragraph isn't in a list.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            list?: Word.Interfaces.ListLoadOptions;
            /**
             * Gets the ListItem for the paragraph. Throws an `ItemNotFound` error if the paragraph isn't part of a list.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            listItem?: Word.Interfaces.ListItemLoadOptions;
            /**
             * Gets the ListItem for the paragraph. If the paragraph isn't part of a list, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            listItemOrNullObject?: Word.Interfaces.ListItemLoadOptions;
            /**
             * Gets the List to which this paragraph belongs. If the paragraph isn't in a list, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            listOrNullObject?: Word.Interfaces.ListLoadOptions;
            /**
             * Gets the parent body of the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentBody?: Word.Interfaces.BodyLoadOptions;
            /**
             * Gets the content control that contains the paragraph. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the content control that contains the paragraph. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the table that contains the paragraph. Throws an `ItemNotFound` error if it isn't contained in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * Gets the table cell that contains the paragraph. Throws an `ItemNotFound` error if it isn't contained in a table cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCell?: Word.Interfaces.TableCellLoadOptions;
            /**
             * Gets the table cell that contains the paragraph. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCellOrNullObject?: Word.Interfaces.TableCellLoadOptions;
            /**
             * Gets the table that contains the paragraph. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableOrNullObject?: Word.Interfaces.TableLoadOptions;
            /**
             * Returns a `ShadingUniversal` object that refers to the shading formatting for the paragraph.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * Specifies the alignment for a paragraph. The value can be 'left', 'centered', 'right', or 'justified'.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            alignment?: boolean;
            /**
             * Specifies the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            firstLineIndent?: boolean;
            /**
             * Indicates the paragraph is the last one inside its parent body.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isLastParagraph?: boolean;
            /**
             * Checks whether the paragraph is a list item.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isListItem?: boolean;
            /**
             * Specifies the left indent value, in points, for the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            leftIndent?: boolean;
            /**
             * Specifies the line spacing, in points, for the specified paragraph. In the Word UI, this value is divided by 12.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lineSpacing?: boolean;
            /**
             * Specifies the amount of spacing, in grid lines, after the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lineUnitAfter?: boolean;
            /**
             * Specifies the amount of spacing, in grid lines, before the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lineUnitBefore?: boolean;
            /**
             * Specifies the outline level for the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            outlineLevel?: boolean;
            /**
             * Specifies the right indent value, in points, for the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            rightIndent?: boolean;
            /**
             * Specifies the spacing, in points, after the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            spaceAfter?: boolean;
            /**
             * Specifies the spacing, in points, before the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            spaceBefore?: boolean;
            /**
             * Specifies the style name for the paragraph. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: boolean;
            /**
             * Specifies the built-in style name for the paragraph. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: boolean;
            /**
             * Gets the level of the paragraph's table. It returns 0 if the paragraph isn't in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            tableNestingLevel?: boolean;
            /**
             * Gets the text of the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            text?: boolean;
            /**
             * Gets a string that represents the paragraph identifier in the current session. ID is in standard 8-4-4-4-12 GUID format without curly braces and differs across sessions and coauthors.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            uniqueLocalId?: boolean;
        }
        /**
         * Contains a collection of {@link Word.Paragraph} objects.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface ParagraphCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the text format of the paragraph. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the List to which this paragraph belongs. Throws an `ItemNotFound` error if the paragraph isn't in a list.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            list?: Word.Interfaces.ListLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the ListItem for the paragraph. Throws an `ItemNotFound` error if the paragraph isn't part of a list.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            listItem?: Word.Interfaces.ListItemLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the ListItem for the paragraph. If the paragraph isn't part of a list, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            listItemOrNullObject?: Word.Interfaces.ListItemLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the List to which this paragraph belongs. If the paragraph isn't in a list, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            listOrNullObject?: Word.Interfaces.ListLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the parent body of the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentBody?: Word.Interfaces.BodyLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the content control that contains the paragraph. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the content control that contains the paragraph. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains the paragraph. Throws an `ItemNotFound` error if it isn't contained in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains the paragraph. Throws an `ItemNotFound` error if it isn't contained in a table cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCell?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains the paragraph. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCellOrNullObject?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains the paragraph. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableOrNullObject?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns a `ShadingUniversal` object that refers to the shading formatting for the paragraph.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies the alignment for a paragraph. The value can be 'left', 'centered', 'right', or 'justified'.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            alignment?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            firstLineIndent?: boolean;
            /**
             * For EACH ITEM in the collection: Indicates the paragraph is the last one inside its parent body.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isLastParagraph?: boolean;
            /**
             * For EACH ITEM in the collection: Checks whether the paragraph is a list item.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isListItem?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the left indent value, in points, for the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            leftIndent?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the line spacing, in points, for the specified paragraph. In the Word UI, this value is divided by 12.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lineSpacing?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the amount of spacing, in grid lines, after the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lineUnitAfter?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the amount of spacing, in grid lines, before the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            lineUnitBefore?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the outline level for the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            outlineLevel?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the right indent value, in points, for the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            rightIndent?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the spacing, in points, after the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            spaceAfter?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the spacing, in points, before the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            spaceBefore?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the style name for the paragraph. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the built-in style name for the paragraph. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the level of the paragraph's table. It returns 0 if the paragraph isn't in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            tableNestingLevel?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the text of the paragraph.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            text?: boolean;
            /**
             * For EACH ITEM in the collection: Gets a string that represents the paragraph identifier in the current session. ID is in standard 8-4-4-4-12 GUID format without curly braces and differs across sessions and coauthors.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            uniqueLocalId?: boolean;
        }
        /**
         * Represents a style of paragraph in a document.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        export interface ParagraphFormatLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the alignment for the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            alignment?: boolean;
            /**
             * Specifies the value (in points) for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            firstLineIndent?: boolean;
            /**
             * Specifies whether all lines in the specified paragraphs remain on the same page when Microsoft Word repaginates the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            keepTogether?: boolean;
            /**
             * Specifies whether the specified paragraph remains on the same page as the paragraph that follows it when Microsoft Word repaginates the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            keepWithNext?: boolean;
            /**
             * Specifies the left indent.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            leftIndent?: boolean;
            /**
             * Specifies the line spacing (in points) for the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            lineSpacing?: boolean;
            /**
             * Specifies the amount of spacing (in gridlines) after the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            lineUnitAfter?: boolean;
            /**
             * Specifies the amount of spacing (in gridlines) before the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            lineUnitBefore?: boolean;
            /**
             * Specifies whether left and right indents are the same width.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            mirrorIndents?: boolean;
            /**
             * Specifies the outline level for the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            outlineLevel?: boolean;
            /**
             * Specifies the right indent (in points) for the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            rightIndent?: boolean;
            /**
             * Specifies the amount of spacing (in points) after the specified paragraph or text column.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            spaceAfter?: boolean;
            /**
             * Specifies the spacing (in points) before the specified paragraphs.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            spaceBefore?: boolean;
            /**
             * Specifies whether the first and last lines in the specified paragraph remain on the same page as the rest of the paragraph when Microsoft Word repaginates the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            widowControl?: boolean;
        }
        /**
         * Represents a contiguous area in a document.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface RangeLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the text format of the range. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * Returns a `ListFormat` object that represents all the list formatting characteristics of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listFormat?: Word.Interfaces.ListFormatLoadOptions;
            /**
             * Gets the parent body of the range.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentBody?: Word.Interfaces.BodyLoadOptions;
            /**
             * Gets the currently supported content control that contains the range. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the currently supported content control that contains the range. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the table that contains the range. Throws an `ItemNotFound` error if it isn't contained in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * Gets the table cell that contains the range. Throws an `ItemNotFound` error if it isn't contained in a table cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCell?: Word.Interfaces.TableCellLoadOptions;
            /**
             * Gets the table cell that contains the range. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCellOrNullObject?: Word.Interfaces.TableCellLoadOptions;
            /**
             * Gets the table that contains the range. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableOrNullObject?: Word.Interfaces.TableLoadOptions;
            /**
             * Returns a `ShadingUniversal` object that refers to the shading formatting for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * Specifies whether the range is formatted as bold.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bold?: boolean;
            /**
             * Specifies whether the range is formatted as bold in a right-to-left language document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            boldBidirectional?: boolean;
            /**
             * Specifies a `CharacterCase` value that represents the case of the text in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            case?: boolean;
            /**
             * Specifies the character width of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            characterWidth?: boolean;
            /**
             * Specifies if the range contains combined characters.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            combineCharacters?: boolean;
            /**
             * Specifies if Microsoft Word ignores the number of characters per line for the corresponding `Range` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            disableCharacterSpaceGrid?: boolean;
            /**
             * Specifies the emphasis mark for a character or designated character string.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emphasisMark?: boolean;
            /**
             * Specifies the ending character position of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            end?: boolean;
            /**
             * Specifies the width (in the current measurement units) in which Microsoft Word fits the text in the current selection or range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fitTextWidth?: boolean;
            /**
             * Specifies if a grammar check has been run on the range or document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            grammarChecked?: boolean;
            /**
             * Specifies the proofing status (spelling and grammar checking) of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasNoProofing?: boolean;
            /**
             * Specifies the highlight color for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            highlightColorIndex?: boolean;
            /**
             * Specifies the formatting for horizontal text set within vertical text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalInVertical?: boolean;
            /**
             * Gets the first hyperlink in the range, or sets a hyperlink on the range. All hyperlinks in the range are deleted when you set a new hyperlink on the range. Use a '#' to separate the address part from the optional location part.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            hyperlink?: boolean;
            /**
             * Specifies the ID for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: boolean;
            /**
             * Checks whether the range length is zero.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isEmpty?: boolean;
            /**
             * Gets if the range is collapsed and is located at the end-of-row mark in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEndOfRowMark?: boolean;
            /**
             * Gets whether the text in the range is visible on the screen.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTextVisibleOnScreen?: boolean;
            /**
             * Specifies if the font or range is formatted as italic.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            italic?: boolean;
            /**
             * Specifies if the font or range is formatted as italic (right-to-left languages).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            italicBidirectional?: boolean;
            /**
             * Specifies whether the range of Japanese language text is hiragana or katakana.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            kana?: boolean;
            /**
             * Specifies whether Microsoft Word has detected the language of the text in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageDetected?: boolean;
            /**
             * Specifies a `LanguageId` value that represents the language for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: boolean;
            /**
             * Specifies an East Asian language for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: boolean;
            /**
             * Specifies a language for the range that isn't classified as an East Asian language.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdOther?: boolean;
            /**
             * Specifies if all nonprinting characters (such as hidden text, tab marks, space marks, and paragraph marks) are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showAll?: boolean;
            /**
             * Specifies if spelling has been checked throughout the range or document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            spellingChecked?: boolean;
            /**
             * Specifies the starting character position of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            start?: boolean;
            /**
             * Gets the number of characters in the story that contains the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyLength?: boolean;
            /**
             * Gets the story type for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyType?: boolean;
            /**
             * Specifies the style name for the range. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: boolean;
            /**
             * Specifies the built-in style name for the range. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: boolean;
            /**
             * Gets the text of the range.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            text?: boolean;
            /**
             * Specifies whether Microsoft Word sets two lines of text in one and specifies the characters that enclose the text, if any.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            twoLinesInOne?: boolean;
            /**
             * Specifies the type of underline applied to the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            underline?: boolean;
        }
        /**
         * Contains a collection of {@link Word.Range} objects.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface RangeCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the text format of the range. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns a `ListFormat` object that represents all the list formatting characteristics of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listFormat?: Word.Interfaces.ListFormatLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the parent body of the range.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentBody?: Word.Interfaces.BodyLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the currently supported content control that contains the range. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the currently supported content control that contains the range. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains the range. Throws an `ItemNotFound` error if it isn't contained in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains the range. Throws an `ItemNotFound` error if it isn't contained in a table cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCell?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains the range. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCellOrNullObject?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains the range. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableOrNullObject?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns a `ShadingUniversal` object that refers to the shading formatting for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies whether the range is formatted as bold.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bold?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the range is formatted as bold in a right-to-left language document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            boldBidirectional?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a `CharacterCase` value that represents the case of the text in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            case?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the character width of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            characterWidth?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if the range contains combined characters.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            combineCharacters?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if Microsoft Word ignores the number of characters per line for the corresponding `Range` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            disableCharacterSpaceGrid?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the emphasis mark for a character or designated character string.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emphasisMark?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the ending character position of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            end?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the width (in the current measurement units) in which Microsoft Word fits the text in the current selection or range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fitTextWidth?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if a grammar check has been run on the range or document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            grammarChecked?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the proofing status (spelling and grammar checking) of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasNoProofing?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the highlight color for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            highlightColorIndex?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the formatting for horizontal text set within vertical text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalInVertical?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the first hyperlink in the range, or sets a hyperlink on the range. All hyperlinks in the range are deleted when you set a new hyperlink on the range. Use a '#' to separate the address part from the optional location part.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            hyperlink?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the ID for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: boolean;
            /**
             * For EACH ITEM in the collection: Checks whether the range length is zero.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isEmpty?: boolean;
            /**
             * For EACH ITEM in the collection: Gets if the range is collapsed and is located at the end-of-row mark in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEndOfRowMark?: boolean;
            /**
             * For EACH ITEM in the collection: Gets whether the text in the range is visible on the screen.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTextVisibleOnScreen?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if the font or range is formatted as italic.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            italic?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if the font or range is formatted as italic (right-to-left languages).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            italicBidirectional?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the range of Japanese language text is hiragana or katakana.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            kana?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether Microsoft Word has detected the language of the text in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageDetected?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a `LanguageId` value that represents the language for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies an East Asian language for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a language for the range that isn't classified as an East Asian language.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdOther?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if all nonprinting characters (such as hidden text, tab marks, space marks, and paragraph marks) are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showAll?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if spelling has been checked throughout the range or document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            spellingChecked?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the starting character position of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            start?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the number of characters in the story that contains the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyLength?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the story type for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyType?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the style name for the range. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the built-in style name for the range. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the text of the range.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            text?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether Microsoft Word sets two lines of text in one and specifies the characters that enclose the text, if any.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            twoLinesInOne?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the type of underline applied to the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            underline?: boolean;
        }
        /**
         * Specifies the options to be included in a search operation.
                    To learn more about how to use search options in the Word JavaScript APIs, read {@link https://learn.microsoft.com/office/dev/add-ins/word/search-option-guidance | Use search options to find text in your Word add-in}.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface SearchOptionsLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies a value that indicates whether to ignore all punctuation characters between words. Corresponds to the Ignore punctuation check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            ignorePunct?: boolean;
            /**
             * Specifies a value that indicates whether to ignore all whitespace between words. Corresponds to the Ignore whitespace characters check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            ignoreSpace?: boolean;
            /**
             * Specifies a value that indicates whether to perform a case sensitive search. Corresponds to the Match case check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchCase?: boolean;
            /**
             * Specifies a value that indicates whether to match words that begin with the search string. Corresponds to the Match prefix check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchPrefix?: boolean;
            /**
             * Specifies a value that indicates whether to match words that end with the search string. Corresponds to the Match suffix check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchSuffix?: boolean;
            /**
             * Specifies a value that indicates whether to find operation only entire words, not text that is part of a larger word. Corresponds to the Find whole words only check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchWholeWord?: boolean;
            /**
             * Specifies a value that indicates whether the search will be performed using special search operators. Corresponds to the Use wildcards check box in the Find and Replace dialog box.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            matchWildcards?: boolean;
        }
        /**
         * Represents a section in a Word document.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface SectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the body object of the section. This doesn't include the header/footer and other section metadata.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            body?: Word.Interfaces.BodyLoadOptions;
            /**
             * Returns a `PageSetup` object that's associated with the section.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageSetup?: Word.Interfaces.PageSetupLoadOptions;
            /**
             * Specifies if the section is protected for forms.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            protectedForForms?: boolean;
        }
        /**
         * Contains the collection of the document's {@link Word.Section} objects.
         *
         * @remarks
         * [Api set: WordApi 1.1]
         */
        export interface SectionCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the body object of the section. This doesn't include the header/footer and other section metadata.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            body?: Word.Interfaces.BodyLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns a `PageSetup` object that's associated with the section.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageSetup?: Word.Interfaces.PageSetupLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies if the section is protected for forms.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            protectedForForms?: boolean;
        }
        /**
         * Represents a setting of the add-in.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        export interface SettingLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the key of the setting.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            key?: boolean;
            /**
             * Specifies the value of the setting.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            value?: boolean;
        }
        /**
         * Contains the collection of {@link Word.Setting} objects.
         *
         * @remarks
         * [Api set: WordApi 1.4]
         */
        export interface SettingCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the key of the setting.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            key?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the value of the setting.
             *
             * @remarks
             * [Api set: WordApi 1.4]
             */
            value?: boolean;
        }
        /**
         * Contains a collection of {@link Word.Style} objects.
         *
         * @remarks
         * [Api set: WordApi 1.5]
         */
        export interface StyleCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a BorderCollection object that represents all the borders for the specified style.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            borders?: Word.Interfaces.BorderCollectionLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets a font object that represents the character formatting of the specified style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns a `Frame` object that represents the frame formatting for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            frame?: Word.Interfaces.FrameLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies a link between a paragraph and a character style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            linkStyle?: Word.Interfaces.StyleLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets a ListTemplate object that represents the list formatting for the specified Style object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            listTemplate?: Word.Interfaces.ListTemplateLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets a ParagraphFormat object that represents the paragraph settings for the specified style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            paragraphFormat?: Word.Interfaces.ParagraphFormatLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets a Shading object that represents the shading for the specified style. Not applicable to List style.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            shading?: Word.Interfaces.ShadingLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets a TableStyle object representing Style properties that can be applied to a table.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            tableStyle?: Word.Interfaces.TableStyleLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies whether the style is automatically redefined based on the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            automaticallyUpdate?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the name of an existing style to use as the base formatting of another style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             *
             * Note: The ability to set `baseStyle` was introduced in WordApi 1.6.
             */
            baseStyle?: boolean;
            /**
             * For EACH ITEM in the collection: Gets whether the specified style is a built-in style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            builtIn?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the description of the specified style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            description?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the spelling and grammar checker ignores text formatted with this style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasProofing?: boolean;
            /**
             * For EACH ITEM in the collection: Gets whether the specified style is a built-in style that has been modified or applied in the document or a new style that has been created in the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            inUse?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a `LanguageId` value that represents the language for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies an East Asian language for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: boolean;
            /**
             * For EACH ITEM in the collection: Gets whether a style is a linked style that can be used for both paragraph and character formatting.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            linked?: boolean;
            /**
             * For EACH ITEM in the collection: Returns the list level for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listLevelNumber?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the style cannot be changed or edited.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            locked?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the name of a style in the language of the user.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            nameLocal?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the name of the style to be applied automatically to a new paragraph that is inserted after a paragraph formatted with the specified style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             *
             * Note: The ability to set `nextParagraphStyle` was introduced in WordApi 1.6.
             */
            nextParagraphStyle?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether to remove spacing between paragraphs that are formatted using the same style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            noSpaceBetweenParagraphsOfSameStyle?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the priority.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            priority?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the style corresponds to an available quick style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            quickStyle?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the style type.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            type?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the specified style is made visible as a recommended style in the Styles and in the Styles task pane in Microsoft Word after it's used in the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            unhideWhenUsed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the specified style is visible as a recommended style in the Styles gallery and in the Styles task pane.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            visibility?: boolean;
        }
        /**
         * Represents a style in a Word document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface StyleLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies a BorderCollection object that represents all the borders for the specified style.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            borders?: Word.Interfaces.BorderCollectionLoadOptions;
            /**
             * Gets a font object that represents the character formatting of the specified style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * Returns a `Frame` object that represents the frame formatting for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            frame?: Word.Interfaces.FrameLoadOptions;
            /**
             * Specifies a link between a paragraph and a character style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            linkStyle?: Word.Interfaces.StyleLoadOptions;
            /**
             * Gets a ListTemplate object that represents the list formatting for the specified Style object.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            listTemplate?: Word.Interfaces.ListTemplateLoadOptions;
            /**
             * Gets a ParagraphFormat object that represents the paragraph settings for the specified style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            paragraphFormat?: Word.Interfaces.ParagraphFormatLoadOptions;
            /**
             * Gets a Shading object that represents the shading for the specified style. Not applicable to List style.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            shading?: Word.Interfaces.ShadingLoadOptions;
            /**
             * Gets a TableStyle object representing Style properties that can be applied to a table.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            tableStyle?: Word.Interfaces.TableStyleLoadOptions;
            /**
             * Specifies whether the style is automatically redefined based on the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            automaticallyUpdate?: boolean;
            /**
             * Specifies the name of an existing style to use as the base formatting of another style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             *
             * Note: The ability to set `baseStyle` was introduced in WordApi 1.6.
             */
            baseStyle?: boolean;
            /**
             * Gets whether the specified style is a built-in style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            builtIn?: boolean;
            /**
             * Gets the description of the specified style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            description?: boolean;
            /**
             * Specifies whether the spelling and grammar checker ignores text formatted with this style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasProofing?: boolean;
            /**
             * Gets whether the specified style is a built-in style that has been modified or applied in the document or a new style that has been created in the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            inUse?: boolean;
            /**
             * Specifies a `LanguageId` value that represents the language for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: boolean;
            /**
             * Specifies an East Asian language for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: boolean;
            /**
             * Gets whether a style is a linked style that can be used for both paragraph and character formatting.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            linked?: boolean;
            /**
             * Returns the list level for the style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listLevelNumber?: boolean;
            /**
             * Specifies whether the style cannot be changed or edited.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            locked?: boolean;
            /**
             * Gets the name of a style in the language of the user.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            nameLocal?: boolean;
            /**
             * Specifies the name of the style to be applied automatically to a new paragraph that is inserted after a paragraph formatted with the specified style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             *
             * Note: The ability to set `nextParagraphStyle` was introduced in WordApi 1.6.
             */
            nextParagraphStyle?: boolean;
            /**
             * Specifies whether to remove spacing between paragraphs that are formatted using the same style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            noSpaceBetweenParagraphsOfSameStyle?: boolean;
            /**
             * Specifies the priority.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            priority?: boolean;
            /**
             * Specifies whether the style corresponds to an available quick style.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            quickStyle?: boolean;
            /**
             * Gets the style type.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            type?: boolean;
            /**
             * Specifies whether the specified style is made visible as a recommended style in the Styles and in the Styles task pane in Microsoft Word after it's used in the document.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            unhideWhenUsed?: boolean;
            /**
             * Specifies whether the specified style is visible as a recommended style in the Styles gallery and in the Styles task pane.
             *
             * @remarks
             * [Api set: WordApi 1.5]
             */
            visibility?: boolean;
        }
        /**
         * Represents the shading object.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        export interface ShadingLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the color for the background of the object. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            backgroundPatternColor?: boolean;
            /**
             * Specifies the color for the foreground of the object. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            foregroundPatternColor?: boolean;
            /**
             * Specifies the shading texture of the object. To learn more about how to apply backgrounds like textures, see {@link https://support.microsoft.com/office/db481e61-7af6-4063-bbcd-b276054a5515 | Add, change, or delete the background color in Word}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            texture?: boolean;
        }
        /**
         * Represents the `ShadingUniversal` object, which manages shading for a range, paragraph, frame, or table.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface ShadingUniversalLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the color that's applied to the background of the `ShadingUniversal` object. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            backgroundPatternColor?: boolean;
            /**
             * Specifies the color that's applied to the background of the `ShadingUniversal` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            backgroundPatternColorIndex?: boolean;
            /**
             * Specifies the color that's applied to the foreground of the `ShadingUniversal` object. This color is applied to the dots and lines in the shading pattern. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundPatternColor?: boolean;
            /**
             * Specifies the color that's applied to the foreground of the `ShadingUniversal` object. This color is applied to the dots and lines in the shading pattern.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundPatternColorIndex?: boolean;
            /**
             * Specifies the shading texture of the object. To learn more about how to apply backgrounds like textures, see {@link https://support.microsoft.com/office/db481e61-7af6-4063-bbcd-b276054a5515 | Add, change, or delete the background color in Word}.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            texture?: boolean;
        }
        /**
         * Represents a table in a Word document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface TableLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the font. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * Gets the parent body of the table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentBody?: Word.Interfaces.BodyLoadOptions;
            /**
             * Gets the content control that contains the table. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the content control that contains the table. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * Gets the table that contains this table. Throws an `ItemNotFound` error if it isn't contained in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * Gets the table cell that contains this table. Throws an `ItemNotFound` error if it isn't contained in a table cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCell?: Word.Interfaces.TableCellLoadOptions;
            /**
             * Gets the table cell that contains this table. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCellOrNullObject?: Word.Interfaces.TableCellLoadOptions;
            /**
             * Gets the table that contains this table. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableOrNullObject?: Word.Interfaces.TableLoadOptions;
            /**
             * Returns the `ShadingUniversal` object that represents the shading of the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * Specifies the alignment of the table against the page column. The value can be 'Left', 'Centered', or 'Right'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            alignment?: boolean;
            /**
             * Specifies the description of the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            description?: boolean;
            /**
             * Specifies the number of header rows.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            headerRowCount?: boolean;
            /**
             * Specifies the horizontal alignment of every cell in the table. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            horizontalAlignment?: boolean;
            /**
             * Indicates whether all of the table rows are uniform.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isUniform?: boolean;
            /**
             * Gets the nesting level of the table. Top-level tables have level 1.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            nestingLevel?: boolean;
            /**
             * Gets the number of rows in the table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            rowCount?: boolean;
            /**
             * Specifies the shading color. Color is specified in "#RRGGBB" format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            shadingColor?: boolean;
            /**
             * Specifies the style name for the table. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            style?: boolean;
            /**
             * Specifies whether the table has banded columns.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBandedColumns?: boolean;
            /**
             * Specifies whether the table has banded rows.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBandedRows?: boolean;
            /**
             * Specifies the built-in style name for the table. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: boolean;
            /**
             * Specifies whether the table has a first column with a special style.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleFirstColumn?: boolean;
            /**
             * Specifies whether the table has a last column with a special style.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleLastColumn?: boolean;
            /**
             * Specifies whether the table has a total (last) row with a special style.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleTotalRow?: boolean;
            /**
             * Specifies the title of the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: boolean;
            /**
             * Specifies the text values in the table, as a 2D JavaScript array.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            values?: boolean;
            /**
             * Specifies the vertical alignment of every cell in the table. The value can be 'Top', 'Center', or 'Bottom'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            verticalAlignment?: boolean;
            /**
             * Specifies the width of the table in points.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            width?: boolean;
        }
        /**
         * Represents the TableStyle object.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        export interface TableStyleLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `ShadingUniversal` object that refers to the shading formatting for the table style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingLoadOptions;
            /**
             * Specifies the table's alignment against the page margin.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            alignment?: boolean;
            /**
             * Specifies whether lines in tables formatted with a specified style break across pages.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            allowBreakAcrossPage?: boolean;
            /**
             * Specifies the amount of space to add between the contents and the bottom borders of the cells.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            bottomCellMargin?: boolean;
            /**
             * Specifies the spacing (in points) between the cells in a table style.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            cellSpacing?: boolean;
            /**
             * Specifies the number of columns in the banding when a style specifies odd- or even-column banding.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            columnStripe?: boolean;
            /**
             * Specifies whether Microsoft Word allows to break the specified table across pages.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isBreakAcrossPagesAllowed?: boolean;
            /**
             * Specifies the amount of space to add between the contents and the left borders of the cells.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            leftCellMargin?: boolean;
            /**
             * Specifies the left indent value (in points) for the rows in the table style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            leftIndent?: boolean;
            /**
             * Specifies the amount of space to add between the contents and the right borders of the cells.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            rightCellMargin?: boolean;
            /**
             * Specifies the number of rows to include in the banding when the style specifies odd- or even-row banding.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rowStripe?: boolean;
            /**
             * Specifies the direction in which Microsoft Word orders cells in the table style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tableDirection?: boolean;
            /**
             * Specifies the amount of space to add between the contents and the top borders of the cells.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            topCellMargin?: boolean;
        }
        /**
         * Represents a tab stop in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TabStopLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the next tab stop in the collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            next?: Word.Interfaces.TabStopLoadOptions;
            /**
             * Gets the previous tab stop in the collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            previous?: Word.Interfaces.TabStopLoadOptions;
            /**
             * Gets a `TabAlignment` value that represents the alignment for the tab stop.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            alignment?: boolean;
            /**
             * Gets whether this tab stop is a custom tab stop.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            customTab?: boolean;
            /**
             * Gets a `TabLeader` value that represents the leader for this `TabStop` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            leader?: boolean;
            /**
             * Gets the position of the tab stop relative to the left margin.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            position?: boolean;
        }
        /**
         * Represents a collection of {@link Word.TabStop | tab stops} in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TabStopCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the next tab stop in the collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            next?: Word.Interfaces.TabStopLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the previous tab stop in the collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            previous?: Word.Interfaces.TabStopLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets a `TabAlignment` value that represents the alignment for the tab stop.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            alignment?: boolean;
            /**
             * For EACH ITEM in the collection: Gets whether this tab stop is a custom tab stop.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            customTab?: boolean;
            /**
             * For EACH ITEM in the collection: Gets a `TabLeader` value that represents the leader for this `TabStop` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            leader?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the position of the tab stop relative to the left margin.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            position?: boolean;
        }
        /**
         * Contains the collection of the document's Table objects.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface TableCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the font. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the parent body of the table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentBody?: Word.Interfaces.BodyLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the content control that contains the table. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the content control that contains the table. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains this table. Throws an `ItemNotFound` error if it isn't contained in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains this table. Throws an `ItemNotFound` error if it isn't contained in a table cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCell?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains this table. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCellOrNullObject?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains this table. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableOrNullObject?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns the `ShadingUniversal` object that represents the shading of the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies the alignment of the table against the page column. The value can be 'Left', 'Centered', or 'Right'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            alignment?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the description of the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            description?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the number of header rows.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            headerRowCount?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the horizontal alignment of every cell in the table. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            horizontalAlignment?: boolean;
            /**
             * For EACH ITEM in the collection: Indicates whether all of the table rows are uniform.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isUniform?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the nesting level of the table. Top-level tables have level 1.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            nestingLevel?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the number of rows in the table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            rowCount?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the shading color. Color is specified in "#RRGGBB" format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            shadingColor?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the style name for the table. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            style?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the table has banded columns.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBandedColumns?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the table has banded rows.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBandedRows?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the built-in style name for the table. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the table has a first column with a special style.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleFirstColumn?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the table has a last column with a special style.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleLastColumn?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the table has a total (last) row with a special style.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleTotalRow?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the title of the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the text values in the table, as a 2D JavaScript array.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            values?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the vertical alignment of every cell in the table. The value can be 'Top', 'Center', or 'Bottom'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            verticalAlignment?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the width of the table in points.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            width?: boolean;
        }
        /**
         * Represents a table column in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TableColumnLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `ShadingUniversal` object that refers to the shading formatting for the column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * Returns the position of this column in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            columnIndex?: boolean;
            /**
             * Returns `true` if the column or row is the first one in the table; `false` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFirst?: boolean;
            /**
             * Returns `true` if the column or row is the last one in the table; `false` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLast?: boolean;
            /**
             * Returns the nesting level of the column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nestingLevel?: boolean;
            /**
             * Specifies the preferred width (in points or as a percentage of the window width) for the column.
                        The unit of measurement can be specified by the `preferredWidthType` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            preferredWidth?: boolean;
            /**
             * Specifies the preferred unit of measurement to use for the width of the table column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            preferredWidthType?: boolean;
            /**
             * Specifies the width of the column, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: boolean;
        }
        /**
         * Represents a collection of {@link Word.TableColumn} objects in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TableColumnCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Returns a `ShadingUniversal` object that refers to the shading formatting for the column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns the position of this column in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            columnIndex?: boolean;
            /**
             * For EACH ITEM in the collection: Returns `true` if the column or row is the first one in the table; `false` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFirst?: boolean;
            /**
             * For EACH ITEM in the collection: Returns `true` if the column or row is the last one in the table; `false` otherwise.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLast?: boolean;
            /**
             * For EACH ITEM in the collection: Returns the nesting level of the column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            nestingLevel?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the preferred width (in points or as a percentage of the window width) for the column.
                        The unit of measurement can be specified by the `preferredWidthType` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            preferredWidth?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the preferred unit of measurement to use for the width of the table column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            preferredWidthType?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the width of the column, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: boolean;
        }
        /**
         * Represents a table of authorities in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TableOfAuthoritiesLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the portion of a document that is this table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Specifies the name of the bookmark from which to collect table of authorities entries.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bookmark?: boolean;
            /**
             * Specifies the category of entries to be included in the table of authorities.
                        Values 0 through 16 correspond to the items listed in the Category box of the Table of Authorities dialog. To learn how to access this through the Word UI, see {@link https://support.microsoft.com/office/ddd126ae-52bc-4299-9558-06dd0e4fe8c0 | Create a table of authorities}.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            category?: boolean;
            /**
             * Specifies a separator of up to five characters. This appears between the table of authorities entry and its page number.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            entrySeparator?: boolean;
            /**
             * Specifies whether the category name for a group of entries appears in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isCategoryHeaderIncluded?: boolean;
            /**
             * Specifies whether the entries in the table of authorities are displayed with their formatting in the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEntryFormattingKept?: boolean;
            /**
             * Specifies whether references to the same authority that are repeated on five or more pages are replaced with "Passim".
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isPassimUsed?: boolean;
            /**
             * Specifies a separator of up to five characters. This appears between individual page references in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageNumberSeparator?: boolean;
            /**
             * Specifies a separator of up to five characters. This appears between ranges of pages in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageRangeSeparator?: boolean;
            /**
             * Specifies the {@link https://support.microsoft.com/office/062a387b-dfc9-4ef8-8235-29ee113d59be | Sequence (SEQ) field} identifier for the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sequenceName?: boolean;
            /**
             * Specifies a separator of up to five characters. This appears between the sequence number and the page number in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sequenceSeparator?: boolean;
            /**
             * Specifies the leader character that appears between entries and their associated page numbers in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: boolean;
        }
        /**
         * Represents a collection of {@link Word.TableOfAuthorities} objects in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TableOfAuthoritiesCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the portion of a document that is this table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies the name of the bookmark from which to collect table of authorities entries.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bookmark?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the category of entries to be included in the table of authorities.
                        Values 0 through 16 correspond to the items listed in the Category box of the Table of Authorities dialog. To learn how to access this through the Word UI, see {@link https://support.microsoft.com/office/ddd126ae-52bc-4299-9558-06dd0e4fe8c0 | Create a table of authorities}.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            category?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a separator of up to five characters. This appears between the table of authorities entry and its page number.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            entrySeparator?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the category name for a group of entries appears in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isCategoryHeaderIncluded?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the entries in the table of authorities are displayed with their formatting in the table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEntryFormattingKept?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether references to the same authority that are repeated on five or more pages are replaced with "Passim".
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isPassimUsed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a separator of up to five characters. This appears between individual page references in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageNumberSeparator?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a separator of up to five characters. This appears between ranges of pages in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageRangeSeparator?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the {@link https://support.microsoft.com/office/062a387b-dfc9-4ef8-8235-29ee113d59be | Sequence (SEQ) field} identifier for the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sequenceName?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a separator of up to five characters. This appears between the sequence number and the page number in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sequenceSeparator?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the leader character that appears between entries and their associated page numbers in the table of authorities.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: boolean;
        }
        /**
         * Represents a category used in a table of authorities.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TableOfAuthoritiesCategoryLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the name of this table of authorities category.
                        Changing the name of the category doesn't change the index in the collection. The value for {@link Word.TableOfAuthorities | TableOfAuthorities.category} will remain the same.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
        }
        /**
         * Represents a collection of {@link Word.TableOfAuthoritiesCategory} objects in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TableOfAuthoritiesCategoryCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the name of this table of authorities category.
                        Changing the name of the category doesn't change the index in the collection. The value for {@link Word.TableOfAuthorities | TableOfAuthorities.category} will remain the same.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
        }
        /**
         * Represents a table of contents in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TableOfContentsLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
            * Gets the portion of a document that is this table of contents.
            *
            * @remarks
            * [Api set: WordApi BETA (PREVIEW ONLY)]
            * @beta
            */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Specifies whether built-in heading styles are used for the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areBuiltInHeadingStylesUsed?: boolean;
            /**
             * Specifies whether {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) fields} are included in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFieldsUsed?: boolean;
            /**
             * Specifies whether entries in the table of contents should be formatted as hyperlinks when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areHyperlinksUsedOnWeb?: boolean;
            /**
             * Specifies whether the page numbers in the table of contents should be hidden when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersHiddenOnWeb?: boolean;
            /**
             * Specifies whether page numbers are included in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersIncluded?: boolean;
            /**
             * Specifies whether page numbers are aligned with the right margin in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersRightAligned?: boolean;
            /**
             * Specifies the ending heading level for the table of contents. Must be a value from 1 to 9 and greater than `upperHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lowerHeadingLevel?: boolean;
            /**
             * Specifies the character between entries and their page numbers in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: boolean;
            /**
             * Specifies a one-letter identifier from {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | TC fields} that's used for the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tableId?: boolean;
            /**
             * Specifies the starting heading level for the table of contents. Must be a value from 1 to 9 and smaller than `lowerHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            upperHeadingLevel?: boolean;
        }
        /**
         * Represents a collection of {@link Word.TableOfContents} objects in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TableOfContentsCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the portion of a document that is this table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies whether built-in heading styles are used for the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areBuiltInHeadingStylesUsed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) fields} are included in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFieldsUsed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether entries in the table of contents should be formatted as hyperlinks when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areHyperlinksUsedOnWeb?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the page numbers in the table of contents should be hidden when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersHiddenOnWeb?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether page numbers are included in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersIncluded?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether page numbers are aligned with the right margin in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersRightAligned?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the ending heading level for the table of contents. Must be a value from 1 to 9 and greater than `upperHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lowerHeadingLevel?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the character between entries and their page numbers in the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a one-letter identifier from {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | TC fields} that's used for the table of contents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tableId?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the starting heading level for the table of contents. Must be a value from 1 to 9 and smaller than `lowerHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            upperHeadingLevel?: boolean;
        }
        /**
         * Represents a table of figures in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TableOfFiguresLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the portion of a document that is this table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Specifies whether built-in heading styles are used for the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areBuiltInHeadingStylesUsed?: boolean;
            /**
             * Specifies whether {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) fields} are included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFieldsUsed?: boolean;
            /**
             * Specifies whether entries in the table of figures should be formatted as hyperlinks when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areHyperlinksUsedOnWeb?: boolean;
            /**
             * Specifies whether the page numbers in the table of figures should be hidden when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersHiddenOnWeb?: boolean;
            /**
             * Specifies whether page numbers are included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersIncluded?: boolean;
            /**
             * Specifies whether page numbers are aligned with the right margin in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersRightAligned?: boolean;
            /**
             * Specifies the label that identifies the items to be included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            captionLabel?: boolean;
            /**
             * Specifies whether the caption label and caption number are included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLabelIncluded?: boolean;
            /**
             * Specifies the ending heading level for the table of figures. Must be a value from 1 to 9 and greater than `upperHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lowerHeadingLevel?: boolean;
            /**
             * Specifies the character between entries and their page numbers in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: boolean;
            /**
             * Specifies a one-letter identifier from {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | TC fields} that's used for the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tableId?: boolean;
            /**
             * Specifies the starting heading level for the table of figures. Must be a value from 1 to 9 and smaller than `lowerHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            upperHeadingLevel?: boolean;
        }
        /**
         * Represents a collection of {@link Word.TableOfFigures} objects in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TableOfFiguresCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the portion of a document that is this table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies whether built-in heading styles are used for the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areBuiltInHeadingStylesUsed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | Table of Contents Entry (TC) fields} are included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFieldsUsed?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether entries in the table of figures should be formatted as hyperlinks when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areHyperlinksUsedOnWeb?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the page numbers in the table of figures should be hidden when publishing to the web.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersHiddenOnWeb?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether page numbers are included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersIncluded?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether page numbers are aligned with the right margin in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageNumbersRightAligned?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the label that identifies the items to be included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            captionLabel?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the caption label and caption number are included in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isLabelIncluded?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the ending heading level for the table of figures. Must be a value from 1 to 9 and greater than `upperHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lowerHeadingLevel?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the character between entries and their page numbers in the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a one-letter identifier from {@link https://support.microsoft.com/office/01e5dd8a-4730-4bc2-8594-23d7329e25c3 | TC fields} that's used for the table of figures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tableId?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the starting heading level for the table of figures. Must be a value from 1 to 9 and smaller than `lowerHeadingLevel`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            upperHeadingLevel?: boolean;
        }
        /**
         * Represents a row in a Word document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface TableRowLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the font. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * Gets parent table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * Returns the `Range` object that represents the table row.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Returns the `ShadingUniversal` object that represents the shading of the table row.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * Gets the number of cells in the row.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            cellCount?: boolean;
            /**
             * Specifies the horizontal alignment of every cell in the row. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            horizontalAlignment?: boolean;
            /**
             * Checks whether the row is a header row. To set the number of header rows, use `headerRowCount` on the Table object.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isHeader?: boolean;
            /**
             * Specifies the preferred height of the row in points.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            preferredHeight?: boolean;
            /**
             * Gets the index of the row in its parent table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            rowIndex?: boolean;
            /**
             * Specifies the shading color. Color is specified in "#RRGGBB" format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            shadingColor?: boolean;
            /**
             * Specifies the text values in the row, as a 2D JavaScript array.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            values?: boolean;
            /**
             * Specifies the vertical alignment of the cells in the row. The value can be 'Top', 'Center', or 'Bottom'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            verticalAlignment?: boolean;
        }
        /**
         * Contains the collection of the document's TableRow objects.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface TableRowCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the font. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets parent table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns the `Range` object that represents the table row.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns the `ShadingUniversal` object that represents the shading of the table row.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the number of cells in the row.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            cellCount?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the horizontal alignment of every cell in the row. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            horizontalAlignment?: boolean;
            /**
             * For EACH ITEM in the collection: Checks whether the row is a header row. To set the number of header rows, use `headerRowCount` on the Table object.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isHeader?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the preferred height of the row in points.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            preferredHeight?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the index of the row in its parent table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            rowIndex?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the shading color. Color is specified in "#RRGGBB" format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            shadingColor?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the text values in the row, as a 2D JavaScript array.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            values?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the vertical alignment of the cells in the row. The value can be 'Top', 'Center', or 'Bottom'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            verticalAlignment?: boolean;
        }
        /**
         * Represents a table cell in a Word document.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface TableCellLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the body object of the cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            body?: Word.Interfaces.BodyLoadOptions;
            /**
             * Returns the `TableColumn` object that represents the table column that contains this cell.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            column?: Word.Interfaces.TableColumnLoadOptions;
            /**
             * Gets the parent row of the cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentRow?: Word.Interfaces.TableRowLoadOptions;
            /**
             * Gets the parent table of the cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * Returns the `ShadingUniversal` object that represents the shading of the table cell.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * Gets the index of the cell in its row.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            cellIndex?: boolean;
            /**
             * Specifies the width of the cell's column in points. This is applicable to uniform tables.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            columnWidth?: boolean;
            /**
             * Specifies the horizontal alignment of the cell. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            horizontalAlignment?: boolean;
            /**
             * Gets the index of the cell's row in the table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            rowIndex?: boolean;
            /**
             * Specifies the shading color of the cell. Color is specified in "#RRGGBB" format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            shadingColor?: boolean;
            /**
             * Specifies the text of the cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            value?: boolean;
            /**
             * Specifies the vertical alignment of the cell. The value can be 'Top', 'Center', or 'Bottom'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            verticalAlignment?: boolean;
            /**
             * Gets the width of the cell in points.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            width?: boolean;
        }
        /**
         * Contains the collection of the document's TableCell objects.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface TableCellCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the body object of the cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            body?: Word.Interfaces.BodyLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns the `TableColumn` object that represents the table column that contains this cell.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            column?: Word.Interfaces.TableColumnLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the parent row of the cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentRow?: Word.Interfaces.TableRowLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the parent table of the cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns the `ShadingUniversal` object that represents the shading of the table cell.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the index of the cell in its row.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            cellIndex?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the width of the cell's column in points. This is applicable to uniform tables.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            columnWidth?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the horizontal alignment of the cell. The value can be 'Left', 'Centered', 'Right', or 'Justified'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            horizontalAlignment?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the index of the cell's row in the table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            rowIndex?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the shading color of the cell. Color is specified in "#RRGGBB" format or by using the color name.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            shadingColor?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the text of the cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            value?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the vertical alignment of the cell. The value can be 'Top', 'Center', or 'Bottom'.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            verticalAlignment?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the width of the cell in points.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            width?: boolean;
        }
        /**
         * Specifies the border style.
         *
         * @remarks
         * [Api set: WordApi 1.3]
         */
        export interface TableBorderLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the table border color.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            color?: boolean;
            /**
             * Specifies the type of the table border.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            type?: boolean;
            /**
             * Specifies the width, in points, of the table border. Not applicable to table border types that have fixed widths.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            width?: boolean;
        }
        /**
         * Represents a document template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TemplateLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the East Asian language to use when breaking lines of text in the document or template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            farEastLineBreakLanguage?: boolean;
            /**
             * Specifies the line break control level for the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            farEastLineBreakLevel?: boolean;
            /**
             * Returns the name of the template, including the drive or Web path.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fullName?: boolean;
            /**
             * Specifies whether the spelling and grammar checker ignores documents based on this template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasNoProofing?: boolean;
            /**
             * Specifies the character spacing adjustment for the template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            justificationMode?: boolean;
            /**
             * Specifies if Microsoft Word kerns half-width Latin characters and punctuation marks in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            kerningByAlgorithm?: boolean;
            /**
             * Specifies a `LanguageId` value that represents the language in the template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: boolean;
            /**
             * Specifies an East Asian language for the language in the template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: boolean;
            /**
             * Returns only the name of the document template (excluding any path or other location information).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
            /**
             * Specifies the kinsoku characters after which Microsoft Word will not break a line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            noLineBreakAfter?: boolean;
            /**
             * Specifies the kinsoku characters before which Microsoft Word will not break a line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            noLineBreakBefore?: boolean;
            /**
             * Returns the path to the document template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            path?: boolean;
            /**
             * Specifies `true` if the template has not changed since it was last saved, `false` if Microsoft Word displays a prompt to save changes when the document is closed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            saved?: boolean;
            /**
             * Returns the template type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Contains a collection of {@link Word.Template} objects that represent all the templates that are currently available.
                    This collection includes open templates, templates attached to open documents, and global templates loaded in the **Templates and Add-ins** dialog box.
                    To learn how to access this dialog in the Word UI, see {@link https://support.microsoft.com/office/2479fe53-f849-4394-88bb-2a6e2a39479d | Load or unload a template or add-in program}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TemplateCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the East Asian language to use when breaking lines of text in the document or template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            farEastLineBreakLanguage?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the line break control level for the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            farEastLineBreakLevel?: boolean;
            /**
             * For EACH ITEM in the collection: Returns the name of the template, including the drive or Web path.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fullName?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the spelling and grammar checker ignores documents based on this template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasNoProofing?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the character spacing adjustment for the template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            justificationMode?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if Microsoft Word kerns half-width Latin characters and punctuation marks in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            kerningByAlgorithm?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a `LanguageId` value that represents the language in the template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies an East Asian language for the language in the template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: boolean;
            /**
             * For EACH ITEM in the collection: Returns only the name of the document template (excluding any path or other location information).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the kinsoku characters after which Microsoft Word will not break a line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            noLineBreakAfter?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the kinsoku characters before which Microsoft Word will not break a line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            noLineBreakBefore?: boolean;
            /**
             * For EACH ITEM in the collection: Returns the path to the document template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            path?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies `true` if the template has not changed since it was last saved, `false` if Microsoft Word displays a prompt to save changes when the document is closed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            saved?: boolean;
            /**
             * For EACH ITEM in the collection: Returns the template type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents a tracked change in a Word document.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        export interface TrackedChangeLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the author of the tracked change.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            author?: boolean;
            /**
             * Gets the date of the tracked change.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            date?: boolean;
            /**
             * Gets the text of the tracked change.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            text?: boolean;
            /**
             * Gets the type of the tracked change.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            type?: boolean;
        }
        /**
         * Contains a collection of {@link Word.TrackedChange} objects.
         *
         * @remarks
         * [Api set: WordApi 1.6]
         */
        export interface TrackedChangeCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the author of the tracked change.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            author?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the date of the tracked change.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            date?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the text of the tracked change.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            text?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the type of the tracked change.
             *
             * @remarks
             * [Api set: WordApi 1.6]
             */
            type?: boolean;
        }
        /**
         * Contains the view attributes (such as show all, field shading, and table gridlines) for a window or pane.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface ViewLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the instance of a `RevisionsFilter` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            revisionsFilter?: Word.Interfaces.RevisionsFilterLoadOptions;
            /**
             * Specifies whether all nonprinting characters are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areAllNonprintingCharactersDisplayed?: boolean;
            /**
             * Gets whether background colors and images are shown when the document is displayed in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areBackgroundsDisplayed?: boolean;
            /**
             * Gets whether square brackets are displayed at the beginning and end of each bookmark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areBookmarksIndicated?: boolean;
            /**
             * Specifies whether Microsoft Word displays the comments in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areCommentsDisplayed?: boolean;
            /**
             * Specifies whether Microsoft Word displays connecting lines from the text to the revision and comment balloons.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areConnectingLinesToRevisionsBalloonDisplayed?: boolean;
            /**
             * Gets whether crop marks are shown in the corners of pages to indicate where margins are located.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areCropMarksDisplayed?: boolean;
            /**
             * Gets whether objects created with the drawing tools are displayed in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areDrawingsDisplayed?: boolean;
            /**
             * Specifies whether shading is applied to the ranges in the document that users have permission to modify.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areEditableRangesShaded?: boolean;
            /**
             * Specifies whether field codes are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFieldCodesDisplayed?: boolean;
            /**
             * Specifies whether Microsoft Word displays formatting changes made to the document with Track Changes enabled.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areFormatChangesDisplayed?: boolean;
            /**
             * Specifies whether handwritten ink annotations are shown or hidden.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areInkAnnotationsDisplayed?: boolean;
            /**
             * Specifies whether Microsoft Word displays insertions and deletions made to the document with Track Changes enabled.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areInsertionsAndDeletionsDisplayed?: boolean;
            /**
             * Gets whether lines wrap at the right edge of the document window rather than at the right margin or the right column boundary.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areLinesWrappedToWindow?: boolean;
            /**
             * Gets whether object anchors are displayed next to items that can be positioned in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areObjectAnchorsDisplayed?: boolean;
            /**
             * Gets whether Microsoft Word displays optional line breaks.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areOptionalBreaksDisplayed?: boolean;
            /**
             * Gets whether optional hyphens are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areOptionalHyphensDisplayed?: boolean;
            /**
             * Gets whether other authors' presence should be visible in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areOtherAuthorsVisible?: boolean;
            /**
             * Gets whether the top and bottom margins and the gray area between pages in the document are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePageBoundariesDisplayed?: boolean;
            /**
             * Gets whether paragraph marks are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areParagraphsMarksDisplayed?: boolean;
            /**
             * Gets whether blank boxes are displayed as placeholders for pictures.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            arePicturePlaceholdersDisplayed?: boolean;
            /**
             * Specifies whether Microsoft Word displays revisions and comments made to the document with Track Changes enabled.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areRevisionsAndCommentsDisplayed?: boolean;
            /**
             * Gets whether space characters are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areSpacesIndicated?: boolean;
            /**
             * Specifies whether table gridlines are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areTableGridlinesDisplayed?: boolean;
            /**
             * Gets whether tab characters are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areTabsDisplayed?: boolean;
            /**
             * Gets whether dotted lines are displayed around page margins, text columns, objects, and frames in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            areTextBoundariesDisplayed?: boolean;
            /**
             * Specifies the column width in Reading mode.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            columnWidth?: boolean;
            /**
             * Gets on-screen shading for fields.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fieldShading?: boolean;
            /**
             * Specifies whether all the text in a window is displayed in the same sans-serif font with minimal formatting to speed up display.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isDraft?: boolean;
            /**
             * Specifies whether only the first line of body text is shown in outline view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFirstLineOnlyDisplayed?: boolean;
            /**
             * Specifies whether character formatting is visible in outline view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFormatDisplayed?: boolean;
            /**
             * Specifies whether the window is in full-screen view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isFullScreen?: boolean;
            /**
             * Gets whether text formatted as hidden text is displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isHiddenTextDisplayed?: boolean;
            /**
             * Gets whether highlight formatting is displayed and printed with the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isHighlightingDisplayed?: boolean;
            /**
             * Specifies whether the document is in conflict mode view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isInConflictMode?: boolean;
            /**
             * Specifies whether Microsoft Word is in Panning mode.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isInPanning?: boolean;
            /**
             * Specifies whether the document is being viewed in reading layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isInReadingLayout?: boolean;
            /**
             * Specifies whether mail merge data is displayed instead of mail merge fields.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isMailMergeDataView?: boolean;
            /**
             * Specifies whether the text in the document is visible when the header and footer areas are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isMainTextLayerVisible?: boolean;
            /**
             * Specifies whether the pointer is displayed as a magnifying glass in print preview.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isPointerShownAsMagnifier?: boolean;
            /**
             * Specifies whether pages displayed in reading layout view are displayed using the same layout as printed pages.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isReadingLayoutActualView?: boolean;
            /**
             * Specifies whether XML tags are visible in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isXmlMarkupVisible?: boolean;
            /**
             * Specifies the display mode for tracked changes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            markupMode?: boolean;
            /**
             * Specifies the page color in Reading mode.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageColor?: boolean;
            /**
             * Specifies the page movement type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageMovementType?: boolean;
            /**
             * Specifies whether margins are visible or hidden when the document is viewed in Full Screen Reading view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            readingLayoutTruncateMargins?: boolean;
            /**
             * Gets whether Word displays revision balloons in the left or right margin in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            revisionsBalloonSide?: boolean;
            /**
             * Specifies the width of the revision balloons.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            revisionsBalloonWidth?: boolean;
            /**
             * Specifies how Microsoft Word measures the width of revision balloons.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            revisionsBalloonWidthType?: boolean;
            /**
             * Specifies the document element displayed in print layout view.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            seekView?: boolean;
            /**
             * Specifies the active window pane.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            splitSpecial?: boolean;
            /**
             * Specifies the view type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents a shape in the header, footer, or document body. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        export interface ShapeLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Represents the body object of the shape. Only applies to text boxes and geometric shapes.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            body?: Word.Interfaces.BodyLoadOptions;
            /**
             * Gets the canvas associated with the shape. An object with its `isNullObject` property set to `true` will be returned if the shape type isn't "Canvas". For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            canvas?: Word.Interfaces.CanvasLoadOptions;
            /**
             * Returns the fill formatting of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            fill?: Word.Interfaces.ShapeFillLoadOptions;
            /**
             * Gets the top-level parent canvas shape of this child shape. It will be null if it isn't a child shape of a canvas.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            parentCanvas?: Word.Interfaces.ShapeLoadOptions;
            /**
             * Gets the top-level parent group shape of this child shape. It will be null if it isn't a child shape of a group.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            parentGroup?: Word.Interfaces.ShapeLoadOptions;
            /**
             * Gets the shape group associated with the shape. An object with its `isNullObject` property set to `true` will be returned if the shape type isn't "GroupShape". For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shapeGroup?: Word.Interfaces.ShapeGroupLoadOptions;
            /**
             * Gets the text frame object of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            textFrame?: Word.Interfaces.TextFrameLoadOptions;
            /**
             * Returns the text wrap formatting of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            textWrap?: Word.Interfaces.ShapeTextWrapLoadOptions;
            /**
             * Specifies whether a given shape can overlap other shapes.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            allowOverlap?: boolean;
            /**
             * Specifies a string that represents the alternative text associated with the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            altTextDescription?: boolean;
            /**
             * The geometric shape type of the shape. It will be null if isn't a geometric shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            geometricShapeType?: boolean;
            /**
             * The height, in points, of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            height?: boolean;
            /**
             * The percentage of shape height to vertical relative size, see {@link Word.RelativeSize}. For an inline or child shape, it can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            heightRelative?: boolean;
            /**
             * Gets an integer that represents the shape identifier.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            id?: boolean;
            /**
             * Check whether this shape is a child of a group shape or a canvas shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            isChild?: boolean;
            /**
             * The distance, in points, from the left side of the shape to the horizontal relative position, see {@link Word.RelativeHorizontalPosition}. For an inline shape, it will return 0 and can't be set. For a child shape in a canvas or group, it's relative to the top left corner.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            left?: boolean;
            /**
             * The relative left position as a percentage from the left side of the shape to the horizontal relative position, see {@link Word.RelativeHorizontalPosition}. For an inline or child shape, it will return 0 and can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            leftRelative?: boolean;
            /**
             * Specifies if the aspect ratio of this shape is locked.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            lockAspectRatio?: boolean;
            /**
             * The name of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            name?: boolean;
            /**
             * The relative horizontal position of the shape. For an inline shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeHorizontalPosition?: boolean;
            /**
             * The relative horizontal size of the shape. For an inline or child shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeHorizontalSize?: boolean;
            /**
             * The relative vertical position of the shape. For an inline shape, it can't be set. For details, see {@link Word.RelativeVerticalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeVerticalPosition?: boolean;
            /**
             * The relative vertical size of the shape. For an inline or child shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeVerticalSize?: boolean;
            /**
             * Specifies the rotation, in degrees, of the shape. Not applicable to Canvas shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            rotation?: boolean;
            /**
             * The distance, in points, from the top edge of the shape to the vertical relative position (see {@link Word.RelativeVerticalPosition}). For an inline shape, it will return 0 and can't be set. For a child shape in a canvas or group, it's relative to the top left corner.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            top?: boolean;
            /**
             * The relative top position as a percentage from the top edge of the shape to the vertical relative position, see {@link Word.RelativeVerticalPosition}. For an inline or child shape, it will return 0 and can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            topRelative?: boolean;
            /**
             * Gets the shape type. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            type?: boolean;
            /**
             * Specifies if the shape is visible. Not applicable to inline shapes.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            visible?: boolean;
            /**
             * The width, in points, of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            width?: boolean;
            /**
             * The percentage of shape width to horizontal relative size, see {@link Word.RelativeSize}. For an inline or child shape, it can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            widthRelative?: boolean;
        }
        /**
         * Represents a shape group in the document. To get the corresponding Shape object, use ShapeGroup.shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        export interface ShapeGroupLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the Shape object associated with the group.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shape?: Word.Interfaces.ShapeLoadOptions;
            /**
             * Gets an integer that represents the shape group identifier.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            id?: boolean;
        }
        /**
         * Represents a canvas in the document. To get the corresponding Shape object, use Canvas.shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        export interface CanvasLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the Shape object associated with the canvas.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shape?: Word.Interfaces.ShapeLoadOptions;
            /**
             * Gets an integer that represents the canvas identifier.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            id?: boolean;
        }
        /**
         * Contains a collection of {@link Word.Shape} objects. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        export interface ShapeCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Represents the body object of the shape. Only applies to text boxes and geometric shapes.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            body?: Word.Interfaces.BodyLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the canvas associated with the shape. An object with its `isNullObject` property set to `true` will be returned if the shape type isn't "Canvas". For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            canvas?: Word.Interfaces.CanvasLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns the fill formatting of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            fill?: Word.Interfaces.ShapeFillLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the top-level parent canvas shape of this child shape. It will be null if it isn't a child shape of a canvas.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            parentCanvas?: Word.Interfaces.ShapeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the top-level parent group shape of this child shape. It will be null if it isn't a child shape of a group.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            parentGroup?: Word.Interfaces.ShapeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the shape group associated with the shape. An object with its `isNullObject` property set to `true` will be returned if the shape type isn't "GroupShape". For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            shapeGroup?: Word.Interfaces.ShapeGroupLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the text frame object of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            textFrame?: Word.Interfaces.TextFrameLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns the text wrap formatting of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            textWrap?: Word.Interfaces.ShapeTextWrapLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies whether a given shape can overlap other shapes.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            allowOverlap?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a string that represents the alternative text associated with the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            altTextDescription?: boolean;
            /**
             * For EACH ITEM in the collection: The geometric shape type of the shape. It will be null if isn't a geometric shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            geometricShapeType?: boolean;
            /**
             * For EACH ITEM in the collection: The height, in points, of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            height?: boolean;
            /**
             * For EACH ITEM in the collection: The percentage of shape height to vertical relative size, see {@link Word.RelativeSize}. For an inline or child shape, it can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            heightRelative?: boolean;
            /**
             * For EACH ITEM in the collection: Gets an integer that represents the shape identifier.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            id?: boolean;
            /**
             * For EACH ITEM in the collection: Check whether this shape is a child of a group shape or a canvas shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            isChild?: boolean;
            /**
             * For EACH ITEM in the collection: The distance, in points, from the left side of the shape to the horizontal relative position, see {@link Word.RelativeHorizontalPosition}. For an inline shape, it will return 0 and can't be set. For a child shape in a canvas or group, it's relative to the top left corner.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            left?: boolean;
            /**
             * For EACH ITEM in the collection: The relative left position as a percentage from the left side of the shape to the horizontal relative position, see {@link Word.RelativeHorizontalPosition}. For an inline or child shape, it will return 0 and can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            leftRelative?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if the aspect ratio of this shape is locked.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            lockAspectRatio?: boolean;
            /**
             * For EACH ITEM in the collection: The name of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            name?: boolean;
            /**
             * For EACH ITEM in the collection: The relative horizontal position of the shape. For an inline shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeHorizontalPosition?: boolean;
            /**
             * For EACH ITEM in the collection: The relative horizontal size of the shape. For an inline or child shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeHorizontalSize?: boolean;
            /**
             * For EACH ITEM in the collection: The relative vertical position of the shape. For an inline shape, it can't be set. For details, see {@link Word.RelativeVerticalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeVerticalPosition?: boolean;
            /**
             * For EACH ITEM in the collection: The relative vertical size of the shape. For an inline or child shape, it can't be set. For details, see {@link Word.RelativeHorizontalPosition}.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            relativeVerticalSize?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the rotation, in degrees, of the shape. Not applicable to Canvas shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            rotation?: boolean;
            /**
             * For EACH ITEM in the collection: The distance, in points, from the top edge of the shape to the vertical relative position (see {@link Word.RelativeVerticalPosition}). For an inline shape, it will return 0 and can't be set. For a child shape in a canvas or group, it's relative to the top left corner.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            top?: boolean;
            /**
             * For EACH ITEM in the collection: The relative top position as a percentage from the top edge of the shape to the vertical relative position, see {@link Word.RelativeVerticalPosition}. For an inline or child shape, it will return 0 and can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            topRelative?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the shape type. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            type?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if the shape is visible. Not applicable to inline shapes.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            visible?: boolean;
            /**
             * For EACH ITEM in the collection: The width, in points, of the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            width?: boolean;
            /**
             * For EACH ITEM in the collection: The percentage of shape width to horizontal relative size, see {@link Word.RelativeSize}. For an inline or child shape, it can't be set.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            widthRelative?: boolean;
        }
        /**
         * Represents the fill formatting of a shape object.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        export interface ShapeFillLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the shape fill background color. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            backgroundColor?: boolean;
            /**
             * Specifies the shape fill foreground color. You can provide the value in the '#RRGGBB' format or the color name.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            foregroundColor?: boolean;
            /**
             * Specifies the transparency percentage of the fill as a value from 0.0 (opaque) through 1.0 (clear). Returns `null` if the shape type does not support transparency or the shape fill has inconsistent transparency, such as with a gradient fill type.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            transparency?: boolean;
            /**
             * Returns the fill type of the shape. See `Word.ShapeFillType` for details.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            type?: boolean;
        }
        /**
         * Represents the text frame of a shape object.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        export interface TextFrameLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * The automatic sizing settings for the text frame. A text frame can be set to automatically fit the text to the text frame, to automatically fit the text frame to the text, or not perform any automatic sizing.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            autoSizeSetting?: boolean;
            /**
             * Represents the bottom margin, in points, of the text frame.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            bottomMargin?: boolean;
            /**
             * Specifies if the text frame contains text.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            hasText?: boolean;
            /**
             * Represents the left margin, in points, of the text frame.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            leftMargin?: boolean;
            /**
             * Returns True if text in the text frame shouldn't rotate when the shape is rotated.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            noTextRotation?: boolean;
            /**
             * Represents the angle to which the text is oriented for the text frame. See `Word.ShapeTextOrientation` for details.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            orientation?: boolean;
            /**
             * Represents the right margin, in points, of the text frame.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            rightMargin?: boolean;
            /**
             * Represents the top margin, in points, of the text frame.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            topMargin?: boolean;
            /**
             * Represents the vertical alignment of the text frame. See `Word.ShapeTextVerticalAlignment` for details.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            verticalAlignment?: boolean;
            /**
             * Determines whether lines break automatically to fit text inside the shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            wordWrap?: boolean;
        }
        /**
         * Represents all the properties for wrapping text around a shape.
         *
         * @remarks
         * [Api set: WordApiDesktop 1.2]
         */
        export interface ShapeTextWrapLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the distance (in points) between the document text and the bottom edge of the text-free area surrounding the specified shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            bottomDistance?: boolean;
            /**
             * Specifies the distance (in points) between the document text and the left edge of the text-free area surrounding the specified shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            leftDistance?: boolean;
            /**
             * Specifies the distance (in points) between the document text and the right edge of the text-free area surrounding the specified shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            rightDistance?: boolean;
            /**
             * Specifies whether the document text should wrap on both sides of the specified shape, on either the left or right side only, or on the side of the shape that's farthest from the page margin.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            side?: boolean;
            /**
             * Specifies the distance (in points) between the document text and the top edge of the text-free area surrounding the specified shape.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            topDistance?: boolean;
            /**
             * Specifies the text wrap type around the shape. See `Word.ShapeTextWrapType` for details.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.2]
             */
            type?: boolean;
        }
        /**
         * Represents a single reviewer of a document in which changes have been tracked. The `Reviewer` object is a member of the {@link Word.ReviewerCollection} object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface ReviewerLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies if the `Reviewer` object is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
        }
        /**
         * A collection of {@link Word.Reviewer} objects that represents the reviewers of one or more documents. The `ReviewerCollection` object contains the names of all reviewers who have reviewed documents opened or edited on a computer.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface ReviewerCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if the `Reviewer` object is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
        }
        /**
         * Represents the current settings related to the display of reviewers' comments and revision marks in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface RevisionsFilterLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies a `RevisionsMarkup` value that represents the extent of reviewer markup displayed in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            markup?: boolean;
            /**
             * Specifies a `RevisionsView` value that represents globally whether Word displays the original version of the document or the final version, which might have revisions and formatting changes applied.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            view?: boolean;
        }
        /**
         * Represents a single item in a {@link Word.RepeatingSectionContentControl}.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface RepeatingSectionItemLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns the range of this repeating section item, excluding the start and end tags.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
        }
        /**
         * Represents a single tracked change in a document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface RevisionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets a `Range` object that represents the range of text that was moved from one place to another in the document with tracked changes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            movedRange?: Word.Interfaces.RangeLoadOptions;
            /**
             * Gets a `Range` object that represents the portion of the document that's contained within a revision mark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Gets the name of the user who made the tracked change.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            author?: boolean;
            /**
             * Gets the date and time when the tracked change was made.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            date?: boolean;
            /**
             * Gets the description of tracked formatting changes in the revision.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            formatDescription?: boolean;
            /**
             * Gets a number that represents the position of this item in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            index?: boolean;
            /**
             * Gets the revision type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * A collection of Revision objects that represent the changes marked with revision marks in a range or document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface RevisionCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets a `Range` object that represents the range of text that was moved from one place to another in the document with tracked changes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            movedRange?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets a `Range` object that represents the portion of the document that's contained within a revision mark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the name of the user who made the tracked change.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            author?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the date and time when the tracked change was made.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            date?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the description of tracked formatting changes in the revision.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            formatDescription?: boolean;
            /**
             * For EACH ITEM in the collection: Gets a number that represents the position of this item in a collection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            index?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the revision type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents the `DatePickerContentControl` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface DatePickerContentControlLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockLoadOptions;
            /**
             * Gets a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Gets an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingLoadOptions;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: boolean;
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: boolean;
            /**
             * Specifies a `CalendarType` value that represents the calendar type for the date picker content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dateCalendarType?: boolean;
            /**
             * Specifies the format in which dates are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dateDisplayFormat?: boolean;
            /**
             * Specifies a `LanguageId` that represents the language format for the date displayed in the date picker content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dateDisplayLocale?: boolean;
            /**
             * Specifies a `ContentControlDateStorageFormat` value that represents the format for storage and retrieval of dates when the date picker content control is bound to the XML data store of the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dateStorageFormat?: boolean;
            /**
             * Gets the identification for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: boolean;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Specifies the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: boolean;
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Gets whether the placeholder text for the content control is being displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showingPlaceholderText?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: boolean;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: boolean;
        }
        /**
         * Represents the `PictureContentControl` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface PictureContentControlLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockLoadOptions;
            /**
             * Returns a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingLoadOptions;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: boolean;
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: boolean;
            /**
             * Returns the identification for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: boolean;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Returns the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: boolean;
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Returns whether the placeholder text for the content control is being displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showingPlaceholderText?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: boolean;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: boolean;
        }
        /**
         * Represents the `GroupContentControl` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface GroupContentControlLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockLoadOptions;
            /**
             * Gets a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Gets an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingLoadOptions;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: boolean;
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: boolean;
            /**
             * Returns the identification for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: boolean;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Gets the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: boolean;
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Returns whether the placeholder text for the content control is being displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showingPlaceholderText?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: boolean;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: boolean;
        }
        /**
         * Represents the `BuildingBlockGalleryContentControl` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface BuildingBlockGalleryContentControlLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockLoadOptions;
            /**
             * Returns a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlMapping?: Word.Interfaces.XmlMappingLoadOptions;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: boolean;
            /**
             * Specifies the category for the building block content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            buildingBlockCategory?: boolean;
            /**
             * Specifies a `BuildingBlockType` value that represents the type of building block for the building block content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            buildingBlockType?: boolean;
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: boolean;
            /**
             * Gets the identification for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: boolean;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Gets the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: boolean;
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Gets if the placeholder text for the content control is being displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showingPlaceholderText?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: boolean;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: boolean;
        }
        /**
         * Represents the `RepeatingSectionContentControl` object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface RepeatingSectionContentControlLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `BuildingBlock` object that represents the placeholder text for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            placeholderText?: Word.Interfaces.BuildingBlockLoadOptions;
            /**
             * Gets a `Range` object that represents the contents of the content control in the active document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Returns an `XmlMapping` object that represents the mapping of the content control to XML data in the data store of the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xmlapping?: Word.Interfaces.XmlMappingLoadOptions;
            /**
             * Specifies whether users can add or remove sections from this repeating section content control by using the user interface.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            allowInsertDeleteSection?: boolean;
            /**
             * Specifies the appearance of the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            appearance?: boolean;
            /**
             * Specifies the red-green-blue (RGB) value of the color of the content control. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: boolean;
            /**
             * Returns the identification for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: boolean;
            /**
             * Specifies whether to remove the content control from the active document when the user edits the contents of the control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTemporary?: boolean;
            /**
             * Returns the level of the content control—whether the content control surrounds text, paragraphs, table cells, or table rows; or if it is inline.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            level?: boolean;
            /**
             * Specifies if the content control is locked (can't be deleted). `true` means that the user can't delete it from the active document, `false` means it can be deleted.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContentControl?: boolean;
            /**
             * Specifies if the contents of the content control are locked (not editable). `true` means the user can't edit the contents, `false` means the contents are editable.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockContents?: boolean;
            /**
             * Specifies the name of the repeating section items used in the context menu associated with this repeating section content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            repeatingSectionItemTitle?: boolean;
            /**
             * Returns whether the placeholder text for the content control is being displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showingPlaceholderText?: boolean;
            /**
             * Specifies a tag to identify the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: boolean;
            /**
             * Specifies the title for the content control.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            title?: boolean;
        }
        /**
         * Represents a frame. The `Frame` object is a member of the {@link Word.FrameCollection} object.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface FrameLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `Range` object that represents the portion of the document that's contained within the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Returns a `ShadingUniversal` object that refers to the shading formatting for the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * Specifies the height (in points) of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            height?: boolean;
            /**
             * Specifies a `FrameSizeRule` value that represents the rule for determining the height of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            heightRule?: boolean;
            /**
             * Specifies the horizontal distance between the frame and the surrounding text, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalDistanceFromText?: boolean;
            /**
             * Specifies the horizontal distance between the edge of the frame and the item specified by the `relativeHorizontalPosition` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalPosition?: boolean;
            /**
             * Specifies if the frame is locked.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockAnchor?: boolean;
            /**
             * Specifies the relative horizontal position of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            relativeHorizontalPosition?: boolean;
            /**
             * Specifies the relative vertical position of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            relativeVerticalPosition?: boolean;
            /**
             * Specifies if document text wraps around the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textWrap?: boolean;
            /**
             * Specifies the vertical distance (in points) between the frame and the surrounding text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalDistanceFromText?: boolean;
            /**
             * Specifies the vertical distance between the edge of the frame and the item specified by the `relativeVerticalPosition` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalPosition?: boolean;
            /**
             * Specifies the width (in points) of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: boolean;
            /**
             * Specifies the rule used to determine the width of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            widthRule?: boolean;
        }
        /**
         * Represents the collection of {@link Word.Frame} objects.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface FrameCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Returns a `Range` object that represents the portion of the document that's contained within the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns a `ShadingUniversal` object that refers to the shading formatting for the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies the height (in points) of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            height?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a `FrameSizeRule` value that represents the rule for determining the height of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            heightRule?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the horizontal distance between the frame and the surrounding text, in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalDistanceFromText?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the horizontal distance between the edge of the frame and the item specified by the `relativeHorizontalPosition` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalPosition?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if the frame is locked.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lockAnchor?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the relative horizontal position of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            relativeHorizontalPosition?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the relative vertical position of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            relativeVerticalPosition?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if document text wraps around the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textWrap?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the vertical distance (in points) between the frame and the surrounding text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalDistanceFromText?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the vertical distance between the edge of the frame and the item specified by the `relativeVerticalPosition` property.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalPosition?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the width (in points) of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the rule used to determine the width of the frame.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            widthRule?: boolean;
        }
        /**
         * Represents a document library version.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface DocumentLibraryVersionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets any optional comments associated with this version of the shared document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            comments?: boolean;
            /**
             * Gets the date and time at which this version of the shared document was last saved to the server.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            modified?: boolean;
            /**
             * Gets the name of the user who last saved this version of the shared document to the server.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            modifiedBy?: boolean;
        }
        /**
         * Represents the collection of {@link Word.DocumentLibraryVersion} objects.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface DocumentLibraryVersionCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets any optional comments associated with this version of the shared document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            comments?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the date and time at which this version of the shared document was last saved to the server.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            modified?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the name of the user who last saved this version of the shared document to the server.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            modifiedBy?: boolean;
        }
        /**
         * Represents a dropped capital letter in a Word document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface DropCapLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets the distance (in points) between the dropped capital letter and the paragraph text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            distanceFromText?: boolean;
            /**
             * Gets the name of the font for the dropped capital letter.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fontName?: boolean;
            /**
             * Gets the height (in lines) of the dropped capital letter.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            linesToDrop?: boolean;
            /**
             * Gets the position of the dropped capital letter.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            position?: boolean;
        }
        /**
         * Represents the list formatting characteristics of a range.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface ListFormatLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
            * Returns a `List` object that represents the first formatted list contained in the `ListFormat` object.
            *
            * @remarks
            * [Api set: WordApi BETA (PREVIEW ONLY)]
            * @beta
            */
            list?: Word.Interfaces.ListLoadOptions;
            /**
            * Gets the list template associated with the `ListFormat` object.
            *
            * @remarks
            * [Api set: WordApi BETA (PREVIEW ONLY)]
            * @beta
            */
            listTemplate?: Word.Interfaces.ListTemplateLoadOptions;
            /**
             * Indicates whether the `ListFormat` object contains a single list.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isSingleList?: boolean;
            /**
             * Indicates whether the `ListFormat` object contains a single list template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isSingleListTemplate?: boolean;
            /**
             * Specifies the list level number for the first paragraph for the `ListFormat` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listLevelNumber?: boolean;
            /**
             * Gets the string representation of the list value of the first paragraph in the range for the `ListFormat` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listString?: boolean;
            /**
             * Gets the type of the list for the `ListFormat` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listType?: boolean;
            /**
             * Gets the numeric value of the the first paragraph in the range for the `ListFormat` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listValue?: boolean;
        }
        /**
         * Represents the fill formatting for a shape or text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface FillFormatLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `ColorFormat` object that represents the background color for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            backgroundColor?: Word.Interfaces.ColorFormatLoadOptions;
            /**
             * Returns a `ColorFormat` object that represents the foreground color for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundColor?: Word.Interfaces.ColorFormatLoadOptions;
            /**
             * Specifies the angle of the gradient fill. The valid range of values is from 0 to 359.9.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gradientAngle?: boolean;
            /**
             * Gets the gradient color type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gradientColorType?: boolean;
            /**
             * Returns how dark or light a one-color gradient fill is.
                        A value of 0 means that black is mixed in with the shape's foreground color to form the gradient.
                        A value of 1 means that white is mixed in.
                        Values between 0 and 1 mean that a darker or lighter shade of the foreground color is mixed in.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gradientDegree?: boolean;
            /**
             * Returns the gradient style for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gradientStyle?: boolean;
            /**
             * Returns the gradient variant for the fill as an integer value from 1 to 4 for most gradient fills.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gradientVariant?: boolean;
            /**
             * Specifies if the object, or the formatting applied to it, is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Returns a `PatternType` value that represents the pattern applied to the fill or line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pattern?: boolean;
            /**
             * Returns the preset gradient type for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetGradientType?: boolean;
            /**
             * Gets the preset texture.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetTexture?: boolean;
            /**
             * Specifies whether the fill rotates with the shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotateWithObject?: boolean;
            /**
             * Specifies the alignment (the origin of the coordinate grid) for the tiling of the texture fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureAlignment?: boolean;
            /**
             * Specifies the horizontal scaling factor for the texture fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureHorizontalScale?: boolean;
            /**
             * Returns the name of the custom texture file for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureName?: boolean;
            /**
             * Specifies the horizontal offset of the texture from the origin in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureOffsetX?: boolean;
            /**
             * Specifies the vertical offset of the texture.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureOffsetY?: boolean;
            /**
             * Specifies whether the texture is tiled.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureTile?: boolean;
            /**
             * Returns the texture type for the fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureType?: boolean;
            /**
             * Specifies the vertical scaling factor for the texture fill as a value between 0.0 and 1.0.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            textureVerticalScale?: boolean;
            /**
             * Specifies the degree of transparency of the fill for a shape as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: boolean;
            /**
             * Gets the fill format type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents the glow formatting for the font used by the range of text.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface GlowFormatLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `ColorFormat` object that represents the color for a glow effect.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            color?: Word.Interfaces.ColorFormatLoadOptions;
            /**
             * Specifies the length of the radius for a glow effect.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            radius?: boolean;
            /**
             * Specifies the degree of transparency for the glow effect as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: boolean;
        }
        /**
         * Represents line and arrowhead formatting. For a line, the `LineFormat` object contains formatting information for the line itself;
                    for a shape with a border, this object contains formatting information for the shape's border.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface LineFormatLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets a `ColorFormat` object that represents the background color for a patterned line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            backgroundColor?: Word.Interfaces.ColorFormatLoadOptions;
            /**
             * Gets a `ColorFormat` object that represents the foreground color for the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundColor?: Word.Interfaces.ColorFormatLoadOptions;
            /**
             * Specifies the length of the arrowhead at the beginning of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            beginArrowheadLength?: boolean;
            /**
             * Specifies the style of the arrowhead at the beginning of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            beginArrowheadStyle?: boolean;
            /**
             * Specifies the width of the arrowhead at the beginning of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            beginArrowheadWidth?: boolean;
            /**
             * Specifies the dash style for the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            dashStyle?: boolean;
            /**
             * Specifies the length of the arrowhead at the end of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            endArrowheadLength?: boolean;
            /**
             * Specifies the style of the arrowhead at the end of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            endArrowheadStyle?: boolean;
            /**
             * Specifies the width of the arrowhead at the end of the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            endArrowheadWidth?: boolean;
            /**
             * Specifies if to draw lines inside a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            insetPen?: boolean;
            /**
             * Specifies if the object, or the formatting applied to it, is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies the pattern applied to the line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pattern?: boolean;
            /**
             * Specifies the line format style.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            style?: boolean;
            /**
             * Specifies the degree of transparency of the line as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: boolean;
            /**
             * Specifies the thickness of the line in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            weight?: boolean;
        }
        /**
         * Represents the reflection formatting for a shape in Word.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface ReflectionFormatLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the degree of blur effect applied to the `ReflectionFormat` object as a value between 0.0 and 100.0.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            blur?: boolean;
            /**
             * Specifies the amount of separation, in points, of the reflected image from the shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            offset?: boolean;
            /**
             * Specifies the size of the reflection as a percentage of the reflected shape from 0 to 100.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            size?: boolean;
            /**
             * Specifies the degree of transparency for the reflection effect as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: boolean;
            /**
             * Specifies a `ReflectionType` value that represents the type and direction of the lighting for a shape reflection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents the color formatting of a shape or text in Word.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface ColorFormatLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the brightness of a specified shape color. Valid values are from `-1` (darkest) to `1` (lightest), `0` represents neutral.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            brightness?: boolean;
            /**
             * Specifies the theme color for a color format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            objectThemeColor?: boolean;
            /**
             * Specifies the red-green-blue (RGB) value of the specified color. You can provide the value in the '#RRGGBB' format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rgb?: boolean;
            /**
             * Specifies the lightening or darkening of a specified shape's color. Valid values are from `-1` (darkest) to `1` (lightest), `0` represents neutral.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tintAndShade?: boolean;
            /**
             * Returns the shape color type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents the shadow formatting for a shape or text in Word.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface ShadowFormatLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `ColorFormat` object that represents the foreground color for the fill, line, or shadow.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            foregroundColor?: Word.Interfaces.ColorFormatLoadOptions;
            /**
             * Specifies the blur level for a shadow format as a value between 0.0 and 100.0.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            blur?: boolean;
            /**
             * Specifies whether the object or the formatting applied to it is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies `true` if the shadow of the shape appears filled in and is obscured by the shape, even if the shape has no fill,
                        `false` if the shadow has no fill and the outline of the shadow is visible through the shape if the shape has no fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            obscured?: boolean;
            /**
             * Specifies the horizontal offset (in points) of the shadow from the shape.
                        A positive value offsets the shadow to the right of the shape; a negative value offsets it to the left.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            offsetX?: boolean;
            /**
             * Specifies the vertical offset (in points) of the shadow from the shape.
                        A positive value offsets the shadow to the top of the shape; a negative value offsets it to the bottom.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            offsetY?: boolean;
            /**
             * Specifies whether to rotate the shadow when rotating the shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotateWithShape?: boolean;
            /**
             * Specifies the width of the shadow.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            size?: boolean;
            /**
             * Specifies the type of shadow formatting to apply to a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            style?: boolean;
            /**
             * Specifies the degree of transparency of the shadow as a value between 0.0 (opaque) and 1.0 (clear).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            transparency?: boolean;
            /**
             * Specifies the shape shadow type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents a shape's three-dimensional formatting.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface ThreeDimensionalFormatLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `ColorFormat` object that represents color of the contour of a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            contourColor?: Word.Interfaces.ColorFormatLoadOptions;
            /**
             * Returns a `ColorFormat` object that represents the color of the shape's extrusion.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            extrusionColor?: Word.Interfaces.ColorFormatLoadOptions;
            /**
             * Specifies the depth of the bottom bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelBottomDepth?: boolean;
            /**
             * Specifies the inset size for the bottom bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelBottomInset?: boolean;
            /**
             * Specifies a `BevelType` value that represents the bevel type for the bottom bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelBottomType?: boolean;
            /**
             * Specifies the depth of the top bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelTopDepth?: boolean;
            /**
             * Specifies the inset size for the top bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelTopInset?: boolean;
            /**
             * Specifies a `BevelType` value that represents the bevel type for the top bevel.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bevelTopType?: boolean;
            /**
             * Specifies the width of the contour of a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            contourWidth?: boolean;
            /**
             * Specifies the depth of the shape's extrusion.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            depth?: boolean;
            /**
             * Specifies whether the extrusion color is based on the extruded shape's fill (the front face of the extrusion)
                        and automatically changes when the shape's fill changes, or whether the extrusion color is independent of the shape's fill.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            extrusionColorType?: boolean;
            /**
             * Specifies the amount of perspective for a shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fieldOfView?: boolean;
            /**
             * Specifies `true` if the extrusion appears in perspective — that is, if the walls of the extrusion narrow toward a vanishing point,
                        `false` if the extrusion is a parallel, or orthographic, projection — that is, if the walls don't narrow toward a vanishing point.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isPerspective?: boolean;
            /**
             * Specifies if the specified object, or the formatting applied to it, is visible.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isVisible?: boolean;
            /**
             * Specifies the angle of the lighting.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lightAngle?: boolean;
            /**
             * Returns a `PresetCamera` value that represents the camera presets.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetCamera?: boolean;
            /**
             * Returns the direction taken by the extrusion's sweep path leading away from the extruded shape (the front face of the extrusion).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetExtrusionDirection?: boolean;
            /**
             * Specifies a `LightRigType` value that represents the lighting preset.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetLighting?: boolean;
            /**
             * Specifies the position of the light source relative to the extrusion.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetLightingDirection?: boolean;
            /**
             * Specifies the intensity of the extrusion lighting.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetLightingSoftness?: boolean;
            /**
             * Specifies the extrusion surface material.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetMaterial?: boolean;
            /**
             * Returns the preset extrusion format.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            presetThreeDimensionalFormat?: boolean;
            /**
             * Specifies whether text on a shape rotates with shape. `true` rotates the text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            projectText?: boolean;
            /**
             * Specifies the rotation of the extruded shape around the x-axis in degrees.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotationX?: boolean;
            /**
             * Specifies the rotation of the extruded shape around the y-axis in degrees.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotationY?: boolean;
            /**
             * Specifies the z-axis rotation of the camera.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rotationZ?: boolean;
            /**
             * Specifies the position on the z-axis for the shape.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            z?: boolean;
        }
        /**
         * Represents the list of available sources attached to the document (in the current list) or the list of sources available in the application (in the master list).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface BibliographyLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the name of the active style to use for the bibliography.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bibliographyStyle?: boolean;
        }
        /**
         * Represents a collection of {@link Word.Source} objects.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface SourceCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets if the `Source` object has been cited in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isCited?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the tag of the source.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the XML representation of the source.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xml?: boolean;
        }
        /**
         * Represents an individual source, such as a book, journal article, or interview.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface SourceLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Gets if the `Source` object has been cited in the document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isCited?: boolean;
            /**
             * Gets the tag of the source.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tag?: boolean;
            /**
             * Gets the XML representation of the source.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            xml?: boolean;
        }
        /**
         * Represents the page setup settings for a Word document or section.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface PageSetupLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies a `LineNumbering` object that represents the line numbers for the `PageSetup` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            lineNumbering?: Word.Interfaces.LineNumberingLoadOptions;
            /**
             * Specifies whether Microsoft Word prints the document as a booklet.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bookFoldPrinting?: boolean;
            /**
             * Specifies the number of pages for each booklet.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bookFoldPrintingSheets?: boolean;
            /**
             * Specifies if Microsoft Word reverses the printing order for book fold printing of bidirectional or Asian language documents.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bookFoldReversePrinting?: boolean;
            /**
             * Specifies the distance (in points) between the bottom edge of the page and the bottom boundary of the body text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bottomMargin?: boolean;
            /**
             * Specifies the number of characters per line in the document grid.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            charsLine?: boolean;
            /**
             * Specifies whether the first page has a different header and footer.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            differentFirstPageHeaderFooter?: boolean;
            /**
             * Specifies the distance between the footer and the bottom of the page in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            footerDistance?: boolean;
            /**
             * Specifies the amount (in points) of extra margin space added to each page in a document or section for binding.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gutter?: boolean;
            /**
             * Specifies on which side the gutter appears in a document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gutterPosition?: boolean;
            /**
             * Specifies whether Microsoft Word uses gutters for the current document based on a right-to-left language or a left-to-right language.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            gutterStyle?: boolean;
            /**
             * Specifies the distance between the header and the top of the page in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            headerDistance?: boolean;
            /**
             * Specifies the layout mode for the current document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            layoutMode?: boolean;
            /**
             * Specifies the distance (in points) between the left edge of the page and the left boundary of the body text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            leftMargin?: boolean;
            /**
             * Specifies the number of lines per page in the document grid.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            linesPage?: boolean;
            /**
             * Specifies if the inside and outside margins of facing pages are the same width.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            mirrorMargins?: boolean;
            /**
             * Specifies whether odd and even pages have different headers and footers.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            oddAndEvenPagesHeaderFooter?: boolean;
            /**
             * Specifies the orientation of the page.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            orientation?: boolean;
            /**
             * Specifies the page height in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageHeight?: boolean;
            /**
             * Specifies the page width in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            pageWidth?: boolean;
            /**
             * Specifies the paper size of the page.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            paperSize?: boolean;
            /**
             * Specifies the distance (in points) between the right edge of the page and the right boundary of the body text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rightMargin?: boolean;
            /**
             * Specifies the reading order and alignment for the specified sections.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sectionDirection?: boolean;
            /**
             * Specifies the type of section break for the specified object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sectionStart?: boolean;
            /**
             * Specifies whether to show the grid.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showGrid?: boolean;
            /**
             * Specifies if endnotes are printed at the end of the next section that doesn't suppress endnotes.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            suppressEndnotes?: boolean;
            /**
             * Specifies the top margin of the page in points.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            topMargin?: boolean;
            /**
             * Specifies whether to print two pages per sheet.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            twoPagesOnOne?: boolean;
            /**
             * Specifies the vertical alignment of text on each page in a document or section.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            verticalAlignment?: boolean;
        }
        /**
         * Represents line numbers in the left margin or to the left of each newspaper-style column.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface LineNumberingLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the numeric increment for line numbers.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            countBy?: boolean;
            /**
             * Specifies the distance (in points) between the right edge of line numbers and the left edge of the document text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            distanceFromText?: boolean;
            /**
             * Specifies if line numbering is active for the specified document, section, or sections.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isActive?: boolean;
            /**
             * Specifies the way line numbering runs; that is, whether it starts over at the beginning of a new page or section, or runs continuously.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            restartMode?: boolean;
            /**
             * Specifies the starting line number.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            startingNumber?: boolean;
        }
        /**
         * A collection of {@link Word.TextColumn} objects that represent all the columns of text in the document or a section of the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TextColumnCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the amount of spacing (in points) after the specified paragraph or text column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            spaceAfter?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the width, in points, of the specified text columns.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: boolean;
        }
        /**
         * Represents a single text column in a section.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface TextColumnLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Specifies the amount of spacing (in points) after the specified paragraph or text column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            spaceAfter?: boolean;
            /**
             * Specifies the width, in points, of the specified text columns.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            width?: boolean;
        }
        /**
         * Represents a selected range or the insertion point in a Word document.
                    
                    - Note: {@link Word.Range | Range} objects share many of the same methods and properties as `Selection` objects. Using `Range` objects is preferable for manipulating a document when there isn't a reason to physically change the current selection.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface SelectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns the `Font` object that represents the character formatting of the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * Specifies a `Range` object that includes the formatted text in the range or selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            formattedText?: Word.Interfaces.RangeLoadOptions;
            /**
             * Returns the `Range` object for the portion of the document contained in the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Returns the `ShadingUniversal` object for the shading formatting for the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * Specifies the ending character position of the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            end?: boolean;
            /**
             * Specifies the width in which Word fits the text in the current selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fitTextWidth?: boolean;
            /**
             * Returns whether the spelling and grammar checker ignores the selected text.
                        If the selected text contains a mix of proofed and un-proofed content, this API returns `null`.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasNoProofing?: boolean;
            /**
             * Returns whether the selection in the specified window or pane is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isActive?: boolean;
            /**
             * Specifies whether column selection mode is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isColumnSelectModeActive?: boolean;
            /**
             * Returns whether the selection is at the end-of-row mark in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEndOfRowMark?: boolean;
            /**
             * Specifies whether Extend mode is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isExtendModeActive?: boolean;
            /**
             * Returns whether the insertion point is at the end of a line.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isInsertionPointAtEndOfLine?: boolean;
            /**
             * Specifies whether the beginning of the selection is active.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isStartActive?: boolean;
            /**
             * Specifies whether Word has detected the language of the selected text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageDetected?: boolean;
            /**
             * Returns the language for the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: boolean;
            /**
             * Returns the East Asian language for the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: boolean;
            /**
             * Returns the language for the selection that isn't classified as an East Asian language.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdOther?: boolean;
            /**
             * Specifies the orientation of text in the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            orientation?: boolean;
            /**
             * Specifies the starting character position of the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            start?: boolean;
            /**
             * Returns the number of characters in the story that contains the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyLength?: boolean;
            /**
             * Returns the story type for the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyType?: boolean;
            /**
             * Specifies the text in the selection.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            text?: boolean;
            /**
             * Returns the selection type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Represents a collection of {@link Word.Range} objects that represents each character, word or sentence.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface RangeScopedCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the text format of the range. Use this to get and set font name, size, color, and other properties.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            font?: Word.Interfaces.FontLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns a `ListFormat` object that represents all the list formatting characteristics of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            listFormat?: Word.Interfaces.ListFormatLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the parent body of the range.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentBody?: Word.Interfaces.BodyLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the currently supported content control that contains the range. Throws an `ItemNotFound` error if there isn't a parent content control.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            parentContentControl?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the currently supported content control that contains the range. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentContentControlOrNullObject?: Word.Interfaces.ContentControlLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains the range. Throws an `ItemNotFound` error if it isn't contained in a table.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTable?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains the range. Throws an `ItemNotFound` error if it isn't contained in a table cell.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCell?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table cell that contains the range. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableCellOrNullObject?: Word.Interfaces.TableCellLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets the table that contains the range. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see {@link https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            parentTableOrNullObject?: Word.Interfaces.TableLoadOptions;
            /**
             * For EACH ITEM in the collection: Returns a `ShadingUniversal` object that refers to the shading formatting for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            shading?: Word.Interfaces.ShadingUniversalLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies whether the range is formatted as bold.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            bold?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the range is formatted as bold in a right-to-left language document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            boldBidirectional?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a `CharacterCase` value that represents the case of the text in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            case?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the character width of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            characterWidth?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if the range contains combined characters.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            combineCharacters?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if Microsoft Word ignores the number of characters per line for the corresponding `Range` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            disableCharacterSpaceGrid?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the emphasis mark for a character or designated character string.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            emphasisMark?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the ending character position of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            end?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the width (in the current measurement units) in which Microsoft Word fits the text in the current selection or range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            fitTextWidth?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if a grammar check has been run on the range or document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            grammarChecked?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the proofing status (spelling and grammar checking) of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            hasNoProofing?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the highlight color for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            highlightColorIndex?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the formatting for horizontal text set within vertical text.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            horizontalInVertical?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the first hyperlink in the range, or sets a hyperlink on the range. All hyperlinks in the range are deleted when you set a new hyperlink on the range. Use a '#' to separate the address part from the optional location part.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            hyperlink?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the ID for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            id?: boolean;
            /**
             * For EACH ITEM in the collection: Checks whether the range length is zero.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            isEmpty?: boolean;
            /**
             * For EACH ITEM in the collection: Gets if the range is collapsed and is located at the end-of-row mark in a table.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEndOfRowMark?: boolean;
            /**
             * For EACH ITEM in the collection: Gets whether the text in the range is visible on the screen.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isTextVisibleOnScreen?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if the font or range is formatted as italic.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            italic?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if the font or range is formatted as italic (right-to-left languages).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            italicBidirectional?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the range of Japanese language text is hiragana or katakana.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            kana?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether Microsoft Word has detected the language of the text in the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageDetected?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a `LanguageId` value that represents the language for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageId?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies an East Asian language for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdFarEast?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies a language for the range that isn't classified as an East Asian language.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            languageIdOther?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if all nonprinting characters (such as hidden text, tab marks, space marks, and paragraph marks) are displayed.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            showAll?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if spelling has been checked throughout the range or document.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            spellingChecked?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the starting character position of the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            start?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the number of characters in the story that contains the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyLength?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the story type for the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyType?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the style name for the range. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            style?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the built-in style name for the range. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.
             *
             * @remarks
             * [Api set: WordApi 1.3]
             */
            styleBuiltIn?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the text of the range.
             *
             * @remarks
             * [Api set: WordApi 1.1]
             */
            text?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether Microsoft Word sets two lines of text in one and specifies the characters that enclose the text, if any.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            twoLinesInOne?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the type of underline applied to the range.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            underline?: boolean;
        }
        /**
         * Represents a single bookmark in a document, selection, or range. The `Bookmark` object is a member of the `Bookmark` collection.
                    The {@link Word.BookmarkCollection} includes all the bookmarks listed in the **Bookmark** dialog box (**Insert** menu).
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface BookmarkLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `Range` object that represents the portion of the document that's contained in the `Bookmark` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Specifies the ending character position of the bookmark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            end?: boolean;
            /**
             * Returns `true` if the bookmark is a table column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isColumn?: boolean;
            /**
             * Returns `true` if the bookmark is empty.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEmpty?: boolean;
            /**
             * Returns the name of the `Bookmark` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
            /**
             * Specifies the starting character position of the bookmark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            start?: boolean;
            /**
             * Returns the story type for the bookmark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyType?: boolean;
        }
        /**
         * A collection of {@link Word.Bookmark} objects that represent the bookmarks in the specified selection, range, or document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface BookmarkCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Returns a `Range` object that represents the portion of the document that's contained in the `Bookmark` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Specifies the ending character position of the bookmark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            end?: boolean;
            /**
             * For EACH ITEM in the collection: Returns `true` if the bookmark is a table column.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isColumn?: boolean;
            /**
             * For EACH ITEM in the collection: Returns `true` if the bookmark is empty.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            isEmpty?: boolean;
            /**
             * For EACH ITEM in the collection: Returns the name of the `Bookmark` object.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the starting character position of the bookmark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            start?: boolean;
            /**
             * For EACH ITEM in the collection: Returns the story type for the bookmark.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            storyType?: boolean;
        }
        /**
         * Represents a single index. The `Index` object is a member of the {@link Word.IndexCollection}. The `IndexCollection` includes all the
                    indexes in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface IndexLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * Returns a `Range` object that represents the portion of the document that is contained within the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * Gets a value that represents how Microsoft Word classifies the first character of entries in the index.
                        See `IndexFilter` for available values.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            filter?: boolean;
            /**
             * Gets the text between alphabetical groups (entries that start with the same letter) in the index. Corresponds to
                        the **\h** switch for an {@link https://support.microsoft.com/office/adafcf4a-cb30-43f6-85c7-743da1635d9e | INDEX field}.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            headingSeparator?: boolean;
            /**
             * Gets a `LanguageId` value that represents the sorting language to use for the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            indexLanguage?: boolean;
            /**
             * Gets the number of columns for each page of the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            numberOfColumns?: boolean;
            /**
             * Specifies if page numbers are aligned with the right margin in the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rightAlignPageNumbers?: boolean;
            /**
             * Gets if the index contains separate headings for accented letters (for example, words that begin with "À" are under
                        one heading and words that begin with "A" are under another).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            separateAccentedLetterHeadings?: boolean;
            /**
             * Specifies the sorting criteria for the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sortBy?: boolean;
            /**
             * Specifies the leader character between entries in the index and their associated page numbers.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: boolean;
            /**
             * Gets the index type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * A collection of {@link Word.Index} objects that represents all the indexes in the document.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface IndexCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Returns a `Range` object that represents the portion of the document that is contained within the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            range?: Word.Interfaces.RangeLoadOptions;
            /**
             * For EACH ITEM in the collection: Gets a value that represents how Microsoft Word classifies the first character of entries in the index.
                        See `IndexFilter` for available values.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            filter?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the text between alphabetical groups (entries that start with the same letter) in the index. Corresponds to
                        the **\h** switch for an {@link https://support.microsoft.com/office/adafcf4a-cb30-43f6-85c7-743da1635d9e | INDEX field}.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            headingSeparator?: boolean;
            /**
             * For EACH ITEM in the collection: Gets a `LanguageId` value that represents the sorting language to use for the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            indexLanguage?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the number of columns for each page of the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            numberOfColumns?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies if page numbers are aligned with the right margin in the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            rightAlignPageNumbers?: boolean;
            /**
             * For EACH ITEM in the collection: Gets if the index contains separate headings for accented letters (for example, words that begin with "À" are under
                        one heading and words that begin with "A" are under another).
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            separateAccentedLetterHeadings?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the sorting criteria for the index.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            sortBy?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the leader character between entries in the index and their associated page numbers.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            tabLeader?: boolean;
            /**
             * For EACH ITEM in the collection: Gets the index type.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            type?: boolean;
        }
        /**
         * Contains a collection of {@link Word.ListTemplate} objects in a document, list template gallery, or document template.
         *
         * @remarks
         * [Api set: WordApi BETA (PREVIEW ONLY)]
         * @beta
         */
        export interface ListTemplateCollectionLoadOptions {
            /**
              Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`) but not the navigational properties (such as `Range.format.fill.color`).
             */
            $all?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies the name of the list template.
             *
             * @remarks
             * [Api set: WordApi BETA (PREVIEW ONLY)]
             * @beta
             */
            name?: boolean;
            /**
             * For EACH ITEM in the collection: Specifies whether the list template is outline numbered.
             *
             * @remarks
             * [Api set: WordApiDesktop 1.1]
             */
            outlineNumbered?: boolean;
        }
    }
}
export declare namespace Word {
    /**
     * The RequestContext object facilitates requests to the Word application. Since the Office add-in and the Word application run in two different processes, the request context is required to get access to the Word object model from the add-in.
     */
    export class RequestContext extends OfficeExtension.ClientRequestContext {
        constructor(url?: string);
        readonly document: Document;
        /** [Api set: WordApi 1.3] **/
		readonly application: Application;
    }
    /**
     * Executes a batch script that performs actions on the Word object model, using the RequestContext of previously created API objects.
     * @param objects - An array of previously created API objects. The array will be validated to make sure that all of the objects share the same context. The batch will use this shared RequestContext, which means that any changes applied to these objects will be picked up by `context.sync()`.
     * @param batch - A function that takes in a RequestContext and returns a promise (typically, just the result of `context.sync()`). The context parameter facilitates requests to the Word application. Since the Office add-in and the Word application run in two different processes, the RequestContext is required to get access to the Word object model from the add-in.
     */
    export function run<T>(objects: OfficeExtension.ClientObject[], batch: (context: Word.RequestContext) => Promise<T>): Promise<T>;
    /**
     * Executes a batch script that performs actions on the Word object model, using the RequestContext of a previously created API object. When the promise is resolved, any tracked objects that were automatically allocated during execution will be released.
     * @param object - A previously created API object. The batch will use the same RequestContext as the passed-in object, which means that any changes applied to the object will be picked up by `context.sync()`.
     * @param batch - A function that takes in a RequestContext and returns a promise (typically, just the result of `context.sync()`). The context parameter facilitates requests to the Word application. Since the Office add-in and the Word application run in two different processes, the RequestContext is required to get access to the Word object model from the add-in.
     */
    export function run<T>(object: OfficeExtension.ClientObject, batch: (context: Word.RequestContext) => Promise<T>): Promise<T>;
    /**
     * Executes a batch script that performs actions on the Word object model, using a new RequestContext. When the promise is resolved, any tracked objects that were automatically allocated during execution will be released.
     * @param batch - A function that takes in a RequestContext and returns a promise (typically, just the result of `context.sync()`). The context parameter facilitates requests to the Word application. Since the Office add-in and the Word application run in two different processes, the RequestContext is required to get access to the Word object model from the add-in.
     */
    export function run<T>(batch: (context: Word.RequestContext) => Promise<T>): Promise<T>;
}


////////////////////////////////////////////////////////////////
//////////////////////// End Word APIs /////////////////////////
////////////////////////////////////////////////////////////////