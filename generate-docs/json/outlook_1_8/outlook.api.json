{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.14.0",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "outlook!",
  "docComment": "",
  "name": "outlook",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "outlook!",
      "name": "",
      "members": [
        {
          "kind": "Namespace",
          "canonicalReference": "outlook!Office:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace Office "
            }
          ],
          "releaseTag": "Public",
          "name": "Office",
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Appointment:interface",
              "docComment": "/**\n * The subclass of {@link Office.Item | Item} dealing with appointments.\n *\n * **Important**: This is an internal Outlook object, not directly exposed through existing interfaces. You should treat this as a mode of `Office.context.mailbox.item`. Refer to the {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item | Object Model} page for more information.\n *\n * Child interfaces:\n *\n * - {@link Office.AppointmentCompose | AppointmentCompose}\n *\n * - {@link Office.AppointmentRead | AppointmentRead}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Appointment extends "
                },
                {
                  "kind": "Reference",
                  "text": "Item",
                  "canonicalReference": "outlook!Office.Item:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "Appointment",
              "members": [],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 3
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.AppointmentCompose:interface",
              "docComment": "/**\n * The appointment organizer mode of {@link Office.Item | Office.context.mailbox.item}.\n *\n * **Important**: This is an internal Outlook object, not directly exposed through existing interfaces. You should treat this as a mode of `Office.context.mailbox.item`. Refer to the {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item | Object Model} page for more information.\n *\n * Parent interfaces:\n *\n * - {@link Office.ItemCompose | ItemCompose}\n *\n * - {@link Office.Appointment | Appointment}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface AppointmentCompose extends "
                },
                {
                  "kind": "Reference",
                  "text": "Appointment",
                  "canonicalReference": "outlook!Office.Appointment:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ItemCompose",
                  "canonicalReference": "outlook!Office.ItemCompose:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "AppointmentCompose",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#addFileAttachmentAsync:member(1)",
                  "docComment": "/**\n * Adds a file to a message or appointment as an attachment.\n *\n * The `addFileAttachmentAsync` method uploads the file at the specified URI and attaches it to the item in the compose form.\n *\n * You can subsequently use the identifier with the `removeAttachmentAsync` method to remove the attachment in the same session.\n *\n * **Important**: In recent builds of Outlook on Windows, a bug was introduced that incorrectly appends an `Authorization: Bearer` header to this action (whether using this API or the Outlook UI). To work around this issue, you can try using the `addFileAttachmentFromBase64` API introduced with requirement set 1.8.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `AttachmentSizeExceeded`: The attachment is larger than allowed.\n *\n * - `FileTypeNotSupported`: The attachment has an extension that is not allowed.\n *\n * - `NumberOfAttachmentsExceeded`: The message or appointment has too many attachments.\n *\n * @param uri - The URI that provides the location of the file to attach to the message or appointment. The maximum length is 2048 characters.\n *\n * @param attachmentName - The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method. `isInline`: If true, indicates that the attachment will be shown inline in the message body, and should not be displayed in the attachment list.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. On success, the attachment identifier will be provided in the `asyncResult.value` property. If uploading the attachment fails, the `asyncResult` object will contain an `Error` object that provides a description of the error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addFileAttachmentAsync(uri: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", attachmentName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & { isInline: boolean }"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "uri",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "attachmentName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "addFileAttachmentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#addFileAttachmentAsync:member(2)",
                  "docComment": "/**\n * Adds a file to a message or appointment as an attachment.\n *\n * The `addFileAttachmentAsync` method uploads the file at the specified URI and attaches it to the item in the compose form.\n *\n * You can subsequently use the identifier with the `removeAttachmentAsync` method to remove the attachment in the same session.\n *\n * **Important**: In recent builds of Outlook on Windows, a bug was introduced that incorrectly appends an `Authorization: Bearer` header to this action (whether using this API or the Outlook UI). To work around this issue, you can try using the `addFileAttachmentFromBase64` API introduced with requirement set 1.8.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `AttachmentSizeExceeded`: The attachment is larger than allowed.\n *\n * - `FileTypeNotSupported`: The attachment has an extension that is not allowed.\n *\n * - `NumberOfAttachmentsExceeded`: The message or appointment has too many attachments.\n *\n * @param uri - The URI that provides the location of the file to attach to the message or appointment. The maximum length is 2048 characters.\n *\n * @param attachmentName - The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. On success, the attachment identifier will be provided in the `asyncResult.value` property. If uploading the attachment fails, the `asyncResult` object will contain an `Error` object that provides a description of the error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addFileAttachmentAsync(uri: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", attachmentName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "uri",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "attachmentName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "addFileAttachmentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#addFileAttachmentFromBase64Async:member(1)",
                  "docComment": "/**\n * Adds a file to a message or appointment as an attachment.\n *\n * The `addFileAttachmentFromBase64Async` method uploads the file from the base64 encoding and attaches it to the item in the compose form. This method returns the attachment identifier in the `asyncResult.value` object.\n *\n * You can subsequently use the identifier with the `removeAttachmentAsync` method to remove the attachment in the same session.\n *\n * **Note**: If you're using a data URL API (e.g., `readAsDataURL`), you need to strip out the data URL prefix then send the rest of the string to this API. For example, if the full string is represented by `data:image/svg+xml;base64,<rest of base64 string>`, remove `data:image/svg+xml;base64,`.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `AttachmentSizeExceeded`: The attachment is larger than allowed.\n *\n * - `FileTypeNotSupported`: The attachment has an extension that is not allowed.\n *\n * - `NumberOfAttachmentsExceeded`: The message or appointment has too many attachments.\n *\n * @param base64File - The base64 encoded content of an image or file to be added to an email or event.\n *\n * @param attachmentName - The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method. `isInline`: If true, indicates that the attachment will be shown inline in the message body and should not be displayed in the attachment list.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. On success, the attachment identifier will be provided in the `asyncResult.value` property. If uploading the attachment fails, the `asyncResult` object will contain an `Error` object that provides a description of the error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addFileAttachmentFromBase64Async(base64File: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", attachmentName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " &  { isInline: boolean }"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "base64File",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "attachmentName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "addFileAttachmentFromBase64Async"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#addFileAttachmentFromBase64Async:member(2)",
                  "docComment": "/**\n * Adds a file to a message or appointment as an attachment.\n *\n * The `addFileAttachmentFromBase64Async` method uploads the file from the base64 encoding and attaches it to the item in the compose form. This method returns the attachment identifier in the `asyncResult.value` object.\n *\n * You can subsequently use the identifier with the `removeAttachmentAsync` method to remove the attachment in the same session.\n *\n * **Note**: If you're using a data URL API (e.g., `readAsDataURL`), you need to strip out the data URL prefix then send the rest of the string to this API. For example, if the full string is represented by `data:image/svg+xml;base64,<rest of base64 string>`, remove `data:image/svg+xml;base64,`.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `AttachmentSizeExceeded`: The attachment is larger than allowed.\n *\n * - `FileTypeNotSupported`: The attachment has an extension that is not allowed.\n *\n * - `NumberOfAttachmentsExceeded`: The message or appointment has too many attachments.\n *\n * @param base64File - The base64 encoded content of an image or file to be added to an email or event.\n *\n * @param attachmentName - The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. On success, the attachment identifier will be provided in the `asyncResult.value` property. If uploading the attachment fails, the `asyncResult` object will contain an `Error` object that provides a description of the error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addFileAttachmentFromBase64Async(base64File: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", attachmentName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "base64File",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "attachmentName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "addFileAttachmentFromBase64Async"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#addHandlerAsync:member(1)",
                  "docComment": "/**\n * Adds an event handler for a supported event. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * @param eventType - The event that should invoke the handler.\n *\n * @param handler - The function to handle the event. The function must accept a single parameter, which is an object literal. The type property on the parameter will match the `eventType` parameter passed to `addHandlerAsync`.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", handler: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "handler",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "addHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#addHandlerAsync:member(2)",
                  "docComment": "/**\n * Adds an event handler for a supported event. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * @param eventType - The event that should invoke the handler.\n *\n * @param handler - The function to handle the event. The function must accept a single parameter, which is an object literal. The type property on the parameter will match the `eventType` parameter passed to `addHandlerAsync`.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", handler: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "handler",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "addHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#addItemAttachmentAsync:member(1)",
                  "docComment": "/**\n * Adds an Exchange item, such as a message, as an attachment to the message or appointment.\n *\n * The `addItemAttachmentAsync` method attaches the item with the specified Exchange identifier to the item in the compose form. If you specify a callback method, the method is called with one parameter, `asyncResult`, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item. You can use the `options` parameter to pass state information to the callback method, if needed.\n *\n * You can subsequently use the identifier with the `removeAttachmentAsync` method to remove the attachment in the same session.\n *\n * If your Office Add-in is running in Outlook on the web, the `addItemAttachmentAsync` method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `NumberOfAttachmentsExceeded`: The message or appointment has too many attachments.\n *\n * @param itemId - The Exchange identifier of the item to attach. The maximum length is 100 characters.\n *\n * @param attachmentName - The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the callback parameter is called with a single parameter of type `Office.AsyncResult`. On success, the attachment identifier will be provided in the `asyncResult.value` property. If adding the attachment fails, the `asyncResult` object will contain an `Error` object that provides a description of the error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addItemAttachmentAsync(itemId: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ", attachmentName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "itemId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "attachmentName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "addItemAttachmentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#addItemAttachmentAsync:member(2)",
                  "docComment": "/**\n * Adds an Exchange item, such as a message, as an attachment to the message or appointment.\n *\n * The `addItemAttachmentAsync` method attaches the item with the specified Exchange identifier to the item in the compose form. If you specify a callback method, the method is called with one parameter, `asyncResult`, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item. You can use the `options` parameter to pass state information to the callback method, if needed.\n *\n * You can subsequently use the identifier with the `removeAttachmentAsync` method to remove the attachment in the same session.\n *\n * If your Office Add-in is running in Outlook on the web, the `addItemAttachmentAsync` method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `NumberOfAttachmentsExceeded`: The message or appointment has too many attachments.\n *\n * @param itemId - The Exchange identifier of the item to attach. The maximum length is 100 characters.\n *\n * @param attachmentName - The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.\n *\n * @param callback - Optional. When the method completes, the function passed in the callback parameter is called with a single parameter of type `Office.AsyncResult`. On success, the attachment identifier will be provided in the `asyncResult.value` property. If adding the attachment fails, the `asyncResult` object will contain an `Error` object that provides a description of the error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addItemAttachmentAsync(itemId: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ", attachmentName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "itemId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "attachmentName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "addItemAttachmentAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#body:member",
                  "docComment": "/**\n * Gets an object that provides methods for manipulating the body of an item.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "body: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Body",
                      "canonicalReference": "outlook!Office.Body:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "body",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#categories:member",
                  "docComment": "/**\n * Gets an object that provides methods for managing the item's categories.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "categories: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Categories",
                      "canonicalReference": "outlook!Office.Categories:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "categories",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#close:member(1)",
                  "docComment": "/**\n * Closes the current item that is being composed\n *\n * The behaviors of the `close` method depends on the current state of the item being composed. If the item has unsaved changes, the client prompts the user to save, discard, or close the action.\n *\n * In the Outlook desktop client, if the message is an inline reply, the `close` method has no effect.\n *\n * **Note**: In Outlook on the web, if the item is an appointment and it has previously been saved using `saveAsync`, the user is prompted to save, discard, or cancel even if no changes have occurred since the item was last saved.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "close(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "close"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#end:member",
                  "docComment": "/**\n * Gets or sets the date and time that the appointment is to end.\n *\n * The `end` property is a {@link Office.Time | Time} object expressed as a Coordinated Universal Time (UTC) date and time value. You can use the `convertToLocalClientTime` method to convert the `end` property value to the client's local date and time.\n *\n * When you use the `Time.setAsync` method to set the end time, you should use the `convertToUtcClientTime` method to convert the local time on the client to UTC for the server.\n *\n * **Important**: In the Windows client, you can't use this property to update the end of a recurrence.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "end: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Time",
                      "canonicalReference": "outlook!Office.Time:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "end",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#enhancedLocation:member",
                  "docComment": "/**\n * Gets or sets the locations of the appointment. The `enhancedLocation` property returns an {@link Office.EnhancedLocation | EnhancedLocation} object that provides methods to get, remove, or add locations on an item.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enhancedLocation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "EnhancedLocation",
                      "canonicalReference": "outlook!Office.EnhancedLocation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "enhancedLocation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#getAttachmentContentAsync:member(1)",
                  "docComment": "/**\n * Gets an attachment from a message or appointment and returns it as an `AttachmentContent` object.\n *\n * The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item. As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachmentIds were retrieved with the `getAttachmentsAsync` or `item.attachments` call. In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session. A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `AttachmentTypeNotSupported`: The attachment type isn't supported. Unsupported types include embedded images in Rich Text Format, or item attachment types other than email or calendar items (such as a contact or task item).\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param attachmentId - The identifier of the attachment you want to get.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAttachmentContentAsync(attachmentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentContent",
                      "canonicalReference": "outlook!Office.AttachmentContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "attachmentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "getAttachmentContentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#getAttachmentContentAsync:member(2)",
                  "docComment": "/**\n * Gets an attachment from a message or appointment and returns it as an `AttachmentContent` object.\n *\n * The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item. As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachmentIds were retrieved with the `getAttachmentsAsync` or `item.attachments` call. In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session. A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `AttachmentTypeNotSupported`: The attachment type isn't supported. Unsupported types include embedded images in Rich Text Format, or item attachment types other than email or calendar items (such as a contact or task item).\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param attachmentId - The identifier of the attachment you want to get.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAttachmentContentAsync(attachmentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentContent",
                      "canonicalReference": "outlook!Office.AttachmentContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "attachmentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAttachmentContentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#getAttachmentsAsync:member(1)",
                  "docComment": "/**\n * Gets the item's attachments as an array.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAttachmentsAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentDetailsCompose",
                      "canonicalReference": "outlook!Office.AttachmentDetailsCompose:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAttachmentsAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#getAttachmentsAsync:member(2)",
                  "docComment": "/**\n * Gets the item's attachments as an array.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAttachmentsAsync(callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentDetailsCompose",
                      "canonicalReference": "outlook!Office.AttachmentDetailsCompose:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAttachmentsAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#getItemIdAsync:member(1)",
                  "docComment": "/**\n * Asynchronously gets the ID of a saved item.\n *\n * When invoked, this method returns the item ID via the callback method.\n *\n * **Note**: If your add-in calls `getItemIdAsync` on an item in compose mode (e.g., to get an `itemId` to use with EWS or the REST API), be aware that when Outlook is in cached mode, it may take some time before the item is synced to the server. Until the item is synced, the `itemId` is not recognized and using it returns an error.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `ItemNotSaved`: The id can't be retrieved until the item is saved.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemIdAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getItemIdAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#getItemIdAsync:member(2)",
                  "docComment": "/**\n * Asynchronously gets the ID of a saved item.\n *\n * When invoked, this method returns the item ID via the callback method.\n *\n * **Note**: If your add-in calls `getItemIdAsync` on an item in compose mode (e.g., to get an `itemId` to use with EWS or the REST API), be aware that when Outlook is in cached mode, it may take some time before the item is synced to the server. Until the item is synced, the `itemId` is not recognized and using it returns an error.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `ItemNotSaved`: The id can't be retrieved until the item is saved.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemIdAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getItemIdAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#getSelectedDataAsync:member(1)",
                  "docComment": "/**\n * Asynchronously returns selected data from the subject or body of a message.\n *\n * If there is no selection but the cursor is in the body or subject, the method returns an empty string for the selected data. If a field other than the body or subject is selected, the method returns the `InvalidSelection` error.\n *\n * To access the selected data from the callback method, call `asyncResult.value.data`. To access the `source` property that the selection comes from, call `asyncResult.value.sourceProperty`, which will be either `body` or `subject`.\n *\n * [Api set: Mailbox 1.2]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * @param coercionType - Requests a format for the data. If `Text`, the method returns the plain text as a string, removing any HTML tags present. If `HTML`, the method returns the selected text, whether it is plaintext or HTML.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n *\n * @returns The selected data as a string with format determined by `coercionType`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedDataAsync(coercionType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.CoercionType",
                      "canonicalReference": "office!Office.CoercionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<any>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "coercionType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "getSelectedDataAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#getSelectedDataAsync:member(2)",
                  "docComment": "/**\n * Asynchronously returns selected data from the subject or body of a message.\n *\n * If there is no selection but the cursor is in the body or subject, the method returns an empty string for the selected data. If a field other than the body or subject is selected, the method returns the `InvalidSelection` error.\n *\n * To access the selected data from the callback method, call `asyncResult.value.data`. To access the `source` property that the selection comes from, call `asyncResult.value.sourceProperty`, which will be either `body` or `subject`.\n *\n * [Api set: Mailbox 1.2]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * @param coercionType - Requests a format for the data. If `Text`, the method returns the plain text as a string, removing any HTML tags present. If `HTML`, the method returns the selected text, whether it is plaintext or HTML.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n *\n * @returns The selected data as a string with format determined by `coercionType`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedDataAsync(coercionType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.CoercionType",
                      "canonicalReference": "office!Office.CoercionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "coercionType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "getSelectedDataAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#getSharedPropertiesAsync:member(1)",
                  "docComment": "/**\n * Gets the properties of an appointment or message in a shared folder.\n *\n * For more information around using this API, see the {@link https://docs.microsoft.com/office/dev/add-ins/outlook/delegate-access | delegate access} article.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is the properties of the shared item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSharedPropertiesAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "SharedProperties",
                      "canonicalReference": "outlook!Office.SharedProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getSharedPropertiesAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#getSharedPropertiesAsync:member(2)",
                  "docComment": "/**\n * Gets the properties of an appointment or message in a shared folder.\n *\n * For more information around using this API, see the {@link https://docs.microsoft.com/office/dev/add-ins/outlook/delegate-access | delegate access} article.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * @param callback - When the method completes, the function passed in the callback parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is the properties of the shared item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSharedPropertiesAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "SharedProperties",
                      "canonicalReference": "outlook!Office.SharedProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getSharedPropertiesAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#itemType:member",
                  "docComment": "/**\n * Gets the type of item that an instance represents.\n *\n * The `itemType` property returns one of the `ItemType` enumeration values, indicating whether the `item` object instance is a message or an appointment.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "itemType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.ItemType",
                      "canonicalReference": "outlook!Office.MailboxEnums.ItemType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "itemType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#loadCustomPropertiesAsync:member(1)",
                  "docComment": "/**\n * Asynchronously loads custom properties for this add-in on the selected item.\n *\n * Custom properties are stored as key/value pairs on a per-app, per-item basis. This method returns a `CustomProperties` object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in. Custom properties are not encrypted on the item, so this should not be used as secure storage.\n *\n * The custom properties are provided as a `CustomProperties` object in the `asyncResult.value` property. This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n *\n * @param userContext - Optional. Developers can provide any object they wish to access in the callback function. This object can be accessed by the `asyncResult.asyncContext` property in the callback function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "loadCustomPropertiesAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomProperties",
                      "canonicalReference": "outlook!Office.CustomProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ", userContext?: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "userContext",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "loadCustomPropertiesAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#location:member",
                  "docComment": "/**\n * Gets or sets the location of an appointment. The `location` property returns a {@link Office.Location | Location} object that provides methods that are used to get and set the location of the appointment.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "location: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Location",
                      "canonicalReference": "outlook!Office.Location:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "location",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#notificationMessages:member",
                  "docComment": "/**\n * Gets the notification messages for an item.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notificationMessages: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NotificationMessages",
                      "canonicalReference": "outlook!Office.NotificationMessages:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "notificationMessages",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#optionalAttendees:member",
                  "docComment": "/**\n * Provides access to the optional attendees of an event. The type of object and level of access depend on the mode of the current item.\n *\n * The `optionalAttendees` property returns a `Recipients` object that provides methods to get or update the optional attendees for a meeting. However, depending on the client/platform (i.e., Windows, Mac, etc.), limits may apply on how many recipients you can get or update. See the {@link Office.Recipients | Recipients} object for more details.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "optionalAttendees: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Recipients",
                      "canonicalReference": "outlook!Office.Recipients:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "optionalAttendees",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#organizer:member",
                  "docComment": "/**\n * Gets the organizer for the specified meeting.\n *\n * The `organizer` property returns an {@link Office.Organizer | Organizer} object that provides a method to get the organizer value.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "organizer: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Organizer",
                      "canonicalReference": "outlook!Office.Organizer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "organizer",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#recurrence:member",
                  "docComment": "/**\n * Gets or sets the recurrence pattern of an appointment.\n *\n * The `recurrence` property returns a recurrence object for recurring appointments or meetings requests if an item is a series or an instance in a series. `null` is returned for single appointments and meeting requests of single appointments.\n *\n * **Note**: Meeting requests have an `itemClass` value of `IPM.Schedule.Meeting.Request`.\n *\n * **Note**: If the recurrence object is null, this indicates that the object is a single appointment or a meeting request of a single appointment and NOT a part of a series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "recurrence: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Recurrence",
                      "canonicalReference": "outlook!Office.Recurrence:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "recurrence",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#removeAttachmentAsync:member(1)",
                  "docComment": "/**\n * Removes an attachment from a message or appointment.\n *\n * The `removeAttachmentAsync` method removes the attachment with the specified identifier from the item. As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session. In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session. A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param attachmentId - The identifier of the attachment to remove. The maximum string length of the `attachmentId` is 200 characters in Outlook on the web and on Windows.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If removing the attachment fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAttachmentAsync(attachmentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "attachmentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "removeAttachmentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#removeAttachmentAsync:member(2)",
                  "docComment": "/**\n * Removes an attachment from a message or appointment.\n *\n * The `removeAttachmentAsync` method removes the attachment with the specified identifier from the item. As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session. In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session. A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param attachmentId - The identifier of the attachment to remove. The maximum string length of the `attachmentId` is 200 characters in Outlook on the web and on Windows.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If removing the attachment fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAttachmentAsync(attachmentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "attachmentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "removeAttachmentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#removeHandlerAsync:member(1)",
                  "docComment": "/**\n * Removes the event handlers for a supported event type. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * @param eventType - The event that should revoke the handler.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "removeHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#removeHandlerAsync:member(2)",
                  "docComment": "/**\n * Removes the event handlers for a supported event type. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * @param eventType - The event that should revoke the handler.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "removeHandlerAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#requiredAttendees:member",
                  "docComment": "/**\n * Provides access to the required attendees of an event. The type of object and level of access depend on the mode of the current item.\n *\n * The `requiredAttendees` property returns a `Recipients` object that provides methods to get or update the required attendees for a meeting. However, depending on the client/platform (i.e., Windows, Mac, etc.), limits may apply on how many recipients you can get or update. See the {@link Office.Recipients | Recipients} object for more details.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "requiredAttendees: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Recipients",
                      "canonicalReference": "outlook!Office.Recipients:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "requiredAttendees",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#saveAsync:member(1)",
                  "docComment": "/**\n * Asynchronously saves an item.\n *\n * When invoked, this method saves the current message as a draft and returns the item ID via the callback method. In Outlook on the web or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.\n *\n * Since appointments have no draft state, if `saveAsync` is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar. For new appointments that have not been saved before, no invitation will be sent. Saving an existing appointment will send an update to added or removed attendees.\n *\n * **Note**: If your add-in calls `saveAsync` on an item in compose mode in order to get an item ID to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server. Until the item is synced, using the item ID will return an error.\n *\n * **Note**: In Outlook on Mac, only build 16.35.308 or later supports saving a meeting. Otherwise, the `saveAsync` method fails when called from a meeting in compose mode. For a workaround, see {@link https://support.microsoft.com/help/4505745 | Cannot save a meeting as a draft in Outlook for Mac by using Office JS API}.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "saveAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "saveAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#saveAsync:member(2)",
                  "docComment": "/**\n * Asynchronously saves an item.\n *\n * When invoked, this method saves the current message as a draft and returns the item ID via the callback method. In Outlook on the web or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.\n *\n * Since appointments have no draft state, if `saveAsync` is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar. For new appointments that have not been saved before, no invitation will be sent. Saving an existing appointment will send an update to added or removed attendees.\n *\n * **Note**: If your add-in calls `saveAsync` on an item in compose mode in order to get an item ID to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server. Until the item is synced, using the item ID will return an error.\n *\n * **Note**: In Outlook on Mac, only build 16.35.308 or later supports saving a meeting. Otherwise, the `saveAsync` method fails when called from a meeting in compose mode. For a workaround, see {@link https://support.microsoft.com/help/4505745 | Cannot save a meeting as a draft in Outlook for Mac by using Office JS API}.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param callback - When the method completes, the function passed in the callback parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "saveAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "saveAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#seriesId:member",
                  "docComment": "/**\n * Gets the id of the series that an instance belongs to.\n *\n * In Outlook on the web and desktop clients, the `seriesId` property returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to. However, on iOS and Android, the seriesId returns the REST ID of the parent item.\n *\n * **Note**: The identifier returned by the `seriesId` property is the same as the Exchange Web Services item identifier. The `seriesId` property is not identical to the Outlook IDs used by the Outlook REST API. Before making REST API calls using this value, it should be converted using `Office.context.mailbox.convertToRestId`. For more details, see {@link https://docs.microsoft.com/office/dev/add-ins/outlook/use-rest-api | Use the Outlook REST APIs from an Outlook add-in}.\n *\n * The `seriesId` property returns `null` for items that do not have parent items such as single appointments, series items, or meeting requests and returns `undefined` for any other items that are not meeting requests.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "seriesId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "seriesId",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#setSelectedDataAsync:member(1)",
                  "docComment": "/**\n * Asynchronously inserts data into the body or subject of a message.\n *\n * The `setSelectedDataAsync` method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text. If the cursor is not in the body or subject field, an error is returned. After insertion, the cursor is placed at the end of the inserted content.\n *\n * [Api set: Mailbox 1.2]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param data - The data to be inserted. Data is not to exceed 1,000,000 characters. If more than 1,000,000 characters are passed in, an `ArgumentOutOfRange` exception is thrown.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method. `coercionType`: If text, the current style is applied in Outlook on the web and Windows. If the field is an HTML editor, only the text data is inserted, even if the data is HTML. If html and the field supports HTML (the subject doesn't), the current style is applied in Outlook on the web and the default style is applied in Outlook on desktop clients. If the field is a text field, an `InvalidDataFormat` error is returned. If `coercionType` is not set, the result depends on the field: if the field is HTML then HTML is used; if the field is text, then plain text is used.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSelectedDataAsync(data: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & "
                    },
                    {
                      "kind": "Reference",
                      "text": "CoercionTypeOptions",
                      "canonicalReference": "outlook!Office.CoercionTypeOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "data",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "setSelectedDataAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#setSelectedDataAsync:member(2)",
                  "docComment": "/**\n * Asynchronously inserts data into the body or subject of a message.\n *\n * The `setSelectedDataAsync` method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text. If the cursor is not in the body or subject field, an error is returned. After insertion, the cursor is placed at the end of the inserted content.\n *\n * [Api set: Mailbox 1.2]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n *\n * **Errors**:\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param data - The data to be inserted. Data is not to exceed 1,000,000 characters. If more than 1,000,000 characters are passed in, an `ArgumentOutOfRange` exception is thrown.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSelectedDataAsync(data: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "data",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "setSelectedDataAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#start:member",
                  "docComment": "/**\n * Gets or sets the date and time that the appointment is to begin.\n *\n * The `start` property is a {@link Office.Time | Time} object expressed as a Coordinated Universal Time (UTC) date and time value. You can use the `convertToLocalClientTime` method to convert the value to the client's local date and time.\n *\n * When you use the `Time.setAsync` method to set the start time, you should use the `convertToUtcClientTime` method to convert the local time on the client to UTC for the server.\n *\n * **Important**: In the Windows client, you can't use this property to update the start of a recurrence.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "start: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Time",
                      "canonicalReference": "outlook!Office.Time:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "start",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentCompose#subject:member",
                  "docComment": "/**\n * Gets or sets the description that appears in the subject field of an item.\n *\n * The `subject` property gets or sets the entire subject of the item, as sent by the email server.\n *\n * The `subject` property returns a `Subject` object that provides methods to get and set the subject.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subject: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Subject",
                      "canonicalReference": "outlook!Office.Subject:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "subject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                },
                {
                  "startIndex": 3,
                  "endIndex": 5
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.AppointmentForm:interface",
              "docComment": "/**\n * The `AppointmentForm` object is used to access the currently selected appointment.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface AppointmentForm "
                }
              ],
              "releaseTag": "Public",
              "name": "AppointmentForm",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentForm#body:member",
                  "docComment": "/**\n * Gets an object that provides methods for manipulating the body of an item.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "body: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Body",
                      "canonicalReference": "outlook!Office.Body:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "body",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentForm#end:member",
                  "docComment": "/**\n * Gets or sets the date and time that the appointment is to end.\n *\n * The `end` property is expressed as a Coordinated Universal Time (UTC) date and time value. You can use the `convertToLocalClientTime` method to convert the `end` property value to the client's local date and time.\n *\n * *Read mode*\n *\n * The `end` property returns a `Date` object.\n *\n * *Compose mode*\n *\n * The `end` property returns a `Time` object.\n *\n * When you use the `Time.setAsync` method to set the end time, you should use the `convertToUtcClientTime` method to convert the local time on the client to UTC for the server.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "end: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Time",
                      "canonicalReference": "outlook!Office.Time:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "end",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentForm#location:member",
                  "docComment": "/**\n * Gets or sets the location of an appointment.\n *\n * *Read mode*\n *\n * The `location` property returns a string that contains the location of the appointment.\n *\n * *Compose mode*\n *\n * The `location` property returns a `Location` object that provides methods that are used to get and set the location of the appointment.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "location: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Location",
                      "canonicalReference": "outlook!Office.Location:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "location",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentForm#optionalAttendees:member",
                  "docComment": "/**\n * Provides access to the optional attendees of an event. The type of object and level of access depend on the mode of the current item.\n *\n * *Read mode*\n *\n * The `optionalAttendees` property returns an array that contains an {@link Office.EmailAddressDetails | EmailAddressDetails} object for each optional attendee to the meeting. Collection size limits:\n *\n * - Windows: 500 members\n *\n * - Mac: 100 members\n *\n * - Other: No limit\n *\n * *Compose mode*\n *\n * The `optionalAttendees` property returns a `Recipients` object that provides methods to get or update the optional attendees for a meeting. However, depending on the client/platform (i.e., Windows, Mac, etc.), limits may apply on how many recipients you can get or update. See the {@link Office.Recipients | Recipients} object for more details.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "optionalAttendees: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Recipients",
                      "canonicalReference": "outlook!Office.Recipients:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[] | "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "optionalAttendees",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentForm#requiredAttendees:member",
                  "docComment": "/**\n * Provides access to the required attendees of an event. The type of object and level of access depend on the mode of the current item.\n *\n * *Read mode*\n *\n * The `requiredAttendees` property returns an array that contains an {@link Office.EmailAddressDetails | EmailAddressDetails} object for each required attendee to the meeting. Collection size limits:\n *\n * - Windows: 500 members\n *\n * - Mac: 100 members\n *\n * - Other: No limit\n *\n * *Compose mode*\n *\n * The `requiredAttendees` property returns a `Recipients` object that provides methods to get or update the required attendees for a meeting. However, depending on the client/platform (i.e., Windows, Mac, etc.), limits may apply on how many recipients you can get or update. See the {@link Office.Recipients | Recipients} object for more details.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "requiredAttendees: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Recipients",
                      "canonicalReference": "outlook!Office.Recipients:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[] | "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "requiredAttendees",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentForm#resources:member",
                  "docComment": "/**\n * Provides access to the resources of an event. Returns an array of strings containing the resources required for the appointment.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "resources: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "resources",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentForm#start:member",
                  "docComment": "/**\n * Gets or sets the date and time that the appointment is to begin.\n *\n * The `start` property is expressed as a Coordinated Universal Time (UTC) date and time value. You can use the `convertToLocalClientTime` method to convert the value to the client's local date and time.\n *\n * *Read mode*\n *\n * The `start` property returns a `Date` object.\n *\n * *Compose mode*\n *\n * The `start` property returns a `Time` object.\n *\n * When you use the `Time.setAsync` method to set the start time, you should use the `convertToUtcClientTime` method to convert the local time on the client to UTC for the server.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "start: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Time",
                      "canonicalReference": "outlook!Office.Time:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "start",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentForm#subject:member",
                  "docComment": "/**\n * Gets or sets the description that appears in the subject field of an item.\n *\n * The `subject` property gets or sets the entire subject of the item, as sent by the email server.\n *\n * *Read mode*\n *\n * The `subject` property returns a string. Use the `normalizedSubject` property to get the subject minus any leading prefixes such as RE: and FW:.\n *\n * *Compose mode*\n *\n * The `subject` property returns a `Subject` object that provides methods to get and set the subject.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subject: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Subject",
                      "canonicalReference": "outlook!Office.Subject:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "subject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.AppointmentRead:interface",
              "docComment": "/**\n * The appointment attendee mode of {@link Office.Item | Office.context.mailbox.item}.\n *\n * **Important**: This is an internal Outlook object, not directly exposed through existing interfaces. You should treat this as a mode of `Office.context.mailbox.item`. Refer to the {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item | Object Model} page for more information.\n *\n * Parent interfaces:\n *\n * - {@link Office.ItemRead | ItemRead}\n *\n * - {@link Office.Appointment | Appointment}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface AppointmentRead extends "
                },
                {
                  "kind": "Reference",
                  "text": "Appointment",
                  "canonicalReference": "outlook!Office.Appointment:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ItemRead",
                  "canonicalReference": "outlook!Office.ItemRead:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "AppointmentRead",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#addHandlerAsync:member(1)",
                  "docComment": "/**\n * Adds an event handler for a supported event. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @param eventType - The event that should invoke the handler.\n *\n * @param handler - The function to handle the event. The function must accept a single parameter, which is an object literal. The type property on the parameter will match the `eventType` parameter passed to `addHandlerAsync`.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", handler: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "handler",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "addHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#addHandlerAsync:member(2)",
                  "docComment": "/**\n * Adds an event handler for a supported event. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @param eventType - The event that should invoke the handler.\n *\n * @param handler - The function to handle the event. The function must accept a single parameter, which is an object literal. The type property on the parameter will match the `eventType` parameter passed to `addHandlerAsync`.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", handler: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "handler",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "addHandlerAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#attachments:member",
                  "docComment": "/**\n * Gets the item's attachments as an array.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * **Note**: Certain types of files are blocked by Outlook due to potential security issues and are therefore not returned. For more information, see {@link https://support.office.com/article/Blocked-attachments-in-Outlook-434752E1-02D3-4E90-9124-8B81E49A8519 | Blocked attachments in Outlook}.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "attachments: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentDetails",
                      "canonicalReference": "outlook!Office.AttachmentDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "attachments",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#body:member",
                  "docComment": "/**\n * Gets an object that provides methods for manipulating the body of an item.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "body: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Body",
                      "canonicalReference": "outlook!Office.Body:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "body",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#categories:member",
                  "docComment": "/**\n * Gets an object that provides methods for managing the item's categories.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "categories: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Categories",
                      "canonicalReference": "outlook!Office.Categories:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "categories",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#dateTimeCreated:member",
                  "docComment": "/**\n * Gets the date and time that an item was created.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dateTimeCreated: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "dateTimeCreated",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#dateTimeModified:member",
                  "docComment": "/**\n * Gets the date and time that an item was last modified.\n *\n * **Note**: This member is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dateTimeModified: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "dateTimeModified",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#displayReplyAllForm:member(1)",
                  "docComment": "/**\n * Displays a reply form that includes either the sender and all recipients of the selected message or the organizer and all attendees of the selected appointment.\n *\n * In Outlook on the web, the reply form is displayed as a pop-out form in the 3-column view and a pop-up form in the 2-column or 1-column view.\n *\n * If any of the string parameters exceed their limits, `displayReplyAllForm` throws an exception.\n *\n * When attachments are specified in the `formData.attachments` parameter, Outlook attempts to download all attachments and attach them to the reply form. If any attachments fail to be added, an error is shown in the form UI. If this isn't possible, then no error message is thrown.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @param formData - A string that contains text and HTML and that represents the body of the reply form. The string is limited to 32 KB OR a {@link Office.ReplyFormData | ReplyFormData} object that contains body or attachment data and a callback function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayReplyAllForm(formData: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReplyFormData",
                      "canonicalReference": "outlook!Office.ReplyFormData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "displayReplyAllForm"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#displayReplyForm:member(1)",
                  "docComment": "/**\n * Displays a reply form that includes only the sender of the selected message or the organizer of the selected appointment.\n *\n * In Outlook on the web, the reply form is displayed as a pop-out form in the 3-column view and a pop-up form in the 2-column or 1-column view.\n *\n * If any of the string parameters exceed their limits, `displayReplyForm` throws an exception.\n *\n * When attachments are specified in the `formData.attachments` parameter, Outlook attempts to download all attachments and attach them to the reply form. If any attachments fail to be added, an error is shown in the form UI. If this isn't possible, then no error message is thrown.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @param formData - A string that contains text and HTML and that represents the body of the reply form. The string is limited to 32 KB OR a {@link Office.ReplyFormData | ReplyFormData} object that contains body or attachment data and a callback function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayReplyForm(formData: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReplyFormData",
                      "canonicalReference": "outlook!Office.ReplyFormData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "displayReplyForm"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#end:member",
                  "docComment": "/**\n * Gets the date and time that the appointment is to end.\n *\n * The `end` property is a `Date` object expressed as a Coordinated Universal Time (UTC) date and time value. You can use the `convertToLocalClientTime` method to convert the `end` property value to the client's local date and time.\n *\n * When you use the `Time.setAsync` method to set the end time, you should use the `convertToUtcClientTime` method to convert the local time on the client to UTC for the server.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "end: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "end",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#enhancedLocation:member",
                  "docComment": "/**\n * Gets the locations of an appointment.\n *\n * The `enhancedLocation` property returns an {@link Office.EnhancedLocation | EnhancedLocation} object that allows you to get the set of locations (each represented by a {@link Office.LocationDetails | LocationDetails} object) associated with the appointment.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enhancedLocation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "EnhancedLocation",
                      "canonicalReference": "outlook!Office.EnhancedLocation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "enhancedLocation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#getAttachmentContentAsync:member(1)",
                  "docComment": "/**\n * Gets an attachment from a message or appointment and returns it as an `AttachmentContent` object.\n *\n * The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item. As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachmentIds were retrieved with the `getAttachmentsAsync` or `item.attachments` call. In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session. A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * **Errors**:\n *\n * - `AttachmentTypeNotSupported`: The attachment type isn't supported. Unsupported types include embedded images in Rich Text Format, or item attachment types other than email or calendar items (such as a contact or task item).\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param attachmentId - The identifier of the attachment you want to get.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAttachmentContentAsync(attachmentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentContent",
                      "canonicalReference": "outlook!Office.AttachmentContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "attachmentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "getAttachmentContentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#getAttachmentContentAsync:member(2)",
                  "docComment": "/**\n * Gets an attachment from a message or appointment and returns it as an `AttachmentContent` object.\n *\n * The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item. As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachmentIds were retrieved with the `getAttachmentsAsync` or `item.attachments` call. In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session. A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * **Errors**:\n *\n * - `AttachmentTypeNotSupported`: The attachment type isn't supported. Unsupported types include embedded images in Rich Text Format, or item attachment types other than email or calendar items (such as a contact or task item).\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param attachmentId - The identifier of the attachment you want to get.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAttachmentContentAsync(attachmentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentContent",
                      "canonicalReference": "outlook!Office.AttachmentContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "attachmentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAttachmentContentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#getEntities:member(1)",
                  "docComment": "/**\n * Gets the entities found in the selected item's body.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEntities(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entities",
                      "canonicalReference": "outlook!Office.Entities:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEntities"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#getEntitiesByType:member(1)",
                  "docComment": "/**\n * Gets an array of all the entities of the specified entity type found in the selected item's body.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @param entityType - One of the `EntityType` enumeration values.\n *\n * While the minimum permission level to use this method is `Restricted`, some entity types require `ReadItem` to access, as specified in the following table.\n *\n * <table> <tr> <th>Value of entityType</th> <th>Type of objects in returned array</th> <th>Required Permission Level</th> </tr> <tr> <td>Address</td> <td>String</td> <td>Restricted</td> </tr> <tr> <td>Contact</td> <td>Contact</td> <td>ReadItem</td> </tr> <tr> <td>EmailAddress</td> <td>String</td> <td>ReadItem</td> </tr> <tr> <td>MeetingSuggestion</td> <td>MeetingSuggestion</td> <td>ReadItem</td> </tr> <tr> <td>PhoneNumber</td> <td>PhoneNumber</td> <td>Restricted</td> </tr> <tr> <td>TaskSuggestion</td> <td>TaskSuggestion</td> <td>ReadItem</td> </tr> <tr> <td>URL</td> <td>String</td> <td>Restricted</td> </tr> </table>\n *\n * @returns If the value passed in `entityType` is not a valid member of the `EntityType` enumeration, the method returns null. If no entities of the specified type are present in the item's body, the method returns an empty array. Otherwise, the type of the objects in the returned array depends on the type of entity requested in the `entityType` parameter.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEntitiesByType(entityType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.EntityType",
                      "canonicalReference": "outlook!Office.MailboxEnums.EntityType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "(string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Contact",
                      "canonicalReference": "outlook!Office.Contact:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "MeetingSuggestion",
                      "canonicalReference": "outlook!Office.MeetingSuggestion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "PhoneNumber",
                      "canonicalReference": "outlook!Office.PhoneNumber:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "TaskSuggestion",
                      "canonicalReference": "outlook!Office.TaskSuggestion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ")[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "entityType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "getEntitiesByType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#getFilteredEntitiesByName:member(1)",
                  "docComment": "/**\n * Returns well-known entities in the selected item that pass the named filter defined in the manifest XML file.\n *\n * The `getFilteredEntitiesByName` method returns the entities that match the regular expression defined in the `ItemHasKnownEntity` rule element in the manifest XML file with the specified `FilterName` element value.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @param name - The name of the `ItemHasKnownEntity` rule element that defines the filter to match.\n *\n * @returns If there is no `ItemHasKnownEntity` element in the manifest with a `FilterName` element value that matches the `name` parameter, the method returns `null`. If the `name` parameter matches an `ItemHasKnownEntity` element in the manifest, but there are no entities in the current item that match, the method return an empty array.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFilteredEntitiesByName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "(string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Contact",
                      "canonicalReference": "outlook!Office.Contact:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "MeetingSuggestion",
                      "canonicalReference": "outlook!Office.MeetingSuggestion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "PhoneNumber",
                      "canonicalReference": "outlook!Office.PhoneNumber:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "TaskSuggestion",
                      "canonicalReference": "outlook!Office.TaskSuggestion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ")[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getFilteredEntitiesByName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#getRegExMatches:member(1)",
                  "docComment": "/**\n * Returns string values in the selected item that match the regular expressions defined in the manifest XML file.\n *\n * The `getRegExMatches` method returns the strings that match the regular expression defined in each `ItemHasRegularExpressionMatch` or `ItemHasKnownEntity` rule element in the manifest XML file. For an `ItemHasRegularExpressionMatch` rule, a matching string has to occur in the property of the item that is specified by that rule. The `PropertyName` simple type defines the supported properties.\n *\n * If you specify an `ItemHasRegularExpressionMatch` rule on the body property of an item, the regular expression should further filter the body and should not attempt to return the entire body of the item. Using a regular expression such as .* to obtain the entire body of an item does not always return the expected results. Instead, use the `Body.getAsync` method to retrieve the entire body.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @returns An object that contains arrays of strings that match the regular expressions defined in the manifest XML file. The name of each array is equal to the corresponding value of the RegExName attribute of the matching `ItemHasRegularExpressionMatch` rule or the `FilterName` attribute of the matching `ItemHasKnownEntity` rule.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRegExMatches(): "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRegExMatches"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#getRegExMatchesByName:member(1)",
                  "docComment": "/**\n * Returns string values in the selected item that match the named regular expression defined in the manifest XML file.\n *\n * The `getRegExMatchesByName` method returns the strings that match the regular expression defined in the `ItemHasRegularExpressionMatch` rule element in the manifest XML file with the specified `RegExName` element value.\n *\n * If you specify an `ItemHasRegularExpressionMatch` rule on the body property of an item, the regular expression should further filter the body and should not attempt to return the entire body of the item. Using a regular expression such as .* to obtain the entire body of an item does not always return the expected results.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @param name - The name of the `ItemHasRegularExpressionMatch` rule element that defines the filter to match.\n *\n * @returns An array that contains the strings that match the regular expression defined in the manifest XML file.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRegExMatchesByName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRegExMatchesByName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#getSelectedEntities:member(1)",
                  "docComment": "/**\n * Gets the entities found in a highlighted match a user has selected. Highlighted matches apply to contextual add-ins.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.6]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @param name - The name of the `ItemHasRegularExpressionMatch` rule element that defines the filter to match.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedEntities(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entities",
                      "canonicalReference": "outlook!Office.Entities:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSelectedEntities"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#getSelectedRegExMatches:member(1)",
                  "docComment": "/**\n * Returns string values in a highlighted match that match the regular expressions defined in the manifest XML file. Highlighted matches apply to contextual add-ins.\n *\n * The `getSelectedRegExMatches` method returns the strings that match the regular expression defined in each `ItemHasRegularExpressionMatch` or `ItemHasKnownEntity` rule element in the manifest XML file. For an `ItemHasRegularExpressionMatch` rule, a matching string has to occur in the property of the item that is specified by that rule. The `PropertyName` simple type defines the supported properties.\n *\n * If you specify an `ItemHasRegularExpressionMatch` rule on the body property of an item, the regular expression should further filter the body and should not attempt to return the entire body of the item. Using a regular expression such as .* to obtain the entire body of an item does not always return the expected results. Instead, use the `Body.getAsync` method to retrieve the entire body.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.6]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @returns An object that contains arrays of strings that match the regular expressions defined in the manifest XML file. The name of each array is equal to the corresponding value of the `RegExName` attribute of the matching `ItemHasRegularExpressionMatch` rule or the `FilterName` attribute of the matching `ItemHasKnownEntity` rule.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedRegExMatches(): "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSelectedRegExMatches"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#getSharedPropertiesAsync:member(1)",
                  "docComment": "/**\n * Gets the properties of an appointment or message in a shared folder.\n *\n * For more information around using this API, see the {@link https://docs.microsoft.com/office/dev/add-ins/outlook/delegate-access | delegate access} article.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is the properties of the shared item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSharedPropertiesAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "SharedProperties",
                      "canonicalReference": "outlook!Office.SharedProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getSharedPropertiesAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#getSharedPropertiesAsync:member(2)",
                  "docComment": "/**\n * Gets the properties of an appointment or message in a shared folder.\n *\n * For more information around using this API, see the {@link https://docs.microsoft.com/office/dev/add-ins/outlook/delegate-access | delegate access} article.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @param callback - When the method completes, the function passed in the callback parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is the properties of the shared item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSharedPropertiesAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "SharedProperties",
                      "canonicalReference": "outlook!Office.SharedProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getSharedPropertiesAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#itemClass:member",
                  "docComment": "/**\n * Gets the Exchange Web Services item class of the selected item.\n *\n * You can create custom message classes that extends a default message class, for example, a custom appointment message class `IPM.Appointment.Contoso`.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * The `itemClass` property specifies the message class of the selected item. The following are the default message classes for the message or appointment item.\n *\n * <table> <tr> <th>Type</th> <th>Description</th> <th>Item Class</th> </tr> <tr> <td>Appointment items</td> <td>These are calendar items of the item class IPM.Appointment or IPM.Appointment.Occurrence.</td> <td>IPM.Appointment,IPM.Appointment.Occurrence</td> </tr> <tr> <td>Message items</td> <td>These include email messages that have the default message class IPM.Note, and meeting requests, responses, and cancellations, that use IPM.Schedule.Meeting as the base message class.</td> <td>IPM.Note,IPM.Schedule.Meeting.Request,IPM.Schedule.Meeting.Neg,IPM.Schedule.Meeting.Pos,IPM.Schedule.Meeting.Tent,IPM.Schedule.Meeting.Canceled</td> </tr> </table>\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "itemClass: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "itemClass",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#itemId:member",
                  "docComment": "/**\n * Gets the {@link https://docs.microsoft.com/exchange/client-developer/exchange-web-services/ews-identifiers-in-exchange | Exchange Web Services item identifier} for the current item.\n *\n * The `itemId` property is not available in compose mode. If an item identifier is required, the `saveAsync` method can be used to save the item to the store, which will return the item identifier in the `asyncResult.value` parameter in the callback function.\n *\n * **Note**: The identifier returned by the `itemId` property is the same as the {@link https://docs.microsoft.com/exchange/client-developer/exchange-web-services/ews-identifiers-in-exchange | Exchange Web Services item identifier}. The `itemId` property is not identical to the Outlook Entry ID or the ID used by the Outlook REST API. Before making REST API calls using this value, it should be converted using `Office.context.mailbox.convertToRestId`. For more details, see {@link https://docs.microsoft.com/office/dev/add-ins/outlook/use-rest-api#get-the-item-id | Use the Outlook REST APIs from an Outlook add-in}.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "itemId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "itemId",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#itemType:member",
                  "docComment": "/**\n * Gets the type of item that an instance represents.\n *\n * The `itemType` property returns one of the `ItemType` enumeration values, indicating whether the item object instance is a message or an appointment.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "itemType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.ItemType",
                      "canonicalReference": "outlook!Office.MailboxEnums.ItemType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "itemType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#loadCustomPropertiesAsync:member(1)",
                  "docComment": "/**\n * Asynchronously loads custom properties for this add-in on the selected item.\n *\n * Custom properties are stored as key/value pairs on a per-app, per-item basis. This method returns a `CustomProperties` object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in. Custom properties are not encrypted on the item, so this should not be used as secure storage.\n *\n * The custom properties are provided as a `CustomProperties` object in the asyncResult.value property. This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n *\n * @param userContext - Optional. Developers can provide any object they wish to access in the callback function. This object can be accessed by the `asyncResult.asyncContext` property in the callback function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "loadCustomPropertiesAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomProperties",
                      "canonicalReference": "outlook!Office.CustomProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ", userContext?: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "userContext",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "loadCustomPropertiesAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#location:member",
                  "docComment": "/**\n * Gets the location of an appointment.\n *\n * The `location` property returns a string that contains the location of the appointment.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "location: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "location",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#normalizedSubject:member",
                  "docComment": "/**\n * Gets the subject of an item, with all prefixes removed (including RE: and FWD:).\n *\n * The `normalizedSubject` property gets the subject of the item, with any standard prefixes (such as RE: and FW:) that are added by email programs. To get the subject of the item with the prefixes intact, use the `subject` property.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "normalizedSubject: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "normalizedSubject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#notificationMessages:member",
                  "docComment": "/**\n * Gets the notification messages for an item.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notificationMessages: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NotificationMessages",
                      "canonicalReference": "outlook!Office.NotificationMessages:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "notificationMessages",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#optionalAttendees:member",
                  "docComment": "/**\n * Provides access to the optional attendees of an event. The type of object and level of access depend on the mode of the current item.\n *\n * The `optionalAttendees` property returns an array that contains an {@link Office.EmailAddressDetails | EmailAddressDetails} object for each optional attendee to the meeting. Collection size limits:\n *\n * - Windows: 500 members\n *\n * - Mac: 100 members\n *\n * - Other: No limit\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "optionalAttendees: "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "optionalAttendees",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#organizer:member",
                  "docComment": "/**\n * Gets the email address of the meeting organizer for a specified meeting.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "organizer: "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "organizer",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#recurrence:member",
                  "docComment": "/**\n * Gets the recurrence pattern of an appointment. Gets the recurrence pattern of a meeting request.\n *\n * The `recurrence` property returns a {@link Office.Recurrence | Recurrence} object for recurring appointments or meetings requests if an item is a series or an instance in a series. `null` is returned for single appointments and meeting requests of single appointments.\n *\n * **Note**: Meeting requests have an `itemClass` value of `IPM.Schedule.Meeting.Request`.\n *\n * **Note**: If the recurrence object is null, this indicates that the object is a single appointment or a meeting request of a single appointment and NOT a part of a series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "recurrence: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Recurrence",
                      "canonicalReference": "outlook!Office.Recurrence:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "recurrence",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#removeHandlerAsync:member(1)",
                  "docComment": "/**\n * Removes the event handlers for a supported event type. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @param eventType - The event that should revoke the handler.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "removeHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#removeHandlerAsync:member(2)",
                  "docComment": "/**\n * Removes the event handlers for a supported event type. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n *\n * @param eventType - The event that should revoke the handler.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "removeHandlerAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#requiredAttendees:member",
                  "docComment": "/**\n * Provides access to the required attendees of an event. The type of object and level of access depend on the mode of the current item.\n *\n * The `requiredAttendees` property returns an array that contains an {@link Office.EmailAddressDetails | EmailAddressDetails} object for each required attendee to the meeting. Collection size limits:\n *\n * - Windows: 500 members\n *\n * - Mac: 100 members\n *\n * - Other: No limit\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "requiredAttendees: "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "requiredAttendees",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#seriesId:member",
                  "docComment": "/**\n * Gets the ID of the series that an instance belongs to.\n *\n * In Outlook on the web and desktop clients, the `seriesId` returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to. However, on iOS and Android, the seriesId returns the REST ID of the parent item.\n *\n * **Note**: The identifier returned by the `seriesId` property is the same as the Exchange Web Services item identifier. The `seriesId` property is not identical to the Outlook IDs used by the Outlook REST API. Before making REST API calls using this value, it should be converted using `Office.context.mailbox.convertToRestId`. For more details, see {@link https://docs.microsoft.com/office/dev/add-ins/outlook/use-rest-api | Use the Outlook REST APIs from an Outlook add-in}.\n *\n * The `seriesId` property returns `null` for items that do not have parent items such as single appointments, series items, or meeting requests and returns `undefined` for any other items that are not meeting requests.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "seriesId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "seriesId",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#start:member",
                  "docComment": "/**\n * Gets the date and time that the appointment is to begin.\n *\n * The `start` property is a `Date` object expressed as a Coordinated Universal Time (UTC) date and time value. You can use the `convertToLocalClientTime` method to convert the value to the client's local date and time.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "start: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "start",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentRead#subject:member",
                  "docComment": "/**\n * Gets the description that appears in the subject field of an item.\n *\n * The `subject` property gets or sets the entire subject of the item, as sent by the email server.\n *\n * The `subject` property returns a string. Use the `normalizedSubject` property to get the subject minus any leading prefixes such as RE: and FW:.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Attendee\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subject: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "subject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                },
                {
                  "startIndex": 3,
                  "endIndex": 5
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.AppointmentTimeChangedEventArgs:interface",
              "docComment": "/**\n * Provides the current dates and times of the appointment that raised the `Office.EventType.AppointmentTimeChanged` event.\n *\n * [Api set: Mailbox 1.7]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface AppointmentTimeChangedEventArgs "
                }
              ],
              "releaseTag": "Public",
              "name": "AppointmentTimeChangedEventArgs",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentTimeChangedEventArgs#end:member",
                  "docComment": "/**\n * Gets the appointment end date and time.\n *\n * [Api set: Mailbox 1.7]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "end: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "end",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentTimeChangedEventArgs#start:member",
                  "docComment": "/**\n * Gets the appointment start date and time.\n *\n * [Api set: Mailbox 1.7]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "start: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "start",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AppointmentTimeChangedEventArgs#type:member",
                  "docComment": "/**\n * Gets the type of the event. See `Office.EventType` for details.\n *\n * [Api set: Mailbox 1.7]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "\"olkAppointmentTimeChanged\""
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.AttachmentContent:interface",
              "docComment": "/**\n * Represents the content of an attachment on a message or appointment item.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface AttachmentContent "
                }
              ],
              "releaseTag": "Public",
              "name": "AttachmentContent",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentContent#content:member",
                  "docComment": "/**\n * The content of an attachment as a string.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "content: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "content",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentContent#format:member",
                  "docComment": "/**\n * The string format to use for an attachment's content.\n *\n * For file attachments, the formatting is a base64-encoded string.\n *\n * For item attachments that represent messages and were attached by drag-and-drop or \"Attach Item\", the formatting is a string representing an .eml formatted file. **Important**: If a message item was attached by drag-and-drop in Outlook on the web, then `getAttachmentContentAsync` throws an error.\n *\n * For item attachments that represent calendar items and were attached by drag-and-drop or \"Attach Item\", the formatting is a string representing an .icalendar file. **Important**: If a calendar item was attached by drag-and-drop in Outlook on the web, then `getAttachmentContentAsync` throws an error.\n *\n * For cloud attachments, the formatting is a URL string.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.AttachmentContentFormat",
                      "canonicalReference": "outlook!Office.MailboxEnums.AttachmentContentFormat:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.AttachmentDetails:interface",
              "docComment": "/**\n * Represents an attachment on an item from the server. Read mode only.\n *\n * An array of `AttachmentDetails` objects is returned as the attachments property of an appointment or message item.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface AttachmentDetails "
                }
              ],
              "releaseTag": "Public",
              "name": "AttachmentDetails",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentDetails#attachmentType:member",
                  "docComment": "/**\n * Gets a value that indicates the type of an attachment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "attachmentType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.AttachmentType",
                      "canonicalReference": "outlook!Office.MailboxEnums.AttachmentType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "attachmentType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentDetails#contentType:member",
                  "docComment": "/**\n * Gets the MIME content type of the attachment.\n *\n * **Important**: While the `contentType` value is a direct lookup of the attachment's extension, the internal mapping isn't actively maintained. If you require specific types, grab the attachment's extension and process accordingly.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "contentType: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "contentType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentDetails#id:member",
                  "docComment": "/**\n * Gets the Exchange attachment ID of the attachment. However, if the attachment type is `MailboxEnums.AttachmentType.Cloud`, then a URL for the file is returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentDetails#isInline:member",
                  "docComment": "/**\n * Gets a value that indicates whether the attachment should be displayed in the body of the item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "isInline: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isInline",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentDetails#name:member",
                  "docComment": "/**\n * Gets the name of the attachment.\n *\n * **Important**: For message or appointment items that were attached by drag-and-drop or \"Attach Item\", `name` includes a file extension in Outlook on Mac, but excludes the extension on the web or Windows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentDetails#size:member",
                  "docComment": "/**\n * Gets the size of the attachment in bytes.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "size: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "size",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.AttachmentDetailsCompose:interface",
              "docComment": "/**\n * Represents an attachment on an item. Compose mode only.\n *\n * An array of `AttachmentDetailsCompose` objects is returned as the attachments property of an appointment or message item.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface AttachmentDetailsCompose "
                }
              ],
              "releaseTag": "Public",
              "name": "AttachmentDetailsCompose",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentDetailsCompose#attachmentType:member",
                  "docComment": "/**\n * Gets a value that indicates the type of an attachment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "attachmentType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.AttachmentType",
                      "canonicalReference": "outlook!Office.MailboxEnums.AttachmentType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "attachmentType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentDetailsCompose#id:member",
                  "docComment": "/**\n * Gets the index of the attachment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentDetailsCompose#isInline:member",
                  "docComment": "/**\n * Gets a value that indicates whether the attachment should be displayed in the body of the item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "isInline: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isInline",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentDetailsCompose#name:member",
                  "docComment": "/**\n * Gets the name of the attachment.\n *\n * **Important**: For message or appointment items that were attached by drag-and-drop or \"Attach Item\", `name` includes a file extension in Outlook on Mac, but excludes the extension on the web or Windows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentDetailsCompose#size:member",
                  "docComment": "/**\n * Gets the size of the attachment in bytes.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "size: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "size",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentDetailsCompose#url:member",
                  "docComment": "/**\n * Gets the url of the attachment if its type is `MailboxEnums.AttachmentType.Cloud`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "url?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "url",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.AttachmentsChangedEventArgs:interface",
              "docComment": "/**\n * Provides information about the attachments that raised the `Office.EventType.AttachmentsChanged` event.\n *\n * [Api set: Mailbox 1.8]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface AttachmentsChangedEventArgs "
                }
              ],
              "releaseTag": "Public",
              "name": "AttachmentsChangedEventArgs",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentsChangedEventArgs#attachmentDetails:member",
                  "docComment": "/**\n * Represents the set of attachments that were added or removed. For each such attachment, gets `id`, `name`, `size`, and `attachmentType` properties.\n *\n * [Api set: Mailbox 1.8]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "attachmentDetails: "
                    },
                    {
                      "kind": "Content",
                      "text": "object[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "attachmentDetails",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentsChangedEventArgs#attachmentStatus:member",
                  "docComment": "/**\n * Gets whether the attachments were added or removed. See {@link Office.MailboxEnums.AttachmentStatus | MailboxEnums.AttachmentStatus} for details.\n *\n * [Api set: Mailbox 1.8]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "attachmentStatus: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.AttachmentStatus",
                      "canonicalReference": "outlook!Office.MailboxEnums.AttachmentStatus:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "attachmentStatus",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.AttachmentsChangedEventArgs#type:member",
                  "docComment": "/**\n * Gets the type of the event. See `Office.EventType` for details.\n *\n * [Api set: Mailbox 1.8]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "\"olkAttachmentsChanged\""
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Body:interface",
              "docComment": "/**\n * The body object provides methods for adding and updating the content of the message or appointment. It is returned in the body property of the selected item.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Body "
                }
              ],
              "releaseTag": "Public",
              "name": "Body",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Body#getAsync:member(1)",
                  "docComment": "/**\n * Returns the current body in a specified format.\n *\n * This method returns the entire current body in the format specified by `coercionType`.\n *\n * When working with HTML-formatted bodies, it is important to note that the `Body.getAsync` and `Body.setAsync` methods are not idempotent. The value returned from the `getAsync` method will not necessarily be exactly the same as the value that was passed in the `setAsync` method previously. The client may modify the value passed to `setAsync` in order to make it render efficiently with its rendering engine.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param coercionType - The format for the returned body.\n *\n * @param options - An object literal that contains one or more of the following properties: `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type Office.AsyncResult. The body is provided in the requested format in the `asyncResult.value` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(coercionType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.CoercionType",
                      "canonicalReference": "office!Office.CoercionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "coercionType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Body#getAsync:member(2)",
                  "docComment": "/**\n * Returns the current body in a specified format.\n *\n * This method returns the entire current body in the format specified by `coercionType`.\n *\n * When working with HTML-formatted bodies, it is important to note that the `Body.getAsync` and `Body.setAsync` methods are not idempotent. The value returned from the `getAsync` method will not necessarily be exactly the same as the value that was passed in the `setAsync` method previously. The client may modify the value passed to `setAsync` in order to make it render efficiently with its rendering engine.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param coercionType - The format for the returned body.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type Office.AsyncResult. The body is provided in the requested format in the `asyncResult.value` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(coercionType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.CoercionType",
                      "canonicalReference": "office!Office.CoercionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "coercionType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Body#getTypeAsync:member(1)",
                  "docComment": "/**\n * Gets a value that indicates whether the content is in HTML or text format.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The content type is returned as one of the `CoercionType` values in the `asyncResult.value` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTypeAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.CoercionType",
                      "canonicalReference": "office!Office.CoercionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getTypeAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Body#getTypeAsync:member(2)",
                  "docComment": "/**\n * Gets a value that indicates whether the content is in HTML or text format.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The content type is returned as one of the `CoercionType` values in the `asyncResult.value` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTypeAsync(callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.CoercionType",
                      "canonicalReference": "office!Office.CoercionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getTypeAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Body#prependAsync:member(1)",
                  "docComment": "/**\n * Adds the specified content to the beginning of the item body.\n *\n * The `prependAsync` method inserts the specified string at the beginning of the item body. After insertion, the cursor is returned to its original place, relative to the inserted content.\n *\n * When working with HTML-formatted bodies, it's important to note that the client may modify the value passed to `prependAsync` in order to make it render efficiently with its rendering engine. This means that the value returned from a subsequent call to `Body.getAsync` method will not necessarily exactly contain the value that was passed in the `prependAsync` method previously.\n *\n * When including links in HTML markup, you can disable online link preview by setting the `id` attribute on the anchor (\\<a\\>) to \"LPNoLP\" (see the **Examples** section for a sample).\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `DataExceedsMaximumSize`: The data parameter is longer than 1,000,000 characters.\n *\n * @param data - The string to be inserted at the beginning of the body. The string is limited to 1,000,000 characters.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method. `coercionType`: The desired format for the body. The string in the `data` parameter will be converted to this format.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. Any errors encountered will be provided in the `asyncResult.error` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "prependAsync(data: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & "
                    },
                    {
                      "kind": "Reference",
                      "text": "CoercionTypeOptions",
                      "canonicalReference": "outlook!Office.CoercionTypeOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "data",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "prependAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Body#prependAsync:member(2)",
                  "docComment": "/**\n * Adds the specified content to the beginning of the item body.\n *\n * The `prependAsync` method inserts the specified string at the beginning of the item body. After insertion, the cursor is returned to its original place, relative to the inserted content.\n *\n * When working with HTML-formatted bodies, it's important to note that the client may modify the value passed to `prependAsync` in order to make it render efficiently with its rendering engine. This means that the value returned from a subsequent call to `Body.getAsync` method will not necessarily exactly contain the value that was passed in the `prependAsync` method previously.\n *\n * When including links in HTML markup, you can disable online link preview by setting the `id` attribute on the anchor (\\<a\\>) to \"LPNoLP\" (see the **Examples** section for a sample).\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `DataExceedsMaximumSize`: The data parameter is longer than 1,000,000 characters.\n *\n * @param data - The string to be inserted at the beginning of the body. The string is limited to 1,000,000 characters.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. Any errors encountered will be provided in the `asyncResult.error` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "prependAsync(data: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "data",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "prependAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Body#setAsync:member(1)",
                  "docComment": "/**\n * Replaces the entire body with the specified text.\n *\n * When working with HTML-formatted bodies, it is important to note that the `Body.getAsync` and `Body.setAsync` methods are not idempotent. The value returned from the `getAsync` method will not necessarily be exactly the same as the value that was passed in the `setAsync` method previously. The client may modify the value passed to `setAsync` in order to make it render efficiently with its rendering engine.\n *\n * When including links in HTML markup, you can disable online link preview by setting the `id` attribute on the anchor (\\<a\\>) to \"LPNoLP\" (see the **Examples** section for a sample).\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `DataExceedsMaximumSize`: The data parameter is longer than 1,000,000 characters.\n *\n * - `InvalidFormatError`: The `options.coercionType` parameter is set to `Office.CoercionType.Html` and the message body is in plain text.\n *\n * @param data - The string that will replace the existing body. The string is limited to 1,000,000 characters.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method. `coercionType`: The desired format for the body. The string in the `data` parameter will be converted to this format.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type Office.AsyncResult. Any errors encountered will be provided in the `asyncResult.error` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(data: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & "
                    },
                    {
                      "kind": "Reference",
                      "text": "CoercionTypeOptions",
                      "canonicalReference": "outlook!Office.CoercionTypeOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "data",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "setAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Body#setAsync:member(2)",
                  "docComment": "/**\n * Replaces the entire body with the specified text.\n *\n * When working with HTML-formatted bodies, it is important to note that the `Body.getAsync` and `Body.setAsync` methods are not idempotent. The value returned from the `getAsync` method will not necessarily be exactly the same as the value that was passed in the `setAsync` method previously. The client may modify the value passed to `setAsync` in order to make it render efficiently with its rendering engine.\n *\n * When including links in HTML markup, you can disable online link preview by setting the `id` attribute on the anchor (\\<a\\>) to \"LPNoLP\" (see the **Examples** section for a sample).\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `DataExceedsMaximumSize`: The data parameter is longer than 1,000,000 characters.\n *\n * - `InvalidFormatError`: The `options.coercionType` parameter is set to `Office.CoercionType.Html` and the message body is in plain text.\n *\n * @param data - The string that will replace the existing body. The string is limited to 1,000,000 characters.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type Office.AsyncResult. Any errors encountered will be provided in the `asyncResult.error` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(data: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "data",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "setAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Body#setSelectedDataAsync:member(1)",
                  "docComment": "/**\n * Replaces the selection in the body with the specified text.\n *\n * The `setSelectedDataAsync` method inserts the specified string at the cursor location in the body of the item, or, if text is selected in the editor, it replaces the selected text. If the cursor was never in the body of the item, or if the body of the item lost focus in the UI, the string will be inserted at the top of the body content. After insertion, the cursor is placed at the end of the inserted content.\n *\n * When including links in HTML markup, you can disable online link preview by setting the id attribute on the anchor (\\<a\\>) to \"LPNoLP\" (see the **Examples** section for a sample).\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `DataExceedsMaximumSize`: The `data` parameter is longer than 1,000,000 characters.\n *\n * - `InvalidFormatError`: The `options.coercionType` parameter is set to `Office.CoercionType.Html` and the message body is in plain text.\n *\n * @param data - The string that will replace the existing body. The string is limited to 1,000,000 characters.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method. `coercionType`: The desired format for the body. The string in the `data` parameter will be converted to this format.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. Any errors encountered will be provided in the `asyncResult.error` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSelectedDataAsync(data: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & "
                    },
                    {
                      "kind": "Reference",
                      "text": "CoercionTypeOptions",
                      "canonicalReference": "outlook!Office.CoercionTypeOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "data",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "setSelectedDataAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Body#setSelectedDataAsync:member(2)",
                  "docComment": "/**\n * Replaces the selection in the body with the specified text.\n *\n * The `setSelectedDataAsync` method inserts the specified string at the cursor location in the body of the item, or, if text is selected in the editor, it replaces the selected text. If the cursor was never in the body of the item, or if the body of the item lost focus in the UI, the string will be inserted at the top of the body content. After insertion, the cursor is placed at the end of the inserted content.\n *\n * When including links in HTML markup, you can disable online link preview by setting the id attribute on the anchor (\\<a\\>) to \"LPNoLP\" (see the **Examples** section for a sample).\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `DataExceedsMaximumSize`: The `data` parameter is longer than 1,000,000 characters.\n *\n * - `InvalidFormatError`: The `options.coercionType` parameter is set to `Office.CoercionType.Html` and the message body is in plain text.\n *\n * @param data - The string that will replace the existing body. The string is limited to 1,000,000 characters.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. Any errors encountered will be provided in the `asyncResult.error` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSelectedDataAsync(data: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "data",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "setSelectedDataAsync"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Categories:interface",
              "docComment": "/**\n * Represents the categories on an item.\n *\n * In Outlook, a user can tag messages and appointments by using a category to color-code them. The user defines {@link Office.MasterCategories | categories in a master list} on their mailbox. They can then apply one or more categories to an item.\n *\n * **Important**: In Outlook on the web, you can't use the API to manage categories applied to a message in Compose mode.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Categories "
                }
              ],
              "releaseTag": "Public",
              "name": "Categories",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Categories#addAsync:member(1)",
                  "docComment": "/**\n * Adds categories to an item. Each category must be in the categories master list on that mailbox and so must have a unique name but multiple categories can use the same color.\n *\n * **Important**: In Outlook on the web, you can't use the API to manage categories applied to a message or appointment item in Compose mode.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * **Errors**:\n *\n * - `InvalidCategory`: Invalid categories were provided.\n *\n * @param categories - The categories to be added to the item.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addAsync(categories: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "categories",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "addAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Categories#addAsync:member(2)",
                  "docComment": "/**\n * Adds categories to an item. Each category must be in the categories master list on that mailbox and so must have a unique name but multiple categories can use the same color.\n *\n * **Important**: In Outlook on the web, you can't use the API to manage categories applied to a message or appointment item in Compose mode.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * **Errors**:\n *\n * - `InvalidCategory`: Invalid categories were provided.\n *\n * @param categories - The categories to be added to the item.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addAsync(categories: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "categories",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "addAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Categories#getAsync:member(1)",
                  "docComment": "/**\n * Gets an item's categories.\n *\n * **Important**:\n *\n * - If there are no categories on the item, `null` or an empty array will be returned depending on the Outlook version so make sure to handle both cases.\n *\n * - In Outlook on the web, you can't use the API to manage categories applied to a message in Compose mode.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If getting categories fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "CategoryDetails",
                      "canonicalReference": "outlook!Office.CategoryDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Categories#getAsync:member(2)",
                  "docComment": "/**\n * Gets an item's categories.\n *\n * **Important**:\n *\n * - If there are no categories on the item, `null` or an empty array will be returned depending on the Outlook version so make sure to handle both cases.\n *\n * - In Outlook on the web, you can't use the API to manage categories applied to a message in Compose mode.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If getting categories fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "CategoryDetails",
                      "canonicalReference": "outlook!Office.CategoryDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Categories#removeAsync:member(1)",
                  "docComment": "/**\n * Removes categories from an item.\n *\n * **Important**: In Outlook on the web, you can't use the API to manage categories applied to a message in Compose mode.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param categories - The categories to be removed from the item.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If removing categories fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAsync(categories: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "categories",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "removeAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Categories#removeAsync:member(2)",
                  "docComment": "/**\n * Removes categories from an item.\n *\n * **Important**: In Outlook on the web, you can't use the API to manage categories applied to a message in Compose mode.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param categories - The categories to be removed from the item.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If removing categories fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAsync(categories: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "categories",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "removeAsync"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.CategoryDetails:interface",
              "docComment": "/**\n * Represents a category's details like name and associated color.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CategoryDetails "
                }
              ],
              "releaseTag": "Public",
              "name": "CategoryDetails",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.CategoryDetails#color:member",
                  "docComment": "/**\n * The color of the category.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.CategoryColor",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.CategoryDetails#displayName:member",
                  "docComment": "/**\n * The name of the category. Maximum length is 255 characters.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "displayName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.CoercionTypeOptions:interface",
              "docComment": "/**\n * Provides an option for the data format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CoercionTypeOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "CoercionTypeOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.CoercionTypeOptions#coercionType:member",
                  "docComment": "/**\n * The desired data format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coercionType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.CoercionType",
                      "canonicalReference": "office!Office.CoercionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "coercionType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Contact:interface",
              "docComment": "/**\n * Represents the details about a contact (similar to what's on a physical contact or business card) extracted from the item's body. Read mode only.\n *\n * The list of contacts extracted from the body of an email message or appointment is returned in the `contacts` property of the {@link Office.Entities | Entities} object returned by the `getEntities` or `getEntitiesByType` method of the current item.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Contact "
                }
              ],
              "releaseTag": "Public",
              "name": "Contact",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Contact#addresses:member",
                  "docComment": "/**\n * An array of strings containing the mailing and street addresses associated with the contact. Nullable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addresses: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "addresses",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Contact#businessName:member",
                  "docComment": "/**\n * A string containing the name of the business associated with the contact. Nullable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "businessName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "businessName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Contact#emailAddresses:member",
                  "docComment": "/**\n * An array of strings containing the SMTP email addresses associated with the contact. Nullable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "emailAddresses: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "emailAddresses",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Contact#personName:member",
                  "docComment": "/**\n * A string containing the name of the person associated with the contact. Nullable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "personName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "personName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Contact#phoneNumbers:member",
                  "docComment": "/**\n * An array containing a `PhoneNumber` object for each phone number associated with the contact. Nullable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "phoneNumbers: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PhoneNumber",
                      "canonicalReference": "outlook!Office.PhoneNumber:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "phoneNumbers",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Contact#urls:member",
                  "docComment": "/**\n * An array of strings containing the Internet URLs associated with the contact. Nullable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "urls: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "urls",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.CustomProperties:interface",
              "docComment": "/**\n * The `CustomProperties` object represents custom properties that are specific to a particular item and specific to a mail add-in for Outlook. For example, there might be a need for a mail add-in to save some data that is specific to the current email message that activated the add-in. If the user revisits the same message in the future and activates the mail add-in again, the add-in will be able to retrieve the data that had been saved as custom properties. **Important**: The maximum length of a `CustomProperties` JSON object is 2500 characters.\n *\n * Because Outlook on Mac doesn't cache custom properties, if the user's network goes down, mail add-ins cannot access their custom properties.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CustomProperties "
                }
              ],
              "releaseTag": "Public",
              "name": "CustomProperties",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.CustomProperties#get:member(1)",
                  "docComment": "/**\n * Returns the value of the specified custom property.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param name - The name of the custom property to be returned.\n *\n * @returns The value of the specified custom property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "get"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.CustomProperties#remove:member(1)",
                  "docComment": "/**\n * Removes the specified property from the custom property collection.\n *\n * To make the removal of the property permanent, you must call the `saveAsync` method of the `CustomProperties` object.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param name - The `name` of the property to be removed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "remove(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "remove"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.CustomProperties#saveAsync:member(1)",
                  "docComment": "/**\n * Saves item-specific custom properties to the server.\n *\n * You must call the `saveAsync` method to persist any changes made with the `set` method or the `remove` method of the `CustomProperties` object. The saving action is asynchronous.\n *\n * It's a good practice to have your callback function check for and handle errors from `saveAsync`. In particular, a read add-in can be activated while the user is in a connected state in a read form, and subsequently the user becomes disconnected. If the add-in calls `saveAsync` while in the disconnected state, `saveAsync` would return an error. Your callback method should handle this error accordingly.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n *\n * @param asyncContext - Optional. Any state data that is passed to the callback method.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "saveAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ", asyncContext?: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "asyncContext",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "saveAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.CustomProperties#saveAsync:member(2)",
                  "docComment": "/**\n * Saves item-specific custom properties to the server.\n *\n * You must call the `saveAsync` method to persist any changes made with the `set` method or the `remove` method of the `CustomProperties` object. The saving action is asynchronous.\n *\n * It's a good practice to have your callback function check for and handle errors from `saveAsync`. In particular, a read add-in can be activated while the user is in a connected state in a read form, and subsequently the user becomes disconnected. If the add-in calls `saveAsync` while in the disconnected state, `saveAsync` would return an error. Your callback method should handle this error accordingly.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param asyncContext - Optional. Any state data that is passed to the callback method.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "saveAsync(asyncContext?: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "asyncContext",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "saveAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.CustomProperties#set:member(1)",
                  "docComment": "/**\n * Sets the specified property to the specified value.\n *\n * The `set` method sets the specified property to the specified value. You must use the `saveAsync` method to save the property to the server.\n *\n * The `set` method creates a new property if the specified property does not already exist; otherwise, the existing value is replaced with the new value. The `value` parameter can be of any type; however, it is always passed to the server as a string.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param name - The name of the property to be set.\n *\n * @param value - The value of the property to be set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "set(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", value: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "value",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "set"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Diagnostics:interface",
              "docComment": "/**\n * Provides diagnostic information to an Outlook add-in.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Diagnostics "
                }
              ],
              "releaseTag": "Public",
              "name": "Diagnostics",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Diagnostics#hostName:member",
                  "docComment": "/**\n * Gets a string that represents the name of the host application.\n *\n * A string that can be one of the following values: `Outlook`, `OutlookWebApp`, `OutlookIOS`, or `OutlookAndroid`.\n *\n * **Note**: The `Outlook` value is returned for Outlook on desktop clients (i.e., Windows and Mac).\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hostName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "hostName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Diagnostics#hostVersion:member",
                  "docComment": "/**\n * Gets a string that represents the version of either the host application or the Exchange Server (e.g., \"15.0.468.0\").\n *\n * If the mail add-in is running in Outlook on a desktop or mobile client, the `hostVersion` property returns the version of the host application, Outlook. In Outlook on the web, the property returns the version of the Exchange Server.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hostVersion: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "hostVersion",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Diagnostics#OWAView:member",
                  "docComment": "/**\n * Gets a string that represents the current view of Outlook on the web.\n *\n * The returned string can be one of the following values: `OneColumn`, `TwoColumns`, or `ThreeColumns`.\n *\n * If the host application is not Outlook on the web, then accessing this property results in undefined.\n *\n * Outlook on the web has three views that correspond to the width of the screen and the window, and the number of columns that can be displayed:\n *\n * - `OneColumn`, which is displayed when the screen is narrow. Outlook on the web uses this single-column layout on the entire screen of a smartphone.\n *\n * - `TwoColumns`, which is displayed when the screen is wider. Outlook on the web uses this view on most tablets.\n *\n * - `ThreeColumns`, which is displayed when the screen is wide. For example, Outlook on the web uses this view in a full screen window on a desktop computer.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "OWAView: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.OWAView",
                      "canonicalReference": "outlook!Office.MailboxEnums.OWAView:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | \"OneColumn\" | \"TwoColumns\" | \"ThreeColumns\""
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "OWAView",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.EmailAddressDetails:interface",
              "docComment": "/**\n * Provides the email properties of the sender or specified recipients of an email message or appointment.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface EmailAddressDetails "
                }
              ],
              "releaseTag": "Public",
              "name": "EmailAddressDetails",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.EmailAddressDetails#appointmentResponse:member",
                  "docComment": "/**\n * Gets the response that an attendee returned for an appointment. This property applies to only an attendee of an appointment, as represented by the `optionalAttendees` or `requiredAttendees` property. This property returns undefined in other scenarios.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "appointmentResponse: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.ResponseType",
                      "canonicalReference": "outlook!Office.MailboxEnums.ResponseType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "appointmentResponse",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.EmailAddressDetails#displayName:member",
                  "docComment": "/**\n * Gets the display name associated with an email address.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "displayName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.EmailAddressDetails#emailAddress:member",
                  "docComment": "/**\n * Gets the SMTP email address.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "emailAddress: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "emailAddress",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.EmailAddressDetails#recipientType:member",
                  "docComment": "/**\n * Gets the email address type of a recipient.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "recipientType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.RecipientType",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecipientType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "recipientType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.EmailUser:interface",
              "docComment": "/**\n * Represents an email account on an Exchange Server.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface EmailUser "
                }
              ],
              "releaseTag": "Public",
              "name": "EmailUser",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.EmailUser#displayName:member",
                  "docComment": "/**\n * Gets the display name associated with an email address.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "displayName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.EmailUser#emailAddress:member",
                  "docComment": "/**\n * Gets the SMTP email address.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "emailAddress: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "emailAddress",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.EnhancedLocation:interface",
              "docComment": "/**\n * Represents the set of locations on an appointment.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface EnhancedLocation "
                }
              ],
              "releaseTag": "Public",
              "name": "EnhancedLocation",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.EnhancedLocation#addAsync:member(1)",
                  "docComment": "/**\n * Adds to the set of locations associated with the appointment.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `InvalidFormatError`: The format of the specified data object is not valid.\n *\n * @param locationIdentifiers - The locations to be added to the current list of locations.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. Check the `status` property of `asyncResult` to determine if the call succeeded.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addAsync(locationIdentifiers: "
                    },
                    {
                      "kind": "Reference",
                      "text": "LocationIdentifier",
                      "canonicalReference": "outlook!Office.LocationIdentifier:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "locationIdentifiers",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "addAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.EnhancedLocation#addAsync:member(2)",
                  "docComment": "/**\n * Adds to the set of locations associated with the appointment.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `InvalidFormatError`: The format of the specified data object is not valid.\n *\n * @param locationIdentifiers - The locations to be added to the current list of locations.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. Check the `status` property of `asyncResult` to determine if the call succeeded.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addAsync(locationIdentifiers: "
                    },
                    {
                      "kind": "Reference",
                      "text": "LocationIdentifier",
                      "canonicalReference": "outlook!Office.LocationIdentifier:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "locationIdentifiers",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "addAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.EnhancedLocation#getAsync:member(1)",
                  "docComment": "/**\n * Gets the set of locations associated with the appointment.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "LocationDetails",
                      "canonicalReference": "outlook!Office.LocationDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.EnhancedLocation#getAsync:member(2)",
                  "docComment": "/**\n * Gets the set of locations associated with the appointment.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "LocationDetails",
                      "canonicalReference": "outlook!Office.LocationDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.EnhancedLocation#removeAsync:member(1)",
                  "docComment": "/**\n * Removes the set of locations associated with the appointment.\n *\n * If there are multiple locations with the same name, all matching locations will be removed even if only one was specified in `locationIdentifiers`.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param locationIdentifiers - The locations to be removed from the current list of locations.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. Check the `status` property of `asyncResult` to determine if the call succeeded.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAsync(locationIdentifiers: "
                    },
                    {
                      "kind": "Reference",
                      "text": "LocationIdentifier",
                      "canonicalReference": "outlook!Office.LocationIdentifier:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "locationIdentifiers",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "removeAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.EnhancedLocation#removeAsync:member(2)",
                  "docComment": "/**\n * Removes the set of locations associated with the appointment.\n *\n * If there are multiple locations with the same name, all matching locations will be removed even if only one was specified in `locationIdentifiers`.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param locationIdentifiers - The locations to be removed from the current list of locations.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. Check the `status` property of `asyncResult` to determine if the call succeeded.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAsync(locationIdentifiers: "
                    },
                    {
                      "kind": "Reference",
                      "text": "LocationIdentifier",
                      "canonicalReference": "outlook!Office.LocationIdentifier:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "locationIdentifiers",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "removeAsync"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.EnhancedLocationsChangedEventArgs:interface",
              "docComment": "/**\n * Provides the current enhanced locations when the `Office.EventType.EnhancedLocationsChanged` event is raised.\n *\n * [Api set: Mailbox 1.8]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface EnhancedLocationsChangedEventArgs "
                }
              ],
              "releaseTag": "Public",
              "name": "EnhancedLocationsChangedEventArgs",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.EnhancedLocationsChangedEventArgs#enhancedLocations:member",
                  "docComment": "/**\n * Gets the set of enhanced locations.\n *\n * [Api set: Mailbox 1.8]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enhancedLocations: "
                    },
                    {
                      "kind": "Reference",
                      "text": "LocationDetails",
                      "canonicalReference": "outlook!Office.LocationDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "enhancedLocations",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.EnhancedLocationsChangedEventArgs#type:member",
                  "docComment": "/**\n * Gets the type of the event. See `Office.EventType` for details.\n *\n * [Api set: Mailbox 1.8]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "\"olkEnhancedLocationsChanged\""
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Entities:interface",
              "docComment": "/**\n * Represents a collection of entities found in an email message or appointment. Read mode only.\n *\n * The `Entities` object is a container for the entity arrays returned by the `getEntities` and `getEntitiesByType` methods when the item (either an email message or an appointment) contains one or more entities that have been found by the server. You can use these entities in your code to provide additional context information to the viewer, such as a map to an address found in the item, or to open a dialer for a phone number found in the item.\n *\n * If no entities of the type specified in the property are present in the item, the property associated with that entity is null. For example, if a message contains a street address and a phone number, the addresses property and phoneNumbers property would contain information, and the other properties would be null.\n *\n * To be recognized as an address, the string must contain a United States postal address that has at least a subset of the elements of a street number, street name, city, state, and zip code.\n *\n * To be recognized as a phone number, the string must contain a North American phone number format.\n *\n * Entity recognition relies on natural language recognition that is based on machine learning of large amounts of data. The recognition of an entity is non-deterministic and success sometimes relies on the particular context in the item.\n *\n * When the property arrays are returned by the `getEntitiesByType` method, only the property for the specified entity contains data; all other properties are null.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Entities "
                }
              ],
              "releaseTag": "Public",
              "name": "Entities",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Entities#addresses:member",
                  "docComment": "/**\n * Gets the physical addresses (street or mailing addresses) found in an email message or appointment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addresses: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "addresses",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Entities#contacts:member",
                  "docComment": "/**\n * Gets the contacts found in an email address or appointment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "contacts: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Contact",
                      "canonicalReference": "outlook!Office.Contact:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "contacts",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Entities#emailAddresses:member",
                  "docComment": "/**\n * Gets the email addresses found in an email message or appointment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "emailAddresses: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "emailAddresses",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Entities#meetingSuggestions:member",
                  "docComment": "/**\n * Gets the meeting suggestions found in an email message.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "meetingSuggestions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MeetingSuggestion",
                      "canonicalReference": "outlook!Office.MeetingSuggestion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "meetingSuggestions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Entities#phoneNumbers:member",
                  "docComment": "/**\n * Gets the phone numbers found in an email message or appointment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "phoneNumbers: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PhoneNumber",
                      "canonicalReference": "outlook!Office.PhoneNumber:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "phoneNumbers",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Entities#taskSuggestions:member",
                  "docComment": "/**\n * Gets the task suggestions found in an email message or appointment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "taskSuggestions: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "taskSuggestions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Entities#urls:member",
                  "docComment": "/**\n * Gets the Internet URLs present in an email message or appointment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "urls: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "urls",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.From:interface",
              "docComment": "/**\n * Provides a method to get the from value of a message in an Outlook add-in.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface From "
                }
              ],
              "releaseTag": "Public",
              "name": "From",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.From#getAsync:member(1)",
                  "docComment": "/**\n * Gets the from value of a message.\n *\n * The `getAsync` method starts an asynchronous call to the Exchange server to get the from value of a message.\n *\n * The from value of the item is provided as an {@link Office.EmailAddressDetails | EmailAddressDetails} in the `asyncResult.value` property.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. The `value` property of the result is the item's from value, as an `EmailAddressDetails` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.From#getAsync:member(2)",
                  "docComment": "/**\n * Gets the from value of a message.\n *\n * The `getAsync` method starts an asynchronous call to the Exchange server to get the from value of a message.\n *\n * The from value of the item is provided as an {@link Office.EmailAddressDetails | EmailAddressDetails} in the `asyncResult.value` property.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. The `value` property of the result is the item's from value, as an `EmailAddressDetails` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAsync"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.InternetHeaders:interface",
              "docComment": "/**\n * The `InternetHeaders` object represents custom internet headers that are preserved after the message item leaves Exchange and is converted to a MIME message. These headers are stored as x-headers in the MIME message.\n *\n * Internet headers are stored as key/value pairs on a per-item basis.\n *\n * **Note**: This object is intended for you to set and get your custom headers on a message item. To learn more, see {@link https://docs.microsoft.com/office/dev/add-ins/outlook/internet-headers | Get and set internet headers on a message in an Outlook add-in}.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **Recommended practices**\n *\n * Currently, internet headers are a finite resource on a user's mailbox. When the quota is exhausted, you can't create any more internet headers on that mailbox, which can result in unexpected behavior from clients that rely on this to function.\n *\n * Apply the following guidelines when you create internet headers in your add-in.\n *\n * - Create the minimum number of headers required.\n *\n * - Name headers so that you can reuse and update their values later. As such, avoid naming headers in a variable manner (for example, based on user input, timestamp, etc.).\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface InternetHeaders "
                }
              ],
              "releaseTag": "Public",
              "name": "InternetHeaders",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.InternetHeaders#getAsync:member(1)",
                  "docComment": "/**\n * Given an array of internet header names, this method returns a dictionary containing those internet headers and their values. If the add-in requests an x-header that is not available, that x-header will not be returned in the results.\n *\n * **Note**: This method is intended to return the values of the custom headers you set using the `setAsync` method.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param names - The names of the internet headers to be returned.\n *\n * @param options - An object literal that contains one or more of the following properties: `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(names: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "InternetHeaders",
                      "canonicalReference": "outlook!Office.InternetHeaders:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "names",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.InternetHeaders#getAsync:member(2)",
                  "docComment": "/**\n * Given an array of internet header names, this method returns a dictionary containing those internet headers and their values. If the add-in requests an x-header that is not available, that x-header will not be returned in the results.\n *\n * **Note**: This method is intended to return the values of the custom headers you set using the `setAsync` method.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param names - The names of the internet headers to be returned.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(names: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "InternetHeaders",
                      "canonicalReference": "outlook!Office.InternetHeaders:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "names",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.InternetHeaders#removeAsync:member(1)",
                  "docComment": "/**\n * Given an array of internet header names, this method removes the specified headers from the internet header collection.\n *\n * **Note**: This method is intended to remove the custom headers you set using the `setAsync` method.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param names - The names of the internet headers to be removed.\n *\n * @param options - An object literal that contains one or more of the following properties: `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAsync(names: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "InternetHeaders",
                      "canonicalReference": "outlook!Office.InternetHeaders:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "names",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "removeAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.InternetHeaders#removeAsync:member(2)",
                  "docComment": "/**\n * Given an array of internet header names, this method removes the specified headers from the internet header collection.\n *\n * **Note**: This method is intended to remove the custom headers you set using the `setAsync` method.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param names - The names of the internet headers to be removed.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAsync(names: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "InternetHeaders",
                      "canonicalReference": "outlook!Office.InternetHeaders:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "names",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "removeAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.InternetHeaders#setAsync:member(1)",
                  "docComment": "/**\n * Sets the specified internet headers to the specified values.\n *\n * The `setAsync` method creates a new header if the specified header doesn't already exist; otherwise, the existing value is replaced with the new value.\n *\n * **Note**: This method is intended to set the values of your custom headers.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param headers - The names and corresponding values of the headers to be set. Should be a dictionary object with keys being the names of the internet headers and values being the values of the internet headers.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type Office.AsyncResult. Any errors encountered will be provided in the `asyncResult.error` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(headers: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Object",
                      "canonicalReference": "!Object:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "headers",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "setAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.InternetHeaders#setAsync:member(2)",
                  "docComment": "/**\n * Sets the specified internet headers to the specified values.\n *\n * The `setAsync` method creates a new header if the specified header doesn't already exist; otherwise, the existing value is replaced with the new value.\n *\n * **Note**: This method is intended to set the values of your custom headers.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param headers - The names and corresponding values of the headers to be set. Should be a dictionary object with keys being the names of the internet headers and values being the values of the internet headers.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type Office.AsyncResult. Any errors encountered will be provided in the `asyncResult.error` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(headers: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Object",
                      "canonicalReference": "!Object:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "headers",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "setAsync"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Item:interface",
              "docComment": "/**\n * The item namespace is used to access the currently selected message, meeting request, or appointment. You can determine the type of the item by using the `itemType` property.\n *\n * To see the full member list, refer to the {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/preview-requirement-set/office.context.mailbox.item | Object Model} page.\n *\n * If you want to see IntelliSense for only a specific type or mode, cast this item to one of the following:\n *\n * - {@link Office.AppointmentCompose | AppointmentCompose}\n *\n * - {@link Office.AppointmentRead | AppointmentRead}\n *\n * - {@link Office.MessageCompose | MessageCompose}\n *\n * - {@link Office.MessageRead | MessageRead}\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Appointment Organizer, Appointment Attendee, Message Compose, Message Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Item "
                }
              ],
              "releaseTag": "Public",
              "name": "Item",
              "members": [],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.ItemCompose:interface",
              "docComment": "/**\n * The compose mode of {@link Office.Item | Office.context.mailbox.item}.\n *\n * **Important**: This is an internal Outlook object, not directly exposed through existing interfaces. You should treat this as a mode of `Office.context.mailbox.item`. Refer to the {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item | Object Model} page for more information.\n *\n * Child interfaces:\n *\n * - {@link Office.AppointmentCompose | AppointmentCompose}\n *\n * - {@link Office.MessageCompose | MessageCompose}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ItemCompose extends "
                },
                {
                  "kind": "Reference",
                  "text": "Item",
                  "canonicalReference": "outlook!Office.Item:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "ItemCompose",
              "members": [],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 3
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.ItemRead:interface",
              "docComment": "/**\n * The read mode of {@link Office.Item | Office.context.mailbox.item}.\n *\n * **Important**: This is an internal Outlook object, not directly exposed through existing interfaces. You should treat this as a mode of `Office.context.mailbox.item`. Refer to the {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item | Object Model} page for more information.\n *\n * Child interfaces:\n *\n * - {@link Office.AppointmentRead | AppointmentRead}\n *\n * - {@link Office.MessageRead | MessageRead}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ItemRead extends "
                },
                {
                  "kind": "Reference",
                  "text": "Item",
                  "canonicalReference": "outlook!Office.Item:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "ItemRead",
              "members": [],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 3
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.LocalClientTime:interface",
              "docComment": "/**\n * Represents a date and time in the local client's time zone. Read mode only.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface LocalClientTime "
                }
              ],
              "releaseTag": "Public",
              "name": "LocalClientTime",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.LocalClientTime#date:member",
                  "docComment": "/**\n * Integer value representing the day of the month.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "date: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "date",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.LocalClientTime#hours:member",
                  "docComment": "/**\n * Integer value representing the hour on a 24-hour clock.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hours: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "hours",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.LocalClientTime#milliseconds:member",
                  "docComment": "/**\n * Integer value representing the milliseconds.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "milliseconds: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "milliseconds",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.LocalClientTime#minutes:member",
                  "docComment": "/**\n * Integer value representing the minutes.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minutes: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "minutes",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.LocalClientTime#month:member",
                  "docComment": "/**\n * Integer value representing the month, beginning with 0 for January to 11 for December.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "month: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "month",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.LocalClientTime#seconds:member",
                  "docComment": "/**\n * Integer value representing the seconds.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "seconds: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "seconds",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.LocalClientTime#timezoneOffset:member",
                  "docComment": "/**\n * Integer value representing the number of minutes difference between the local time zone and UTC.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "timezoneOffset: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "timezoneOffset",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.LocalClientTime#year:member",
                  "docComment": "/**\n * Integer value representing the year.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "year: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "year",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Location:interface",
              "docComment": "/**\n * Provides methods to get and set the location of a meeting in an Outlook add-in.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Location "
                }
              ],
              "releaseTag": "Public",
              "name": "Location",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Location#getAsync:member(1)",
                  "docComment": "/**\n * Gets the location of an appointment.\n *\n * The `getAsync` method starts an asynchronous call to the Exchange server to get the location of an appointment. The location of the appointment is provided as a string in the `asyncResult.value` property.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Location#getAsync:member(2)",
                  "docComment": "/**\n * Gets the location of an appointment.\n *\n * The `getAsync` method starts an asynchronous call to the Exchange server to get the location of an appointment. The location of the appointment is provided as a string in the `asyncResult.value` property.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Location#setAsync:member(1)",
                  "docComment": "/**\n * Sets the location of an appointment.\n *\n * The `setAsync` method starts an asynchronous call to the Exchange server to set the location of an appointment. Setting the location of an appointment overwrites the current location.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - DataExceedsMaximumSize: The location parameter is longer than 255 characters.\n *\n * @param location - The location of the appointment. The string is limited to 255 characters.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If setting the location fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(location: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "location",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "setAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Location#setAsync:member(2)",
                  "docComment": "/**\n * Sets the location of an appointment.\n *\n * The `setAsync` method starts an asynchronous call to the Exchange server to set the location of an appointment. Setting the location of an appointment overwrites the current location.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - DataExceedsMaximumSize: The location parameter is longer than 255 characters.\n *\n * @param location - The location of the appointment. The string is limited to 255 characters.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If setting the location fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(location: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "location",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "setAsync"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.LocationDetails:interface",
              "docComment": "/**\n * Represents a location. Read only.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface LocationDetails "
                }
              ],
              "releaseTag": "Public",
              "name": "LocationDetails",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.LocationDetails#displayName:member",
                  "docComment": "/**\n * The location's display name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "displayName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.LocationDetails#emailAddress:member",
                  "docComment": "/**\n * The email address associated with the location.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "emailAddress: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "emailAddress",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.LocationDetails#locationIdentifier:member",
                  "docComment": "/**\n * The `LocationIdentifier` of the location.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "locationIdentifier: "
                    },
                    {
                      "kind": "Reference",
                      "text": "LocationIdentifier",
                      "canonicalReference": "outlook!Office.LocationIdentifier:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "locationIdentifier",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.LocationIdentifier:interface",
              "docComment": "/**\n * Represents the ID of a location.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface LocationIdentifier "
                }
              ],
              "releaseTag": "Public",
              "name": "LocationIdentifier",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.LocationIdentifier#id:member",
                  "docComment": "/**\n * The location's unique ID.\n *\n * For `Room` type, it's the room's email address.\n *\n * For `Custom` type, it's the `displayName`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.LocationIdentifier#type:member",
                  "docComment": "/**\n * The location's type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.LocationType",
                      "canonicalReference": "outlook!Office.MailboxEnums.LocationType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Mailbox:interface",
              "docComment": "/**\n * Provides access to the Microsoft Outlook add-in object model.\n *\n * Key properties:\n *\n * - `diagnostics`: Provides diagnostic information to an Outlook add-in.\n *\n * - `item`: Provides methods and properties for accessing a message or appointment in an Outlook add-in.\n *\n * - `userProfile`: Provides information about the user in an Outlook add-in.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Mailbox "
                }
              ],
              "releaseTag": "Public",
              "name": "Mailbox",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#addHandlerAsync:member(1)",
                  "docComment": "/**\n * Adds an event handler for a supported event. **Note**: Events are available only with task pane.\n *\n * Refer to the Mailbox object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.5]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param eventType - The event that should invoke the handler.\n *\n * @param handler - The function to handle the event. The function must accept a single parameter, which is an object literal. The type property on the parameter will match the `eventType` parameter passed to `addHandlerAsync`.\n *\n * @param options - Provides an option for preserving context data of any type, unchanged, for use in a callback.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", handler: "
                    },
                    {
                      "kind": "Content",
                      "text": "(type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ") => void"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 15
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "handler",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 9
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 10,
                        "endIndex": 13
                      }
                    }
                  ],
                  "name": "addHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#addHandlerAsync:member(2)",
                  "docComment": "/**\n * Adds an event handler for a supported event. **Note**: Events are available only with task pane.\n *\n * Refer to the Mailbox object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.5]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param eventType - The event that should invoke the handler.\n *\n * @param handler - The function to handle the event. The function must accept a single parameter, which is an object literal. The type property on the parameter will match the `eventType` parameter passed to `addHandlerAsync`.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", handler: "
                    },
                    {
                      "kind": "Content",
                      "text": "(type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ") => void"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "handler",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "addHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#convertToEwsId:member(1)",
                  "docComment": "/**\n * Converts an item ID formatted for REST into EWS format.\n *\n * Item IDs retrieved via a REST API (such as the Outlook Mail API or the Microsoft Graph) use a different format than the format used by Exchange Web Services (EWS). The `convertToEwsId` method converts a REST-formatted ID into the proper format for EWS.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param itemId - An item ID formatted for the Outlook REST APIs.\n *\n * @param restVersion - A value indicating the version of the Outlook REST API used to retrieve the item ID.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertToEwsId(itemId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", restVersion: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.RestVersion",
                      "canonicalReference": "outlook!Office.MailboxEnums.RestVersion:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "itemId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "restVersion",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "convertToEwsId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#convertToLocalClientTime:member(1)",
                  "docComment": "/**\n * Gets a dictionary containing time information in local client time.\n *\n * The dates and times used by a mail app for Outlook on the web or desktop clients can use different time zones. Outlook uses the client computer time zone; Outlook on the web uses the time zone set on the Exchange Admin Center (EAC). You should handle date and time values so that the values you display on the user interface are always consistent with the time zone that the user expects.\n *\n * If the mail app is running in Outlook on desktop clients, the `convertToLocalClientTime` method will return a dictionary object with the values set to the client computer time zone. If the mail app is running in Outlook on the web, the `convertToLocalClientTime` method will return a dictionary object with the values set to the time zone specified in the EAC.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param timeValue - A `Date` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertToLocalClientTime(timeValue: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "LocalClientTime",
                      "canonicalReference": "outlook!Office.LocalClientTime:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "timeValue",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "convertToLocalClientTime"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#convertToRestId:member(1)",
                  "docComment": "/**\n * Converts an item ID formatted for EWS into REST format.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * Item IDs retrieved via EWS or via the `itemId` property use a different format than the format used by REST APIs (such as the {@link https://docs.microsoft.com/previous-versions/office/office-365-api/api/version-2.0/mail-rest-operations | Outlook Mail API} or the {@link https://graph.microsoft.io/ | Microsoft Graph}. The `convertToRestId` method converts an EWS-formatted ID into the proper format for REST.\n *\n * @param itemId - An item ID formatted for Exchange Web Services (EWS)\n *\n * @param restVersion - A value indicating the version of the Outlook REST API that the converted ID will be used with.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertToRestId(itemId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", restVersion: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.RestVersion",
                      "canonicalReference": "outlook!Office.MailboxEnums.RestVersion:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "itemId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "restVersion",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "convertToRestId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#convertToUtcClientTime:member(1)",
                  "docComment": "/**\n * Gets a `Date` object from a dictionary containing time information.\n *\n * The `convertToUtcClientTime` method converts a dictionary containing a local date and time to a `Date` object with the correct values for the local date and time.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param input - The local time value to convert.\n *\n * @returns A Date object with the time expressed in UTC.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertToUtcClientTime(input: "
                    },
                    {
                      "kind": "Reference",
                      "text": "LocalClientTime",
                      "canonicalReference": "outlook!Office.LocalClientTime:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "input",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "convertToUtcClientTime"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Mailbox#diagnostics:member",
                  "docComment": "/**\n * Provides diagnostic information to an Outlook add-in.\n *\n * Contains the following members:\n *\n * - `hostName` (string): A string that represents the name of the host application. It should be one of the following values: `Outlook`, `OutlookWebApp`, `OutlookIOS`, or `OutlookAndroid`. **Note**: The \"Outlook\" value is returned for Outlook on desktop clients (i.e., Windows and Mac).\n *\n * - `hostVersion` (string): A string that represents the version of either the host application or the Exchange Server (e.g., \"15.0.468.0\"). If the mail add-in is running in Outlook on desktop or mobile clients, the `hostVersion` property returns the version of the host application, Outlook. In Outlook on the web, the property returns the version of the Exchange Server.\n *\n * - `OWAView` (`MailboxEnums.OWAView` or string): An enum (or string literal) that represents the current view of Outlook on the web. If the host application is not Outlook on the web, then accessing this property results in undefined. Outlook on the web has three views (`OneColumn` - displayed when the screen is narrow, `TwoColumns` - displayed when the screen is wider, and `ThreeColumns` - displayed when the screen is wide) that correspond to the width of the screen and the window, and the number of columns that can be displayed.\n *\n * More information is under {@link Office.Diagnostics}.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diagnostics: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Diagnostics",
                      "canonicalReference": "outlook!Office.Diagnostics:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "diagnostics",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#displayAppointmentForm:member(1)",
                  "docComment": "/**\n * Displays an existing calendar appointment.\n *\n * The `displayAppointmentForm` method opens an existing calendar appointment in a new window on the desktop or in a dialog box on mobile devices.\n *\n * In Outlook on Mac, you can use this method to display a single appointment that is not part of a recurring series, or the master appointment of a recurring series. However, you can't display an instance of the series because you can't access the properties (including the item ID) of instances of a recurring series.\n *\n * In Outlook on the web, this method opens the specified form only if the body of the form is less than or equal to 32K characters.\n *\n * If the specified item identifier does not identify an existing appointment, a blank pane opens on the client computer or device, and no error message is returned.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param itemId - The Exchange Web Services (EWS) identifier for an existing calendar appointment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayAppointmentForm(itemId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "itemId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "displayAppointmentForm"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#displayMessageForm:member(1)",
                  "docComment": "/**\n * Displays an existing message.\n *\n * The `displayMessageForm` method opens an existing message in a new window on the desktop or in a dialog box on mobile devices.\n *\n * In Outlook on the web, this method opens the specified form only if the body of the form is less than or equal to 32K characters.\n *\n * If the specified item identifier does not identify an existing message, no message will be displayed on the client computer, and no error message is returned.\n *\n * Do not use the `displayMessageForm` with an itemId that represents an appointment. Use the `displayAppointmentForm` method to display an existing appointment, and `displayNewAppointmentForm` to display a form to create a new appointment.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param itemId - The Exchange Web Services (EWS) identifier for an existing message.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayMessageForm(itemId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "itemId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "displayMessageForm"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#displayNewAppointmentForm:member(1)",
                  "docComment": "/**\n * Displays a form for creating a new calendar appointment.\n *\n * The `displayNewAppointmentForm` method opens a form that enables the user to create a new appointment or meeting. If parameters are specified, the appointment form fields are automatically populated with the contents of the parameters.\n *\n * In Outlook on the web, this method always displays a form with an attendees field. If you do not specify any attendees as input arguments, the method displays a form with a **Save** button. If you have specified attendees, the form would include the attendees and a **Send** button.\n *\n * In the Outlook rich client and Outlook RT, if you specify any attendees or resources in the `requiredAttendees`, `optionalAttendees`, or `resources` parameter, this method displays a meeting form with a **Send** button. If you don't specify any recipients, this method displays an appointment form with a **Save & Close** button.\n *\n * If any of the parameters exceed the specified size limits, or if an unknown parameter name is specified, an exception is thrown.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Read\n *\n * @param parameters - An `AppointmentForm` describing the new appointment. All properties are optional.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayNewAppointmentForm(parameters: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AppointmentForm",
                      "canonicalReference": "outlook!Office.AppointmentForm:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "parameters",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "displayNewAppointmentForm"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#displayNewMessageForm:member(1)",
                  "docComment": "/**\n * Displays a form for creating a new message.\n *\n * The `displayNewMessageForm` method opens a form that enables the user to create a new message. If parameters are specified, the message form fields are automatically populated with the contents of the parameters.\n *\n * If any of the parameters exceed the specified size limits, or if an unknown parameter name is specified, an exception is thrown.\n *\n * [Api set: Mailbox 1.6]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Read\n *\n * @param parameters - A dictionary containing all values to be filled in for the user in the new form. All parameters are optional.\n *\n * `toRecipients`: An array of strings containing the email addresses or an array containing an {@link Office.EmailAddressDetails | EmailAddressDetails} object for each of the recipients on the **To** line. The array is limited to a maximum of 100 entries.\n *\n * `ccRecipients`: An array of strings containing the email addresses or an array containing an {@link Office.EmailAddressDetails | EmailAddressDetails} object for each of the recipients on the **Cc** line. The array is limited to a maximum of 100 entries.\n *\n * `bccRecipients`: An array of strings containing the email addresses or an array containing an {@link Office.EmailAddressDetails | EmailAddressDetails} object for each of the recipients on the **Bcc** line. The array is limited to a maximum of 100 entries.\n *\n * `subject`: A string containing the subject of the message. The string is limited to a maximum of 255 characters.\n *\n * `htmlBody`: The HTML body of the message. The body content is limited to a maximum size of 32 KB.\n *\n * `attachments`: An array of JSON objects that are either file or item attachments.\n *\n * `attachments.type`: Indicates the type of attachment. Must be file for a file attachment or item for an item attachment.\n *\n * `attachments.name`: A string that contains the name of the attachment, up to 255 characters in length.\n *\n * `attachments.url`: Only used if type is set to file. The URI of the location for the file.\n *\n * `attachments.isInline`: Only used if type is set to file. If true, indicates that the attachment will be shown inline in the message body, and should not be displayed in the attachment list.\n *\n * `attachments.itemId`: Only used if type is set to item. The EWS item id of the existing e-mail you want to attach to the new message. This is a string up to 100 characters.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayNewMessageForm(parameters: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "parameters",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "displayNewMessageForm"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Mailbox#ewsUrl:member",
                  "docComment": "/**\n * Gets the URL of the Exchange Web Services (EWS) endpoint for this email account. Read mode only.\n *\n * Your app must have the `ReadItem` permission specified in its manifest to call the `ewsUrl` member in read mode.\n *\n * In compose mode you must call the `saveAsync` method before you can use the `ewsUrl` member. Your app must have `ReadWriteItem` permissions to call the `saveAsync` method.\n *\n * **Note**: This member is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * The `ewsUrl` value can be used by a remote service to make EWS calls to the user's mailbox. For example, you can create a remote service to {@link https://docs.microsoft.com/office/dev/add-ins/outlook/get-attachments-of-an-outlook-item | get attachments from the selected item}.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ewsUrl: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "ewsUrl",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#getCallbackTokenAsync:member(1)",
                  "docComment": "/**\n * Gets a string that contains a token used to call REST APIs or Exchange Web Services (EWS).\n *\n * The `getCallbackTokenAsync` method makes an asynchronous call to get an opaque token from the Exchange Server that hosts the user's mailbox. The lifetime of the callback token is 5 minutes.\n *\n * The token is returned as a string in the `asyncResult.value` property.\n *\n * Calling the `getCallbackTokenAsync` method in read mode requires a minimum permission level of `ReadItem`.\n *\n * Calling the `getCallbackTokenAsync` method in compose mode requires you to have saved the item. The `saveAsync` method requires a minimum permission level of `ReadWriteItem`.\n *\n * **Important**: For guidance on delegate or shared scenarios, see the {@link https://docs.microsoft.com/office/dev/add-ins/outlook/delegate-access | delegate access} article.\n *\n * *REST Tokens*\n *\n * When a REST token is requested (`options.isRest` = `true`), the resulting token will not work to authenticate EWS calls. The token will be limited in scope to read-only access to the current item and its attachments, unless the add-in has specified the `ReadWriteMailbox` permission in its manifest. If the `ReadWriteMailbox` permission is specified, the resulting token will grant read/write access to mail, calendar, and contacts, including the ability to send mail.\n *\n * The add-in should use the `restUrl` property to determine the correct URL to use when making REST API calls.\n *\n * This API works for the following scopes:\n *\n * - `Mail.ReadWrite`\n *\n * - `Mail.Send`\n *\n * - `Calendars.ReadWrite`\n *\n * - `Contacts.ReadWrite`\n *\n * *EWS Tokens*\n *\n * When an EWS token is requested (`options.isRest` = `false`), the resulting token will not work to authenticate REST API calls. The token will be limited in scope to accessing the current item.\n *\n * The add-in should use the `ewsUrl` property to determine the correct URL to use when making EWS calls.\n *\n * You can pass both the token and either an attachment identifier or item identifier to a third-party system. The third-party system uses the token as a bearer authorization token to call the Exchange Web Services (EWS) {@link https://docs.microsoft.com/exchange/client-developer/web-service-reference/getattachment-operation | GetAttachment} operation or {@link https://docs.microsoft.com/exchange/client-developer/web-service-reference/getitem-operation | GetItem} operation to return an attachment or item. For example, you can create a remote service to {@link https://docs.microsoft.com/office/dev/add-ins/outlook/get-attachments-of-an-outlook-item | get attachments from the selected item}.\n *\n * **Note**: It is recommended that add-ins use the REST APIs instead of Exchange Web Services whenever possible.\n *\n * [Api set: Mailbox 1.5]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * **Errors**:\n *\n * - `HTTPRequestFailure`: The request has failed. Please look at the diagnostics object for the HTTP error code.\n *\n * - `InternalServerError`: The Exchange server returned an error. Please look at the diagnostics object for more information.\n *\n * - `NetworkError`: The user is no longer connected to the network. Please check your network connection and try again.\n *\n * @param options - An object literal that contains one or more of the following properties. `isRest`: Determines if the token provided will be used for the Outlook REST APIs or Exchange Web Services. Default value is `false`. `asyncContext`: Any state data that is passed to the asynchronous method.\n *\n * @param callback - When the method completes, the function passed in the callback parameter is called with a single parameter of type `Office.AsyncResult`. The token is returned as a string in the `asyncResult.value` property. If there was an error, the `asyncResult.error` and `asyncResult.diagnostics` properties may provide additional information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCallbackTokenAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & { isRest?: boolean }"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "getCallbackTokenAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#getCallbackTokenAsync:member(2)",
                  "docComment": "/**\n * Gets a string that contains a token used to get an attachment or item from an Exchange Server.\n *\n * The `getCallbackTokenAsync` method makes an asynchronous call to get an opaque token from the Exchange Server that hosts the user's mailbox. The lifetime of the callback token is 5 minutes.\n *\n * The token is returned as a string in the `asyncResult.value` property.\n *\n * You can pass both the token and either an attachment identifier or item identifier to a third-party system. The third-party system uses the token as a bearer authorization token to call the Exchange Web Services (EWS) {@link https://docs.microsoft.com/exchange/client-developer/web-service-reference/getattachment-operation | GetAttachment} operation or {@link https://docs.microsoft.com/exchange/client-developer/web-service-reference/getitem-operation | GetItem} operation to return an attachment or item. For example, you can create a remote service to {@link https://docs.microsoft.com/office/dev/add-ins/outlook/get-attachments-of-an-outlook-item | get attachments from the selected item}.\n *\n * Calling the `getCallbackTokenAsync` method in read mode requires a minimum permission level of `ReadItem`.\n *\n * Calling the `getCallbackTokenAsync` method in compose mode requires you to have saved the item. The `saveAsync` method requires a minimum permission level of `ReadWriteItem`.\n *\n * **Important**: For guidance on delegate or shared scenarios, see the {@link https://docs.microsoft.com/office/dev/add-ins/outlook/delegate-access | delegate access} article.\n *\n * [Api set: All support Read mode; Mailbox 1.3 introduced Compose mode support]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * **Errors**:\n *\n * - `HTTPRequestFailure`: The request has failed. Please look at the diagnostics object for the HTTP error code.\n *\n * - `InternalServerError`: The Exchange server returned an error. Please look at the diagnostics object for more information.\n *\n * - `NetworkError`: The user is no longer connected to the network. Please check your network connection and try again.\n *\n * @param callback - When the method completes, the function passed in the callback parameter is called with a single parameter of type `Office.AsyncResult`. The token is returned as a string in the `asyncResult.value` property. If there was an error, the `asyncResult.error` and `asyncResult.diagnostics` properties may provide additional information.\n *\n * @param userContext - Optional. Any state data that is passed to the asynchronous method.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCallbackTokenAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ", userContext?: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "userContext",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getCallbackTokenAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#getUserIdentityTokenAsync:member(1)",
                  "docComment": "/**\n * Gets a token identifying the user and the Office Add-in.\n *\n * The token is returned as a string in the `asyncResult.value` property.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * The `getUserIdentityTokenAsync` method returns a token that you can use to identify and {@link https://docs.microsoft.com/office/dev/add-ins/outlook/authentication | authenticate the add-in and user with a third-party system}.\n *\n * **Errors**:\n *\n * - `HTTPRequestFailure`: The request has failed. Please look at the diagnostics object for the HTTP error code.\n *\n * - `InternalServerError`: The Exchange server returned an error. Please look at the diagnostics object for more information.\n *\n * - `NetworkError`: The user is no longer connected to the network. Please check your network connection and try again.\n *\n * @param callback - When the method completes, the function passed in the callback parameter is called with a single parameter of type `Office.AsyncResult`. The token is returned as a string in the `asyncResult.value` property. If there was an error, the `asyncResult.error` and `asyncResult.diagnostics` properties may provide additional information.\n *\n * @param userContext - Optional. Any state data that is passed to the asynchronous method.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUserIdentityTokenAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ", userContext?: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "userContext",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getUserIdentityTokenAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Mailbox#item:member",
                  "docComment": "/**\n * The mailbox item. Depending on the context in which the add-in opened, the item type may vary. If you want to see IntelliSense for only a specific type or mode, cast this item to one of the following:\n *\n * {@link Office.MessageCompose | MessageCompose}, {@link Office.MessageRead | MessageRead}, {@link Office.AppointmentCompose | AppointmentCompose}, {@link Office.AppointmentRead | AppointmentRead}\n *\n * **Important**: `item` can be null if your add-in supports pinning the task pane. For details on how to handle, see {@link https://docs.microsoft.com/office/dev/add-ins/outlook/pinnable-taskpane#implement-the-event-handler | Implement a pinnable task pane in Outlook}.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "item?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Item",
                      "canonicalReference": "outlook!Office.Item:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & "
                    },
                    {
                      "kind": "Reference",
                      "text": "ItemCompose",
                      "canonicalReference": "outlook!Office.ItemCompose:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & "
                    },
                    {
                      "kind": "Reference",
                      "text": "ItemRead",
                      "canonicalReference": "outlook!Office.ItemRead:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & "
                    },
                    {
                      "kind": "Reference",
                      "text": "Message",
                      "canonicalReference": "outlook!Office.Message:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & "
                    },
                    {
                      "kind": "Reference",
                      "text": "MessageCompose",
                      "canonicalReference": "outlook!Office.MessageCompose:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & "
                    },
                    {
                      "kind": "Reference",
                      "text": "MessageRead",
                      "canonicalReference": "outlook!Office.MessageRead:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & "
                    },
                    {
                      "kind": "Reference",
                      "text": "Appointment",
                      "canonicalReference": "outlook!Office.Appointment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & "
                    },
                    {
                      "kind": "Reference",
                      "text": "AppointmentCompose",
                      "canonicalReference": "outlook!Office.AppointmentCompose:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & "
                    },
                    {
                      "kind": "Reference",
                      "text": "AppointmentRead",
                      "canonicalReference": "outlook!Office.AppointmentRead:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "item",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 18
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#makeEwsRequestAsync:member(1)",
                  "docComment": "/**\n * Makes an asynchronous request to an Exchange Web Services (EWS) service on the Exchange server that hosts the user's mailbox.\n *\n * In these cases, add-ins should use REST APIs to access the user's mailbox instead.\n *\n * The `makeEwsRequestAsync` method sends an EWS request on behalf of the add-in to Exchange.\n *\n * You cannot request Folder Associated Items with the `makeEwsRequestAsync` method.\n *\n * The XML request must specify UTF-8 encoding: `\\<?xml version=\"1.0\" encoding=\"utf-8\"?\\>`.\n *\n * Your add-in must have the `ReadWriteMailbox` permission to use the `makeEwsRequestAsync` method. For information about using the `ReadWriteMailbox` permission and the EWS operations that you can call with the `makeEwsRequestAsync` method, see {@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Specify permissions for mail add-in access to the user's mailbox}.\n *\n * The XML result of the EWS call is provided as a string in the `asyncResult.value` property. If the result exceeds 1 MB in size, an error message is returned instead.\n *\n * **Note**: This method is not supported in the following scenarios:\n *\n * - In Outlook on iOS or Android.\n *\n * - When the add-in is loaded in a Gmail mailbox.\n *\n * **Note**: The server administrator must set `OAuthAuthentication` to `true` on the Client Access Server EWS directory to enable the `makeEwsRequestAsync` method to make EWS requests.\n *\n * *Version differences*\n *\n * When you use the `makeEwsRequestAsync` method in mail apps running in Outlook versions earlier than version 15.0.4535.1004, you should set the encoding value to ISO-8859-1.\n *\n * `<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>`\n *\n * You do not need to set the encoding value when your mail app is running in Outlook on the web. You can determine whether your mail app is running in Outlook or Outlook on the web by using the `mailbox.diagnostics.hostName` property. You can determine what version of Outlook is running by using the `mailbox.diagnostics.hostVersion` property.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteMailbox`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param data - The EWS request.\n *\n * @param callback - When the method completes, the function passed in the callback parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is the XML of the EWS request provided as a string. If the result exceeds 1 MB in size, an error message is returned instead.\n *\n * @param userContext - Optional. Any state data that is passed to the asynchronous method.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "makeEwsRequestAsync(data: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ", userContext?: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "data",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "userContext",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "makeEwsRequestAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Mailbox#masterCategories:member",
                  "docComment": "/**\n * Gets an object that provides methods to manage the categories master list associated with a mailbox.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteMailbox`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "masterCategories: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MasterCategories",
                      "canonicalReference": "outlook!Office.MasterCategories:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "masterCategories",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#removeHandlerAsync:member(1)",
                  "docComment": "/**\n * Removes the event handlers for a supported event type. **Note**: Events are available only with task pane.\n *\n * Refer to the Mailbox object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.5]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param eventType - The event that should revoke the handler.\n *\n * @param options - Provides an option for preserving context data of any type, unchanged, for use in a callback.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "removeHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Mailbox#removeHandlerAsync:member(2)",
                  "docComment": "/**\n * Removes the event handlers for a supported event type. **Note**: Events are available only with task pane.\n *\n * Refer to the Mailbox object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.5]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param eventType - The event that should revoke the handler.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "removeHandlerAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Mailbox#restUrl:member",
                  "docComment": "/**\n * Gets the URL of the REST endpoint for this email account.\n *\n * Your app must have the `ReadItem` permission specified in its manifest to call the `restUrl` member in read mode.\n *\n * In compose mode you must call the `saveAsync` method before you can use the `restUrl` member. Your app must have `ReadWriteItem` permissions to call the `saveAsync` method.\n *\n * However, in delegate or shared scenarios, you should instead use the `targetRestUrl` property of the `SharedProperties` object (introduced in requirement set 1.8). For more information, see the {@link https://docs.microsoft.com/office/dev/add-ins/outlook/delegate-access | delegate access} article.\n *\n * [Api set: Mailbox 1.5]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * The `restUrl` value can be used to make {@link https://docs.microsoft.com/outlook/rest/ | REST API} calls to the user's mailbox.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "restUrl: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "restUrl",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Mailbox#userProfile:member",
                  "docComment": "/**\n * Information about the user associated with the mailbox. This includes their account type, display name, email address, and time zone.\n *\n * More information is under {@link Office.UserProfile}\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "userProfile: "
                    },
                    {
                      "kind": "Reference",
                      "text": "UserProfile",
                      "canonicalReference": "outlook!Office.UserProfile:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "userProfile",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Namespace",
              "canonicalReference": "outlook!Office.MailboxEnums:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export namespace MailboxEnums "
                }
              ],
              "releaseTag": "Public",
              "name": "MailboxEnums",
              "members": [
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.AttachmentContentFormat:enum",
                  "docComment": "/**\n * Specifies the formatting that applies to an attachment's content.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum AttachmentContentFormat "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "AttachmentContentFormat",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.AttachmentContentFormat.Base64:member",
                      "docComment": "/**\n * The content of the attachment is returned as a base64-encoded string.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Base64 = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"base64\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Base64",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.AttachmentContentFormat.Eml:member",
                      "docComment": "/**\n * The content of the attachment is returned as a string representing an .eml formatted file.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Eml = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"eml\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Eml",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.AttachmentContentFormat.ICalendar:member",
                      "docComment": "/**\n * The content of the attachment is returned as a string representing an .icalendar formatted file.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "ICalendar = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"iCalendar\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "ICalendar",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.AttachmentContentFormat.Url:member",
                      "docComment": "/**\n * The content of the attachment is returned as a string representing a URL.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Url = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"url\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Url",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.AttachmentStatus:enum",
                  "docComment": "/**\n * Specifies whether an attachment was added to or removed from an item.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum AttachmentStatus "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "AttachmentStatus",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.AttachmentStatus.Added:member",
                      "docComment": "/**\n * An attachment was added to the item.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Added = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"added\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Added",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.AttachmentStatus.Removed:member",
                      "docComment": "/**\n * An attachment was removed from the item.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Removed = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"removed\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Removed",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.AttachmentType:enum",
                  "docComment": "/**\n * Specifies an attachment's type.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum AttachmentType "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "AttachmentType",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.AttachmentType.Cloud:member",
                      "docComment": "/**\n * The attachment is stored in a cloud location, such as OneDrive.\n *\n * **Important**: In Read mode, the `id` property of the attachment's {@link Office.AttachmentDetails | details} object contains a URL to the file. From requirement set 1.8, the `url` property included in the attachment's {@link https://docs.microsoft.com/javascript/api/outlook/office.attachmentdetailscompose?view=outlook-js-1.8 | details} object contains a URL to the file in Compose mode.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Cloud = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"cloud\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Cloud",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.AttachmentType.File:member",
                      "docComment": "/**\n * The attachment is a file.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "File = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"file\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "File",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.AttachmentType.Item:member",
                      "docComment": "/**\n * The attachment is an Exchange item.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Item = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"item\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Item",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor:enum",
                  "docComment": "/**\n * Specifies the category color.\n *\n * **Note**: The actual color depends on how the Outlook client renders it. In this case, the colors noted on each preset are for the Outlook desktop client.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum CategoryColor "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "CategoryColor",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.None:member",
                      "docComment": "/**\n * Default color or no color mapped.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "None"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "None",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset0:member",
                      "docComment": "/**\n * Red\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset0"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset0",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset1:member",
                      "docComment": "/**\n * Orange\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset1"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset1",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset10:member",
                      "docComment": "/**\n * Steel\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset10"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset10",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset11:member",
                      "docComment": "/**\n * DarkSteel\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset11"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset11",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset12:member",
                      "docComment": "/**\n * Gray\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset12"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset12",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset13:member",
                      "docComment": "/**\n * DarkGray\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset13"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset13",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset14:member",
                      "docComment": "/**\n * Black\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset14"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset14",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset15:member",
                      "docComment": "/**\n * DarkRed\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset15"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset15",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset16:member",
                      "docComment": "/**\n * DarkOrange\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset16"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset16",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset17:member",
                      "docComment": "/**\n * DarkBrown\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset17"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset17",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset18:member",
                      "docComment": "/**\n * DarkYellow\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset18"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset18",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset19:member",
                      "docComment": "/**\n * DarkGreen\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset19"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset19",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset2:member",
                      "docComment": "/**\n * Brown\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset2"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset2",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset20:member",
                      "docComment": "/**\n * DarkTeal\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset20"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset20",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset21:member",
                      "docComment": "/**\n * DarkOlive\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset21"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset21",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset22:member",
                      "docComment": "/**\n * DarkBlue\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset22"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset22",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset23:member",
                      "docComment": "/**\n * DarkPurple\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset23"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset23",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset24:member",
                      "docComment": "/**\n * DarkCranberry\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset24"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset24",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset3:member",
                      "docComment": "/**\n * Yellow\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset3"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset3",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset4:member",
                      "docComment": "/**\n * Green\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset4"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset4",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset5:member",
                      "docComment": "/**\n * Teal\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset5"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset5",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset6:member",
                      "docComment": "/**\n * Olive\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset6"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset6",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset7:member",
                      "docComment": "/**\n * Blue\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset7"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset7",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset8:member",
                      "docComment": "/**\n * Purple\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset8"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset8",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.CategoryColor.Preset9:member",
                      "docComment": "/**\n * Cranberry\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Preset9"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Preset9",
                      "initializerTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.Days:enum",
                  "docComment": "/**\n * Specifies the day of week or type of day.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum Days "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Days",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Days.Day:member",
                      "docComment": "/**\n * Day of week.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Day = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"day\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Day",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Days.Fri:member",
                      "docComment": "/**\n * Friday\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Fri = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"fri\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Fri",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Days.Mon:member",
                      "docComment": "/**\n * Monday\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Mon = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"mon\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Mon",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Days.Sat:member",
                      "docComment": "/**\n * Saturday\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Sat = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"sat\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Sat",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Days.Sun:member",
                      "docComment": "/**\n * Sunday\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Sun = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"sun\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Sun",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Days.Thu:member",
                      "docComment": "/**\n * Thursday\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Thu = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"thu\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Thu",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Days.Tue:member",
                      "docComment": "/**\n * Tuesday\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Tue = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"tue\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Tue",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Days.Wed:member",
                      "docComment": "/**\n * Wednesday\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Wed = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"wed\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Wed",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Days.Weekday:member",
                      "docComment": "/**\n * Week day (excludes weekend days): 'Mon', 'Tue', 'Wed', 'Thu', and 'Fri'.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Weekday = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"weekday\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Weekday",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Days.WeekendDay:member",
                      "docComment": "/**\n * Weekend day: 'Sat' and 'Sun'.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "WeekendDay = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"weekendDay\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "WeekendDay",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.DelegatePermissions:enum",
                  "docComment": "/**\n * This bit mask represents a delegate's permissions on a shared folder.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum DelegatePermissions "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "DelegatePermissions",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.DelegatePermissions.DeleteAll:member",
                      "docComment": "/**\n * Delegate has permission to delete any items.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "DeleteAll = "
                        },
                        {
                          "kind": "Content",
                          "text": "8"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "DeleteAll",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.DelegatePermissions.DeleteOwn:member",
                      "docComment": "/**\n * Delegate has permission to delete only the items they created.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "DeleteOwn = "
                        },
                        {
                          "kind": "Content",
                          "text": "4"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "DeleteOwn",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.DelegatePermissions.EditAll:member",
                      "docComment": "/**\n * Delegate has permission to edit any items.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EditAll = "
                        },
                        {
                          "kind": "Content",
                          "text": "32"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "EditAll",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.DelegatePermissions.EditOwn:member",
                      "docComment": "/**\n * Delegate has permission to edit only they items they created.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EditOwn = "
                        },
                        {
                          "kind": "Content",
                          "text": "16"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "EditOwn",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.DelegatePermissions.Read:member",
                      "docComment": "/**\n * Delegate has permission to read items.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Read = "
                        },
                        {
                          "kind": "Content",
                          "text": "1"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Read",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.DelegatePermissions.Write:member",
                      "docComment": "/**\n * Delegate has permission to create and write items.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Write = "
                        },
                        {
                          "kind": "Content",
                          "text": "2"
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Write",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.EntityType:enum",
                  "docComment": "/**\n * Specifies an entity's type.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum EntityType "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "EntityType",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.EntityType.Address:member",
                      "docComment": "/**\n * Specifies that the entity is a postal address.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Address = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"address\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Address",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.EntityType.Contact:member",
                      "docComment": "/**\n * Specifies that the entity is a contact.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Contact = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"contact\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Contact",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.EntityType.EmailAddress:member",
                      "docComment": "/**\n * Specifies that the entity is an SMTP email address.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EmailAddress = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"emailAddress\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "EmailAddress",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.EntityType.MeetingSuggestion:member",
                      "docComment": "/**\n * Specifies that the entity is a meeting suggestion.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "MeetingSuggestion = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"meetingSuggestion\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "MeetingSuggestion",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.EntityType.PhoneNumber:member",
                      "docComment": "/**\n * Specifies that the entity is a US phone number.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "PhoneNumber = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"phoneNumber\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "PhoneNumber",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.EntityType.TaskSuggestion:member",
                      "docComment": "/**\n * Specifies that the entity is a task suggestion.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "TaskSuggestion = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"taskSuggestion\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "TaskSuggestion",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.EntityType.Url:member",
                      "docComment": "/**\n * Specifies that the entity is an Internet URL.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Url = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"url\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Url",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.ItemNotificationMessageType:enum",
                  "docComment": "/**\n * Specifies the notification message type for an appointment or message.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum ItemNotificationMessageType "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ItemNotificationMessageType",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.ItemNotificationMessageType.ErrorMessage:member",
                      "docComment": "/**\n * The notification message is an error message.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "ErrorMessage = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"errorMessage\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "ErrorMessage",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage:member",
                      "docComment": "/**\n * The notification message is an informational message.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "InformationalMessage = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"informationalMessage\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "InformationalMessage",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.ItemNotificationMessageType.ProgressIndicator:member",
                      "docComment": "/**\n * The notification message is a progress indicator.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "ProgressIndicator = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"progressIndicator\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "ProgressIndicator",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.ItemType:enum",
                  "docComment": "/**\n * Specifies an item's type.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum ItemType "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ItemType",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.ItemType.Appointment:member",
                      "docComment": "/**\n * An appointment item.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Appointment = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"appointment\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Appointment",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.ItemType.Message:member",
                      "docComment": "/**\n * An email, meeting request, meeting response, or meeting cancellation.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Message = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"message\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Message",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.LocationType:enum",
                  "docComment": "/**\n * Specifies an appointment location's type.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum LocationType "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "LocationType",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.LocationType.Custom:member",
                      "docComment": "/**\n * A custom location.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Custom = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"custom\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Custom",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.LocationType.Room:member",
                      "docComment": "/**\n * A conference room or similar resource.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Room = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"room\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Room",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.Month:enum",
                  "docComment": "/**\n * Specifies the month.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum Month "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Month",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Month.Apr:member",
                      "docComment": "/**\n * April\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Apr = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"apr\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Apr",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Month.Aug:member",
                      "docComment": "/**\n * August\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Aug = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"aug\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Aug",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Month.Dec:member",
                      "docComment": "/**\n * December\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Dec = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"dec\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Dec",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Month.Feb:member",
                      "docComment": "/**\n * February\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Feb = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"feb\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Feb",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Month.Jan:member",
                      "docComment": "/**\n * January\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Jan = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"jan\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Jan",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Month.Jul:member",
                      "docComment": "/**\n * July\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Jul = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"jul\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Jul",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Month.Jun:member",
                      "docComment": "/**\n * June\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Jun = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"jun\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Jun",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Month.Mar:member",
                      "docComment": "/**\n * March\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Mar = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"mar\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Mar",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Month.May:member",
                      "docComment": "/**\n * May\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "May = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"may\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "May",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Month.Nov:member",
                      "docComment": "/**\n * November\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Nov = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"nov\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Nov",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Month.Oct:member",
                      "docComment": "/**\n * October\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Oct = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"oct\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Oct",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.Month.Sep:member",
                      "docComment": "/**\n * September\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Sep = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"sep\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Sep",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.OWAView:enum",
                  "docComment": "/**\n * Represents the current view of Outlook on the web.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum OWAView "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "OWAView",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.OWAView.OneColumn:member",
                      "docComment": "/**\n * One-column view. Displayed when the screen is narrow. Outlook on the web uses this single-column layout on the entire screen of a smartphone.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "OneColumn = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"OneColumn\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "OneColumn",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.OWAView.ThreeColumns:member",
                      "docComment": "/**\n * Three-column view. Displayed when the screen is wide. For example, Outlook on the web uses this view in a full screen window on a desktop computer.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "ThreeColumns = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"ThreeColumns\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "ThreeColumns",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.OWAView.TwoColumns:member",
                      "docComment": "/**\n * Two-column view. Displayed when the screen is wider. Outlook on the web uses this view on most tablets.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "TwoColumns = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"TwoColumns\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "TwoColumns",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.RecipientType:enum",
                  "docComment": "/**\n * Specifies the type of recipient for an appointment.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum RecipientType "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "RecipientType",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecipientType.DistributionList:member",
                      "docComment": "/**\n * Specifies that the recipient is a distribution list containing a list of email addresses.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "DistributionList = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"distributionList\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "DistributionList",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecipientType.ExternalUser:member",
                      "docComment": "/**\n * Specifies that the recipient is an SMTP email address that is not on the Exchange server.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "ExternalUser = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"externalUser\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "ExternalUser",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecipientType.Other:member",
                      "docComment": "/**\n * Specifies that the recipient is not one of the other recipient types.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Other = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"other\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Other",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecipientType.User:member",
                      "docComment": "/**\n * Specifies that the recipient is an SMTP email address that is on the Exchange server.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "User = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"user\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "User",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone:enum",
                  "docComment": "/**\n * Specifies the time zone applied to the recurrence.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum RecurrenceTimeZone "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "RecurrenceTimeZone",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.AfghanistanStandardTime:member",
                      "docComment": "/**\n * Afghanistan Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "AfghanistanStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Afghanistan Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "AfghanistanStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.AlaskanStandardTime:member",
                      "docComment": "/**\n * Alaskan Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "AlaskanStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Alaskan Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "AlaskanStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.AleutianStandardTime:member",
                      "docComment": "/**\n * Aleutian Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "AleutianStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Aleutian Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "AleutianStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.AltaiStandardTime:member",
                      "docComment": "/**\n * Altai Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "AltaiStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Altai Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "AltaiStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.ArabianStandardTime:member",
                      "docComment": "/**\n * Arabian Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "ArabianStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Arabian Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "ArabianStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.ArabicStandardTime:member",
                      "docComment": "/**\n * Arabic Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "ArabicStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Arabic Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "ArabicStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.ArabStandardTime:member",
                      "docComment": "/**\n * Arab Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "ArabStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Arab Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "ArabStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.ArgentinaStandardTime:member",
                      "docComment": "/**\n * Argentina Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "ArgentinaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Argentina Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "ArgentinaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.AstrakhanStandardTime:member",
                      "docComment": "/**\n * Astrakhan Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "AstrakhanStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Astrakhan Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "AstrakhanStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.AtlanticStandardTime:member",
                      "docComment": "/**\n * Atlantic Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "AtlanticStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Atlantic Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "AtlanticStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.AUSCentralStandardTime:member",
                      "docComment": "/**\n * Australia Central Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "AUSCentralStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"AUS Central Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "AUSCentralStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.AusCentralW_StandardTime:member",
                      "docComment": "/**\n * Australia Central West Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "AusCentralW_StandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Aus Central W. Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "AusCentralW_StandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.AUSEasternStandardTime:member",
                      "docComment": "/**\n * AUS Eastern Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "AUSEasternStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"AUS Eastern Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "AUSEasternStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.AzerbaijanStandardTime:member",
                      "docComment": "/**\n * Azerbaijan Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "AzerbaijanStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Azerbaijan Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "AzerbaijanStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.AzoresStandardTime:member",
                      "docComment": "/**\n * Azores Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "AzoresStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Azores Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "AzoresStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.BahiaStandardTime:member",
                      "docComment": "/**\n * Bahia Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "BahiaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Bahia Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "BahiaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.BangladeshStandardTime:member",
                      "docComment": "/**\n * Bangladesh Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "BangladeshStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Bangladesh Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "BangladeshStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.BelarusStandardTime:member",
                      "docComment": "/**\n * Belarus Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "BelarusStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Belarus Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "BelarusStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.BougainvilleStandardTime:member",
                      "docComment": "/**\n * Bougainville Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "BougainvilleStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Bougainville Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "BougainvilleStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.CanadaCentralStandardTime:member",
                      "docComment": "/**\n * Canada Central Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "CanadaCentralStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Canada Central Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "CanadaCentralStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.CapeVerdeStandardTime:member",
                      "docComment": "/**\n * Cape Verde Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "CapeVerdeStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Cape Verde Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "CapeVerdeStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.CaucasusStandardTime:member",
                      "docComment": "/**\n * Caucasus Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "CaucasusStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Caucasus Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "CaucasusStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.CenAustraliaStandardTime:member",
                      "docComment": "/**\n * Central Australia Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "CenAustraliaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Cen. Australia Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "CenAustraliaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.CentralAmericaStandardTime:member",
                      "docComment": "/**\n * Central America Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "CentralAmericaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Central America Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "CentralAmericaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.CentralAsiaStandardTime:member",
                      "docComment": "/**\n * Central Asia Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "CentralAsiaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Central Asia Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "CentralAsiaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.CentralBrazilianStandardTime:member",
                      "docComment": "/**\n * Central Brazilian Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "CentralBrazilianStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Central Brazilian Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "CentralBrazilianStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.CentralEuropeanStandardTime:member",
                      "docComment": "/**\n * Central European Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "CentralEuropeanStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Central European Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "CentralEuropeanStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.CentralEuropeStandardTime:member",
                      "docComment": "/**\n * Central Europe Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "CentralEuropeStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Central Europe Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "CentralEuropeStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.CentralPacificStandardTime:member",
                      "docComment": "/**\n * Central Pacific Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "CentralPacificStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Central Pacific Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "CentralPacificStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.CentralStandardTime:member",
                      "docComment": "/**\n * Central Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "CentralStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Central Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "CentralStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.CentralStandardTime_Mexico:member",
                      "docComment": "/**\n * Central Standard Time (Mexico)\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "CentralStandardTime_Mexico = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Central Standard Time (Mexico)\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "CentralStandardTime_Mexico",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.ChathamIslandsStandardTime:member",
                      "docComment": "/**\n * Chatham Islands Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "ChathamIslandsStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Chatham Islands Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "ChathamIslandsStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.ChinaStandardTime:member",
                      "docComment": "/**\n * China Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "ChinaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"China Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "ChinaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.CubaStandardTime:member",
                      "docComment": "/**\n * Cuba Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "CubaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Cuba Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "CubaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.DatelineStandardTime:member",
                      "docComment": "/**\n * Dateline Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "DatelineStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Dateline Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "DatelineStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.E_AfricaStandardTime:member",
                      "docComment": "/**\n * East Africa Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "E_AfricaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"E. Africa Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "E_AfricaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.E_AustraliaStandardTime:member",
                      "docComment": "/**\n * East Australia Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "E_AustraliaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"E. Australia Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "E_AustraliaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.E_EuropeStandardTime:member",
                      "docComment": "/**\n * East Europe Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "E_EuropeStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"E. Europe Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "E_EuropeStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.E_SouthAmericaStandardTime:member",
                      "docComment": "/**\n * East South America Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "E_SouthAmericaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"E. South America Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "E_SouthAmericaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.EasterIslandStandardTime:member",
                      "docComment": "/**\n * Easter Island Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EasterIslandStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Easter Island Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "EasterIslandStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.EasternStandardTime:member",
                      "docComment": "/**\n * Eastern Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EasternStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Eastern Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "EasternStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.EasternStandardTime_Mexico:member",
                      "docComment": "/**\n * Eastern Standard Time (Mexico)\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EasternStandardTime_Mexico = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Eastern Standard Time (Mexico)\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "EasternStandardTime_Mexico",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.EgyptStandardTime:member",
                      "docComment": "/**\n * Egypt Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EgyptStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Egypt Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "EgyptStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.EkaterinburgStandardTime:member",
                      "docComment": "/**\n * Ekaterinburg Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EkaterinburgStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Ekaterinburg Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "EkaterinburgStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.FijiStandardTime:member",
                      "docComment": "/**\n * Fiji Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "FijiStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Fiji Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "FijiStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.FLEStandardTime:member",
                      "docComment": "/**\n * FLE Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "FLEStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"FLE Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "FLEStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.GeorgianStandardTime:member",
                      "docComment": "/**\n * Georgian Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "GeorgianStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Georgian Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "GeorgianStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.GMTStandardTime:member",
                      "docComment": "/**\n * GMT Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "GMTStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"GMT Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "GMTStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.GreenlandStandardTime:member",
                      "docComment": "/**\n * Greenland Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "GreenlandStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Greenland Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "GreenlandStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.GreenwichStandardTime:member",
                      "docComment": "/**\n * Greenwich Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "GreenwichStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Greenwich Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "GreenwichStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.GTBStandardTime:member",
                      "docComment": "/**\n * GTB Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "GTBStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"GTB Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "GTBStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.HaitiStandardTime:member",
                      "docComment": "/**\n * Haiti Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "HaitiStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Haiti Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "HaitiStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.HawaiianStandardTime:member",
                      "docComment": "/**\n * Hawaiian Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "HawaiianStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Hawaiian Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "HawaiianStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.IndiaStandardTime:member",
                      "docComment": "/**\n * India Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "IndiaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"India Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "IndiaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.IranStandardTime:member",
                      "docComment": "/**\n * Iran Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "IranStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Iran Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "IranStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.IsraelStandardTime:member",
                      "docComment": "/**\n * Israel Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "IsraelStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Israel Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "IsraelStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.JordanStandardTime:member",
                      "docComment": "/**\n * Jordan Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "JordanStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Jordan Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "JordanStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.KaliningradStandardTime:member",
                      "docComment": "/**\n * Kaliningrad Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "KaliningradStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Kaliningrad Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "KaliningradStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.KamchatkaStandardTime:member",
                      "docComment": "/**\n * Kamchatka Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "KamchatkaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Kamchatka Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "KamchatkaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.KoreaStandardTime:member",
                      "docComment": "/**\n * Korea Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "KoreaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Korea Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "KoreaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.LibyaStandardTime:member",
                      "docComment": "/**\n * Libya Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "LibyaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Libya Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "LibyaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.LineIslandsStandardTime:member",
                      "docComment": "/**\n * Line Islands Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "LineIslandsStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Line Islands Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "LineIslandsStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.LordHoweStandardTime:member",
                      "docComment": "/**\n * Lord Howe Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "LordHoweStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Lord Howe Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "LordHoweStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.MagadanStandardTime:member",
                      "docComment": "/**\n * Magadan Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "MagadanStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Magadan Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "MagadanStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.MagallanesStandardTime:member",
                      "docComment": "/**\n * Magallanes Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "MagallanesStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Magallanes Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "MagallanesStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.MarquesasStandardTime:member",
                      "docComment": "/**\n * Marquesas Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "MarquesasStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Marquesas Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "MarquesasStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.MauritiusStandardTime:member",
                      "docComment": "/**\n * Mauritius Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "MauritiusStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Mauritius Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "MauritiusStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.MidAtlanticStandardTime:member",
                      "docComment": "/**\n * Mid-Atlantic Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "MidAtlanticStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Mid-Atlantic Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "MidAtlanticStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.MiddleEastStandardTime:member",
                      "docComment": "/**\n * Middle East Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "MiddleEastStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Middle East Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "MiddleEastStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.MontevideoStandardTime:member",
                      "docComment": "/**\n * Montevideo Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "MontevideoStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Montevideo Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "MontevideoStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.MoroccoStandardTime:member",
                      "docComment": "/**\n * Morocco Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "MoroccoStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Morocco Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "MoroccoStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.MountainStandardTime:member",
                      "docComment": "/**\n * Mountain Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "MountainStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Mountain Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "MountainStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.MountainStandardTime_Mexico:member",
                      "docComment": "/**\n * Mountain Standard Time (Mexico)\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "MountainStandardTime_Mexico = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Mountain Standard Time (Mexico)\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "MountainStandardTime_Mexico",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.MyanmarStandardTime:member",
                      "docComment": "/**\n * Myanmar Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "MyanmarStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Myanmar Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "MyanmarStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.N_CentralAsiaStandardTime:member",
                      "docComment": "/**\n * North Central Asia Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "N_CentralAsiaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"N. Central Asia Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "N_CentralAsiaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.NamibiaStandardTime:member",
                      "docComment": "/**\n * Namibia Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "NamibiaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Namibia Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "NamibiaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.NepalStandardTime:member",
                      "docComment": "/**\n * Nepal Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "NepalStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Nepal Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "NepalStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.NewfoundlandStandardTime:member",
                      "docComment": "/**\n * Newfoundland Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "NewfoundlandStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Newfoundland Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "NewfoundlandStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.NewZealandStandardTime:member",
                      "docComment": "/**\n * New Zealand Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "NewZealandStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"New Zealand Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "NewZealandStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.NorfolkStandardTime:member",
                      "docComment": "/**\n * Norfolk Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "NorfolkStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Norfolk Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "NorfolkStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.NorthAsiaEastStandardTime:member",
                      "docComment": "/**\n * North Asia East Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "NorthAsiaEastStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"North Asia East Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "NorthAsiaEastStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.NorthAsiaStandardTime:member",
                      "docComment": "/**\n * North Asia Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "NorthAsiaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"North Asia Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "NorthAsiaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.NorthKoreaStandardTime:member",
                      "docComment": "/**\n * North Korea Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "NorthKoreaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"North Korea Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "NorthKoreaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.OmskStandardTime:member",
                      "docComment": "/**\n * Omsk Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "OmskStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Omsk Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "OmskStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.PacificSAStandardTime:member",
                      "docComment": "/**\n * Pacific SA Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "PacificSAStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Pacific SA Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "PacificSAStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.PacificStandardTime:member",
                      "docComment": "/**\n * Pacific Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "PacificStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Pacific Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "PacificStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.PacificStandardTimeMexico:member",
                      "docComment": "/**\n * Pacific Standard Time (Mexico)\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "PacificStandardTimeMexico = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Pacific Standard Time (Mexico)\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "PacificStandardTimeMexico",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.PakistanStandardTime:member",
                      "docComment": "/**\n * Pakistan Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "PakistanStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Pakistan Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "PakistanStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.ParaguayStandardTime:member",
                      "docComment": "/**\n * Paraguay Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "ParaguayStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Paraguay Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "ParaguayStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.RomanceStandardTime:member",
                      "docComment": "/**\n * Romance Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "RomanceStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Romance Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "RomanceStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.RussianStandardTime:member",
                      "docComment": "/**\n * Russian Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "RussianStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Russian Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "RussianStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.RussiaTimeZone10:member",
                      "docComment": "/**\n * Russia Time Zone 10\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "RussiaTimeZone10 = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Russia Time Zone 10\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "RussiaTimeZone10",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.RussiaTimeZone11:member",
                      "docComment": "/**\n * Russia Time Zone 11\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "RussiaTimeZone11 = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Russia Time Zone 11\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "RussiaTimeZone11",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.RussiaTimeZone3:member",
                      "docComment": "/**\n * Russia Time Zone 3\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "RussiaTimeZone3 = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Russia Time Zone 3\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "RussiaTimeZone3",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.SAEasternStandardTime:member",
                      "docComment": "/**\n * SA Eastern Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "SAEasternStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"SA Eastern Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "SAEasternStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.SaintPierreStandardTime:member",
                      "docComment": "/**\n * Saint Pierre Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "SaintPierreStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Saint Pierre Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "SaintPierreStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.SakhalinStandardTime:member",
                      "docComment": "/**\n * Sakhalin Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "SakhalinStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Sakhalin Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "SakhalinStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.SamoaStandardTime:member",
                      "docComment": "/**\n * Samoa Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "SamoaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Samoa Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "SamoaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.SAPacificStandardTime:member",
                      "docComment": "/**\n * SA Pacific Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "SAPacificStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"SA Pacific Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "SAPacificStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.SaratovStandardTime:member",
                      "docComment": "/**\n * Saratov Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "SaratovStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Saratov Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "SaratovStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.SAWesternStandardTime:member",
                      "docComment": "/**\n * SA Western Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "SAWesternStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"SA Western Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "SAWesternStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.SEAsiaStandardTime:member",
                      "docComment": "/**\n * Southeast Asia Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "SEAsiaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"SE Asia Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "SEAsiaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.SingaporeStandardTime:member",
                      "docComment": "/**\n * Singapore Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "SingaporeStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Singapore Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "SingaporeStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.SouthAfricaStandardTime:member",
                      "docComment": "/**\n * South Africa Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "SouthAfricaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"South Africa Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "SouthAfricaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.SriLankaStandardTime:member",
                      "docComment": "/**\n * Sri Lanka Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "SriLankaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Sri Lanka Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "SriLankaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.SudanStandardTime:member",
                      "docComment": "/**\n * Sudan Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "SudanStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Sudan Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "SudanStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.SyriaStandardTime:member",
                      "docComment": "/**\n * Syria Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "SyriaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Syria Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "SyriaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.TaipeiStandardTime:member",
                      "docComment": "/**\n * Taipei Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "TaipeiStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Taipei Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "TaipeiStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.TasmaniaStandardTime:member",
                      "docComment": "/**\n * Tasmania Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "TasmaniaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Tasmania Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "TasmaniaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.TocantinsStandardTime:member",
                      "docComment": "/**\n * Tocantins Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "TocantinsStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Tocantins Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "TocantinsStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.TokyoStandardTime:member",
                      "docComment": "/**\n * Tokyo Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "TokyoStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Tokyo Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "TokyoStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.TomskStandardTime:member",
                      "docComment": "/**\n * Tomsk Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "TomskStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Tomsk Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "TomskStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.TongaStandardTime:member",
                      "docComment": "/**\n * Tonga Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "TongaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Tonga Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "TongaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.TransbaikalStandardTime:member",
                      "docComment": "/**\n * Transbaikal Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "TransbaikalStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Transbaikal Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "TransbaikalStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.TurkeyStandardTime:member",
                      "docComment": "/**\n * Turkey Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "TurkeyStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Turkey Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "TurkeyStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.TurksAndCaicosStandardTime:member",
                      "docComment": "/**\n * Turks And Caicos Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "TurksAndCaicosStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Turks And Caicos Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "TurksAndCaicosStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.UlaanbaatarStandardTime:member",
                      "docComment": "/**\n * Ulaanbaatar Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "UlaanbaatarStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Ulaanbaatar Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "UlaanbaatarStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.USEasternStandardTime:member",
                      "docComment": "/**\n * United States Eastern Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "USEasternStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"US Eastern Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "USEasternStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.USMountainStandardTime:member",
                      "docComment": "/**\n * United States Mountain Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "USMountainStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"US Mountain Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "USMountainStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.UTC:member",
                      "docComment": "/**\n * Coordinated Universal Time (UTC)\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "UTC = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"UTC\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "UTC",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.UTCMINUS02:member",
                      "docComment": "/**\n * Coordinated Universal Time (UTC) - 2 hours\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "UTCMINUS02 = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"UTC-02\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "UTCMINUS02",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.UTCMINUS08:member",
                      "docComment": "/**\n * Coordinated Universal Time (UTC) - 8 hours\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "UTCMINUS08 = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"UTC-08\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "UTCMINUS08",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.UTCMINUS09:member",
                      "docComment": "/**\n * Coordinated Universal Time (UTC) - 9 hours\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "UTCMINUS09 = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"UTC-09\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "UTCMINUS09",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.UTCMINUS11:member",
                      "docComment": "/**\n * Coordinated Universal Time (UTC) - 11 hours\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "UTCMINUS11 = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"UTC-11\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "UTCMINUS11",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.UTCPLUS12:member",
                      "docComment": "/**\n * Coordinated Universal Time (UTC) + 12 hours\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "UTCPLUS12 = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"UTC+12\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "UTCPLUS12",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.UTCPLUS13:member",
                      "docComment": "/**\n * Coordinated Universal Time (UTC) + 13 hours\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "UTCPLUS13 = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"UTC+13\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "UTCPLUS13",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.VenezuelaStandardTime:member",
                      "docComment": "/**\n * Venezuela Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "VenezuelaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Venezuela Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "VenezuelaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.VladivostokStandardTime:member",
                      "docComment": "/**\n * Vladivostok Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "VladivostokStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Vladivostok Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "VladivostokStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.W_AustraliaStandardTime:member",
                      "docComment": "/**\n * West Australia Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "W_AustraliaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"W. Australia Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "W_AustraliaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.W_CentralAfricaStandardTime:member",
                      "docComment": "/**\n * West Central Africa Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "W_CentralAfricaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"W. Central Africa Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "W_CentralAfricaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.W_EuropeStandardTime:member",
                      "docComment": "/**\n * West Europe Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "W_EuropeStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"W. Europe Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "W_EuropeStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.W_MongoliaStandardTime:member",
                      "docComment": "/**\n * West Mongolia Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "W_MongoliaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"W. Mongolia Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "W_MongoliaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.WestAsiaStandardTime:member",
                      "docComment": "/**\n * West Asia Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "WestAsiaStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"West Asia Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "WestAsiaStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.WestBankStandardTime:member",
                      "docComment": "/**\n * West Bank Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "WestBankStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"West Bank Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "WestBankStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.WestPacificStandardTime:member",
                      "docComment": "/**\n * West Pacific Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "WestPacificStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"West Pacific Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "WestPacificStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone.YakutskStandardTime:member",
                      "docComment": "/**\n * Yakutsk Standard Time\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "YakutskStandardTime = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"Yakutsk Standard Time\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "YakutskStandardTime",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceType:enum",
                  "docComment": "/**\n * Specifies the type of recurrence.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum RecurrenceType "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "RecurrenceType",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceType.Daily:member",
                      "docComment": "/**\n * Daily.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Daily = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"daily\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Daily",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceType.Monthly:member",
                      "docComment": "/**\n * Monthly.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Monthly = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"monthly\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Monthly",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceType.Weekday:member",
                      "docComment": "/**\n * Weekday.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Weekday = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"weekday\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Weekday",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceType.Weekly:member",
                      "docComment": "/**\n * Weekly.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Weekly = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"weekly\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Weekly",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceType.Yearly:member",
                      "docComment": "/**\n * Yearly.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Yearly = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"yearly\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Yearly",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.ResponseType:enum",
                  "docComment": "/**\n * Specifies the type of response to a meeting invitation.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum ResponseType "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ResponseType",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.ResponseType.Accepted:member",
                      "docComment": "/**\n * The meeting request was accepted by the attendee.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Accepted = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"accepted\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Accepted",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.ResponseType.Declined:member",
                      "docComment": "/**\n * The meeting request was declined by the attendee.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Declined = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"declined\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Declined",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.ResponseType.None:member",
                      "docComment": "/**\n * There has been no response from the attendee.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "None = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"none\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "None",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.ResponseType.Organizer:member",
                      "docComment": "/**\n * The attendee is the meeting organizer.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Organizer = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"organizer\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Organizer",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.ResponseType.Tentative:member",
                      "docComment": "/**\n * The meeting request was tentatively accepted by the attendee.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Tentative = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"tentative\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Tentative",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.RestVersion:enum",
                  "docComment": "/**\n * Specifies the version of the REST API that corresponds to a REST-formatted item ID.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum RestVersion "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "RestVersion",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RestVersion.Beta:member",
                      "docComment": "/**\n * Beta.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Beta = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"beta\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Beta",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RestVersion.v1_0:member",
                      "docComment": "/**\n * Version 1.0.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "v1_0 = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"v1.0\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "v1_0",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.RestVersion.v2_0:member",
                      "docComment": "/**\n * Version 2.0.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "v2_0 = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"v2.0\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "v2_0",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.SourceProperty:enum",
                  "docComment": "/**\n * Specifies the source of the selected data in an item (see `Office.mailbox.item.getSelectedDataAsync` for details).\n *\n * [Api set: Mailbox 1.2]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum SourceProperty "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "SourceProperty",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.SourceProperty.Body:member",
                      "docComment": "/**\n * The source of the data is from the body of the item.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Body = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"body\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Body",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.SourceProperty.Subject:member",
                      "docComment": "/**\n * The source of the data is from the subject of the item.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Subject = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"subject\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Subject",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Enum",
                  "canonicalReference": "outlook!Office.MailboxEnums.WeekNumber:enum",
                  "docComment": "/**\n * Specifies the week of the month.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enum WeekNumber "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "WeekNumber",
                  "members": [
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.WeekNumber.First:member",
                      "docComment": "/**\n * First week of the month.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "First = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"first\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "First",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.WeekNumber.Fourth:member",
                      "docComment": "/**\n * Fourth week of the month.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Fourth = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"fourth\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Fourth",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.WeekNumber.Last:member",
                      "docComment": "/**\n * Last week of the month.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Last = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"last\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Last",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.WeekNumber.Second:member",
                      "docComment": "/**\n * Second week of the month.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Second = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"second\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Second",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "EnumMember",
                      "canonicalReference": "outlook!Office.MailboxEnums.WeekNumber.Third:member",
                      "docComment": "/**\n * Third week of the month.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "Third = "
                        },
                        {
                          "kind": "Content",
                          "text": "\"third\""
                        }
                      ],
                      "releaseTag": "Public",
                      "name": "Third",
                      "initializerTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.MasterCategories:interface",
              "docComment": "/**\n * Represents the categories master list on the mailbox.\n *\n * In Outlook, a user can tag messages and appointments by using a category to color-code them. The user defines categories in a master list on their mailbox. They can then apply one or more categories to an item.\n *\n * **Important**: In delegate or shared scenarios, the delegate can get the categories in the master list but can't add or remove categories.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteMailbox`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface MasterCategories "
                }
              ],
              "releaseTag": "Public",
              "name": "MasterCategories",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MasterCategories#addAsync:member(1)",
                  "docComment": "/**\n * Adds categories to the master list on a mailbox. Each category must have a unique name but multiple categories can use the same color.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteMailbox`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * **Errors**:\n *\n * - `DuplicateCategory`: One of the categories provided is already in the master category list.\n *\n * - `PermissionDenied`: The user does not have permission to perform this action.\n *\n * @param categories - The categories to be added to the master list on the mailbox.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addAsync(categories: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CategoryDetails",
                      "canonicalReference": "outlook!Office.CategoryDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "categories",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "addAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MasterCategories#addAsync:member(2)",
                  "docComment": "/**\n * Adds categories to the master list on a mailbox. Each category must have a unique name but multiple categories can use the same color.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteMailbox`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * **Errors**:\n *\n * - `DuplicateCategory`: One of the categories provided is already in the master category list.\n *\n * - `PermissionDenied`: The user does not have permission to perform this action.\n *\n * @param categories - The categories to be added to the master list on the mailbox.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addAsync(categories: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CategoryDetails",
                      "canonicalReference": "outlook!Office.CategoryDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "categories",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "addAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MasterCategories#getAsync:member(1)",
                  "docComment": "/**\n * Gets the master list of categories on a mailbox.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteMailbox`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If adding categories fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "CategoryDetails",
                      "canonicalReference": "outlook!Office.CategoryDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MasterCategories#getAsync:member(2)",
                  "docComment": "/**\n * Gets the master list of categories on a mailbox.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteMailbox`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "CategoryDetails",
                      "canonicalReference": "outlook!Office.CategoryDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MasterCategories#removeAsync:member(1)",
                  "docComment": "/**\n * Removes categories from the master list on a mailbox.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteMailbox`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * **Errors**:\n *\n * - `PermissionDenied`: The user does not have permission to perform this action.\n *\n * @param categories - The categories to be removed from the master list on the mailbox.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If removing categories fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAsync(categories: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "categories",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "removeAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MasterCategories#removeAsync:member(2)",
                  "docComment": "/**\n * Removes categories from the master list on a mailbox.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteMailbox`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * **Errors**:\n *\n * - `PermissionDenied`: The user does not have permission to perform this action.\n *\n * @param categories - The categories to be removed from the master list on the mailbox.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If removing categories fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAsync(categories: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "categories",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "removeAsync"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.MeetingSuggestion:interface",
              "docComment": "/**\n * Represents a suggested meeting found in an item. Read mode only.\n *\n * The list of meetings suggested in an email message is returned in the `meetingSuggestions` property of the `Entities` object that is returned when the `getEntities` or `getEntitiesByType` method is called on the active item.\n *\n * The start and end values are string representations of a `Date` object that contains the date and time at which the suggested meeting is to begin and end. The values are in the default time zone specified for the current user.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface MeetingSuggestion "
                }
              ],
              "releaseTag": "Public",
              "name": "MeetingSuggestion",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MeetingSuggestion#attendees:member",
                  "docComment": "/**\n * Gets the attendees for a suggested meeting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "attendees: "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailUser",
                      "canonicalReference": "outlook!Office.EmailUser:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "attendees",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MeetingSuggestion#end:member",
                  "docComment": "/**\n * Gets the date and time that a suggested meeting is to end.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "end: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "end",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MeetingSuggestion#location:member",
                  "docComment": "/**\n * Gets the location of a suggested meeting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "location: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "location",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MeetingSuggestion#meetingString:member",
                  "docComment": "/**\n * Gets a string that was identified as a meeting suggestion.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "meetingString: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "meetingString",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MeetingSuggestion#start:member",
                  "docComment": "/**\n * Gets the date and time that a suggested meeting is to begin.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "start: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "start",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MeetingSuggestion#subject:member",
                  "docComment": "/**\n * Gets the subject of a suggested meeting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subject: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "subject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Message:interface",
              "docComment": "/**\n * A subclass of {@link Office.Item | Item} for messages.\n *\n * **Important**: This is an internal Outlook object, not directly exposed through existing interfaces. You should treat this as a mode of `Office.context.mailbox.item`. Refer to the {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item | Object Model} page for more information.\n *\n * Child interfaces:\n *\n * - {@link Office.MessageCompose | MessageCompose}\n *\n * - {@link Office.MessageRead | MessageRead}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Message extends "
                },
                {
                  "kind": "Reference",
                  "text": "Item",
                  "canonicalReference": "outlook!Office.Item:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "Message",
              "members": [],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 3
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.MessageCompose:interface",
              "docComment": "/**\n * The message compose mode of {@link Office.Item | Office.context.mailbox.item}.\n *\n * **Important**: This is an internal Outlook object, not directly exposed through existing interfaces. You should treat this as a mode of `Office.context.mailbox.item`. Refer to the {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item | Object Model} page for more information.\n *\n * Parent interfaces:\n *\n * - {@link Office.ItemCompose | ItemCompose}\n *\n * - {@link Office.Message | Message}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface MessageCompose extends "
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "outlook!Office.Message:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ItemCompose",
                  "canonicalReference": "outlook!Office.ItemCompose:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "MessageCompose",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#addFileAttachmentAsync:member(1)",
                  "docComment": "/**\n * Adds a file to a message or appointment as an attachment.\n *\n * The `addFileAttachmentAsync` method uploads the file at the specified URI and attaches it to the item in the compose form.\n *\n * You can subsequently use the identifier with the `removeAttachmentAsync` method to remove the attachment in the same session.\n *\n * **Important**: In recent builds of Outlook on Windows, a bug was introduced that incorrectly appends an `Authorization: Bearer` header to this action (whether using this API or the Outlook UI). To work around this issue, you can try using the `addFileAttachmentFromBase64` API introduced with requirement set 1.8.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `AttachmentSizeExceeded`: The attachment is larger than allowed.\n *\n * - `FileTypeNotSupported`: The attachment has an extension that is not allowed.\n *\n * - `NumberOfAttachmentsExceeded`: The message or appointment has too many attachments.\n *\n * @param uri - The URI that provides the location of the file to attach to the message or appointment. The maximum length is 2048 characters.\n *\n * @param attachmentName - The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method. `isInline`: If true, indicates that the attachment will be shown inline in the message body, and should not be displayed in the attachment list.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. On success, the attachment identifier will be provided in the `asyncResult.value` property. If uploading the attachment fails, the `asyncResult` object will contain an `Error` object that provides a description of the error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addFileAttachmentAsync(uri: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", attachmentName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & { isInline: boolean }"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "uri",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "attachmentName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "addFileAttachmentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#addFileAttachmentAsync:member(2)",
                  "docComment": "/**\n * Adds a file to a message or appointment as an attachment.\n *\n * The `addFileAttachmentAsync` method uploads the file at the specified URI and attaches it to the item in the compose form.\n *\n * You can subsequently use the identifier with the `removeAttachmentAsync` method to remove the attachment in the same session.\n *\n * **Important**: In recent builds of Outlook on Windows, a bug was introduced that incorrectly appends an `Authorization: Bearer` header to this action (whether using this API or the Outlook UI). To work around this issue, you can try using the `addFileAttachmentFromBase64` API introduced with requirement set 1.8.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `AttachmentSizeExceeded`: The attachment is larger than allowed.\n *\n * - `FileTypeNotSupported`: The attachment has an extension that is not allowed.\n *\n * - `NumberOfAttachmentsExceeded`: The message or appointment has too many attachments.\n *\n * @param uri - The URI that provides the location of the file to attach to the message or appointment. The maximum length is 2048 characters.\n *\n * @param attachmentName - The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. On success, the attachment identifier will be provided in the `asyncResult.value` property. If uploading the attachment fails, the `asyncResult` object will contain an `Error` object that provides a description of the error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addFileAttachmentAsync(uri: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", attachmentName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "uri",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "attachmentName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "addFileAttachmentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#addFileAttachmentFromBase64Async:member(1)",
                  "docComment": "/**\n * Adds a file to a message or appointment as an attachment.\n *\n * The `addFileAttachmentFromBase64Async` method uploads the file from the base64 encoding and attaches it to the item in the compose form. This method returns the attachment identifier in the `asyncResult.value` object.\n *\n * You can subsequently use the identifier with the `removeAttachmentAsync` method to remove the attachment in the same session.\n *\n * **Note**: If you're using a data URL API (e.g., `readAsDataURL`), you need to strip out the data URL prefix then send the rest of the string to this API. For example, if the full string is represented by `data:image/svg+xml;base64,<rest of base64 string>`, remove `data:image/svg+xml;base64,`.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `AttachmentSizeExceeded`: The attachment is larger than allowed.\n *\n * - `FileTypeNotSupported`: The attachment has an extension that is not allowed.\n *\n * - `NumberOfAttachmentsExceeded`: The message or appointment has too many attachments.\n *\n * @param base64File - The base64-encoded content of an image or file to be added to an email or event.\n *\n * @param attachmentName - The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method. `isInline`: If true, indicates that the attachment will be shown inline in the message body and should not be displayed in the attachment list.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type Office.AsyncResult. On success, the attachment identifier will be provided in the `asyncResult.value` property. If uploading the attachment fails, the `asyncResult` object will contain an `Error` object that provides a description of the error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addFileAttachmentFromBase64Async(base64File: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", attachmentName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & { isInline: boolean }"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "base64File",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "attachmentName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "addFileAttachmentFromBase64Async"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#addFileAttachmentFromBase64Async:member(2)",
                  "docComment": "/**\n * Adds a file to a message or appointment as an attachment.\n *\n * The `addFileAttachmentFromBase64Async` method uploads the file from the base64 encoding and attaches it to the item in the compose form. This method returns the attachment identifier in the `asyncResult.value` object.\n *\n * You can subsequently use the identifier with the `removeAttachmentAsync` method to remove the attachment in the same session.\n *\n * **Note**: If you're using a data URL API (e.g., `readAsDataURL`), you need to strip out the data URL prefix then send the rest of the string to this API. For example, if the full string is represented by `data:image/svg+xml;base64,<rest of base64 string>`, remove `data:image/svg+xml;base64,`.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `AttachmentSizeExceeded`: The attachment is larger than allowed.\n *\n * - `FileTypeNotSupported`: The attachment has an extension that is not allowed.\n *\n * - `NumberOfAttachmentsExceeded`: The message or appointment has too many attachments.\n *\n * @param base64File - The base64-encoded content of an image or file to be added to an email or event.\n *\n * @param attachmentName - The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type Office.AsyncResult. On success, the attachment identifier will be provided in the `asyncResult.value` property. If uploading the attachment fails, the `asyncResult` object will contain an `Error` object that provides a description of the error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addFileAttachmentFromBase64Async(base64File: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", attachmentName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "base64File",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "attachmentName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "addFileAttachmentFromBase64Async"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#addHandlerAsync:member(1)",
                  "docComment": "/**\n * Adds an event handler for a supported event. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * @param eventType - The event that should invoke the handler.\n *\n * @param handler - The function to handle the event. The function must accept a single parameter, which is an object literal. The type property on the parameter will match the `eventType` parameter passed to `addHandlerAsync`.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", handler: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "handler",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "addHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#addHandlerAsync:member(2)",
                  "docComment": "/**\n * Adds an event handler for a supported event. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * @param eventType - The event that should invoke the handler.\n *\n * @param handler - The function to handle the event. The function must accept a single parameter, which is an object literal. The type property on the parameter will match the `eventType` parameter passed to `addHandlerAsync`.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", handler: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "handler",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "addHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#addItemAttachmentAsync:member(1)",
                  "docComment": "/**\n * Adds an Exchange item, such as a message, as an attachment to the message or appointment.\n *\n * The `addItemAttachmentAsync` method attaches the item with the specified Exchange identifier to the item in the compose form. If you specify a callback method, the method is called with one parameter, `asyncResult`, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item. You can use the options parameter to pass state information to the callback method, if needed.\n *\n * You can subsequently use the identifier with the `removeAttachmentAsync` method to remove the attachment in the same session.\n *\n * If your Office Add-in is running in Outlook on the web, the `addItemAttachmentAsync` method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `NumberOfAttachmentsExceeded`: The message or appointment has too many attachments.\n *\n * @param itemId - The Exchange identifier of the item to attach. The maximum length is 100 characters.\n *\n * @param attachmentName - The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. On success, the attachment identifier will be provided in the `asyncResult.value` property. If adding the attachment fails, the `asyncResult` object will contain an `Error` object that provides a description of the error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addItemAttachmentAsync(itemId: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ", attachmentName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "itemId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "attachmentName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "addItemAttachmentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#addItemAttachmentAsync:member(2)",
                  "docComment": "/**\n * Adds an Exchange item, such as a message, as an attachment to the message or appointment.\n *\n * The `addItemAttachmentAsync` method attaches the item with the specified Exchange identifier to the item in the compose form. If you specify a callback method, the method is called with one parameter, `asyncResult`, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item. You can use the options parameter to pass state information to the callback method, if needed.\n *\n * You can subsequently use the identifier with the `removeAttachmentAsync` method to remove the attachment in the same session.\n *\n * If your Office Add-in is running in Outlook on the web, the `addItemAttachmentAsync` method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `NumberOfAttachmentsExceeded`: The message or appointment has too many attachments.\n *\n * @param itemId - The Exchange identifier of the item to attach. The maximum length is 100 characters.\n *\n * @param attachmentName - The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. On success, the attachment identifier will be provided in the `asyncResult.value` property. If adding the attachment fails, the `asyncResult` object will contain an `Error` object that provides a description of the error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addItemAttachmentAsync(itemId: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ", attachmentName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "itemId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "attachmentName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "addItemAttachmentAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageCompose#bcc:member",
                  "docComment": "/**\n * Gets an object that provides methods to get or update the recipients on the **Bcc** (blind carbon copy) line of a message.\n *\n * Depending on the client/platform (i.e., Windows, Mac, etc.), limits may apply on how many recipients you can get or update. See the {@link Office.Recipients | Recipients} object for more details.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bcc: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Recipients",
                      "canonicalReference": "outlook!Office.Recipients:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "bcc",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageCompose#body:member",
                  "docComment": "/**\n * Gets an object that provides methods for manipulating the body of an item.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "body: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Body",
                      "canonicalReference": "outlook!Office.Body:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "body",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageCompose#categories:member",
                  "docComment": "/**\n * Gets an object that provides methods for managing the item's categories.\n *\n * **Important**: In Outlook on the web, you can't use the API to manage categories on a message in Compose mode.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "categories: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Categories",
                      "canonicalReference": "outlook!Office.Categories:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "categories",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageCompose#cc:member",
                  "docComment": "/**\n * Provides access to the Cc (carbon copy) recipients of a message. The type of object and level of access depend on the mode of the current item.\n *\n * The `cc` property returns a `Recipients` object that provides methods to get or update the recipients on the **Cc** line of the message. However, depending on the client/platform (i.e., Windows, Mac, etc.), limits may apply on how many recipients you can get or update. See the {@link Office.Recipients | Recipients} object for more details.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cc: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Recipients",
                      "canonicalReference": "outlook!Office.Recipients:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "cc",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#close:member(1)",
                  "docComment": "/**\n * Closes the current item that is being composed\n *\n * The behaviors of the close method depends on the current state of the item being composed. If the item has unsaved changes, the client prompts the user to save, discard, or close the action.\n *\n * In the Outlook desktop client, if the message is an inline reply, the close method has no effect.\n *\n * **Note**: In Outlook on the web, if the item is an appointment and it has previously been saved using `saveAsync`, the user is prompted to save, discard, or cancel even if no changes have occurred since the item was last saved.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "close(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "close"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageCompose#conversationId:member",
                  "docComment": "/**\n * Gets an identifier for the email conversation that contains a particular message.\n *\n * You can get an integer for this property if your mail app is activated in read forms or responses in compose forms. If subsequently the user changes the subject of the reply message, upon sending the reply, the conversation ID for that message will change and that value you obtained earlier will no longer apply.\n *\n * You get null for this property for a new item in a compose form. If the user sets a subject and saves the item, the `conversationId` property will return a value.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "conversationId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "conversationId",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageCompose#from:member",
                  "docComment": "/**\n * Gets the email address of the sender of a message.\n *\n * The `from` property returns a `From` object that provides a method to get the from value.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "from: "
                    },
                    {
                      "kind": "Reference",
                      "text": "From",
                      "canonicalReference": "outlook!Office.From:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "from",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#getAttachmentContentAsync:member(1)",
                  "docComment": "/**\n * Gets an attachment from a message or appointment and returns it as an `AttachmentContent` object.\n *\n * The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item. As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachment IDs were retrieved with the `getAttachmentsAsync` or `item.attachments` call. In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session. A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `AttachmentTypeNotSupported`: The attachment type isn't supported. Unsupported types include embedded images in Rich Text Format, or item attachment types other than email or calendar items (such as a contact or task item).\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param attachmentId - The identifier of the attachment you want to get.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAttachmentContentAsync(attachmentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentContent",
                      "canonicalReference": "outlook!Office.AttachmentContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "attachmentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "getAttachmentContentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#getAttachmentContentAsync:member(2)",
                  "docComment": "/**\n * Gets an attachment from a message or appointment and returns it as an `AttachmentContent` object.\n *\n * The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item. As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachment IDs were retrieved with the `getAttachmentsAsync` or `item.attachments` call. In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session. A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `AttachmentTypeNotSupported`: The attachment type isn't supported. Unsupported types include embedded images in Rich Text Format, or item attachment types other than email or calendar items (such as a contact or task item).\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param attachmentId - The identifier of the attachment you want to get.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAttachmentContentAsync(attachmentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentContent",
                      "canonicalReference": "outlook!Office.AttachmentContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "attachmentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAttachmentContentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#getAttachmentsAsync:member(1)",
                  "docComment": "/**\n * Gets the item's attachments as an array.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAttachmentsAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentDetailsCompose",
                      "canonicalReference": "outlook!Office.AttachmentDetailsCompose:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAttachmentsAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#getAttachmentsAsync:member(2)",
                  "docComment": "/**\n * Gets the item's attachments as an array.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAttachmentsAsync(callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentDetailsCompose",
                      "canonicalReference": "outlook!Office.AttachmentDetailsCompose:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAttachmentsAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#getItemIdAsync:member(1)",
                  "docComment": "/**\n * Asynchronously gets the ID of a saved item.\n *\n * When invoked, this method returns the item ID via the callback method.\n *\n * **Note**: If your add-in calls `getItemIdAsync` on an item in compose mode (e.g., to get an `itemId` to use with EWS or the REST API), be aware that when Outlook is in cached mode, it may take some time before the item is synced to the server. Until the item is synced, the `itemId` is not recognized and using it returns an error.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `ItemNotSaved`: The id can't be retrieved until the item is saved.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemIdAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getItemIdAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#getItemIdAsync:member(2)",
                  "docComment": "/**\n * Asynchronously gets the ID of a saved item.\n *\n * When invoked, this method returns the item ID via the callback method.\n *\n * **Note**: If your add-in calls `getItemIdAsync` on an item in compose mode (e.g., to get an `itemId` to use with EWS or the REST API), be aware that when Outlook is in cached mode, it may take some time before the item is synced to the server. Until the item is synced, the `itemId` is not recognized and using it returns an error.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `ItemNotSaved`: The id can't be retrieved until the item is saved.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemIdAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getItemIdAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#getSelectedDataAsync:member(1)",
                  "docComment": "/**\n * Asynchronously returns selected data from the subject or body of a message.\n *\n * If there is no selection but the cursor is in the body or subject, the method returns an empty string for the selected data. If a field other than the body or subject is selected, the method returns the `InvalidSelection` error.\n *\n * To access the selected data from the callback method, call `asyncResult.value.data`. To access the source property that the selection comes from, call `asyncResult.value.sourceProperty`, which will be either `body` or `subject`.\n *\n * [Api set: Mailbox 1.2]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * @param coercionType - Requests a format for the data. If `Text`, the method returns the plain text as a string, removing any HTML tags present. If `Html`, the method returns the selected text, whether it is plaintext or HTML.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n *\n * @returns The selected data as a string with format determined by `coercionType`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedDataAsync(coercionType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.CoercionType",
                      "canonicalReference": "office!Office.CoercionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<any>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "coercionType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "getSelectedDataAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#getSelectedDataAsync:member(2)",
                  "docComment": "/**\n * Asynchronously returns selected data from the subject or body of a message.\n *\n * If there is no selection but the cursor is in the body or subject, the method returns an empty string for the selected data. If a field other than the body or subject is selected, the method returns the `InvalidSelection` error.\n *\n * To access the selected data from the callback method, call `asyncResult.value.data`. To access the source property that the selection comes from, call `asyncResult.value.sourceProperty`, which will be either `body` or `subject`.\n *\n * [Api set: Mailbox 1.2]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * @param coercionType - Requests a format for the data. If `Text`, the method returns the plain text as a string, removing any HTML tags present. If `Html`, the method returns the selected text, whether it is plaintext or HTML.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n *\n * @returns The selected data as a string with format determined by `coercionType`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedDataAsync(coercionType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.CoercionType",
                      "canonicalReference": "office!Office.CoercionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<any>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "coercionType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "getSelectedDataAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#getSharedPropertiesAsync:member(1)",
                  "docComment": "/**\n * Gets the properties of an appointment or message in a shared folder.\n *\n * **Important**: In Message Compose mode, this API is not supported in Outlook on the web or Windows unless the following conditions are met.\n *\n * 1. The owner shares at least one mailbox folder with the delegate.\n *\n * 2. The delegate drafts a message in the shared folder.\n *\n * After the message has been sent, it's usually found in the delegate's **Sent Items** folder.\n *\n * For more information around using this API, see the {@link https://docs.microsoft.com/office/dev/add-ins/outlook/delegate-access | delegate access} article.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is the properties of the shared item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSharedPropertiesAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "SharedProperties",
                      "canonicalReference": "outlook!Office.SharedProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getSharedPropertiesAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#getSharedPropertiesAsync:member(2)",
                  "docComment": "/**\n * Gets the properties of an appointment or message in a shared folder.\n *\n * **Important**: In Message Compose mode, this API is not supported in Outlook on the web or Windows unless the following conditions are met.\n *\n * 1. The owner shares at least one mailbox folder with the delegate.\n *\n * 2. The delegate drafts a message in the shared folder.\n *\n * After the message has been sent, it's usually found in the delegate's **Sent Items** folder.\n *\n * For more information around using this API, see the {@link https://docs.microsoft.com/office/dev/add-ins/outlook/delegate-access | delegate access} article.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is the properties of the shared item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSharedPropertiesAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "SharedProperties",
                      "canonicalReference": "outlook!Office.SharedProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getSharedPropertiesAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageCompose#internetHeaders:member",
                  "docComment": "/**\n * Gets or sets the custom internet headers of a message.\n *\n * The `internetHeaders` property returns an `InternetHeaders` object that provides methods to manage the internet headers on the message.\n *\n * To learn more, see {@link https://docs.microsoft.com/office/dev/add-ins/outlook/internet-headers | Get and set internet headers on a message in an Outlook add-in}.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "internetHeaders: "
                    },
                    {
                      "kind": "Reference",
                      "text": "InternetHeaders",
                      "canonicalReference": "outlook!Office.InternetHeaders:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "internetHeaders",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageCompose#itemType:member",
                  "docComment": "/**\n * Gets the type of item that an instance represents.\n *\n * The `itemType` property returns one of the `ItemType` enumeration values, indicating whether the item object instance is a message or an appointment.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "itemType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.ItemType",
                      "canonicalReference": "outlook!Office.MailboxEnums.ItemType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "itemType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#loadCustomPropertiesAsync:member(1)",
                  "docComment": "/**\n * Asynchronously loads custom properties for this add-in on the selected item.\n *\n * Custom properties are stored as key/value pairs on a per-app, per-item basis. This method returns a `CustomProperties` object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in. Custom properties are not encrypted on the item, so this should not be used as secure storage.\n *\n * The custom properties are provided as a `CustomProperties` object in the asyncResult.value property. This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n *\n * @param userContext - Optional. Developers can provide any object they wish to access in the callback function. This object can be accessed by the `asyncResult.asyncContext` property in the callback function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "loadCustomPropertiesAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomProperties",
                      "canonicalReference": "outlook!Office.CustomProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ", userContext?: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "userContext",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "loadCustomPropertiesAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageCompose#notificationMessages:member",
                  "docComment": "/**\n * Gets the notification messages for an item.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notificationMessages: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NotificationMessages",
                      "canonicalReference": "outlook!Office.NotificationMessages:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "notificationMessages",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#removeAttachmentAsync:member(1)",
                  "docComment": "/**\n * Removes an attachment from a message or appointment.\n *\n * The `removeAttachmentAsync` method removes the attachment with the specified identifier from the item. As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session. In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session. A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param attachmentId - The identifier of the attachment to remove. The maximum string length of the `attachmentId` is 200 characters in Outlook on the web and on Windows.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If removing the attachment fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAttachmentAsync(attachmentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "attachmentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "removeAttachmentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#removeAttachmentAsync:member(2)",
                  "docComment": "/**\n * Removes an attachment from a message or appointment.\n *\n * The `removeAttachmentAsync` method removes the attachment with the specified identifier from the item. As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session. In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session. A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param attachmentId - The identifier of the attachment to remove. The maximum string length of the `attachmentId` is 200 characters in Outlook on the web and on Windows.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If removing the attachment fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAttachmentAsync(attachmentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "attachmentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "removeAttachmentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#removeHandlerAsync:member(1)",
                  "docComment": "/**\n * Removes the event handlers for a supported event type. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * @param eventType - The event that should revoke the handler.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "removeHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#removeHandlerAsync:member(2)",
                  "docComment": "/**\n * Removes the event handlers for a supported event type. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * @param eventType - The event that should revoke the handler.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "removeHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#saveAsync:member(1)",
                  "docComment": "/**\n * Asynchronously saves an item.\n *\n * When invoked, this method saves the current message as a draft and returns the item ID via the callback method. In Outlook on the web or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.\n *\n * Since appointments have no draft state, if `saveAsync` is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar. For new appointments that have not been saved before, no invitation will be sent. Saving an existing appointment will send an update to added or removed attendees.\n *\n * **Note**: If your add-in calls `saveAsync` on an item in compose mode in order to get an item ID to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server. Until the item is synced, using the itemId will return an error.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "saveAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "saveAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#saveAsync:member(2)",
                  "docComment": "/**\n * Asynchronously saves an item.\n *\n * When invoked, this method saves the current message as a draft and returns the item id via the callback method. In Outlook on the web or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.\n *\n * Since appointments have no draft state, if `saveAsync` is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar. For new appointments that have not been saved before, no invitation will be sent. Saving an existing appointment will send an update to added or removed attendees.\n *\n * **Note**: If your add-in calls `saveAsync` on an item in compose mode in order to get an item ID to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server. Until the item is synced, using the `itemId` will return an error.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "saveAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "saveAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageCompose#seriesId:member",
                  "docComment": "/**\n * Gets the ID of the series that an instance belongs to.\n *\n * In Outlook on the web and desktop clients, the `seriesId` returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to. However, on iOS and Android, the seriesId returns the REST ID of the parent item.\n *\n * **Note**: The identifier returned by the `seriesId` property is the same as the Exchange Web Services item identifier. The `seriesId` property is not identical to the Outlook IDs used by the Outlook REST API. Before making REST API calls using this value, it should be converted using `Office.context.mailbox.convertToRestId`. For more details, see {@link https://docs.microsoft.com/office/dev/add-ins/outlook/use-rest-api | Use the Outlook REST APIs from an Outlook add-in}.\n *\n * The `seriesId` property returns `null` for items that do not have parent items such as single appointments, series items, or meeting requests and returns `undefined` for any other items that are not meeting requests.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "seriesId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "seriesId",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#setSelectedDataAsync:member(1)",
                  "docComment": "/**\n * Asynchronously inserts data into the body or subject of a message.\n *\n * The `setSelectedDataAsync` method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text. If the cursor is not in the body or subject field, an error is returned. After insertion, the cursor is placed at the end of the inserted content.\n *\n * [Api set: Mailbox 1.2]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param data - The data to be inserted. Data is not to exceed 1,000,000 characters. If more than 1,000,000 characters are passed in, an `ArgumentOutOfRange` exception is thrown.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method. `coercionType`: If text, the current style is applied in Outlook on the web and desktop clients. If the field is an HTML editor, only the text data is inserted, even if the data is HTML. If html and the field supports HTML (the subject doesn't), the current style is applied in Outlook on the web and the default style is applied in Outlook on desktop clients. If the field is a text field, an `InvalidDataFormat` error is returned. If `coercionType` is not set, the result depends on the field: if the field is HTML then HTML is used; if the field is text, then plain text is used.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSelectedDataAsync(data: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " & "
                    },
                    {
                      "kind": "Reference",
                      "text": "CoercionTypeOptions",
                      "canonicalReference": "outlook!Office.CoercionTypeOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "data",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "setSelectedDataAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageCompose#setSelectedDataAsync:member(2)",
                  "docComment": "/**\n * Asynchronously inserts data into the body or subject of a message.\n *\n * The `setSelectedDataAsync` method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text. If the cursor is not in the body or subject field, an error is returned. After insertion, the cursor is placed at the end of the inserted content.\n *\n * [Api set: Mailbox 1.2]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n *\n * **Errors**:\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param data - The data to be inserted. Data is not to exceed 1,000,000 characters. If more than 1,000,000 characters are passed in, an `ArgumentOutOfRange` exception is thrown.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSelectedDataAsync(data: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "data",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "setSelectedDataAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageCompose#subject:member",
                  "docComment": "/**\n * Gets or sets the description that appears in the subject field of an item.\n *\n * The `subject` property gets or sets the entire subject of the item, as sent by the email server.\n *\n * The `subject` property returns a `Subject` object that provides methods to get and set the subject.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subject: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Subject",
                      "canonicalReference": "outlook!Office.Subject:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "subject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageCompose#to:member",
                  "docComment": "/**\n * Provides access to the recipients on the **To** line of a message. The type of object and level of access depend on the mode of the current item.\n *\n * The `to` property returns a `Recipients` object that provides methods to get or update the recipients on the **To** line of the message. However, depending on the client/platform (i.e., Windows, Mac, etc.), limits may apply on how many recipients you can get or update. See the {@link Office.Recipients | Recipients} object for more details.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Compose\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "to: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Recipients",
                      "canonicalReference": "outlook!Office.Recipients:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "to",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                },
                {
                  "startIndex": 3,
                  "endIndex": 5
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.MessageRead:interface",
              "docComment": "/**\n * The message read mode of {@link Office.Item | Office.context.mailbox.item}.\n *\n * **Important**: This is an internal Outlook object, not directly exposed through existing interfaces. You should treat this as a mode of `Office.context.mailbox.item`. Refer to the {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item | Object Model} page for more information.\n *\n * Parent interfaces:\n *\n * - {@link Office.ItemRead | ItemRead}\n *\n * - {@link Office.Message | Message}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface MessageRead extends "
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "outlook!Office.Message:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ItemRead",
                  "canonicalReference": "outlook!Office.ItemRead:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "MessageRead",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#addHandlerAsync:member(1)",
                  "docComment": "/**\n * Adds an event handler for a supported event. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param eventType - The event that should invoke the handler.\n *\n * @param handler - The function to handle the event. The function must accept a single parameter, which is an object literal. The type property on the parameter will match the eventType `parameter` passed to `addHandlerAsync`.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", handler: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "handler",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "addHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#addHandlerAsync:member(2)",
                  "docComment": "/**\n * Adds an event handler for a supported event. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param eventType - The event that should invoke the handler.\n *\n * @param handler - The function to handle the event. The function must accept a single parameter, which is an object literal. The type property on the parameter will match the eventType `parameter` passed to `addHandlerAsync`.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", handler: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "handler",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "addHandlerAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#attachments:member",
                  "docComment": "/**\n * Gets the item's attachments as an array.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * **Note**: Certain types of files are blocked by Outlook due to potential security issues and are therefore not returned. For more information, see {@link https://support.office.com/article/Blocked-attachments-in-Outlook-434752E1-02D3-4E90-9124-8B81E49A8519 | Blocked attachments in Outlook}.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "attachments: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentDetails",
                      "canonicalReference": "outlook!Office.AttachmentDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "attachments",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#body:member",
                  "docComment": "/**\n * Gets an object that provides methods for manipulating the body of an item.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "body: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Body",
                      "canonicalReference": "outlook!Office.Body:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "body",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#categories:member",
                  "docComment": "/**\n * Gets an object that provides methods for managing the item's categories.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "categories: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Categories",
                      "canonicalReference": "outlook!Office.Categories:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "categories",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#cc:member",
                  "docComment": "/**\n * Provides access to the Cc (carbon copy) recipients of a message. The type of object and level of access depend on the mode of the current item.\n *\n * The `cc` property returns an array that contains an {@link Office.EmailAddressDetails | EmailAddressDetails} object for each recipient listed on the **Cc** line of the message. Collection size limits:\n *\n * - Windows: 500 members\n *\n * - Mac: 100 members\n *\n * - Web browser: 20 members\n *\n * - Other: No limit\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cc: "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "cc",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#conversationId:member",
                  "docComment": "/**\n * Gets an identifier for the email conversation that contains a particular message.\n *\n * You can get an integer for this property if your mail app is activated in read forms or responses in compose forms. If subsequently the user changes the subject of the reply message, upon sending the reply, the conversation ID for that message will change and that value you obtained earlier will no longer apply.\n *\n * You get null for this property for a new item in a compose form. If the user sets a subject and saves the item, the `conversationId` property will return a value.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "conversationId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "conversationId",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#dateTimeCreated:member",
                  "docComment": "/**\n * Gets the date and time that an item was created.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dateTimeCreated: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "dateTimeCreated",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#dateTimeModified:member",
                  "docComment": "/**\n * Gets the date and time that an item was last modified.\n *\n * **Note**: This member is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dateTimeModified: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "dateTimeModified",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#displayReplyAllForm:member(1)",
                  "docComment": "/**\n * Displays a reply form that includes either the sender and all recipients of the selected message or the organizer and all attendees of the selected appointment.\n *\n * In Outlook on the web, the reply form is displayed as a pop-out form in the 3-column view and a pop-up form in the 2-column or 1-column view.\n *\n * If any of the string parameters exceed their limits, `displayReplyAllForm` throws an exception.\n *\n * When attachments are specified in the `formData.attachments` parameter, Outlook attempts to download all attachments and attach them to the reply form. If any attachments fail to be added, an error is shown in the form UI. If this isn't possible, then no error message is thrown.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param formData - A string that contains text and HTML and that represents the body of the reply form. The string is limited to 32 KB OR a {@link Office.ReplyFormData | ReplyFormData} object that contains body or attachment data and a callback function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayReplyAllForm(formData: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReplyFormData",
                      "canonicalReference": "outlook!Office.ReplyFormData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "displayReplyAllForm"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#displayReplyForm:member(1)",
                  "docComment": "/**\n * Displays a reply form that includes only the sender of the selected message or the organizer of the selected appointment.\n *\n * In Outlook on the web, the reply form is displayed as a pop-out form in the 3-column view and a pop-up form in the 2-column or 1-column view.\n *\n * If any of the string parameters exceed their limits, `displayReplyForm` throws an exception.\n *\n * When attachments are specified in the `formData.attachments` parameter, Outlook attempts to download all attachments and attach them to the reply form. If any attachments fail to be added, an error is shown in the form UI. If this isn't possible, then no error message is thrown.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param formData - A string that contains text and HTML and that represents the body of the reply form. The string is limited to 32 KB OR a {@link Office.ReplyFormData | ReplyFormData} object that contains body or attachment data and a callback function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayReplyForm(formData: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReplyFormData",
                      "canonicalReference": "outlook!Office.ReplyFormData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "displayReplyForm"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#end:member",
                  "docComment": "/**\n * Gets the date and time that the appointment is to end.\n *\n * The `end` property is a `Date` object expressed as a Coordinated Universal Time (UTC) date and time value. You can use the `convertToLocalClientTime` method to convert the `end` property value to the client's local date and time.\n *\n * When you use the `Time.setAsync` method to set the end time, you should use the `convertToUtcClientTime` method to convert the local time on the client to UTC for the server.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "end: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "end",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#from:member",
                  "docComment": "/**\n * Gets the email address of the sender of a message.\n *\n * The `from` and `sender` properties represent the same person unless the message is sent by a delegate. In that case, the `from` property represents the delegator, and the `sender` property represents the delegate.\n *\n * **Note**: The `recipientType` property of the `EmailAddressDetails` object in the `from` property is undefined.\n *\n * The `from` property returns an `EmailAddressDetails` object.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "from: "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "from",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#getAllInternetHeadersAsync:member(1)",
                  "docComment": "/**\n * Gets all the internet headers for the message as a string.\n *\n * To learn more, see {@link https://docs.microsoft.com/office/dev/add-ins/outlook/internet-headers | Get and set internet headers on a message in an Outlook add-in}.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. On success, the internet headers data is provided in the `asyncResult.value` property as a string. Refer to {@link https://tools.ietf.org/html/rfc2183 | RFC 2183} for the formatting information of the returned string value. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllInternetHeadersAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAllInternetHeadersAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#getAllInternetHeadersAsync:member(2)",
                  "docComment": "/**\n * Gets all the internet headers for the message as a string.\n *\n * To learn more, see {@link https://docs.microsoft.com/office/dev/add-ins/outlook/internet-headers | Get and set internet headers on a message in an Outlook add-in}.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. On success, the internet headers data is provided in the `asyncResult.value` property as a string. Refer to {@link https://tools.ietf.org/html/rfc2183 | RFC 2183} for the formatting information of the returned string value. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllInternetHeadersAsync(callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getAllInternetHeadersAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#getAttachmentContentAsync:member(1)",
                  "docComment": "/**\n * Gets an attachment from a message or appointment and returns it as an `AttachmentContent` object.\n *\n * The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item. As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachmentIds were retrieved with the `getAttachmentsAsync` or `item.attachments` call. In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session. A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * **Errors**:\n *\n * - `AttachmentTypeNotSupported`: The attachment type isn't supported. Unsupported types include embedded images in Rich Text Format, or item attachment types other than email or calendar items (such as a contact or task item).\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param attachmentId - The identifier of the attachment you want to get.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAttachmentContentAsync(attachmentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentContent",
                      "canonicalReference": "outlook!Office.AttachmentContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "attachmentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "getAttachmentContentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#getAttachmentContentAsync:member(2)",
                  "docComment": "/**\n * Gets an attachment from a message or appointment and returns it as an `AttachmentContent` object.\n *\n * The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item. As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachmentIds were retrieved with the `getAttachmentsAsync` or `item.attachments` call. In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session. A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * **Errors**:\n *\n * - `AttachmentTypeNotSupported`: The attachment type isn't supported. Unsupported types include embedded images in Rich Text Format, or item attachment types other than email or calendar items (such as a contact or task item).\n *\n * - `InvalidAttachmentId`: The attachment identifier does not exist.\n *\n * @param attachmentId - The identifier of the attachment you want to get.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. If the call fails, the `asyncResult.error` property will contain an error code with the reason for the failure.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAttachmentContentAsync(attachmentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "AttachmentContent",
                      "canonicalReference": "outlook!Office.AttachmentContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "attachmentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAttachmentContentAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#getEntities:member(1)",
                  "docComment": "/**\n * Gets the entities found in the selected item's body.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEntities(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entities",
                      "canonicalReference": "outlook!Office.Entities:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEntities"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#getEntitiesByType:member(1)",
                  "docComment": "/**\n * Gets an array of all the entities of the specified entity type found in the selected item's body.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param entityType - One of the `EntityType` enumeration values.\n *\n * While the minimum permission level to use this method is `Restricted`, some entity types require `ReadItem` to access, as specified in the following table.\n *\n * <table> <tr> <th>Value of entityType</th> <th>Type of objects in returned array</th> <th>Required Permission Level</th> </tr> <tr> <td>Address</td> <td>String</td> <td>Restricted</td> </tr> <tr> <td>Contact</td> <td>Contact</td> <td>ReadItem</td> </tr> <tr> <td>EmailAddress</td> <td>String</td> <td>ReadItem</td> </tr> <tr> <td>MeetingSuggestion</td> <td>MeetingSuggestion</td> <td>ReadItem</td> </tr> <tr> <td>PhoneNumber</td> <td>PhoneNumber</td> <td>Restricted</td> </tr> <tr> <td>TaskSuggestion</td> <td>TaskSuggestion</td> <td>ReadItem</td> </tr> <tr> <td>URL</td> <td>String</td> <td>Restricted</td> </tr> </table>\n *\n * @returns If the value passed in `entityType` is not a valid member of the `EntityType` enumeration, the method returns `null`. If no entities of the specified type are present in the item's body, the method returns an empty array. Otherwise, the type of the objects in the returned array depends on the type of entity requested in the `entityType` parameter.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEntitiesByType(entityType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.EntityType",
                      "canonicalReference": "outlook!Office.MailboxEnums.EntityType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "(string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Contact",
                      "canonicalReference": "outlook!Office.Contact:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "MeetingSuggestion",
                      "canonicalReference": "outlook!Office.MeetingSuggestion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "PhoneNumber",
                      "canonicalReference": "outlook!Office.PhoneNumber:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "TaskSuggestion",
                      "canonicalReference": "outlook!Office.TaskSuggestion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ")[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "entityType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "getEntitiesByType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#getFilteredEntitiesByName:member(1)",
                  "docComment": "/**\n * Returns well-known entities in the selected item that pass the named filter defined in the manifest XML file.\n *\n * The `getFilteredEntitiesByName` method returns the entities that match the regular expression defined in the `ItemHasKnownEntity` rule element in the manifest XML file with the specified `FilterName` element value.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param name - The name of the `ItemHasKnownEntity` rule element that defines the filter to match.\n *\n * @returns If there is no `ItemHasKnownEntity` element in the manifest with a `FilterName` element value that matches the `name` parameter, the method returns `null`. If the `name` parameter does match an `ItemHasKnownEntity` element in the manifest, but there are no entities in the current item that match, the method return an empty array.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFilteredEntitiesByName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "(string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Contact",
                      "canonicalReference": "outlook!Office.Contact:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "MeetingSuggestion",
                      "canonicalReference": "outlook!Office.MeetingSuggestion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "PhoneNumber",
                      "canonicalReference": "outlook!Office.PhoneNumber:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "TaskSuggestion",
                      "canonicalReference": "outlook!Office.TaskSuggestion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ")[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getFilteredEntitiesByName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#getRegExMatches:member(1)",
                  "docComment": "/**\n * Returns string values in the selected item that match the regular expressions defined in the manifest XML file.\n *\n * The `getRegExMatches` method returns the strings that match the regular expression defined in each `ItemHasRegularExpressionMatch` or `ItemHasKnownEntity` rule element in the manifest XML file. For an `ItemHasRegularExpressionMatch` rule, a matching string has to occur in the property of the item that is specified by that rule. The `PropertyName` simple type defines the supported properties.\n *\n * If you specify an `ItemHasRegularExpressionMatch` rule on the body property of an item, the regular expression should further filter the body and should not attempt to return the entire body of the item. Using a regular expression such as .* to obtain the entire body of an item does not always return the expected results. Instead, use the `Body.getAsync` method to retrieve the entire body.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @returns An object that contains arrays of strings that match the regular expressions defined in the manifest XML file. The name of each array is equal to the corresponding value of the `RegExName` attribute of the matching `ItemHasRegularExpressionMatch` rule or the `FilterName` attribute of the matching `ItemHasKnownEntity` rule.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRegExMatches(): "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRegExMatches"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#getRegExMatchesByName:member(1)",
                  "docComment": "/**\n * Returns string values in the selected item that match the named regular expression defined in the manifest XML file.\n *\n * The `getRegExMatchesByName` method returns the strings that match the regular expression defined in the `ItemHasRegularExpressionMatch` rule element in the manifest XML file with the specified `RegExName` element value.\n *\n * If you specify an `ItemHasRegularExpressionMatch` rule on the body property of an item, the regular expression should further filter the body and should not attempt to return the entire body of the item. Using a regular expression such as .* to obtain the entire body of an item does not always return the expected results.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param name - The name of the `ItemHasRegularExpressionMatch` rule element that defines the filter to match.\n *\n * @returns An array that contains the strings that match the regular expression defined in the manifest XML file.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRegExMatchesByName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRegExMatchesByName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#getSelectedEntities:member(1)",
                  "docComment": "/**\n * Gets the entities found in a highlighted match a user has selected. Highlighted matches apply to contextual add-ins.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.6]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param name - The name of the `ItemHasRegularExpressionMatch` rule element that defines the filter to match.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedEntities(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entities",
                      "canonicalReference": "outlook!Office.Entities:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSelectedEntities"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#getSelectedRegExMatches:member(1)",
                  "docComment": "/**\n * Returns string values in a highlighted match that match the regular expressions defined in the manifest XML file. Highlighted matches apply to contextual add-ins.\n *\n * The `getSelectedRegExMatches` method returns the strings that match the regular expression defined in each `ItemHasRegularExpressionMatch` or `ItemHasKnownEntity` rule element in the manifest XML file. For an `ItemHasRegularExpressionMatch` rule, a matching string has to occur in the property of the item that is specified by that rule. The `PropertyName` simple type defines the supported properties.\n *\n * If you specify an `ItemHasRegularExpressionMatch` rule on the body property of an item, the regular expression should further filter the body and should not attempt to return the entire body of the item. Using a regular expression such as .* to obtain the entire body of an item does not always return the expected results. Instead, use the `Body.getAsync` method to retrieve the entire body.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.6]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @returns An object that contains arrays of strings that match the regular expressions defined in the manifest XML file. The name of each array is equal to the corresponding value of the `RegExName` attribute of the matching `ItemHasRegularExpressionMatch` rule or the `FilterName` attribute of the matching `ItemHasKnownEntity` rule.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedRegExMatches(): "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSelectedRegExMatches"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#getSharedPropertiesAsync:member(1)",
                  "docComment": "/**\n * Gets the properties of an appointment or message in a shared folder.\n *\n * For more information around using this API, see the {@link https://docs.microsoft.com/office/dev/add-ins/outlook/delegate-access | delegate access} article.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is the properties of the shared item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSharedPropertiesAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "SharedProperties",
                      "canonicalReference": "outlook!Office.SharedProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getSharedPropertiesAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#getSharedPropertiesAsync:member(2)",
                  "docComment": "/**\n * Gets the properties of an appointment or message in a shared folder.\n *\n * For more information around using this API, see the {@link https://docs.microsoft.com/office/dev/add-ins/outlook/delegate-access | delegate access} article.\n *\n * **Note**: This method is not supported in Outlook on iOS or Android.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is the properties of the shared item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSharedPropertiesAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "SharedProperties",
                      "canonicalReference": "outlook!Office.SharedProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getSharedPropertiesAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#internetMessageId:member",
                  "docComment": "/**\n * Gets the internet message identifier for an email message.\n *\n * **Important**: In the **Sent Items** folder, the `internetMessageId` may not be available yet on recently sent items. In that case, consider using {@link https://docs.microsoft.com/office/dev/add-ins/outlook/web-services | Exchange Web Services} to get this {@link https://docs.microsoft.com/exchange/client-developer/web-service-reference/internetmessageid | property from the server}.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "internetMessageId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "internetMessageId",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#itemClass:member",
                  "docComment": "/**\n * Gets the Exchange Web Services item class of the selected item.\n *\n * You can create custom message classes that extends a default message class, for example, a custom appointment message class `IPM.Appointment.Contoso`.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * The `itemClass` property specifies the message class of the selected item. The following are the default message classes for the message or appointment item.\n *\n * <table> <tr> <th>Type</th> <th>Description</th> <th>Item Class</th> </tr> <tr> <td>Appointment items</td> <td>These are calendar items of the item class IPM.Appointment or IPM.Appointment.Occurrence.</td> <td>IPM.Appointment,IPM.Appointment.Occurrence</td> </tr> <tr> <td>Message items</td> <td>These include email messages that have the default message class IPM.Note, and meeting requests, responses, and cancellations, that use IPM.Schedule.Meeting as the base message class.</td> <td>IPM.Note,IPM.Schedule.Meeting.Request,IPM.Schedule.Meeting.Neg,IPM.Schedule.Meeting.Pos,IPM.Schedule.Meeting.Tent,IPM.Schedule.Meeting.Canceled</td> </tr> </table>\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "itemClass: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "itemClass",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#itemId:member",
                  "docComment": "/**\n * Gets the {@link https://docs.microsoft.com/exchange/client-developer/exchange-web-services/ews-identifiers-in-exchange | Exchange Web Services item identifier} for the current item.\n *\n * The `itemId` property is not available in compose mode. If an item identifier is required, the `saveAsync` method can be used to save the item to the store, which will return the item identifier in the `asyncResult.value` parameter in the callback function.\n *\n * **Note**: The identifier returned by the `itemId` property is the same as the {@link https://docs.microsoft.com/exchange/client-developer/exchange-web-services/ews-identifiers-in-exchange | Exchange Web Services item identifier}. The `itemId` property is not identical to the Outlook Entry ID or the ID used by the Outlook REST API. Before making REST API calls using this value, it should be converted using `Office.context.mailbox.convertToRestId`. For more details, see {@link https://docs.microsoft.com/office/dev/add-ins/outlook/use-rest-api#get-the-item-id | Use the Outlook REST APIs from an Outlook add-in}.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "itemId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "itemId",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#itemType:member",
                  "docComment": "/**\n * Gets the type of item that an instance represents.\n *\n * The `itemType` property returns one of the `ItemType` enumeration values, indicating whether the item object instance is a message or an appointment.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "itemType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.ItemType",
                      "canonicalReference": "outlook!Office.MailboxEnums.ItemType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "itemType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#loadCustomPropertiesAsync:member(1)",
                  "docComment": "/**\n * Asynchronously loads custom properties for this add-in on the selected item.\n *\n * Custom properties are stored as key/value pairs on a per-app, per-item basis. This method returns a `CustomProperties` object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in. Custom properties are not encrypted on the item, so this should not be used as secure storage.\n *\n * The custom properties are provided as a `CustomProperties` object in the `asyncResult.value` property. This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n *\n * @param userContext - Optional. Developers can provide any object they wish to access in the callback function. This object can be accessed by the `asyncResult.asyncContext` property in the callback function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "loadCustomPropertiesAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomProperties",
                      "canonicalReference": "outlook!Office.CustomProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ", userContext?: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "userContext",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "loadCustomPropertiesAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#location:member",
                  "docComment": "/**\n * Gets the location of a meeting request.\n *\n * The `location` property returns a string that contains the location of the appointment.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "location: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "location",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#normalizedSubject:member",
                  "docComment": "/**\n * Gets the subject of an item, with all prefixes removed (including RE: and FWD:).\n *\n * The `normalizedSubject` property gets the subject of the item, with any standard prefixes (such as RE: and FW:) that are added by email programs. To get the subject of the item with the prefixes intact, use the `subject` property.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "normalizedSubject: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "normalizedSubject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#notificationMessages:member",
                  "docComment": "/**\n * Gets the notification messages for an item.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notificationMessages: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NotificationMessages",
                      "canonicalReference": "outlook!Office.NotificationMessages:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "notificationMessages",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#recurrence:member",
                  "docComment": "/**\n * Gets the recurrence pattern of an appointment. Gets the recurrence pattern of a meeting request. Read and compose modes for appointment items. Read mode for meeting request items.\n *\n * The `recurrence` property returns a `Recurrence` object for recurring appointments or meetings requests if an item is a series or an instance in a series. `null` is returned for single appointments and meeting requests of single appointments. `undefined` is returned for messages that are not meeting requests.\n *\n * **Note**: Meeting requests have an itemClass value of `IPM.Schedule.Meeting.Request`.\n *\n * **Note**: If the `recurrence` object is null, this indicates that the object is a single appointment or a meeting request of a single appointment and NOT a part of a series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "recurrence: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Recurrence",
                      "canonicalReference": "outlook!Office.Recurrence:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "recurrence",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#removeHandlerAsync:member(1)",
                  "docComment": "/**\n * Removes the event handlers for a supported event type. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param eventType - The event that should revoke the handler.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "removeHandlerAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.MessageRead#removeHandlerAsync:member(2)",
                  "docComment": "/**\n * Removes the event handlers for a supported event type. **Note**: Events are available only with task pane.\n *\n * Refer to the Item object model {@link https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.8/office.context.mailbox.item#events | events section} for supported events.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n *\n * @param eventType - The event that should revoke the handler.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeHandlerAsync(eventType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.EventType",
                      "canonicalReference": "office!Office.EventType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "removeHandlerAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#sender:member",
                  "docComment": "/**\n * Gets the email address of the sender of an email message.\n *\n * The `from` and `sender` properties represent the same person unless the message is sent by a delegate. In that case, the `from` property represents the delegator, and the `sender` property represents the delegate.\n *\n * **Note**: The `recipientType` property of the `EmailAddressDetails` object in the `sender` property is undefined.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sender: "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "sender",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#seriesId:member",
                  "docComment": "/**\n * Gets the id of the series that an instance belongs to.\n *\n * In Outlook on the web and desktop clients, the `seriesId` returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to. However, on iOS and Android, the `seriesId` returns the REST ID of the parent item.\n *\n * **Note**: The identifier returned by the `seriesId` property is the same as the Exchange Web Services item identifier. The `seriesId` property is not identical to the Outlook IDs used by the Outlook REST API. Before making REST API calls using this value, it should be converted using `Office.context.mailbox.convertToRestId`. For more details, see {@link https://docs.microsoft.com/office/dev/add-ins/outlook/use-rest-api | Use the Outlook REST APIs from an Outlook add-in}.\n *\n * The `seriesId` property returns `null` for items that do not have parent items such as single appointments, series items, or meeting requests and returns `undefined` for any other items that are not meeting requests.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "seriesId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "seriesId",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#start:member",
                  "docComment": "/**\n * Gets the date and time that the appointment is to begin.\n *\n * The `start` property is a `Date` object expressed as a Coordinated Universal Time (UTC) date and time value. You can use the `convertToLocalClientTime` method to convert the value to the client's local date and time.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "start: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "start",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#subject:member",
                  "docComment": "/**\n * Gets the description that appears in the subject field of an item.\n *\n * The `subject` property gets or sets the entire subject of the item, as sent by the email server.\n *\n * The `subject` property returns a string. Use the `normalizedSubject` property to get the subject minus any leading prefixes such as RE: and FW:.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subject: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "subject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.MessageRead#to:member",
                  "docComment": "/**\n * Provides access to the recipients on the **To** line of a message. The type of object and level of access depend on the mode of the current item.\n *\n * The `to` property returns an array that contains an {@link Office.EmailAddressDetails | EmailAddressDetails} object for each recipient listed on the **To** line of the message. Collection size limits:\n *\n * - Windows: 500 members\n *\n * - Mac: 100 members\n *\n * - Web browser: 20 members\n *\n * - Other: No limit\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Message Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "to: "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "to",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                },
                {
                  "startIndex": 3,
                  "endIndex": 5
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.NotificationMessageDetails:interface",
              "docComment": "/**\n * An array of `NotificationMessageDetails` objects are returned by the `NotificationMessages.getAllAsync` method.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface NotificationMessageDetails "
                }
              ],
              "releaseTag": "Public",
              "name": "NotificationMessageDetails",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.NotificationMessageDetails#icon:member",
                  "docComment": "/**\n * A reference to an icon that is defined in the manifest in the `Resources` section. It appears in the infobar area. It is only applicable if the type is `InformationalMessage`. Specifying this parameter for an unsupported type results in an exception.\n *\n * **Note**: At present, the custom icon is displayed in Outlook on Windows only and not on other clients (e.g., Mac, web browser).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "icon?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "icon",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.NotificationMessageDetails#key:member",
                  "docComment": "/**\n * The identifier for the notification message.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "key?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "key",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.NotificationMessageDetails#message:member",
                  "docComment": "/**\n * The text of the notification message. Maximum length is 150 characters. If the developer passes in a longer string, an `ArgumentOutOfRange` exception is thrown.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "message: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "message",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.NotificationMessageDetails#persistent:member",
                  "docComment": "/**\n * Specifies if the message should be persistent. Only applicable when type is `InformationalMessage`. If true, the message remains until removed by this add-in or dismissed by the user. If false, it is removed when the user navigates to a different item. For error notifications, the message persists until the user sees it once. Specifying this parameter for an unsupported type throws an exception.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "persistent?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Boolean",
                      "canonicalReference": "!Boolean:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "persistent",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.NotificationMessageDetails#type:member",
                  "docComment": "/**\n * Specifies the `ItemNotificationMessageType` of message.\n *\n * If type is `ProgressIndicator` or `ErrorMessage`, an icon is automatically supplied and the message is not persistent. Therefore the icon and persistent properties are not valid for these types of messages. Including them will result in an `ArgumentException`.\n *\n * If type is `ProgressIndicator`, the developer should remove or replace the progress indicator when the action is complete.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.ItemNotificationMessageType",
                      "canonicalReference": "outlook!Office.MailboxEnums.ItemNotificationMessageType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.NotificationMessages:interface",
              "docComment": "/**\n * The `NotificationMessages` object is returned as the `notificationMessages` property of an item.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface NotificationMessages "
                }
              ],
              "releaseTag": "Public",
              "name": "NotificationMessages",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.NotificationMessages#addAsync:member(1)",
                  "docComment": "/**\n * Adds a notification to an item.\n *\n * There are a maximum of 5 notifications per message. Setting more will return a `NumberOfNotificationMessagesExceeded` error.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param key - A developer-specified key used to reference this notification message. Developers can use it to modify this message later. It can't be longer than 32 characters.\n *\n * @param JSONmessage - A JSON object that contains the notification message to be added to the item. It contains a `NotificationMessageDetails` object.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addAsync(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", JSONmessage: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NotificationMessageDetails",
                      "canonicalReference": "outlook!Office.NotificationMessageDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "JSONmessage",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "addAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.NotificationMessages#addAsync:member(2)",
                  "docComment": "/**\n * Adds a notification to an item.\n *\n * There are a maximum of 5 notifications per message. Setting more will return a `NumberOfNotificationMessagesExceeded` error.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param key - A developer-specified key used to reference this notification message. Developers can use it to modify this message later. It can't be longer than 32 characters.\n *\n * @param JSONmessage - A JSON object that contains the notification message to be added to the item. It contains a `NotificationMessageDetails` object.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addAsync(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", JSONmessage: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NotificationMessageDetails",
                      "canonicalReference": "outlook!Office.NotificationMessageDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "JSONmessage",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "addAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.NotificationMessages#getAllAsync:member(1)",
                  "docComment": "/**\n * Returns all keys and messages for an item.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is an array of `NotificationMessageDetails` objects.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "NotificationMessageDetails",
                      "canonicalReference": "outlook!Office.NotificationMessageDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAllAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.NotificationMessages#getAllAsync:member(2)",
                  "docComment": "/**\n * Returns all keys and messages for an item.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is an array of `NotificationMessageDetails` objects.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllAsync(callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "NotificationMessageDetails",
                      "canonicalReference": "outlook!Office.NotificationMessageDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAllAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.NotificationMessages#removeAsync:member(1)",
                  "docComment": "/**\n * Removes a notification message for an item.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param key - The key for the notification message to remove.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAsync(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "removeAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.NotificationMessages#removeAsync:member(2)",
                  "docComment": "/**\n * Removes a notification message for an item.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param key - The key for the notification message to remove.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAsync(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "removeAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.NotificationMessages#replaceAsync:member(1)",
                  "docComment": "/**\n * Replaces a notification message that has a given key with another message.\n *\n * If a notification message with the specified key doesn't exist, `replaceAsync` will add the notification.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param key - The key for the notification message to replace. It can't be longer than 32 characters.\n *\n * @param JSONmessage - A JSON object that contains the new notification message to replace the existing message. It contains a `NotificationMessageDetails` object.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "replaceAsync(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", JSONmessage: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NotificationMessageDetails",
                      "canonicalReference": "outlook!Office.NotificationMessageDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "JSONmessage",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "replaceAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.NotificationMessages#replaceAsync:member(2)",
                  "docComment": "/**\n * Replaces a notification message that has a given key with another message.\n *\n * If a notification message with the specified key doesn't exist, `replaceAsync` will add the notification.\n *\n * [Api set: Mailbox 1.3]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param key - The key for the notification message to replace. It can't be longer than 32 characters.\n *\n * @param JSONmessage - A JSON object that contains the new notification message to replace the existing message. It contains a `NotificationMessageDetails` object.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "replaceAsync(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", JSONmessage: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NotificationMessageDetails",
                      "canonicalReference": "outlook!Office.NotificationMessageDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "JSONmessage",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "replaceAsync"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Organizer:interface",
              "docComment": "/**\n * Represents the appointment organizer, even if an alias or a delegate was used to create the appointment. This object provides a method to get the organizer value of an appointment in an Outlook add-in.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Organizer "
                }
              ],
              "releaseTag": "Public",
              "name": "Organizer",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Organizer#getAsync:member(1)",
                  "docComment": "/**\n * Gets the organizer value of an appointment as an {@link Office.EmailAddressDetails | EmailAddressDetails} object in the `asyncResult.value` property.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `AsyncResult` object. The `value` property of the result is the appointment's organizer value, as an `EmailAddressDetails` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Organizer#getAsync:member(2)",
                  "docComment": "/**\n * Gets the organizer value of an appointment as an {@link Office.EmailAddressDetails | EmailAddressDetails} object in the `asyncResult.value` property.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `AsyncResult` object. The `value` property of the result is the appointment's organizer value, as an `EmailAddressDetails` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAsync"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.PhoneNumber:interface",
              "docComment": "/**\n * Represents a phone number identified in an item. Read mode only.\n *\n * An array of `PhoneNumber` objects containing the phone numbers found in an email message is returned in the `phoneNumbers` property of the `Entities` object that is returned when you call the `getEntities` method on the selected item.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PhoneNumber "
                }
              ],
              "releaseTag": "Public",
              "name": "PhoneNumber",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.PhoneNumber#originalPhoneString:member",
                  "docComment": "/**\n * Gets the text that was identified in an item as a phone number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "originalPhoneString: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "originalPhoneString",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.PhoneNumber#phoneString:member",
                  "docComment": "/**\n * Gets a string containing a phone number. This string contains only the digits of the telephone number and excludes characters like parentheses and hyphens, if they exist in the original item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "phoneString: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "phoneString",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.PhoneNumber#type:member",
                  "docComment": "/**\n * Gets a string that identifies the type of phone number: Home, Work, Mobile, Unspecified.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Recipients:interface",
              "docComment": "/**\n * Represents recipients of an item. Compose mode only.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Recipients "
                }
              ],
              "releaseTag": "Public",
              "name": "Recipients",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Recipients#addAsync:member(1)",
                  "docComment": "/**\n * Adds a recipient list to the existing recipients for an appointment or message.\n *\n * The recipients parameter can be an array of one of the following:\n *\n * - Strings containing SMTP email addresses\n *\n * - {@link Office.EmailUser | EmailUser} objects\n *\n * - {@link Office.EmailAddressDetails | EmailAddressDetails} objects\n *\n * Maximum number that can be added:\n *\n * - Windows: 100 recipients. **Note**: Can call API repeatedly but the maximum number of recipients in the target field on the item is 500 recipients.\n *\n * - Mac, web browser: 100 recipients\n *\n * - Other: No limit\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `NumberOfRecipientsExceeded`: The number of recipients exceeded 100 entries.\n *\n * @param recipients - The recipients to add to the recipients list.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If adding the recipients fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addAsync(recipients: "
                    },
                    {
                      "kind": "Content",
                      "text": "(string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailUser",
                      "canonicalReference": "outlook!Office.EmailUser:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ")[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "recipients",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 8
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 9,
                        "endIndex": 12
                      }
                    }
                  ],
                  "name": "addAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Recipients#addAsync:member(2)",
                  "docComment": "/**\n * Adds a recipient list to the existing recipients for an appointment or message.\n *\n * The recipients parameter can be an array of one of the following:\n *\n * - Strings containing SMTP email addresses\n *\n * - {@link Office.EmailUser | EmailUser} objects\n *\n * - {@link Office.EmailAddressDetails | EmailAddressDetails} objects\n *\n * Maximum number that can be added:\n *\n * - Windows: 100 recipients. **Note**: Can call API repeatedly but the maximum number of recipients in the target field on the item is 500 recipients.\n *\n * - Mac, web browser: 100 recipients\n *\n * - Other: No limit\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `NumberOfRecipientsExceeded`: The number of recipients exceeded 100 entries.\n *\n * @param recipients - The recipients to add to the recipients list.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If adding the recipients fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addAsync(recipients: "
                    },
                    {
                      "kind": "Content",
                      "text": "(string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailUser",
                      "canonicalReference": "outlook!Office.EmailUser:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ")[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "recipients",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "addAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Recipients#getAsync:member(1)",
                  "docComment": "/**\n * Gets a recipient list for an appointment or message.\n *\n * When the call completes, the `asyncResult.value` property will contain an array of {@link Office.EmailAddressDetails | EmailAddressDetails} objects. Collection size limits:\n *\n * - Windows, Mac, web browser: 500 members\n *\n * - Other: No limit\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is an array of `EmailAddressDetails` objects.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Recipients#getAsync:member(2)",
                  "docComment": "/**\n * Gets a recipient list for an appointment or message.\n *\n * When the call completes, the `asyncResult.value` property will contain an array of {@link Office.EmailAddressDetails | EmailAddressDetails} objects. Collection size limits:\n *\n * - Windows, Mac, web browser: 500 members\n *\n * - Other: No limit\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is an array of `EmailAddressDetails` objects.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Recipients#setAsync:member(1)",
                  "docComment": "/**\n * Sets a recipient list for an appointment or message.\n *\n * The `setAsync` method overwrites the current recipient list.\n *\n * The recipients parameter can be an array of one of the following:\n *\n * - Strings containing SMTP email addresses\n *\n * - {@link Office.EmailUser | EmailUser} objects\n *\n * - {@link Office.EmailAddressDetails | EmailAddressDetails} objects\n *\n * Maximum number that can be set:\n *\n * - Windows, Mac, web browser: 100 recipients\n *\n * - Other: No limit\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `NumberOfRecipientsExceeded`: The number of recipients exceeded 100 entries.\n *\n * @param recipients - The recipients to add to the recipients list.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If setting the recipients fails the `asyncResult.error` property will contain a code that indicates any error that occurred while adding the data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(recipients: "
                    },
                    {
                      "kind": "Content",
                      "text": "(string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailUser",
                      "canonicalReference": "outlook!Office.EmailUser:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ")[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "recipients",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 8
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 9,
                        "endIndex": 12
                      }
                    }
                  ],
                  "name": "setAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Recipients#setAsync:member(2)",
                  "docComment": "/**\n * Sets a recipient list for an appointment or message.\n *\n * The `setAsync` method overwrites the current recipient list.\n *\n * The recipients parameter can be an array of one of the following:\n *\n * - Strings containing SMTP email addresses\n *\n * - {@link Office.EmailUser | EmailUser} objects\n *\n * - {@link Office.EmailAddressDetails | EmailAddressDetails} objects\n *\n * Maximum number that can be set:\n *\n * - Windows, Mac, web browser: 100 recipients\n *\n * - Other: No limit\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `NumberOfRecipientsExceeded`: The number of recipients exceeded 100 entries.\n *\n * @param recipients - The recipients to add to the recipients list.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If setting the recipients fails the `asyncResult.error` property will contain a code that indicates any error that occurred while adding the data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(recipients: "
                    },
                    {
                      "kind": "Content",
                      "text": "(string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailUser",
                      "canonicalReference": "outlook!Office.EmailUser:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailAddressDetails",
                      "canonicalReference": "outlook!Office.EmailAddressDetails:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ")[]"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "recipients",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "setAsync"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.RecipientsChangedEventArgs:interface",
              "docComment": "/**\n * Provides change status of recipients fields when the `Office.EventType.RecipientsChanged` event is raised.\n *\n * [Api set: Mailbox 1.7]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RecipientsChangedEventArgs "
                }
              ],
              "releaseTag": "Public",
              "name": "RecipientsChangedEventArgs",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecipientsChangedEventArgs#changedRecipientFields:member",
                  "docComment": "/**\n * Gets an object that indicates change state of recipients fields.\n *\n * [Api set: Mailbox 1.7]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "changedRecipientFields: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RecipientsChangedFields",
                      "canonicalReference": "outlook!Office.RecipientsChangedFields:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "changedRecipientFields",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecipientsChangedEventArgs#type:member",
                  "docComment": "/**\n * Gets the type of the event. See `Office.EventType` for details.\n *\n * [Api set: Mailbox 1.7]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "\"olkRecipientsChanged\""
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.RecipientsChangedFields:interface",
              "docComment": "/**\n * Represents `RecipientsChangedEventArgs.changedRecipientFields` object.\n *\n * [Api set: Mailbox 1.7]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RecipientsChangedFields "
                }
              ],
              "releaseTag": "Public",
              "name": "RecipientsChangedFields",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecipientsChangedFields#bcc:member",
                  "docComment": "/**\n * Gets if recipients in the **bcc** field were changed.\n *\n * [Api set: Mailbox 1.7]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bcc: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "bcc",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecipientsChangedFields#cc:member",
                  "docComment": "/**\n * Gets if recipients in the **cc** field were changed.\n *\n * [Api set: Mailbox 1.7]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cc: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "cc",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecipientsChangedFields#optionalAttendees:member",
                  "docComment": "/**\n * Gets if optional attendees were changed.\n *\n * [Api set: Mailbox 1.7]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "optionalAttendees: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "optionalAttendees",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecipientsChangedFields#requiredAttendees:member",
                  "docComment": "/**\n * Gets if required attendees were changed.\n *\n * [Api set: Mailbox 1.7]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "requiredAttendees: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "requiredAttendees",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecipientsChangedFields#resources:member",
                  "docComment": "/**\n * Gets if resources were changed.\n *\n * [Api set: Mailbox 1.7]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "resources: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "resources",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecipientsChangedFields#to:member",
                  "docComment": "/**\n * Gets if recipients in the **to** field were changed.\n *\n * [Api set: Mailbox 1.7]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "to: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "to",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Recurrence:interface",
              "docComment": "/**\n * The `Recurrence` object provides methods to get and set the recurrence pattern of appointments but only get the recurrence pattern of meeting requests. It will have a dictionary with the following keys: `seriesTime`, `recurrenceType`, `recurrenceProperties`, and `recurrenceTimeZone` (optional).\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * **States**\n *\n * <table> <tr> <th>State</th> <th>Editable?</th> <th>Viewable?</th> </tr> <tr> <td>Appointment Organizer - Compose Series</td> <td>Yes (setAsync)</td> <td>Yes (getAsync)</td> </tr> <tr> <td>Appointment Organizer - Compose Instance</td> <td>No (setAsync returns error)</td> <td>Yes (getAsync)</td> </tr> <tr> <td>Appointment Attendee - Read Series</td> <td>No (setAsync not available)</td> <td>Yes (item.recurrence)</td> </tr> <tr> <td>Appointment Attendee - Read Instance</td> <td>No (setAsync not available)</td> <td>Yes (item.recurrence)</td> </tr> <tr> <td>Meeting Request - Read Series</td> <td>No (setAsync not available)</td> <td>Yes (item.recurrence)</td> </tr> <tr> <td>Meeting Request - Read Instance</td> <td>No (setAsync not available)</td> <td>Yes (item.recurrence)</td> </tr> </table>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Recurrence "
                }
              ],
              "releaseTag": "Public",
              "name": "Recurrence",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Recurrence#getAsync:member(1)",
                  "docComment": "/**\n * Returns the current recurrence object of an appointment series.\n *\n * This method returns the entire `Recurrence` object for the appointment series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. The `value` property of the result is a `Recurrence` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "Recurrence",
                      "canonicalReference": "outlook!Office.Recurrence:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Recurrence#getAsync:member(2)",
                  "docComment": "/**\n * Returns the current recurrence object of an appointment series.\n *\n * This method returns the entire `Recurrence` object for the appointment series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object. The `value` property of the result is a `Recurrence` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "Recurrence",
                      "canonicalReference": "outlook!Office.Recurrence:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Recurrence#recurrenceProperties:member",
                  "docComment": "/**\n * Gets or sets the properties of the recurring appointment series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "recurrenceProperties?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RecurrenceProperties",
                      "canonicalReference": "outlook!Office.RecurrenceProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "recurrenceProperties",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Recurrence#recurrenceTimeZone:member",
                  "docComment": "/**\n * Gets or sets the properties of the recurring appointment series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "recurrenceTimeZone?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RecurrenceTimeZone",
                      "canonicalReference": "outlook!Office.RecurrenceTimeZone:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "recurrenceTimeZone",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Recurrence#recurrenceType:member",
                  "docComment": "/**\n * Gets or sets the type of the recurring appointment series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "recurrenceType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.RecurrenceType",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "recurrenceType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.Recurrence#seriesTime:member",
                  "docComment": "/**\n * The {@link Office.SeriesTime | SeriesTime} object enables you to manage the start and end dates of the recurring appointment series and the usual start and end times of instances. **This object is not in UTC time.** Instead, it is set in the time zone specified by the `recurrenceTimeZone` value or defaulted to the item's time zone.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "seriesTime: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SeriesTime",
                      "canonicalReference": "outlook!Office.SeriesTime:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "seriesTime",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Recurrence#setAsync:member(1)",
                  "docComment": "/**\n * Sets the recurrence pattern of an appointment series.\n *\n * **Note**: `setAsync` should only be available for series items and not instance items.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `InvalidEndTime`: The appointment end time is before its start time.\n *\n * @param recurrencePattern - A recurrence object.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(recurrencePattern: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Recurrence",
                      "canonicalReference": "outlook!Office.Recurrence:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "recurrencePattern",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "setAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Recurrence#setAsync:member(2)",
                  "docComment": "/**\n * Sets the recurrence pattern of an appointment series.\n *\n * **Note**: `setAsync` should only be available for series items and not instance items.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `InvalidEndTime`: The appointment end time is before its start time.\n *\n * @param recurrencePattern - A recurrence object.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(recurrencePattern: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Recurrence",
                      "canonicalReference": "outlook!Office.Recurrence:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "recurrencePattern",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "setAsync"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.RecurrenceChangedEventArgs:interface",
              "docComment": "/**\n * Provides updated recurrence object that raised the `Office.EventType.RecurrenceChanged` event.\n *\n * [Api set: Mailbox 1.7]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RecurrenceChangedEventArgs "
                }
              ],
              "releaseTag": "Public",
              "name": "RecurrenceChangedEventArgs",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecurrenceChangedEventArgs#recurrence:member",
                  "docComment": "/**\n * Gets the updated recurrence object.\n *\n * [Api set: Mailbox 1.7]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "recurrence: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Recurrence",
                      "canonicalReference": "outlook!Office.Recurrence:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "recurrence",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecurrenceChangedEventArgs#type:member",
                  "docComment": "/**\n * Gets the type of the event. See `Office.EventType` for details.\n *\n * [Api set: Mailbox 1.7]\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "\"olkRecurrenceChanged\""
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.RecurrenceProperties:interface",
              "docComment": "/**\n * Represents the properties of the recurrence.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RecurrenceProperties "
                }
              ],
              "releaseTag": "Public",
              "name": "RecurrenceProperties",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecurrenceProperties#dayOfMonth:member",
                  "docComment": "/**\n * Represents the day of the month.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dayOfMonth?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "dayOfMonth",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecurrenceProperties#dayOfWeek:member",
                  "docComment": "/**\n * Represents the day of the week or type of day, for example, weekend day vs weekday.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dayOfWeek?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.Days",
                      "canonicalReference": "outlook!Office.MailboxEnums.Days:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "dayOfWeek",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecurrenceProperties#days:member",
                  "docComment": "/**\n * Represents the set of days for this recurrence. Valid values are: 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', and 'Sun'.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "days?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.Days",
                      "canonicalReference": "outlook!Office.MailboxEnums.Days:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "[] | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "days",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecurrenceProperties#firstDayOfWeek:member",
                  "docComment": "/**\n * Represents your chosen first day of the week otherwise the default is the value in the current user's settings. Valid values are: 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', and 'Sun'.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "firstDayOfWeek?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.Days",
                      "canonicalReference": "outlook!Office.MailboxEnums.Days:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "firstDayOfWeek",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecurrenceProperties#interval:member",
                  "docComment": "/**\n * Represents the period between instances of the same recurring series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interval: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "interval",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecurrenceProperties#month:member",
                  "docComment": "/**\n * Represents the month.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "month?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.Month",
                      "canonicalReference": "outlook!Office.MailboxEnums.Month:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "month",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecurrenceProperties#weekNumber:member",
                  "docComment": "/**\n * Represents the number of the week in the selected month e.g., 'first' for first week of the month.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "weekNumber?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.WeekNumber",
                      "canonicalReference": "outlook!Office.MailboxEnums.WeekNumber:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "weekNumber",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.RecurrenceTimeZone:interface",
              "docComment": "/**\n * Represents the time zone of the recurrence.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RecurrenceTimeZone "
                }
              ],
              "releaseTag": "Public",
              "name": "RecurrenceTimeZone",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecurrenceTimeZone#name:member",
                  "docComment": "/**\n * Represents the name of the recurrence time zone.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.RecurrenceTimeZone",
                      "canonicalReference": "outlook!Office.MailboxEnums.RecurrenceTimeZone:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.RecurrenceTimeZone#offset:member",
                  "docComment": "/**\n * Integer value representing the difference in minutes between the local time zone and UTC at the date that the meeting series began.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "offset?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "offset",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.ReplyFormAttachment:interface",
              "docComment": "/**\n * A file or item attachment. Used when displaying a reply form.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ReplyFormAttachment "
                }
              ],
              "releaseTag": "Public",
              "name": "ReplyFormAttachment",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.ReplyFormAttachment#inLine:member",
                  "docComment": "/**\n * Only used if type is set to file. If true, indicates that the attachment will be shown inline in the message body, and should not be displayed in the attachment list.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "inLine?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "inLine",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.ReplyFormAttachment#itemId:member",
                  "docComment": "/**\n * Only used if type is set to item. The EWS item id of the attachment. This is a string up to 100 characters.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "itemId?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "itemId",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.ReplyFormAttachment#name:member",
                  "docComment": "/**\n * A string that contains the name of the attachment, up to 255 characters in length.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.ReplyFormAttachment#type:member",
                  "docComment": "/**\n * Indicates the type of attachment. Must be file for a file attachment or item for an item attachment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.ReplyFormAttachment#url:member",
                  "docComment": "/**\n * Only used if type is set to file. The URI of the location for the file.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "url?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "url",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.ReplyFormData:interface",
              "docComment": "/**\n * A ReplyFormData object that contains body or attachment data and a callback function. Used when displaying a reply form.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ReplyFormData "
                }
              ],
              "releaseTag": "Public",
              "name": "ReplyFormData",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.ReplyFormData#attachments:member",
                  "docComment": "/**\n * An array of {@link Office.ReplyFormAttachment | ReplyFormAttachment} that are either file or item attachments.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "attachments?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReplyFormAttachment",
                      "canonicalReference": "outlook!Office.ReplyFormAttachment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "attachments",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.ReplyFormData#callback:member",
                  "docComment": "/**\n * When the reply display call completes, the function passed in the callback parameter is called with a single parameter, `asyncResult`, which is an `Office.AsyncResult` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<any>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "callback",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.ReplyFormData#htmlBody:member",
                  "docComment": "/**\n * A string that contains text and HTML and that represents the body of the reply form. The string is limited to 32 KB.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "htmlBody?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "htmlBody",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.ReplyFormData#options:member",
                  "docComment": "/**\n * An object literal that contains the following property. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "options?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "options",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.RoamingSettings:interface",
              "docComment": "/**\n * The settings created by using the methods of the `RoamingSettings` object are saved per add-in and per user. That is, they are available only to the add-in that created them, and only from the user's mailbox in which they are saved.\n *\n * While the Outlook add-in API limits access to these settings to only the add-in that created them, these settings should not be considered secure storage. They can be accessed by Exchange Web Services or Extended MAPI. They should not be used to store sensitive information such as user credentials or security tokens.\n *\n * The name of a setting is a String, while the value can be a String, Number, Boolean, null, Object, or Array.\n *\n * The `RoamingSettings` object is accessible via the `roamingSettings` property in the `Office.context` namespace.\n *\n * **Important**:\n *\n * - The `RoamingSettings` object is initialized from the persisted storage only when the add-in is first loaded. For task panes, this means that it is only initialized when the task pane first opens. If the task pane navigates to another page or reloads the current page, the in-memory object is reset to its initial values, even if your add-in has persisted changes. The persisted changes will not be available until the task pane (or item in the case of UI-less add-ins) is closed and reopened.\n *\n * - When set and saved through Outlook on Windows or Mac, these settings are reflected in Outlook on the web only after a browser refresh.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RoamingSettings "
                }
              ],
              "releaseTag": "Public",
              "name": "RoamingSettings",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.RoamingSettings#get:member(1)",
                  "docComment": "/**\n * Retrieves the specified setting.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param name - The case-sensitive name of the setting to retrieve.\n *\n * @returns Type: String | Number | Boolean | Object | Array\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "get"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.RoamingSettings#remove:member(1)",
                  "docComment": "/**\n * Removes the specified setting\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param name - The case-sensitive name of the setting to remove.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "remove(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "remove"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.RoamingSettings#saveAsync:member(1)",
                  "docComment": "/**\n * Saves the settings.\n *\n * Any settings previously saved by an add-in are loaded when it is initialized, so during the lifetime of the session you can just use the set and get methods to work with the in-memory copy of the settings property bag. When you want to persist the settings so that they are available the next time the add-in is used, use the saveAsync method.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "saveAsync(callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "saveAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.RoamingSettings#set:member(1)",
                  "docComment": "/**\n * Sets or creates the specified setting.\n *\n * The `set` method creates a new setting of the specified name if it does not already exist, or sets an existing setting of the specified name. The value is stored in the document as the serialized JSON representation of its data type.\n *\n * A maximum of 32KB is available for the settings of each add-in.\n *\n * Any changes made to settings using the set function will not be saved to the server until the `saveAsync` function is called.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `Restricted`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * @param name - The case-sensitive name of the setting to set or create.\n *\n * @param value - Specifies the value to be stored.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "set(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", value: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "value",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "set"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.SeriesTime:interface",
              "docComment": "/**\n * The `SeriesTime` object provides methods to get and set the dates and times of appointments in a recurring series and get the dates and times of meeting requests in a recurring series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SeriesTime "
                }
              ],
              "releaseTag": "Public",
              "name": "SeriesTime",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.SeriesTime#getDuration:member(1)",
                  "docComment": "/**\n * Gets the duration in minutes of a usual instance in a recurring appointment series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDuration(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDuration"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.SeriesTime#getEndDate:member(1)",
                  "docComment": "/**\n * Gets the end date of a recurrence pattern in the following {@link https://www.iso.org/iso-8601-date-and-time-format.html | ISO 8601} date format: \"YYYY-MM-DD\".\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEndDate(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEndDate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.SeriesTime#getEndTime:member(1)",
                  "docComment": "/**\n * Gets the end time of a usual appointment or meeting request instance of a recurrence pattern in whichever time zone that the user or add-in set the recurrence pattern using the following {@link https://www.iso.org/iso-8601-date-and-time-format.html | ISO 8601} format: \"THH:mm:ss:mmm\".\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEndTime(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEndTime"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.SeriesTime#getStartDate:member(1)",
                  "docComment": "/**\n * Gets the start date of a recurrence pattern in the following {@link https://www.iso.org/iso-8601-date-and-time-format.html | ISO 8601} date format: \"YYYY-MM-DD\".\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getStartDate(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getStartDate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.SeriesTime#getStartTime:member(1)",
                  "docComment": "/**\n * Gets the start time of a usual appointment instance of a recurrence pattern in whichever time zone that the user/add-in set the recurrence pattern using the following {@link https://www.iso.org/iso-8601-date-and-time-format.html | ISO 8601} format: \"THH:mm:ss:mmm\".\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getStartTime(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getStartTime"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.SeriesTime#setDuration:member(1)",
                  "docComment": "/**\n * Sets the duration of all appointments in a recurrence pattern. This will also change the end time of the recurrence pattern.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param minutes - The length of the appointment in minutes.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDuration(minutes: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "minutes",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setDuration"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.SeriesTime#setEndDate:member(1)",
                  "docComment": "/**\n * Sets the end date of a recurring appointment series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param year - The year value of the end date.\n *\n * @param month - The month value of the end date. Valid range is 0-11 where 0 represents the 1st month and 11 represents the 12th month.\n *\n * @param day - The day value of the end date.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEndDate(year: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", month: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", day: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "year",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "month",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "day",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "setEndDate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.SeriesTime#setEndDate:member(2)",
                  "docComment": "/**\n * Sets the end date of a recurring appointment series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param date - End date of the recurring appointment series represented in the {@link https://www.iso.org/iso-8601-date-and-time-format.html | ISO 8601} date format: \"YYYY-MM-DD\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEndDate(date: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "date",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setEndDate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.SeriesTime#setStartDate:member(1)",
                  "docComment": "/**\n * Sets the start date of a recurring appointment series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param year - The year value of the start date.\n *\n * @param month - The month value of the start date. Valid range is 0-11 where 0 represents the 1st month and 11 represents the 12th month.\n *\n * @param day - The day value of the start date.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStartDate(year:"
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", month:"
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", day:"
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "year",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "month",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "day",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "setStartDate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.SeriesTime#setStartDate:member(2)",
                  "docComment": "/**\n * Sets the start date of a recurring appointment series.\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param date - Start date of the recurring appointment series represented in the {@link https://www.iso.org/iso-8601-date-and-time-format.html | ISO 8601} date format: \"YYYY-MM-DD\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStartDate(date:"
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "date",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setStartDate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.SeriesTime#setStartTime:member(1)",
                  "docComment": "/**\n * Sets the start time of all instances of a recurring appointment series in whichever time zone the recurrence pattern is set (the item's time zone is used by default).\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param hours - The hour value of the start time. Valid range: 0-24.\n *\n * @param minutes - The minute value of the start time. Valid range: 0-59.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStartTime(hours: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", minutes: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "hours",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "minutes",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "setStartTime"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.SeriesTime#setStartTime:member(2)",
                  "docComment": "/**\n * Sets the start time of all instances of a recurring appointment series in whichever time zone the recurrence pattern is set (the item's time zone is used by default).\n *\n * [Api set: Mailbox 1.7]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param time - Start time of all instances represented by standard datetime string format: \"THH:mm:ss:mmm\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStartTime(time: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "time",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setStartTime"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.SharedProperties:interface",
              "docComment": "/**\n * Represents the properties of an appointment or message in a shared folder.\n *\n * For more information on how this object is used, see the {@link https://docs.microsoft.com/office/dev/add-ins/outlook/delegate-access | delegate access} article.\n *\n * [Api set: Mailbox 1.8]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SharedProperties "
                }
              ],
              "releaseTag": "Public",
              "name": "SharedProperties",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.SharedProperties#delegatePermissions:member",
                  "docComment": "/**\n * The permissions that the delegate has on a shared folder.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delegatePermissions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "MailboxEnums.DelegatePermissions",
                      "canonicalReference": "outlook!Office.MailboxEnums.DelegatePermissions:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "delegatePermissions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.SharedProperties#owner:member",
                  "docComment": "/**\n * The email address of the owner of a shared item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "owner: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "owner",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.SharedProperties#targetMailbox:member",
                  "docComment": "/**\n * The location of the owner's mailbox for the delegate's access. This location may differ based on the Outlook client.\n *\n * Use with `targetRestUrl` to construct the REST operation's URL.\n *\n * Example usage: `targetRestUrl + \"/{api_version}/users/\" + targetMailbox + \"/{REST_operation}\"`\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "targetMailbox: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "targetMailbox",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.SharedProperties#targetRestUrl:member",
                  "docComment": "/**\n * The REST API's base URL (currently https://outlook.office.com/api).\n *\n * Use with `targetMailbox` to construct the REST operation's URL.\n *\n * Example usage: `targetRestUrl + \"/{api_version}/users/\" + targetMailbox + \"/{REST_operation}\"`\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "targetRestUrl: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "targetRestUrl",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Subject:interface",
              "docComment": "/**\n * Provides methods to get and set the subject of an appointment or message in an Outlook add-in.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Subject "
                }
              ],
              "releaseTag": "Public",
              "name": "Subject",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Subject#getAsync:member(1)",
                  "docComment": "/**\n * Gets the subject of an appointment or message.\n *\n * The `getAsync` method starts an asynchronous call to the Exchange server to get the subject of an appointment or message.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is the subject of the item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Subject#getAsync:member(2)",
                  "docComment": "/**\n * Gets the subject of an appointment or message.\n *\n * The getAsync method starts an asynchronous call to the Exchange server to get the subject of an appointment or message.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is the subject of the item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Subject#setAsync:member(1)",
                  "docComment": "/**\n * Sets the subject of an appointment or message.\n *\n * The `setAsync` method starts an asynchronous call to the Exchange server to set the subject of an appointment or message. Setting the subject overwrites the current subject, but leaves any prefixes, such as \"Fwd:\" or \"Re:\" in place.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `DataExceedsMaximumSize`: The subject parameter is longer than 255 characters.\n *\n * @param subject - The subject of the appointment or message. The string is limited to 255 characters.\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If setting the subject fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(subject: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "subject",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "setAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Subject#setAsync:member(2)",
                  "docComment": "/**\n * Sets the subject of an appointment or message.\n *\n * The `setAsync` method starts an asynchronous call to the Exchange server to set the subject of an appointment or message. Setting the subject overwrites the current subject, but leaves any prefixes, such as \"Fwd:\" or \"Re:\" in place.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `DataExceedsMaximumSize`: The subject parameter is longer than 255 characters.\n *\n * @param subject - The subject of the appointment or message. The string is limited to 255 characters.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If setting the subject fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(subject: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "subject",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "setAsync"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.TaskSuggestion:interface",
              "docComment": "/**\n * Represents a suggested task identified in an item. Read mode only.\n *\n * The list of tasks suggested in an email message is returned in the `taskSuggestions` property of the {@link Office.Entities | Entities} object that is returned when the `getEntities` or `getEntitiesByType` method is called on the active item.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TaskSuggestion "
                }
              ],
              "releaseTag": "Public",
              "name": "TaskSuggestion",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.TaskSuggestion#assignees:member",
                  "docComment": "/**\n * Gets the users that should be assigned a suggested task.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "assignees: "
                    },
                    {
                      "kind": "Reference",
                      "text": "EmailUser",
                      "canonicalReference": "outlook!Office.EmailUser:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "assignees",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.TaskSuggestion#taskString:member",
                  "docComment": "/**\n * Gets the text of an item that was identified as a task suggestion.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "taskString: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "taskString",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.Time:interface",
              "docComment": "/**\n * The `Time` object is returned as the start or end property of an appointment in compose mode.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Time "
                }
              ],
              "releaseTag": "Public",
              "name": "Time",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Time#getAsync:member(1)",
                  "docComment": "/**\n * Gets the start or end time of an appointment.\n *\n * The date and time is provided as a `Date` object in the `asyncResult.value` property. The value is in Coordinated Universal Time (UTC). You can convert the UTC time to the local client time by using the `convertToLocalClientTime` method.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is a `Date` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Time#getAsync:member(2)",
                  "docComment": "/**\n * Gets the start or end time of an appointment.\n *\n * The date and time is provided as a `Date` object in the `asyncResult.value` property. The value is in Coordinated Universal Time (UTC). You can convert the UTC time to the local client time by using the `convertToLocalClientTime` method.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * @param callback - When the method completes, the function passed in the callback parameter is called with a single parameter of type `Office.AsyncResult`. The `value` property of the result is a `Date` object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsync(callback: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "getAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Time#setAsync:member(1)",
                  "docComment": "/**\n * Sets the start or end time of an appointment.\n *\n * If the `setAsync` method is called on the start property, the `end` property will be adjusted to maintain the duration of the appointment as previously set. If the `setAsync` method is called on the `end` property, the duration of the appointment will be extended to the new end time.\n *\n * The time must be in UTC; you can get the correct UTC time by using the `convertToUtcClientTime` method.\n *\n * **Important**: In the Windows client, you can't use this function to update the start or end of a recurrence.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `InvalidEndTime`: The appointment end time is before the appointment start time.\n *\n * @param dateTime - A date-time object in Coordinated Universal Time (UTC).\n *\n * @param options - An object literal that contains one or more of the following properties. `asyncContext`: Developers can provide any object they wish to access in the callback method.\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If setting the date and time fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(dateTime: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncContextOptions",
                      "canonicalReference": "office!Office.AsyncContextOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "dateTime",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "setAsync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "outlook!Office.Time#setAsync:member(2)",
                  "docComment": "/**\n * Sets the start or end time of an appointment.\n *\n * If the `setAsync` method is called on the start property, the `end` property will be adjusted to maintain the duration of the appointment as previously set. If the `setAsync` method is called on the `end` property, the duration of the appointment will be extended to the new end time.\n *\n * The time must be in UTC; you can get the correct UTC time by using the `convertToUtcClientTime` method.\n *\n * **Important**: In the Windows client, you can't use this function to update the start or end of a recurrence.\n *\n * [Api set: Mailbox 1.1]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadWriteItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose\n *\n * **Errors**:\n *\n * - `InvalidEndTime`: The appointment end time is before the appointment start time.\n *\n * @param dateTime - A date-time object in Coordinated Universal Time (UTC).\n *\n * @param callback - Optional. When the method completes, the function passed in the `callback` parameter is called with a single parameter of type `Office.AsyncResult`. If setting the date and time fails, the `asyncResult.error` property will contain an error code.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAsync(dateTime: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(asyncResult: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommonAPI.AsyncResult",
                      "canonicalReference": "office!Office.AsyncResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 2,
                  "parameters": [
                    {
                      "parameterName": "dateTime",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "setAsync"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "outlook!Office.UserProfile:interface",
              "docComment": "/**\n * Information about the user associated with the mailbox. This includes their account type, display name, email address, and time zone.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface UserProfile "
                }
              ],
              "releaseTag": "Public",
              "name": "UserProfile",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.UserProfile#accountType:member",
                  "docComment": "/**\n * Gets the account type of the user associated with the mailbox.\n *\n * **Note**: This member is currently only supported in Outlook 2016 or later on Mac, build 16.9.1212 and greater.\n *\n * [Api set: Mailbox 1.6]\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n *\n * The possible account types are listed in the following table.\n *\n * <table> <tr> <th>Value</th> <th>Description?</th> </tr> <tr> <td>enterprise</td> <td>The mailbox is on an on-premises Exchange server.</td> </tr> <tr> <td>gmail</td> <td>The mailbox is associated with a Gmail account.</td> </tr> <tr> <td>office365</td> <td>The mailbox is associated with an Office 365 work or school account.</td> </tr> <tr> <td>outlookCom</td> <td>The mailbox is associated with a personal Outlook.com account.</td> </tr> </table>\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accountType: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "accountType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.UserProfile#displayName:member",
                  "docComment": "/**\n * Gets the user's display name.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "displayName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.UserProfile#emailAddress:member",
                  "docComment": "/**\n * Gets the user's SMTP email address.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "emailAddress: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "emailAddress",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outlook!Office.UserProfile#timeZone:member",
                  "docComment": "/**\n * Gets the user's time zone in Windows format.\n *\n * The system time zone is usually returned. However, in Outlook on the web, the default time zone in the calendar preferences is returned instead.\n *\n * @remarks\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions | Minimum permission level}**: `ReadItem`\n *\n * **{@link https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points | Applicable Outlook mode}**: Compose or Read\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "timeZone: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "timeZone",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        }
      ]
    }
  ]
}
