{
  "kind": "package",
  "name": "excel",
  "summary": [],
  "remarks": [],
  "exports": {
    "Excel": {
      "kind": "namespace",
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "exports": {
        "Application": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the Excel application that manages the workbook."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "calculate": {
              "kind": "method",
              "signature": "calculate(calculationType: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "calculationType": {
                  "name": "calculationType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the calculation type to use. See Excel.CalculationType for details."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Recalculate all currently opened workbooks in Excel."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "calculationMode": {
              "kind": "property",
              "signature": "readonly calculationMode: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the calculation mode used in the workbook. See Excel.CalculationMode for details. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.Application;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Application",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "suspendApiCalculationUntilNextSync": {
              "kind": "method",
              "signature": "suspendApiCalculationUntilNextSync(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Suspends calculation until the next \"context.sync()\" is called. Once set, it is the developer's responsibility to re-calc the workbook, to ensure that any dependencies are propagated."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"calculationMode\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Binding": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents an Office.js binding that is defined in the workbook."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "delete": {
              "kind": "method",
              "signature": "delete(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes the binding."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getRange": {
              "kind": "method",
              "signature": "getRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the range represented by the binding. Will throw an error if binding is not of the correct type."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getTable": {
              "kind": "method",
              "signature": "getTable(): Excel.Table;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Table",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the table represented by the binding. Will throw an error if binding is not of the correct type."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getText": {
              "kind": "method",
              "signature": "getText(): OfficeExtension.ClientResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<string>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the text represented by the binding. Will throw an error if binding is not of the correct type."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "id": {
              "kind": "property",
              "signature": "readonly id: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents binding identifier. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.Binding;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Binding",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "onDataChanged": {
              "kind": "property",
              "signature": "readonly onDataChanged: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Occurs when data or formatting within the binding is changed."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "onSelectionChanged": {
              "kind": "property",
              "signature": "readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Occurs when the selection is changed within the binding."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"id\": string;\n            \"type\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "type": {
              "kind": "property",
              "signature": "readonly type: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the type of the binding. See Excel.BindingType for details. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "BindingCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the collection of all the binding objects that are part of the workbook."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "add": {
              "kind": "method",
              "signature": "add(range: Excel.Range | string, bindingType: string, id: string): Excel.Binding;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Binding",
                "description": []
              },
              "parameters": {
                "range": {
                  "name": "range",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | string"
                },
                "bindingType": {
                  "name": "bindingType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Type of binding. See Excel.BindingType."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Name of binding."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Add a new binding to a particular Range."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "addFromNamedItem": {
              "kind": "method",
              "signature": "addFromNamedItem(name: string, bindingType: string, id: string): Excel.Binding;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Binding",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Name from which to create binding."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "bindingType": {
                  "name": "bindingType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Type of binding. See Excel.BindingType."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Name of binding."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Add a new binding based on a named item in the workbook."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "addFromSelection": {
              "kind": "method",
              "signature": "addFromSelection(bindingType: string, id: string): Excel.Binding;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Binding",
                "description": []
              },
              "parameters": {
                "bindingType": {
                  "name": "bindingType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Type of binding. See Excel.BindingType."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Name of binding."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Add a new binding based on the current selection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "count": {
              "kind": "property",
              "signature": "readonly count: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of bindings in the collection. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of bindings in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItem": {
              "kind": "method",
              "signature": "getItem(id: string): Excel.Binding;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Binding",
                "description": []
              },
              "parameters": {
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Id of the binding object to be retrieved."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a binding object by ID."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemAt": {
              "kind": "method",
              "signature": "getItemAt(index: number): Excel.Binding;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Binding",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Index value of the object to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a binding object based on its position in the items array."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemOrNullObject": {
              "kind": "method",
              "signature": "getItemOrNullObject(id: string): Excel.Binding;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Binding",
                "description": []
              },
              "parameters": {
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Id of the binding object to be retrieved."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a binding object by ID. If the binding object does not exist, will return a null object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.Binding>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.Binding>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.BindingCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.BindingCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"count\": number;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "BindingDataChangedEventArgs": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides information about the binding that raised the DataChanged event."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "binding": {
              "kind": "property",
              "signature": "binding: Excel.Binding;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.Binding",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the Binding object that represents the binding that raised the DataChanged event."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "BindingSelectionChangedEventArgs": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides information about the binding that raised the SelectionChanged event."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "binding": {
              "kind": "property",
              "signature": "binding: Excel.Binding;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.Binding",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the Binding object that represents the binding that raised the SelectionChanged event."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "columnCount": {
              "kind": "property",
              "signature": "columnCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of columns selected."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rowCount": {
              "kind": "property",
              "signature": "rowCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of rows selected."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "startColumn": {
              "kind": "property",
              "signature": "startColumn: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the index of the first column of the selection (zero-based)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "startRow": {
              "kind": "property",
              "signature": "startRow: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the index of the first row of the selection (zero-based)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "BindingType": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "BorderIndex": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "BorderLineStyle": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "BorderWeight": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "CalculationMode": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "CalculationType": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "CellValueConditionalFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a cell value conditional format."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ConditionalRangeFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalRangeFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.CellValueConditionalFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.CellValueConditionalFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rule": {
              "kind": "property",
              "signature": "rule: Excel.ConditionalCellValueRule;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.ConditionalCellValueRule",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the Rule object on this conditional format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.CellValueConditionalFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.CellValueConditionalFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"format\": ConditionalRangeFormat;\n            \"rule\": ConditionalCellValueRule;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Chart": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a chart object in a workbook."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "axes": {
              "kind": "property",
              "signature": "readonly axes: Excel.ChartAxes;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartAxes",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents chart axes. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dataLabels": {
              "kind": "property",
              "signature": "readonly dataLabels: Excel.ChartDataLabels;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartDataLabels",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the datalabels on the chart. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "delete": {
              "kind": "method",
              "signature": "delete(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes the chart object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ChartAreaFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartAreaFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Encapsulates the format properties for the chart area. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getImage": {
              "kind": "method",
              "signature": "getImage(width?: number, height?: number, fittingMode?: string): OfficeExtension.ClientResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<string>",
                "description": []
              },
              "parameters": {
                "width": {
                  "name": "width",
                  "description": [
                    {
                      "kind": "text",
                      "text": "(Optional) The desired width of the resulting image."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number"
                },
                "height": {
                  "name": "height",
                  "description": [
                    {
                      "kind": "text",
                      "text": "(Optional) The desired height of the resulting image."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number"
                },
                "fittingMode": {
                  "name": "fittingMode",
                  "description": [
                    {
                      "kind": "text",
                      "text": "(Optional) The method used to scale the chart to the specified to the specified dimensions (if both height and width are set).\""
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions. The aspect ratio is preserved as part of the resizing."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "height": {
              "kind": "property",
              "signature": "height: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the height, in points, of the chart object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "left": {
              "kind": "property",
              "signature": "left: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The distance, in points, from the left side of the chart to the worksheet origin."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "legend": {
              "kind": "property",
              "signature": "readonly legend: Excel.ChartLegend;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartLegend",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the legend for the chart. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.Chart;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Chart",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "name": {
              "kind": "property",
              "signature": "name: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the name of a chart object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "series": {
              "kind": "property",
              "signature": "readonly series: Excel.ChartSeriesCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartSeriesCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents either a single series or collection of series in the chart. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "setData": {
              "kind": "method",
              "signature": "setData(sourceData: Excel.Range, seriesBy?: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "sourceData": {
                  "name": "sourceData",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The Range object corresponding to the source data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range"
                },
                "seriesBy": {
                  "name": "seriesBy",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the way columns or rows are used as data series on the chart. Can be one of the following: Auto (default), Rows, Columns. See Excel.ChartSeriesBy for details."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Resets the source data for the chart."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "setPosition": {
              "kind": "method",
              "signature": "setPosition(startCell: Excel.Range | string, endCell?: Excel.Range | string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "startCell": {
                  "name": "startCell",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The start cell. This is where the chart will be moved to. The start cell is the top-left or top-right cell, depending on the user's right-to-left display settings."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | string"
                },
                "endCell": {
                  "name": "endCell",
                  "description": [
                    {
                      "kind": "text",
                      "text": "(Optional) The end cell. If specified, the chart's width and height will be set to fully cover up this cell/range."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "Excel.Range | string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Positions the chart relative to cells on the worksheet."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "title": {
              "kind": "property",
              "signature": "readonly title: Excel.ChartTitle;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartTitle",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the title of the specified chart, including the text, visibility, position and formating of the title. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"axes\": ChartAxes;\n            \"dataLabels\": ChartDataLabels;\n            \"format\": ChartAreaFormat;\n            \"height\": number;\n            \"left\": number;\n            \"legend\": ChartLegend;\n            \"name\": string;\n            \"title\": ChartTitle;\n            \"top\": number;\n            \"width\": number;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "top": {
              "kind": "property",
              "signature": "top: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "width": {
              "kind": "property",
              "signature": "width: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the width, in points, of the chart object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "worksheet": {
              "kind": "property",
              "signature": "readonly worksheet: Excel.Worksheet;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.Worksheet",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The worksheet containing the current chart. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartAreaFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Encapsulates the format properties for the overall chart area."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "fill": {
              "kind": "property",
              "signature": "readonly fill: Excel.ChartFill;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartFill",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the fill format of an object, which includes background formatting information. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "font": {
              "kind": "property",
              "signature": "readonly font: Excel.ChartFont;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartFont",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the font attributes (font name, font size, color, etc.) for the current object. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartAreaFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartAreaFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartAreaFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartAreaFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"fill\": ChartFill;\n            \"font\": ChartFont;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartAxes": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the chart axes."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "categoryAxis": {
              "kind": "property",
              "signature": "readonly categoryAxis: Excel.ChartAxis;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartAxis",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the category axis in a chart. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartAxes;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartAxes",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "seriesAxis": {
              "kind": "property",
              "signature": "readonly seriesAxis: Excel.ChartAxis;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartAxis",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the series axis of a 3-dimensional chart. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartAxesUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartAxesUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"categoryAxis\": ChartAxis;\n            \"seriesAxis\": ChartAxis;\n            \"valueAxis\": ChartAxis;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "valueAxis": {
              "kind": "property",
              "signature": "readonly valueAxis: Excel.ChartAxis;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartAxis",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the value axis in an axis. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartAxis": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a single axis in a chart."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ChartAxisFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartAxisFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the formatting of a chart object, which includes line and font formatting. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartAxis;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartAxis",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "majorGridlines": {
              "kind": "property",
              "signature": "readonly majorGridlines: Excel.ChartGridlines;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartGridlines",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a gridlines object that represents the major gridlines for the specified axis. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "majorUnit": {
              "kind": "property",
              "signature": "majorUnit: any;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the interval between two major tick marks. Can be set to a numeric value or an empty string. The returned value is always a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "maximum": {
              "kind": "property",
              "signature": "maximum: any;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the maximum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "minimum": {
              "kind": "property",
              "signature": "minimum: any;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the minimum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "minorGridlines": {
              "kind": "property",
              "signature": "readonly minorGridlines: Excel.ChartGridlines;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartGridlines",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a Gridlines object that represents the minor gridlines for the specified axis. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "minorUnit": {
              "kind": "property",
              "signature": "minorUnit: any;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the interval between two minor tick marks. \"Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartAxisUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartAxisUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "title": {
              "kind": "property",
              "signature": "readonly title: Excel.ChartAxisTitle;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartAxisTitle",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the axis title. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"format\": ChartAxisFormat;\n            \"majorGridlines\": ChartGridlines;\n            \"majorUnit\": any;\n            \"maximum\": any;\n            \"minimum\": any;\n            \"minorGridlines\": ChartGridlines;\n            \"minorUnit\": any;\n            \"title\": ChartAxisTitle;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartAxisFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Encapsulates the format properties for the chart axis."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "font": {
              "kind": "property",
              "signature": "readonly font: Excel.ChartFont;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartFont",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the font attributes (font name, font size, color, etc.) for a chart axis element. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "line": {
              "kind": "property",
              "signature": "readonly line: Excel.ChartLineFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartLineFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents chart line formatting. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartAxisFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartAxisFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartAxisFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartAxisFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"font\": ChartFont;\n            \"line\": ChartLineFormat;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartAxisTitle": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the title of a chart axis."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ChartAxisTitleFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartAxisTitleFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the formatting of chart axis title. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartAxisTitle;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartAxisTitle",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartAxisTitleUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartAxisTitleUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "text": {
              "kind": "property",
              "signature": "text: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the axis title."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"format\": ChartAxisTitleFormat;\n            \"text\": string;\n            \"visible\": boolean;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "visible": {
              "kind": "property",
              "signature": "visible: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A boolean that specifies the visibility of an axis title."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartAxisTitleFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the chart axis title formatting."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "font": {
              "kind": "property",
              "signature": "readonly font: Excel.ChartFont;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartFont",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the font attributes, such as font name, font size, color, etc. of chart axis title object. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartAxisTitleFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartAxisTitleFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartAxisTitleFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartAxisTitleFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"font\": ChartFont;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A collection of all the chart objects on a worksheet."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "add": {
              "kind": "method",
              "signature": "add(type: string, sourceData: Excel.Range, seriesBy?: string): Excel.Chart;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Chart",
                "description": []
              },
              "parameters": {
                "type": {
                  "name": "type",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Represents the type of a chart. See Excel.ChartType for details."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "sourceData": {
                  "name": "sourceData",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The Range object corresponding to the source data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range"
                },
                "seriesBy": {
                  "name": "seriesBy",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the way columns or rows are used as data series on the chart. See Excel.ChartSeriesBy for details."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Creates a new chart."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "count": {
              "kind": "property",
              "signature": "readonly count: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of charts in the worksheet. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of charts in the worksheet."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItem": {
              "kind": "method",
              "signature": "getItem(name: string): Excel.Chart;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Chart",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Name of the chart to be retrieved."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemAt": {
              "kind": "method",
              "signature": "getItemAt(index: number): Excel.Chart;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Chart",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Index value of the object to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a chart based on its position in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemOrNullObject": {
              "kind": "method",
              "signature": "getItemOrNullObject(name: string): Excel.Chart;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Chart",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Name of the chart to be retrieved."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned. If the chart does not exist, will return a null object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.Chart>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.Chart>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"count\": number;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartDataLabelFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Encapsulates the format properties for the chart data labels."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "fill": {
              "kind": "property",
              "signature": "readonly fill: Excel.ChartFill;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartFill",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the fill format of the current chart data label. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "font": {
              "kind": "property",
              "signature": "readonly font: Excel.ChartFont;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartFont",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the font attributes (font name, font size, color, etc.) for a chart data label. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartDataLabelFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartDataLabelFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartDataLabelFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartDataLabelFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"fill\": ChartFill;\n            \"font\": ChartFont;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartDataLabelPosition": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ChartDataLabels": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a collection of all the data labels on a chart point."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ChartDataLabelFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartDataLabelFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the format of chart data labels, which includes fill and font formatting. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartDataLabels;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartDataLabels",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "position": {
              "kind": "property",
              "signature": "position: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "DataLabelPosition value that represents the position of the data label. See Excel.ChartDataLabelPosition for details."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "separator": {
              "kind": "property",
              "signature": "separator: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "String representing the separator used for the data labels on a chart."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartDataLabelsUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartDataLabelsUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "showBubbleSize": {
              "kind": "property",
              "signature": "showBubbleSize: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Boolean value representing if the data label bubble size is visible or not."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "showCategoryName": {
              "kind": "property",
              "signature": "showCategoryName: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Boolean value representing if the data label category name is visible or not."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "showLegendKey": {
              "kind": "property",
              "signature": "showLegendKey: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Boolean value representing if the data label legend key is visible or not."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "showPercentage": {
              "kind": "property",
              "signature": "showPercentage: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Boolean value representing if the data label percentage is visible or not."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "showSeriesName": {
              "kind": "property",
              "signature": "showSeriesName: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Boolean value representing if the data label series name is visible or not."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "showValue": {
              "kind": "property",
              "signature": "showValue: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Boolean value representing if the data label value is visible or not."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"format\": ChartDataLabelFormat;\n            \"position\": string;\n            \"separator\": string;\n            \"showBubbleSize\": boolean;\n            \"showCategoryName\": boolean;\n            \"showLegendKey\": boolean;\n            \"showPercentage\": boolean;\n            \"showSeriesName\": boolean;\n            \"showValue\": boolean;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartFill": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the fill formatting for a chart element."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "clear": {
              "kind": "method",
              "signature": "clear(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Clear the fill color of a chart element."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartFill;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartFill",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "setSolidColor": {
              "kind": "method",
              "signature": "setSolidColor(color: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "color": {
                  "name": "color",
                  "description": [
                    {
                      "kind": "text",
                      "text": "HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\")."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets the fill formatting of a chart element to a uniform color."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{}",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartFont": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This object represents the font attributes (font name, font size, color, etc.) for a chart object."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "bold": {
              "kind": "property",
              "signature": "bold: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the bold status of font."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "color": {
              "kind": "property",
              "signature": "color: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representation of the text color. E.g. #FF0000 represents Red."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "italic": {
              "kind": "property",
              "signature": "italic: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the italic status of the font."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartFont;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartFont",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "name": {
              "kind": "property",
              "signature": "name: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Font name (e.g. \"Calibri\")"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartFontUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartFontUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "size": {
              "kind": "property",
              "signature": "size: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Size of the font (e.g. 11)"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"bold\": boolean;\n            \"color\": string;\n            \"italic\": boolean;\n            \"name\": string;\n            \"size\": number;\n            \"underline\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "underline": {
              "kind": "property",
              "signature": "underline: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Type of underline applied to the font. See Excel.ChartUnderlineStyle for details."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartGridlines": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents major or minor gridlines on a chart axis."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ChartGridlinesFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartGridlinesFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the formatting of chart gridlines. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartGridlines;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartGridlines",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartGridlinesUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartGridlinesUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"format\": ChartGridlinesFormat;\n            \"visible\": boolean;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "visible": {
              "kind": "property",
              "signature": "visible: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Boolean value representing if the axis gridlines are visible or not."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartGridlinesFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Encapsulates the format properties for chart gridlines."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "line": {
              "kind": "property",
              "signature": "readonly line: Excel.ChartLineFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartLineFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents chart line formatting. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartGridlinesFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartGridlinesFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartGridlinesFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartGridlinesFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"line\": ChartLineFormat;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartLegend": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the legend in a chart."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ChartLegendFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartLegendFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the formatting of a chart legend, which includes fill and font formatting. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartLegend;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartLegend",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "overlay": {
              "kind": "property",
              "signature": "overlay: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Boolean value for whether the chart legend should overlap with the main body of the chart."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "position": {
              "kind": "property",
              "signature": "position: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the position of the legend on the chart. See Excel.ChartLegendPosition for details."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartLegendUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartLegendUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"format\": ChartLegendFormat;\n            \"overlay\": boolean;\n            \"position\": string;\n            \"visible\": boolean;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "visible": {
              "kind": "property",
              "signature": "visible: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A boolean value the represents the visibility of a ChartLegend object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartLegendFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Encapsulates the format properties of a chart legend."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "fill": {
              "kind": "property",
              "signature": "readonly fill: Excel.ChartFill;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartFill",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the fill format of an object, which includes background formating information. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "font": {
              "kind": "property",
              "signature": "readonly font: Excel.ChartFont;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartFont",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the font attributes such as font name, font size, color, etc. of a chart legend. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartLegendFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartLegendFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartLegendFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartLegendFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"fill\": ChartFill;\n            \"font\": ChartFont;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartLegendPosition": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ChartLineFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Enapsulates the formatting options for line elements."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "clear": {
              "kind": "method",
              "signature": "clear(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Clear the line format of a chart element."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "color": {
              "kind": "property",
              "signature": "color: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representing the color of lines in the chart."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartLineFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartLineFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartLineFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartLineFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"color\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartPoint": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a point of a series in a chart."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ChartPointFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartPointFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Encapsulates the format properties chart point. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartPoint;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartPoint",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"format\": ChartPointFormat;\n            \"value\": any;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "value": {
              "kind": "property",
              "signature": "readonly value: any;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the value of a chart point. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartPointFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents formatting object for chart points."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "fill": {
              "kind": "property",
              "signature": "readonly fill: Excel.ChartFill;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartFill",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the fill format of a chart, which includes background formating information. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartPointFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartPointFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"fill\": ChartFill;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartPointsCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A collection of all the chart points within a series inside a chart."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "count": {
              "kind": "property",
              "signature": "readonly count: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of chart points in the series. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of chart points in the series."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemAt": {
              "kind": "method",
              "signature": "getItemAt(index: number): Excel.ChartPoint;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartPoint",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Index value of the object to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Retrieve a point based on its position within the series."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.ChartPoint>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.ChartPoint>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartPointsCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartPointsCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"count\": number;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartSeries": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a series in a chart."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ChartSeriesFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartSeriesFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the formatting of a chart series, which includes fill and line formatting. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartSeries;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartSeries",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "name": {
              "kind": "property",
              "signature": "name: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the name of a series in a chart."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "points": {
              "kind": "property",
              "signature": "readonly points: Excel.ChartPointsCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartPointsCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents a collection of all points in the series. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartSeriesUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartSeriesUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"format\": ChartSeriesFormat;\n            \"name\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartSeriesBy": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies whether the series are by rows or by columns. On Desktop, the \"auto\" option will inspect the source data shape to automatically guess whether the data is by rows or columns; on Excel Online, \"auto\" will simply default to \"columns\"."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ChartSeriesCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a collection of chart series."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "count": {
              "kind": "property",
              "signature": "readonly count: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of series in the collection. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of series in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemAt": {
              "kind": "method",
              "signature": "getItemAt(index: number): Excel.ChartSeries;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartSeries",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Index value of the object to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Retrieves a series based on its position in the collection"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.ChartSeries>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.ChartSeries>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartSeriesCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartSeriesCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"count\": number;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartSeriesFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "encapsulates the format properties for the chart series"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "fill": {
              "kind": "property",
              "signature": "readonly fill: Excel.ChartFill;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartFill",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the fill format of a chart series, which includes background formating information. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "line": {
              "kind": "property",
              "signature": "readonly line: Excel.ChartLineFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartLineFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents line formatting. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartSeriesFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartSeriesFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartSeriesFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartSeriesFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"fill\": ChartFill;\n            \"line\": ChartLineFormat;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartTitle": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a chart title object of a chart."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ChartTitleFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartTitleFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the formatting of a chart title, which includes fill and font formatting. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartTitle;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartTitle",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "overlay": {
              "kind": "property",
              "signature": "overlay: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Boolean value representing if the chart title will overlay the chart or not."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartTitleUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartTitleUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "text": {
              "kind": "property",
              "signature": "text: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the title text of a chart."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"format\": ChartTitleFormat;\n            \"overlay\": boolean;\n            \"text\": string;\n            \"visible\": boolean;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "visible": {
              "kind": "property",
              "signature": "visible: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A boolean value the represents the visibility of a chart title object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartTitleFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides access to the office art formatting for chart title."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "fill": {
              "kind": "property",
              "signature": "readonly fill: Excel.ChartFill;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartFill",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the fill format of an object, which includes background formating information. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "font": {
              "kind": "property",
              "signature": "readonly font: Excel.ChartFont;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartFont",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the font attributes (font name, font size, color, etc.) for an object. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartTitleFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ChartTitleFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ChartTitleFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ChartTitleFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"fill\": ChartFill;\n            \"font\": ChartFont;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ChartType": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ChartUnderlineStyle": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ClearApplyTo": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1 for All/Formats/Contents, 1.7 for Hyperlinks.]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ColorScaleConditionalFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents an IconSet criteria for conditional formatting."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "criteria": {
              "kind": "property",
              "signature": "criteria: Excel.ConditionalColorScaleCriteria;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.ConditionalColorScaleCriteria",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The criteria of the color scale. Midpoint is optional when using a two point color scale."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ColorScaleConditionalFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ColorScaleConditionalFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ColorScaleConditionalFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ColorScaleConditionalFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "threeColorScale": {
              "kind": "property",
              "signature": "readonly threeColorScale: boolean;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "If true the color scale will have three points (minimum, midpoint, maximum), otherwise it will have two (minimum, maximum)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"criteria\": ConditionalColorScaleCriteria;\n            \"threeColorScale\": boolean;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalCellValueOperator": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the operator of the text conditional format type."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalCellValueRule": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a Cell Value Conditional Format Rule"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "formula1": {
              "kind": "property",
              "signature": "formula1: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The formula, if required, to evaluate the conditional format rule on."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "formula2": {
              "kind": "property",
              "signature": "formula2?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The formula, if required, to evaluate the conditional format rule on."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "operator": {
              "kind": "property",
              "signature": "operator: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The operator of the text conditional format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalColorScaleCriteria": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the criteria of the color scale."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "maximum": {
              "kind": "property",
              "signature": "maximum: Excel.ConditionalColorScaleCriterion;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.ConditionalColorScaleCriterion",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The maximum point Color Scale Criterion."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "midpoint": {
              "kind": "property",
              "signature": "midpoint?: Excel.ConditionalColorScaleCriterion;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.ConditionalColorScaleCriterion",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The midpoint Color Scale Criterion if the color scale is a 3-color scale."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "minimum": {
              "kind": "property",
              "signature": "minimum: Excel.ConditionalColorScaleCriterion;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.ConditionalColorScaleCriterion",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The minimum point Color Scale Criterion."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalColorScaleCriterion": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a Color Scale Criterion which contains a type, value and a color."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "color": {
              "kind": "property",
              "signature": "color?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representation of the color scale color. E.g. #FF0000 represents Red."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "formula": {
              "kind": "property",
              "signature": "formula?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number, a formula, or null (if Type is LowestValue)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "type": {
              "kind": "property",
              "signature": "type: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "What the icon conditional formula should be based on."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalDataBarAxisFormat": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the format options for a Data Bar Axis."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalDataBarDirection": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the Data Bar direction within a cell."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalDataBarNegativeFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a conditional format DataBar Format for the negative side of the data bar."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "borderColor": {
              "kind": "property",
              "signature": "borderColor: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\"). \"Empty String\" if no border is present or set."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "fillColor": {
              "kind": "property",
              "signature": "fillColor: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representing the fill color, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\")."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ConditionalDataBarNegativeFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalDataBarNegativeFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "matchPositiveBorderColor": {
              "kind": "property",
              "signature": "matchPositiveBorderColor: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Boolean representation of whether or not the negative DataBar has the same border color as the positive DataBar."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "matchPositiveFillColor": {
              "kind": "property",
              "signature": "matchPositiveFillColor: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Boolean representation of whether or not the negative DataBar has the same fill color as the positive DataBar."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ConditionalDataBarNegativeFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ConditionalDataBarNegativeFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"borderColor\": string;\n            \"fillColor\": string;\n            \"matchPositiveBorderColor\": boolean;\n            \"matchPositiveFillColor\": boolean;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalDataBarPositiveFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a conditional format DataBar Format for the positive side of the data bar."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "borderColor": {
              "kind": "property",
              "signature": "borderColor: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\"). \"\" (empty string) if no border is present or set."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "fillColor": {
              "kind": "property",
              "signature": "fillColor: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representing the fill color, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\")."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "gradientFill": {
              "kind": "property",
              "signature": "gradientFill: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Boolean representation of whether or not the DataBar has a gradient."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ConditionalDataBarPositiveFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalDataBarPositiveFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ConditionalDataBarPositiveFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ConditionalDataBarPositiveFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"borderColor\": string;\n            \"fillColor\": string;\n            \"gradientFill\": boolean;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalDataBarRule": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a rule-type for a Data Bar."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "formula": {
              "kind": "property",
              "signature": "formula?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The formula, if required, to evaluate the databar rule on."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "type": {
              "kind": "property",
              "signature": "type: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The type of rule for the databar."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "An object encapsulating a conditional format's range, format, rule, and other properties."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "cellValue": {
              "kind": "property",
              "signature": "readonly cellValue: Excel.CellValueConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.CellValueConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the cell value conditional format properties if the current conditional format is a CellValue type. For example to format all cells between 5 and 10."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "cellValueOrNullObject": {
              "kind": "property",
              "signature": "readonly cellValueOrNullObject: Excel.CellValueConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.CellValueConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the cell value conditional format properties if the current conditional format is a CellValue type. For example to format all cells between 5 and 10."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "colorScale": {
              "kind": "property",
              "signature": "readonly colorScale: Excel.ColorScaleConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ColorScaleConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "colorScaleOrNullObject": {
              "kind": "property",
              "signature": "readonly colorScaleOrNullObject: Excel.ColorScaleConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ColorScaleConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "custom": {
              "kind": "property",
              "signature": "readonly custom: Excel.CustomConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.CustomConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the custom conditional format properties if the current conditional format is a custom type."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "customOrNullObject": {
              "kind": "property",
              "signature": "readonly customOrNullObject: Excel.CustomConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.CustomConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the custom conditional format properties if the current conditional format is a custom type."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dataBar": {
              "kind": "property",
              "signature": "readonly dataBar: Excel.DataBarConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.DataBarConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the data bar properties if the current conditional format is a data bar."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dataBarOrNullObject": {
              "kind": "property",
              "signature": "readonly dataBarOrNullObject: Excel.DataBarConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.DataBarConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the data bar properties if the current conditional format is a data bar."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "delete": {
              "kind": "method",
              "signature": "delete(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes this conditional format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getRange": {
              "kind": "method",
              "signature": "getRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the range the conditonal format is applied to or a null object if the range is discontiguous. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getRangeOrNullObject": {
              "kind": "method",
              "signature": "getRangeOrNullObject(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the range the conditonal format is applied to or a null object if the range is discontiguous. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "iconSet": {
              "kind": "property",
              "signature": "readonly iconSet: Excel.IconSetConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.IconSetConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the IconSet conditional format properties if the current conditional format is an IconSet type."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "iconSetOrNullObject": {
              "kind": "property",
              "signature": "readonly iconSetOrNullObject: Excel.IconSetConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.IconSetConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the IconSet conditional format properties if the current conditional format is an IconSet type."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ConditionalFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "preset": {
              "kind": "property",
              "signature": "readonly preset: Excel.PresetCriteriaConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.PresetCriteriaConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the preset criteria conditional format such as above average/below average/unique values/contains blank/nonblank/error/noerror properties."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "presetOrNullObject": {
              "kind": "property",
              "signature": "readonly presetOrNullObject: Excel.PresetCriteriaConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.PresetCriteriaConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the preset criteria conditional format such as above average/below average/unique values/contains blank/nonblank/error/noerror properties."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "priority": {
              "kind": "property",
              "signature": "priority: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The priority (or index) within the conditional format collection that this conditional format currently exists in. Changing this also changes other conditional formats' priorities, to allow for a contiguous priority order. Use a negative priority to begin from the back. Priorities greater than than bounds will get and set to the maximum (or minimum if negative) priority."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ConditionalFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ConditionalFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "stopIfTrue": {
              "kind": "property",
              "signature": "stopIfTrue: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell. Null on databars, icon sets, and colorscales as there's no concept of StopIfTrue for these"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "textComparison": {
              "kind": "property",
              "signature": "readonly textComparison: Excel.TextConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.TextConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the specific text conditional format properties if the current conditional format is a text type. For example to format cells matching the word \"Text\"."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "textComparisonOrNullObject": {
              "kind": "property",
              "signature": "readonly textComparisonOrNullObject: Excel.TextConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.TextConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the specific text conditional format properties if the current conditional format is a text type. For example to format cells matching the word \"Text\"."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"cellValue\": CellValueConditionalFormat;\n            \"cellValueOrNullObject\": CellValueConditionalFormat;\n            \"colorScale\": ColorScaleConditionalFormat;\n            \"colorScaleOrNullObject\": ColorScaleConditionalFormat;\n            \"custom\": CustomConditionalFormat;\n            \"customOrNullObject\": CustomConditionalFormat;\n            \"dataBar\": DataBarConditionalFormat;\n            \"dataBarOrNullObject\": DataBarConditionalFormat;\n            \"iconSet\": IconSetConditionalFormat;\n            \"iconSetOrNullObject\": IconSetConditionalFormat;\n            \"preset\": PresetCriteriaConditionalFormat;\n            \"presetOrNullObject\": PresetCriteriaConditionalFormat;\n            \"priority\": number;\n            \"stopIfTrue\": boolean;\n            \"textComparison\": TextConditionalFormat;\n            \"textComparisonOrNullObject\": TextConditionalFormat;\n            \"topBottom\": TopBottomConditionalFormat;\n            \"topBottomOrNullObject\": TopBottomConditionalFormat;\n            \"type\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "topBottom": {
              "kind": "property",
              "signature": "readonly topBottom: Excel.TopBottomConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.TopBottomConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type. For example to format the top 10% or bottom 10 items."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "topBottomOrNullObject": {
              "kind": "property",
              "signature": "readonly topBottomOrNullObject: Excel.TopBottomConditionalFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.TopBottomConditionalFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type. For example to format the top 10% or bottom 10 items."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "type": {
              "kind": "property",
              "signature": "readonly type: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A type of conditional format. Only one can be set at a time. Read-Only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalFormatCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a collection of all the conditional formats that are overlap the range."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "add": {
              "kind": "method",
              "signature": "add(type: string): Excel.ConditionalFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalFormat",
                "description": []
              },
              "parameters": {
                "type": {
                  "name": "type",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The type of conditional format being added. See Excel.ConditionalFormatType for details."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds a new conditional format to the collection at the first/top priority."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "clearAll": {
              "kind": "method",
              "signature": "clearAll(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Clears all conditional formats active on the current specified range."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of conditional formats in the workbook. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemAt": {
              "kind": "method",
              "signature": "getItemAt(index: number): Excel.ConditionalFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalFormat",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Index of the conditional formats to be retrieved."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a conditional format at the given index."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.ConditionalFormat>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.ConditionalFormat>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ConditionalFormatCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalFormatCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{}",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalFormatColorCriterionType": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the types of conditional format values."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalFormatDirection": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the direction for a selection."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalFormatIconRuleType": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the types of conditional format values."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalFormatPresetCriterion": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the criteria for the Preset Criteria conditional format type."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalFormatRule": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a rule, for all traditional rule/format pairings."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "formula": {
              "kind": "property",
              "signature": "formula: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The formula, if required, to evaluate the conditional format rule on."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "formulaLocal": {
              "kind": "property",
              "signature": "formulaLocal: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The formula, if required, to evaluate the conditional format rule on in the user's language."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "formulaR1C1": {
              "kind": "property",
              "signature": "formulaR1C1: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The formula, if required, to evaluate the conditional format rule on in R1C1-style notation."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ConditionalFormatRule;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalFormatRule",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ConditionalFormatRuleUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ConditionalFormatRuleUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"formula\": string;\n            \"formulaLocal\": string;\n            \"formulaR1C1\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalFormatRuleType": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the types of conditional format values."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalFormatType": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalIconCriterion": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents an Icon Criterion which contains a type, value, an Operator, and an optional custom icon, if not using an iconset."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "customIcon": {
              "kind": "property",
              "signature": "customIcon?: Excel.Icon;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.Icon",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The custom icon for the current criterion if different from the default IconSet, else null will be returned."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "formula": {
              "kind": "property",
              "signature": "formula: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number or a formula depending on the type."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "operator": {
              "kind": "property",
              "signature": "operator: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "GreaterThan or GreaterThanOrEqual for each of the rule type for the Icon conditional format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "type": {
              "kind": "property",
              "signature": "type: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "What the icon conditional formula should be based on."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalIconCriterionOperator": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the operator for each icon criteria."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalPresetCriteriaRule": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the Preset Criteria Conditional Format Rule"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "criterion": {
              "kind": "property",
              "signature": "criterion: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The criterion of the conditional format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalRangeBorder": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the border of an object."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "color": {
              "kind": "property",
              "signature": "color: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\")."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ConditionalRangeBorder;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalRangeBorder",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ConditionalRangeBorderUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ConditionalRangeBorderUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sideIndex": {
              "kind": "property",
              "signature": "readonly sideIndex: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constant value that indicates the specific side of the border. See Excel.ConditionalRangeBorderIndex for details. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "style": {
              "kind": "property",
              "signature": "style: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "One of the constants of line style specifying the line style for the border. See Excel.BorderLineStyle for details."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"color\": string;\n            \"sideIndex\": string;\n            \"style\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalRangeBorderCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the border objects that make up range border."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "bottom": {
              "kind": "property",
              "signature": "readonly bottom: Excel.ConditionalRangeBorder;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalRangeBorder",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the top border"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "count": {
              "kind": "property",
              "signature": "readonly count: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Number of border objects in the collection. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItem": {
              "kind": "method",
              "signature": "getItem(index: string): Excel.ConditionalRangeBorder;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalRangeBorder",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Index value of the border object to be retrieved. See Excel.ConditionalRangeBorderIndex for details."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a border object using its name"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemAt": {
              "kind": "method",
              "signature": "getItemAt(index: number): Excel.ConditionalRangeBorder;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalRangeBorder",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Index value of the object to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a border object using its index"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.ConditionalRangeBorder>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.ConditionalRangeBorder>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "left": {
              "kind": "property",
              "signature": "readonly left: Excel.ConditionalRangeBorder;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalRangeBorder",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the top border"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ConditionalRangeBorderCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalRangeBorderCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "right": {
              "kind": "property",
              "signature": "readonly right: Excel.ConditionalRangeBorder;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalRangeBorder",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the top border"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"count\": number;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "top": {
              "kind": "property",
              "signature": "readonly top: Excel.ConditionalRangeBorder;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalRangeBorder",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the top border"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalRangeBorderIndex": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalRangeBorderLineStyle": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalRangeFill": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the background of a conditional range object."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "clear": {
              "kind": "method",
              "signature": "clear(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Resets the fill."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "color": {
              "kind": "property",
              "signature": "color: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representing the color of the fill, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\")."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ConditionalRangeFill;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalRangeFill",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ConditionalRangeFillUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ConditionalRangeFillUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"color\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalRangeFont": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This object represents the font attributes (font style,, color, etc.) for an object."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "bold": {
              "kind": "property",
              "signature": "bold: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the bold status of font."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "clear": {
              "kind": "method",
              "signature": "clear(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Resets the font formats."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "color": {
              "kind": "property",
              "signature": "color: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representation of the text color. E.g. #FF0000 represents Red."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "italic": {
              "kind": "property",
              "signature": "italic: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the italic status of the font."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ConditionalRangeFont;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalRangeFont",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ConditionalRangeFontUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ConditionalRangeFontUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "strikethrough": {
              "kind": "property",
              "signature": "strikethrough: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the strikethrough status of the font."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"bold\": boolean;\n            \"color\": string;\n            \"italic\": boolean;\n            \"strikethrough\": boolean;\n            \"underline\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "underline": {
              "kind": "property",
              "signature": "underline: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Type of underline applied to the font. See Excel.ConditionalRangeFontUnderlineStyle for details."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalRangeFontUnderlineStyle": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalRangeFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A format object encapsulating the conditional formats range's font, fill, borders, and other properties."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "borders": {
              "kind": "property",
              "signature": "readonly borders: Excel.ConditionalRangeBorderCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalRangeBorderCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Collection of border objects that apply to the overall conditional format range. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "fill": {
              "kind": "property",
              "signature": "readonly fill: Excel.ConditionalRangeFill;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalRangeFill",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the fill object defined on the overall conditional format range. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "font": {
              "kind": "property",
              "signature": "readonly font: Excel.ConditionalRangeFont;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalRangeFont",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the font object defined on the overall conditional format range. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ConditionalRangeFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.ConditionalRangeFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "numberFormat": {
              "kind": "property",
              "signature": "numberFormat: any;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents Excel's number format code for the given range. Cleared if null is passed in."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.ConditionalRangeFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.ConditionalRangeFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"numberFormat\": any;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalTextComparisonRule": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a Cell Value Conditional Format Rule"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "operator": {
              "kind": "property",
              "signature": "operator: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The operator of the text conditional format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "text": {
              "kind": "property",
              "signature": "text: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Text value of conditional format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ConditionalTextOperator": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the operator of the text conditional format type."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalTopBottomCriterionType": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the criteria for the above/below average conditional format type."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ConditionalTopBottomRule": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the rule of the top/bottom conditional format."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "rank": {
              "kind": "property",
              "signature": "rank: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The rank between 1 and 1000 for numeric ranks or 1 and 100 for percent ranks."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "type": {
              "kind": "property",
              "signature": "type: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Format values based on the top or bottom rank."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "CustomConditionalFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a custom conditional format type."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ConditionalRangeFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalRangeFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.CustomConditionalFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.CustomConditionalFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rule": {
              "kind": "property",
              "signature": "readonly rule: Excel.ConditionalFormatRule;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalFormatRule",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the Rule object on this conditional format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.CustomConditionalFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.CustomConditionalFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"format\": ConditionalRangeFormat;\n            \"rule\": ConditionalFormatRule;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "CustomXmlPart": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a custom XML part object in a workbook."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.5]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "delete": {
              "kind": "method",
              "signature": "delete(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes the custom XML part."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getXml": {
              "kind": "method",
              "signature": "getXml(): OfficeExtension.ClientResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<string>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the custom XML part's full XML content."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "id": {
              "kind": "property",
              "signature": "readonly id: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The custom XML part's ID. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.CustomXmlPart;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.CustomXmlPart",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "namespaceUri": {
              "kind": "property",
              "signature": "readonly namespaceUri: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The custom XML part's namespace URI. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "setXml": {
              "kind": "method",
              "signature": "setXml(xml: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "xml": {
                  "name": "xml",
                  "description": [
                    {
                      "kind": "text",
                      "text": "XML content for the part."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets the custom XML part's full XML content."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"id\": string;\n            \"namespaceUri\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "CustomXmlPartCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A collection of custom XML parts."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.5]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "add": {
              "kind": "method",
              "signature": "add(xml: string): Excel.CustomXmlPart;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.CustomXmlPart",
                "description": []
              },
              "parameters": {
                "xml": {
                  "name": "xml",
                  "description": [
                    {
                      "kind": "text",
                      "text": "XML content. Must be a valid XML fragment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds a new custom XML part to the workbook."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getByNamespace": {
              "kind": "method",
              "signature": "getByNamespace(namespaceUri: string): Excel.CustomXmlPartScopedCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.CustomXmlPartScopedCollection",
                "description": []
              },
              "parameters": {
                "namespaceUri": {
                  "name": "namespaceUri",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a new scoped collection of custom XML parts whose namespaces match the given namespace."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of CustomXml parts in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItem": {
              "kind": "method",
              "signature": "getItem(id: string): Excel.CustomXmlPart;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.CustomXmlPart",
                "description": []
              },
              "parameters": {
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "ID of the object to be retrieved."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a custom XML part based on its ID."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemOrNullObject": {
              "kind": "method",
              "signature": "getItemOrNullObject(id: string): Excel.CustomXmlPart;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.CustomXmlPart",
                "description": []
              },
              "parameters": {
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "ID of the object to be retrieved."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a custom XML part based on its ID. If the CustomXmlPart does not exist, the return object's isNull property will be true."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.CustomXmlPart>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.CustomXmlPart>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.CustomXmlPartCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.CustomXmlPartCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{}",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "CustomXmlPartScopedCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A scoped collection of custom XML parts. A scoped collection is the result of some operation, e.g. filtering by namespace. A scoped collection cannot be scoped any further."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.5]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of CustomXML parts in this collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItem": {
              "kind": "method",
              "signature": "getItem(id: string): Excel.CustomXmlPart;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.CustomXmlPart",
                "description": []
              },
              "parameters": {
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "ID of the object to be retrieved."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a custom XML part based on its ID."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemOrNullObject": {
              "kind": "method",
              "signature": "getItemOrNullObject(id: string): Excel.CustomXmlPart;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.CustomXmlPart",
                "description": []
              },
              "parameters": {
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "ID of the object to be retrieved."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a custom XML part based on its ID. If the CustomXmlPart does not exist, the return object's isNull property will be true."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getOnlyItem": {
              "kind": "method",
              "signature": "getOnlyItem(): Excel.CustomXmlPart;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.CustomXmlPart",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "If the collection contains exactly one item, this method returns it. Otherwise, this method produces an error."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getOnlyItemOrNullObject": {
              "kind": "method",
              "signature": "getOnlyItemOrNullObject(): Excel.CustomXmlPart;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.CustomXmlPart",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "If the collection contains exactly one item, this method returns it. Otherwise, this method returns Null."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.CustomXmlPart>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.CustomXmlPart>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.CustomXmlPartScopedCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.CustomXmlPartScopedCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{}",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "DataBarConditionalFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents an Excel Conditional Data Bar Type."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "axisColor": {
              "kind": "property",
              "signature": "axisColor: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representing the color of the Axis line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\"). \"\" (empty string) if no axis is present or set."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "axisFormat": {
              "kind": "property",
              "signature": "axisFormat: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Representation of how the axis is determined for an Excel data bar."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "barDirection": {
              "kind": "property",
              "signature": "barDirection: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the direction that the data bar graphic should be based on."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.DataBarConditionalFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.DataBarConditionalFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "lowerBoundRule": {
              "kind": "property",
              "signature": "lowerBoundRule: Excel.ConditionalDataBarRule;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.ConditionalDataBarRule",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The rule for what consistutes the lower bound (and how to calculate it, if applicable) for a data bar."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "negativeFormat": {
              "kind": "property",
              "signature": "readonly negativeFormat: Excel.ConditionalDataBarNegativeFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalDataBarNegativeFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Representation of all values to the left of the axis in an Excel data bar."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "positiveFormat": {
              "kind": "property",
              "signature": "readonly positiveFormat: Excel.ConditionalDataBarPositiveFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalDataBarPositiveFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Representation of all values to the right of the axis in an Excel data bar."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.DataBarConditionalFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.DataBarConditionalFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "showDataBarOnly": {
              "kind": "property",
              "signature": "showDataBarOnly: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "If true, hides the values from the cells where the data bar is applied."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"axisColor\": string;\n            \"axisFormat\": string;\n            \"barDirection\": string;\n            \"lowerBoundRule\": ConditionalDataBarRule;\n            \"negativeFormat\": ConditionalDataBarNegativeFormat;\n            \"positiveFormat\": ConditionalDataBarPositiveFormat;\n            \"showDataBarOnly\": boolean;\n            \"upperBoundRule\": ConditionalDataBarRule;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "upperBoundRule": {
              "kind": "property",
              "signature": "upperBoundRule: Excel.ConditionalDataBarRule;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.ConditionalDataBarRule",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The rule for what constitutes the upper bound (and how to calculate it, if applicable) for a data bar."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "DeleteShiftDirection": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "DynamicFilterCriteria": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "ErrorCodes": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "Filter": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Manages the filtering of a table's column."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "apply": {
              "kind": "method",
              "signature": "apply(criteria: Excel.FilterCriteria): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The criteria to apply."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.FilterCriteria"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Apply the given filter criteria on the given column."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "applyBottomItemsFilter": {
              "kind": "method",
              "signature": "applyBottomItemsFilter(count: number): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "count": {
                  "name": "count",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The number of elements from the bottom to show."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Apply a \"Bottom Item\" filter to the column for the given number of elements."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "applyBottomPercentFilter": {
              "kind": "method",
              "signature": "applyBottomPercentFilter(percent: number): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "percent": {
                  "name": "percent",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The percentage of elements from the bottom to show."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Apply a \"Bottom Percent\" filter to the column for the given percentage of elements."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "applyCellColorFilter": {
              "kind": "method",
              "signature": "applyCellColorFilter(color: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "color": {
                  "name": "color",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The background color of the cells to show."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Apply a \"Cell Color\" filter to the column for the given color."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "applyCustomFilter": {
              "kind": "method",
              "signature": "applyCustomFilter(criteria1: string, criteria2?: string, oper?: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "criteria1": {
                  "name": "criteria1",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The first criteria string."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "criteria2": {
                  "name": "criteria2",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The second criteria string."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                },
                "oper": {
                  "name": "oper",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The operator that describes how the two criteria are joined."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Apply a \"Icon\" filter to the column for the given criteria strings."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "applyDynamicFilter": {
              "kind": "method",
              "signature": "applyDynamicFilter(criteria: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The dynamic criteria to apply."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Apply a \"Dynamic\" filter to the column."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "applyFontColorFilter": {
              "kind": "method",
              "signature": "applyFontColorFilter(color: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "color": {
                  "name": "color",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The font color of the cells to show."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Apply a \"Font Color\" filter to the column for the given color."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "applyIconFilter": {
              "kind": "method",
              "signature": "applyIconFilter(icon: Excel.Icon): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "icon": {
                  "name": "icon",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The icons of the cells to show."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Icon"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Apply a \"Icon\" filter to the column for the given icon."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "applyTopItemsFilter": {
              "kind": "method",
              "signature": "applyTopItemsFilter(count: number): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "count": {
                  "name": "count",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The number of elements from the top to show."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Apply a \"Top Item\" filter to the column for the given number of elements."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "applyTopPercentFilter": {
              "kind": "method",
              "signature": "applyTopPercentFilter(percent: number): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "percent": {
                  "name": "percent",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The percentage of elements from the top to show."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Apply a \"Top Percent\" filter to the column for the given percentage of elements."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "applyValuesFilter": {
              "kind": "method",
              "signature": "applyValuesFilter(values: Array<string | Excel.FilterDatetime>): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The list of values to show."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Array<string | Excel.FilterDatetime>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Apply a \"Values\" filter to the column for the given values."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "clear": {
              "kind": "method",
              "signature": "clear(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Clear the filter on the given column."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "criteria": {
              "kind": "property",
              "signature": "readonly criteria: Excel.FilterCriteria;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.FilterCriteria",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The currently applied filter on the given column."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.Filter;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Filter",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"criteria\": FilterCriteria;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FilterCriteria": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the filtering criteria applied to a column."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "color": {
              "kind": "property",
              "signature": "color?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The HTML color string used to filter cells. Used with \"cellColor\" and \"fontColor\" filtering."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "criterion1": {
              "kind": "property",
              "signature": "criterion1?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The first criterion used to filter data. Used as an operator in the case of \"custom\" filtering. For example \">50\" for number greater than 50 or \"=*s\" for values ending in \"s\"."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Used as a number in the case of top/bottom items/percents. E.g. \"5\" for the top 5 items if filterOn is set to \"topItems\""
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "criterion2": {
              "kind": "property",
              "signature": "criterion2?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The second criterion used to filter data. Only used as an operator in the case of \"custom\" filtering."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dynamicCriteria": {
              "kind": "property",
              "signature": "dynamicCriteria?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The dynamic criteria from the Excel.DynamicFilterCriteria set to apply on this column. Used with \"dynamic\" filtering."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "filterOn": {
              "kind": "property",
              "signature": "filterOn: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The property used by the filter to determine whether the values should stay visible."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "icon": {
              "kind": "property",
              "signature": "icon?: Excel.Icon;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.Icon",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The icon used to filter cells. Used with \"icon\" filtering."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "operator": {
              "kind": "property",
              "signature": "operator?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The operator used to combine criterion 1 and 2 when using \"custom\" filtering."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "values": {
              "kind": "property",
              "signature": "values?: Array<string | Excel.FilterDatetime>;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<string | Excel.FilterDatetime>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The set of values to be used as part of \"values\" filtering."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FilterDatetime": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents how to filter a date when filtering on values."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "date": {
              "kind": "property",
              "signature": "date: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The date in ISO8601 format used to filter data."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "specificity": {
              "kind": "property",
              "signature": "specificity: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "How specific the date should be used to keep data. For example, if the date is 2005-04-02 and the specifity is set to \"month\", the filter operation will keep all rows with a date in the month of april 2009."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FilterDatetimeSpecificity": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "FilterOn": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "FilterOperator": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "FiveArrowsGraySet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "grayDownArrow": {
              "kind": "property",
              "signature": "grayDownArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "grayDownInclineArrow": {
              "kind": "property",
              "signature": "grayDownInclineArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "graySideArrow": {
              "kind": "property",
              "signature": "graySideArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "grayUpArrow": {
              "kind": "property",
              "signature": "grayUpArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "grayUpInclineArrow": {
              "kind": "property",
              "signature": "grayUpInclineArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FiveArrowsSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "greenUpArrow": {
              "kind": "property",
              "signature": "greenUpArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "redDownArrow": {
              "kind": "property",
              "signature": "redDownArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowDownInclineArrow": {
              "kind": "property",
              "signature": "yellowDownInclineArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowSideArrow": {
              "kind": "property",
              "signature": "yellowSideArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowUpInclineArrow": {
              "kind": "property",
              "signature": "yellowUpInclineArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FiveBoxesSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "fourFilledBoxes": {
              "kind": "property",
              "signature": "fourFilledBoxes: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "noFilledBoxes": {
              "kind": "property",
              "signature": "noFilledBoxes: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "oneFilledBox": {
              "kind": "property",
              "signature": "oneFilledBox: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "threeFilledBoxes": {
              "kind": "property",
              "signature": "threeFilledBoxes: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "twoFilledBoxes": {
              "kind": "property",
              "signature": "twoFilledBoxes: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FiveQuartersSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "blackCircle": {
              "kind": "property",
              "signature": "blackCircle: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "circleWithOneWhiteQuarter": {
              "kind": "property",
              "signature": "circleWithOneWhiteQuarter: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "circleWithThreeWhiteQuarters": {
              "kind": "property",
              "signature": "circleWithThreeWhiteQuarters: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "circleWithTwoWhiteQuarters": {
              "kind": "property",
              "signature": "circleWithTwoWhiteQuarters: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "whiteCircleAllWhiteQuarters": {
              "kind": "property",
              "signature": "whiteCircleAllWhiteQuarters: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FiveRatingSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "fourBars": {
              "kind": "property",
              "signature": "fourBars: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "noBars": {
              "kind": "property",
              "signature": "noBars: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "oneBar": {
              "kind": "property",
              "signature": "oneBar: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "threeBars": {
              "kind": "property",
              "signature": "threeBars: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "twoBars": {
              "kind": "property",
              "signature": "twoBars: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FormatProtection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the format protection of a range object."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "formulaHidden": {
              "kind": "property",
              "signature": "formulaHidden: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates if Excel hides the formula for the cells in the range. A null value indicates that the entire range doesn't have uniform formula hidden setting."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.FormatProtection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.FormatProtection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "locked": {
              "kind": "property",
              "signature": "locked: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates if Excel locks the cells in the object. A null value indicates that the entire range doesn't have uniform lock setting."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.FormatProtectionUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.FormatProtectionUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"formulaHidden\": boolean;\n            \"locked\": boolean;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FourArrowsGraySet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "grayDownArrow": {
              "kind": "property",
              "signature": "grayDownArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "grayDownInclineArrow": {
              "kind": "property",
              "signature": "grayDownInclineArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "grayUpArrow": {
              "kind": "property",
              "signature": "grayUpArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "grayUpInclineArrow": {
              "kind": "property",
              "signature": "grayUpInclineArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FourArrowsSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "greenUpArrow": {
              "kind": "property",
              "signature": "greenUpArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "redDownArrow": {
              "kind": "property",
              "signature": "redDownArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowDownInclineArrow": {
              "kind": "property",
              "signature": "yellowDownInclineArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowUpInclineArrow": {
              "kind": "property",
              "signature": "yellowUpInclineArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FourRatingSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "fourBars": {
              "kind": "property",
              "signature": "fourBars: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "oneBar": {
              "kind": "property",
              "signature": "oneBar: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "threeBars": {
              "kind": "property",
              "signature": "threeBars: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "twoBars": {
              "kind": "property",
              "signature": "twoBars: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FourRedToBlackSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "blackCircle": {
              "kind": "property",
              "signature": "blackCircle: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "grayCircle": {
              "kind": "property",
              "signature": "grayCircle: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "pinkCircle": {
              "kind": "property",
              "signature": "pinkCircle: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "redCircle": {
              "kind": "property",
              "signature": "redCircle: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FourTrafficLightsSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "blackCircleWithBorder": {
              "kind": "property",
              "signature": "blackCircleWithBorder: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "greenCircle": {
              "kind": "property",
              "signature": "greenCircle: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "redCircleWithBorder": {
              "kind": "property",
              "signature": "redCircleWithBorder: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowCircle": {
              "kind": "property",
              "signature": "yellowCircle: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FunctionResult": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [
            "T"
          ],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "An object containing the result of a function-evaluation operation"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "error": {
              "kind": "property",
              "signature": "readonly error: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Error value (such as \"#DIV/0\") representing the error. If the error string is not set, then the function succeeded, and its result is written to the Value field. The error is always in the English locale."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): FunctionResult<T>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<T>",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"error\": string;\n            \"value\": T;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "value": {
              "kind": "property",
              "signature": "readonly value: T;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "T",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The value of function evaluation. The value field will be populated only if no error has occurred (i.e., the Error property is not set)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Functions": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "An object for evaluating Excel functions."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "abs": {
              "kind": "method",
              "signature": "abs(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the real number for which you want the absolute value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the absolute value of a number, a number without its sign."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "accrInt": {
              "kind": "method",
              "signature": "accrInt(issue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, firstInterest: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, par: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, calcMethod?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "issue": {
                  "name": "issue",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's issue date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "firstInterest": {
                  "name": "firstInterest",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's first interest date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's annual coupon rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "par": {
                  "name": "par",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's par value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "calcMethod": {
                  "name": "calcMethod",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: to accrued interest from issue date = TRUE or omitted; to calculate from last coupon payment date = FALSE."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the accrued interest for a security that pays periodic interest."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "accrIntM": {
              "kind": "method",
              "signature": "accrIntM(issue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, par: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "issue": {
                  "name": "issue",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's issue date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's annual coupon rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "par": {
                  "name": "par",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's par value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the accrued interest for a security that pays interest at maturity."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "acos": {
              "kind": "method",
              "signature": "acos(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the cosine of the angle you want and must be from -1 to 1."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the arccosine of a number, in radians in the range 0 to Pi. The arccosine is the angle whose cosine is Number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "acosh": {
              "kind": "method",
              "signature": "acosh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is any real number equal to or greater than 1."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse hyperbolic cosine of a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "acot": {
              "kind": "method",
              "signature": "acot(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the cotangent of the angle you want."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the arccotangent of a number, in radians in the range 0 to Pi."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "acoth": {
              "kind": "method",
              "signature": "acoth(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the hyperbolic cotangent of the angle that you want."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse hyperbolic cotangent of a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "amorDegrc": {
              "kind": "method",
              "signature": "amorDegrc(cost: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, datePurchased: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, firstPeriod: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, period: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "cost": {
                  "name": "cost",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the cost of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "datePurchased": {
                  "name": "datePurchased",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the date the asset is purchased."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "firstPeriod": {
                  "name": "firstPeriod",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the date of the end of the first period."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "salvage": {
                  "name": "salvage",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the salvage value at the end of life of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "period": {
                  "name": "period",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the period."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the rate of depreciation."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Year_basis : 0 for year of 360 days, 1 for actual, 3 for year of 365 days."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the prorated linear depreciation of an asset for each accounting period."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "amorLinc": {
              "kind": "method",
              "signature": "amorLinc(cost: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, datePurchased: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, firstPeriod: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, period: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "cost": {
                  "name": "cost",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the cost of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "datePurchased": {
                  "name": "datePurchased",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the date the asset is purchased."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "firstPeriod": {
                  "name": "firstPeriod",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the date of the end of the first period."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "salvage": {
                  "name": "salvage",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the salvage value at the end of life of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "period": {
                  "name": "period",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the period."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the rate of depreciation."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Year_basis : 0 for year of 360 days, 1 for actual, 3 for year of 365 days."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the prorated linear depreciation of an asset for each accounting period."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "and": {
              "kind": "method",
              "signature": "and(...values: Array<boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 conditions you want to test that can be either TRUE or FALSE and can be logical values, arrays, or references."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether all arguments are TRUE, and returns TRUE if all arguments are TRUE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "arabic": {
              "kind": "method",
              "signature": "arabic(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the Roman numeral you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a Roman numeral to Arabic."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "areas": {
              "kind": "method",
              "signature": "areas(reference: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "reference": {
                  "name": "reference",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a reference to a cell or range of cells and can refer to multiple areas."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of areas in a reference. An area is a range of contiguous cells or a single cell."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "asc": {
              "kind": "method",
              "signature": "asc(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a text, or a reference to a cell containing a text."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Changes full-width (double-byte) characters to half-width (single-byte) characters. Use with double-byte character sets (DBCS)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "asin": {
              "kind": "method",
              "signature": "asin(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the sine of the angle you want and must be from -1 to 1."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the arcsine of a number in radians, in the range -Pi/2 to Pi/2."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "asinh": {
              "kind": "method",
              "signature": "asinh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is any real number equal to or greater than 1."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse hyperbolic sine of a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "atan": {
              "kind": "method",
              "signature": "atan(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the tangent of the angle you want."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the arctangent of a number in radians, in the range -Pi/2 to Pi/2."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "atan2": {
              "kind": "method",
              "signature": "atan2(xNum: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yNum: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "xNum": {
                  "name": "xNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the x-coordinate of the point."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "yNum": {
                  "name": "yNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the y-coordinate of the point."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the arctangent of the specified x- and y- coordinates, in radians between -Pi and Pi, excluding -Pi."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "atanh": {
              "kind": "method",
              "signature": "atanh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is any real number between -1 and 1 excluding -1 and 1."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse hyperbolic tangent of a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "aveDev": {
              "kind": "method",
              "signature": "aveDev(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 arguments for which you want the average of the absolute deviations."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the average of the absolute deviations of data points from their mean. Arguments can be numbers or names, arrays, or references that contain numbers."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "average": {
              "kind": "method",
              "signature": "average(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numeric arguments for which you want the average."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the average (arithmetic mean) of its arguments, which can be numbers or names, arrays, or references that contain numbers."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "averageA": {
              "kind": "method",
              "signature": "averageA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 arguments for which you want the average."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the average (arithmetic mean) of its arguments, evaluating text and FALSE in arguments as 0; TRUE evaluates as 1. Arguments can be numbers, names, arrays, or references."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "averageIf": {
              "kind": "method",
              "signature": "averageIf(range: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, averageRange?: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "range": {
                  "name": "range",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells you want evaluated."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the condition or criteria in the form of a number, expression, or text that defines which cells will be used to find the average."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "averageRange": {
                  "name": "averageRange",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Are the actual cells to be used to find the average. If omitted, the cells in range are used."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Finds average(arithmetic mean) for the cells specified by a given condition or criteria."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "averageIfs": {
              "kind": "method",
              "signature": "averageIfs(averageRange: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ...values: Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any> | number | string | boolean>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "averageRange": {
                  "name": "averageRange",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Are the actual cells to be used to find the average."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, where the first element of each pair is the Is the range of cells you want evaluated for the particular condition , and the second element is is the condition or criteria in the form of a number, expression, or text that defines which cells will be used to find the average."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any> | number | string | boolean>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Finds average(arithmetic mean) for the cells specified by a given set of conditions or criteria."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "bahtText": {
              "kind": "method",
              "signature": "bahtText(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number that you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a number to text (baht)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "base": {
              "kind": "method",
              "signature": "base(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, radix: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, minLength?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number that you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "radix": {
                  "name": "radix",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the base Radix that you want to convert the number into."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "minLength": {
                  "name": "minLength",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the minimum length of the returned string. If omitted leading zeros are not added."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a number into a text representation with the given radix (base)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "besselI": {
              "kind": "method",
              "signature": "besselI(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value at which to evaluate the function."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "n": {
                  "name": "n",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the order of the Bessel function."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the modified Bessel function In(x)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "besselJ": {
              "kind": "method",
              "signature": "besselJ(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value at which to evaluate the function."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "n": {
                  "name": "n",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the order of the Bessel function."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the Bessel function Jn(x)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "besselK": {
              "kind": "method",
              "signature": "besselK(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value at which to evaluate the function."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "n": {
                  "name": "n",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the order of the function."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the modified Bessel function Kn(x)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "besselY": {
              "kind": "method",
              "signature": "besselY(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value at which to evaluate the function."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "n": {
                  "name": "n",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the order of the function."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the Bessel function Yn(x)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "beta_Dist": {
              "kind": "method",
              "signature": "beta_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, beta: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, A?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, B?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value between A and B at which to evaluate the function."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "alpha": {
                  "name": "alpha",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a parameter to the distribution and must be greater than 0."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "beta": {
                  "name": "beta",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a parameter to the distribution and must be greater than 0."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: for the cumulative distribution function, use TRUE; for the probability density function, use FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "A": {
                  "name": "A",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an optional lower bound to the interval of x. If omitted, A = 0."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "B": {
                  "name": "B",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an optional upper bound to the interval of x. If omitted, B = 1."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the beta probability distribution function."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "beta_Inv": {
              "kind": "method",
              "signature": "beta_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, beta: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, A?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, B?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "probability": {
                  "name": "probability",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a probability associated with the beta distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "alpha": {
                  "name": "alpha",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a parameter to the distribution and must be greater than 0."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "beta": {
                  "name": "beta",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a parameter to the distribution and must be greater than 0."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "A": {
                  "name": "A",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an optional lower bound to the interval of x. If omitted, A = 0."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "B": {
                  "name": "B",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an optional upper bound to the interval of x. If omitted, B = 1."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse of the cumulative beta probability density function (BETA.DIST)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "bin2Dec": {
              "kind": "method",
              "signature": "bin2Dec(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the binary number you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a binary number to decimal."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "bin2Hex": {
              "kind": "method",
              "signature": "bin2Hex(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the binary number you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "places": {
                  "name": "places",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of characters to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a binary number to hexadecimal."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "bin2Oct": {
              "kind": "method",
              "signature": "bin2Oct(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the binary number you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "places": {
                  "name": "places",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of characters to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a binary number to octal."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "binom_Dist": {
              "kind": "method",
              "signature": "binom_Dist(numberS: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, trials: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, probabilityS: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "numberS": {
                  "name": "numberS",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of successes in trials."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "trials": {
                  "name": "trials",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of independent trials."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "probabilityS": {
                  "name": "probabilityS",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the probability of success on each trial."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function, use FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the individual term binomial distribution probability."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "binom_Dist_Range": {
              "kind": "method",
              "signature": "binom_Dist_Range(trials: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, probabilityS: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberS: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberS2?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "trials": {
                  "name": "trials",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of independent trials."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "probabilityS": {
                  "name": "probabilityS",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the probability of success on each trial."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numberS": {
                  "name": "numberS",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of successes in trials."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numberS2": {
                  "name": "numberS2",
                  "description": [
                    {
                      "kind": "text",
                      "text": "If provided this function returns the probability that the number of successful trials shall lie between numberS and numberS2."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the probability of a trial result using a binomial distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "binom_Inv": {
              "kind": "method",
              "signature": "binom_Inv(trials: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, probabilityS: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "trials": {
                  "name": "trials",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of Bernoulli trials."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "probabilityS": {
                  "name": "probabilityS",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the probability of success on each trial, a number between 0 and 1 inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "alpha": {
                  "name": "alpha",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the criterion value, a number between 0 and 1 inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the smallest value for which the cumulative binomial distribution is greater than or equal to a criterion value."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "bitand": {
              "kind": "method",
              "signature": "bitand(number1: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, number2: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number1": {
                  "name": "number1",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the decimal representation of the binary number you want to evaluate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "number2": {
                  "name": "number2",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the decimal representation of the binary number you want to evaluate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a bitwise 'And' of two numbers."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "bitlshift": {
              "kind": "method",
              "signature": "bitlshift(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, shiftAmount: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the decimal representation of the binary number you want to evaluate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "shiftAmount": {
                  "name": "shiftAmount",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of bits that you want to shift Number left by."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a number shifted left by shift_amount bits."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "bitor": {
              "kind": "method",
              "signature": "bitor(number1: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, number2: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number1": {
                  "name": "number1",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the decimal representation of the binary number you want to evaluate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "number2": {
                  "name": "number2",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the decimal representation of the binary number you want to evaluate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a bitwise 'Or' of two numbers."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "bitrshift": {
              "kind": "method",
              "signature": "bitrshift(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, shiftAmount: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the decimal representation of the binary number you want to evaluate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "shiftAmount": {
                  "name": "shiftAmount",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of bits that you want to shift Number right by."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a number shifted right by shift_amount bits."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "bitxor": {
              "kind": "method",
              "signature": "bitxor(number1: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, number2: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number1": {
                  "name": "number1",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the decimal representation of the binary number you want to evaluate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "number2": {
                  "name": "number2",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the decimal representation of the binary number you want to evaluate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a bitwise 'Exclusive Or' of two numbers."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ceiling_Math": {
              "kind": "method",
              "signature": "ceiling_Math(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mode?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want to round."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "significance": {
                  "name": "significance",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the multiple to which you want to round."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "mode": {
                  "name": "mode",
                  "description": [
                    {
                      "kind": "text",
                      "text": "When given and nonzero this function will round away from zero."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Rounds a number up, to the nearest integer or to the nearest multiple of significance."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ceiling_Precise": {
              "kind": "method",
              "signature": "ceiling_Precise(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want to round."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "significance": {
                  "name": "significance",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the multiple to which you want to round."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Rounds a number up, to the nearest integer or to the nearest multiple of significance."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "char": {
              "kind": "method",
              "signature": "char(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number between 1 and 255 specifying which character you want."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the character specified by the code number from the character set for your computer."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "chiSq_Dist": {
              "kind": "method",
              "signature": "chiSq_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value at which you want to evaluate the distribution, a nonnegative number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom": {
                  "name": "degFreedom",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value for the function to return: the cumulative distribution function = TRUE; the probability density function = FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the left-tailed probability of the chi-squared distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "chiSq_Dist_RT": {
              "kind": "method",
              "signature": "chiSq_Dist_RT(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value at which you want to evaluate the distribution, a nonnegative number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom": {
                  "name": "degFreedom",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the right-tailed probability of the chi-squared distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "chiSq_Inv": {
              "kind": "method",
              "signature": "chiSq_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "probability": {
                  "name": "probability",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a probability associated with the chi-squared distribution, a value between 0 and 1 inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom": {
                  "name": "degFreedom",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse of the left-tailed probability of the chi-squared distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "chiSq_Inv_RT": {
              "kind": "method",
              "signature": "chiSq_Inv_RT(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "probability": {
                  "name": "probability",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a probability associated with the chi-squared distribution, a value between 0 and 1 inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom": {
                  "name": "degFreedom",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse of the right-tailed probability of the chi-squared distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "choose": {
              "kind": "method",
              "signature": "choose(indexNum: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ...values: Array<Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number | string | boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number | string | boolean>",
                "description": []
              },
              "parameters": {
                "indexNum": {
                  "name": "indexNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies which value argument is selected. indexNum must be between 1 and 254, or a formula or a reference to a number between 1 and 254."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 254 numbers, cell references, defined names, formulas, functions, or text arguments from which CHOOSE selects."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Chooses a value or action to perform from a list of values, based on an index number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "clean": {
              "kind": "method",
              "signature": "clean(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is any worksheet information from which you want to remove nonprintable characters."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Removes all nonprintable characters from text."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "code": {
              "kind": "method",
              "signature": "code(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text for which you want the code of the first character."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a numeric code for the first character in a text string, in the character set used by your computer."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "columns": {
              "kind": "method",
              "signature": "columns(array: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "array": {
                  "name": "array",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an array or array formula, or a reference to a range of cells for which you want the number of columns."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of columns in an array or reference."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "combin": {
              "kind": "method",
              "signature": "combin(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberChosen: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the total number of items."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numberChosen": {
                  "name": "numberChosen",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of items in each combination."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of combinations for a given number of items."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "combina": {
              "kind": "method",
              "signature": "combina(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberChosen: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the total number of items."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numberChosen": {
                  "name": "numberChosen",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of items in each combination."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of combinations with repetitions for a given number of items."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "complex": {
              "kind": "method",
              "signature": "complex(realNum: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, iNum: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, suffix?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "realNum": {
                  "name": "realNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the real coefficient of the complex number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "iNum": {
                  "name": "iNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the imaginary coefficient of the complex number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "suffix": {
                  "name": "suffix",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the suffix for the imaginary component of the complex number."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts real and imaginary coefficients into a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "concatenate": {
              "kind": "method",
              "signature": "concatenate(...values: Array<string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 text strings to be joined into a single text string and can be text strings, numbers, or single-cell references."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Joins several text strings into one text string."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "confidence_Norm": {
              "kind": "method",
              "signature": "confidence_Norm(alpha: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, size: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "alpha": {
                  "name": "alpha",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the significance level used to compute the confidence level, a number greater than 0 and less than 1."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "standardDev": {
                  "name": "standardDev",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the population standard deviation for the data range and is assumed to be known. standardDev must be greater than 0."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "size": {
                  "name": "size",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the sample size."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the confidence interval for a population mean, using a normal distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "confidence_T": {
              "kind": "method",
              "signature": "confidence_T(alpha: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, size: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "alpha": {
                  "name": "alpha",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the significance level used to compute the confidence level, a number greater than 0 and less than 1."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "standardDev": {
                  "name": "standardDev",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the population standard deviation for the data range and is assumed to be known. standardDev must be greater than 0."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "size": {
                  "name": "size",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the sample size."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the confidence interval for a population mean, using a Student's T distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "convert": {
              "kind": "method",
              "signature": "convert(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fromUnit: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, toUnit: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value in from_units to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "fromUnit": {
                  "name": "fromUnit",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the units for number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "toUnit": {
                  "name": "toUnit",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the units for the result."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a number from one measurement system to another."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "cos": {
              "kind": "method",
              "signature": "cos(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the angle in radians for which you want the cosine."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the cosine of an angle."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "cosh": {
              "kind": "method",
              "signature": "cosh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is any real number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the hyperbolic cosine of a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "cot": {
              "kind": "method",
              "signature": "cot(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the angle in radians for which you want the cotangent."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the cotangent of an angle."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "coth": {
              "kind": "method",
              "signature": "coth(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the angle in radians for which you want the hyperbolic cotangent."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the hyperbolic cotangent of a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "count": {
              "kind": "method",
              "signature": "count(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 arguments that can contain or refer to a variety of different types of data, but only numbers are counted."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Counts the number of cells in a range that contain numbers."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "countA": {
              "kind": "method",
              "signature": "countA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 arguments representing the values and cells you want to count. Values can be any type of information."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Counts the number of cells in a range that are not empty."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "countBlank": {
              "kind": "method",
              "signature": "countBlank(range: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "range": {
                  "name": "range",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range from which you want to count the empty cells."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Counts the number of empty cells in a specified range of cells."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "countIf": {
              "kind": "method",
              "signature": "countIf(range: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "range": {
                  "name": "range",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells from which you want to count nonblank cells."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the condition in the form of a number, expression, or text that defines which cells will be counted."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Counts the number of cells within a range that meet the given condition."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "countIfs": {
              "kind": "method",
              "signature": "countIfs(...values: Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any> | number | string | boolean>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, where the first element of each pair is the Is the range of cells you want evaluated for the particular condition , and the second element is is the condition in the form of a number, expression, or text that defines which cells will be counted."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any> | number | string | boolean>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Counts the number of cells specified by a given set of conditions or criteria."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "coupDayBs": {
              "kind": "method",
              "signature": "coupDayBs(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of days from the beginning of the coupon period to the settlement date."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "coupDays": {
              "kind": "method",
              "signature": "coupDays(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of days in the coupon period that contains the settlement date."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "coupDaysNc": {
              "kind": "method",
              "signature": "coupDaysNc(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of days from the settlement date to the next coupon date."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "coupNcd": {
              "kind": "method",
              "signature": "coupNcd(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the next coupon date after the settlement date."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "coupNum": {
              "kind": "method",
              "signature": "coupNum(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of coupons payable between the settlement date and maturity date."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "coupPcd": {
              "kind": "method",
              "signature": "coupPcd(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the previous coupon date before the settlement date."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "csc": {
              "kind": "method",
              "signature": "csc(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the angle in radians for which you want the cosecant."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the cosecant of an angle."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "csch": {
              "kind": "method",
              "signature": "csch(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the angle in radians for which you want the hyperbolic cosecant."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the hyperbolic cosecant of an angle."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "cumIPmt": {
              "kind": "method",
              "signature": "cumIPmt(rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startPeriod: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, endPeriod: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the interest rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "nper": {
                  "name": "nper",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the total number of payment periods."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pv": {
                  "name": "pv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the present value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "startPeriod": {
                  "name": "startPeriod",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the first period in the calculation."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "endPeriod": {
                  "name": "endPeriod",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the last period in the calculation."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "type": {
                  "name": "type",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the timing of the payment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the cumulative interest paid between two periods."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "cumPrinc": {
              "kind": "method",
              "signature": "cumPrinc(rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startPeriod: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, endPeriod: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the interest rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "nper": {
                  "name": "nper",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the total number of payment periods."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pv": {
                  "name": "pv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the present value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "startPeriod": {
                  "name": "startPeriod",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the first period in the calculation."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "endPeriod": {
                  "name": "endPeriod",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the last period in the calculation."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "type": {
                  "name": "type",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the timing of the payment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the cumulative principal paid on a loan between two periods."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "date": {
              "kind": "method",
              "signature": "date(year: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, month: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, day: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "year": {
                  "name": "year",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number from 1900 or 1904 (depending on the workbook's date system) to 9999."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "month": {
                  "name": "month",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number from 1 to 12 representing the month of the year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "day": {
                  "name": "day",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number from 1 to 31 representing the day of the month."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number that represents the date in Microsoft Excel date-time code."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "datevalue": {
              "kind": "method",
              "signature": "datevalue(dateText: string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "dateText": {
                  "name": "dateText",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is text that represents a date in a Microsoft Excel date format, between 1/1/1900 or 1/1/1904 (depending on the workbook's date system) and 12/31/9999."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a date in the form of text to a number that represents the date in Microsoft Excel date-time code."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "daverage": {
              "kind": "method",
              "signature": "daverage(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "database": {
                  "name": "database",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that makes up the list or database. A database is a list of related data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "field": {
                  "name": "field",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is either the label of the column in double quotation marks or a number that represents the column's position in the list."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Averages the values in a column in a list or database that match conditions you specify."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "day": {
              "kind": "method",
              "signature": "day(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "serialNumber": {
                  "name": "serialNumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number in the date-time code used by Microsoft Excel."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the day of the month, a number from 1 to 31."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "days": {
              "kind": "method",
              "signature": "days(endDate: string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startDate: string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "endDate": {
                  "name": "endDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "startDate and endDate are the two dates between which you want to know the number of days."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "startDate": {
                  "name": "startDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "startDate and endDate are the two dates between which you want to know the number of days."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of days between the two dates."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "days360": {
              "kind": "method",
              "signature": "days360(startDate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, endDate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, method?: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "startDate": {
                  "name": "startDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "startDate and endDate are the two dates between which you want to know the number of days."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "endDate": {
                  "name": "endDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "startDate and endDate are the two dates between which you want to know the number of days."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "method": {
                  "name": "method",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value specifying the calculation method: U.S. (NASD) = FALSE or omitted; European = TRUE."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of days between two dates based on a 360-day year (twelve 30-day months)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "db": {
              "kind": "method",
              "signature": "db(cost: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, life: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, period: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, month?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "cost": {
                  "name": "cost",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the initial cost of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "salvage": {
                  "name": "salvage",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the salvage value at the end of the life of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "life": {
                  "name": "life",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset)."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "period": {
                  "name": "period",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the period for which you want to calculate the depreciation. Period must use the same units as Life."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "month": {
                  "name": "month",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of months in the first year. If month is omitted, it is assumed to be 12."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the depreciation of an asset for a specified period using the fixed-declining balance method."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dbcs": {
              "kind": "method",
              "signature": "dbcs(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a text, or a reference to a cell containing a text."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Changes half-width (single-byte) characters within a character string to full-width (double-byte) characters. Use with double-byte character sets (DBCS)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dcount": {
              "kind": "method",
              "signature": "dcount(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "database": {
                  "name": "database",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that makes up the list or database. A database is a list of related data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "field": {
                  "name": "field",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is either the label of the column in double quotation marks or a number that represents the column's position in the list."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Counts the cells containing numbers in the field (column) of records in the database that match the conditions you specify."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dcountA": {
              "kind": "method",
              "signature": "dcountA(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "database": {
                  "name": "database",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that makes up the list or database. A database is a list of related data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "field": {
                  "name": "field",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is either the label of the column in double quotation marks or a number that represents the column's position in the list."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Counts nonblank cells in the field (column) of records in the database that match the conditions you specify."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ddb": {
              "kind": "method",
              "signature": "ddb(cost: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, life: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, period: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, factor?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "cost": {
                  "name": "cost",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the initial cost of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "salvage": {
                  "name": "salvage",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the salvage value at the end of the life of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "life": {
                  "name": "life",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset)."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "period": {
                  "name": "period",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the period for which you want to calculate the depreciation. Period must use the same units as Life."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "factor": {
                  "name": "factor",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the rate at which the balance declines. If Factor is omitted, it is assumed to be 2 (the double-declining balance method)."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the depreciation of an asset for a specified period using the double-declining balance method or some other method you specify."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dec2Bin": {
              "kind": "method",
              "signature": "dec2Bin(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the decimal integer you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "places": {
                  "name": "places",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of characters to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a decimal number to binary."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dec2Hex": {
              "kind": "method",
              "signature": "dec2Hex(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the decimal integer you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "places": {
                  "name": "places",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of characters to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a decimal number to hexadecimal."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dec2Oct": {
              "kind": "method",
              "signature": "dec2Oct(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the decimal integer you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "places": {
                  "name": "places",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of characters to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a decimal number to octal."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "decimal": {
              "kind": "method",
              "signature": "decimal(number: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, radix: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number that you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "radix": {
                  "name": "radix",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the base Radix of the number you are converting."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a text representation of a number in a given base into a decimal number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "degrees": {
              "kind": "method",
              "signature": "degrees(angle: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "angle": {
                  "name": "angle",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the angle in radians that you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts radians to degrees."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "delta": {
              "kind": "method",
              "signature": "delta(number1: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, number2?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number1": {
                  "name": "number1",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the first number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "number2": {
                  "name": "number2",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the second number."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Tests whether two numbers are equal."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "devSq": {
              "kind": "method",
              "signature": "devSq(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 arguments, or an array or array reference, on which you want DEVSQ to calculate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the sum of squares of deviations of data points from their sample mean."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dget": {
              "kind": "method",
              "signature": "dget(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number | boolean | string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number | boolean | string>",
                "description": []
              },
              "parameters": {
                "database": {
                  "name": "database",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that makes up the list or database. A database is a list of related data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "field": {
                  "name": "field",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is either the label of the column in double quotation marks or a number that represents the column's position in the list."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Extracts from a database a single record that matches the conditions you specify."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "disc": {
              "kind": "method",
              "signature": "disc(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pr": {
                  "name": "pr",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's price per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "redemption": {
                  "name": "redemption",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's redemption value per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the discount rate for a security."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dmax": {
              "kind": "method",
              "signature": "dmax(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "database": {
                  "name": "database",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that makes up the list or database. A database is a list of related data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "field": {
                  "name": "field",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is either the label of the column in double quotation marks or a number that represents the column's position in the list."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the largest number in the field (column) of records in the database that match the conditions you specify."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dmin": {
              "kind": "method",
              "signature": "dmin(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "database": {
                  "name": "database",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that makes up the list or database. A database is a list of related data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "field": {
                  "name": "field",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is either the label of the column in double quotation marks or a number that represents the column's position in the list."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the smallest number in the field (column) of records in the database that match the conditions you specify."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dollar": {
              "kind": "method",
              "signature": "dollar(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, decimals?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number, a reference to a cell containing a number, or a formula that evaluates to a number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "decimals": {
                  "name": "decimals",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of digits to the right of the decimal point. The number is rounded as necessary; if omitted, Decimals = 2."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a number to text, using currency format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dollarDe": {
              "kind": "method",
              "signature": "dollarDe(fractionalDollar: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fraction: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "fractionalDollar": {
                  "name": "fractionalDollar",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number expressed as a fraction."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "fraction": {
                  "name": "fraction",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the integer to use in the denominator of the fraction."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a dollar price, expressed as a fraction, into a dollar price, expressed as a decimal number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dollarFr": {
              "kind": "method",
              "signature": "dollarFr(decimalDollar: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fraction: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "decimalDollar": {
                  "name": "decimalDollar",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a decimal number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "fraction": {
                  "name": "fraction",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the integer to use in the denominator of a fraction."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a dollar price, expressed as a decimal number, into a dollar price, expressed as a fraction."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dproduct": {
              "kind": "method",
              "signature": "dproduct(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "database": {
                  "name": "database",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that makes up the list or database. A database is a list of related data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "field": {
                  "name": "field",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is either the label of the column in double quotation marks or a number that represents the column's position in the list."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Multiplies the values in the field (column) of records in the database that match the conditions you specify."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dstDev": {
              "kind": "method",
              "signature": "dstDev(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "database": {
                  "name": "database",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that makes up the list or database. A database is a list of related data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "field": {
                  "name": "field",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is either the label of the column in double quotation marks or a number that represents the column's position in the list."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Estimates the standard deviation based on a sample from selected database entries."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dstDevP": {
              "kind": "method",
              "signature": "dstDevP(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "database": {
                  "name": "database",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that makes up the list or database. A database is a list of related data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "field": {
                  "name": "field",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is either the label of the column in double quotation marks or a number that represents the column's position in the list."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Calculates the standard deviation based on the entire population of selected database entries."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dsum": {
              "kind": "method",
              "signature": "dsum(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "database": {
                  "name": "database",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that makes up the list or database. A database is a list of related data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "field": {
                  "name": "field",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is either the label of the column in double quotation marks or a number that represents the column's position in the list."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds the numbers in the field (column) of records in the database that match the conditions you specify."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "duration": {
              "kind": "method",
              "signature": "duration(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, coupon: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yld: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "coupon": {
                  "name": "coupon",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's annual coupon rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "yld": {
                  "name": "yld",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's annual yield."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the annual duration of a security with periodic interest payments."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dvar": {
              "kind": "method",
              "signature": "dvar(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "database": {
                  "name": "database",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that makes up the list or database. A database is a list of related data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "field": {
                  "name": "field",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is either the label of the column in double quotation marks or a number that represents the column's position in the list."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Estimates variance based on a sample from selected database entries."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dvarP": {
              "kind": "method",
              "signature": "dvarP(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "database": {
                  "name": "database",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that makes up the list or database. A database is a list of related data."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "field": {
                  "name": "field",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is either the label of the column in double quotation marks or a number that represents the column's position in the list."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Calculates variance based on the entire population of selected database entries."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ecma_Ceiling": {
              "kind": "method",
              "signature": "ecma_Ceiling(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want to round."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "significance": {
                  "name": "significance",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the multiple to which you want to round."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Rounds a number up, to the nearest integer or to the nearest multiple of significance."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "edate": {
              "kind": "method",
              "signature": "edate(startDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, months: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "startDate": {
                  "name": "startDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a serial date number that represents the start date."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "months": {
                  "name": "months",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of months before or after startDate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the serial number of the date that is the indicated number of months before or after the start date."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "effect": {
              "kind": "method",
              "signature": "effect(nominalRate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, npery: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "nominalRate": {
                  "name": "nominalRate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the nominal interest rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "npery": {
                  "name": "npery",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of compounding periods per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the effective annual interest rate."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "eoMonth": {
              "kind": "method",
              "signature": "eoMonth(startDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, months: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "startDate": {
                  "name": "startDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a serial date number that represents the start date."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "months": {
                  "name": "months",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of months before or after the startDate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the serial number of the last day of the month before or after a specified number of months."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "erf": {
              "kind": "method",
              "signature": "erf(lowerLimit: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, upperLimit?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "lowerLimit": {
                  "name": "lowerLimit",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the lower bound for integrating ERF."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "upperLimit": {
                  "name": "upperLimit",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the upper bound for integrating ERF."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the error function."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "erf_Precise": {
              "kind": "method",
              "signature": "erf_Precise(X: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "X": {
                  "name": "X",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the lower bound for integrating ERF.PRECISE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the error function."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "erfC": {
              "kind": "method",
              "signature": "erfC(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the lower bound for integrating ERF."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the complementary error function."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "erfC_Precise": {
              "kind": "method",
              "signature": "erfC_Precise(X: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "X": {
                  "name": "X",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the lower bound for integrating ERFC.PRECISE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the complementary error function."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "error_Type": {
              "kind": "method",
              "signature": "error_Type(errorVal: string | number | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "errorVal": {
                  "name": "errorVal",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the error value for which you want the identifying number, and can be an actual error value or a reference to a cell containing an error value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | number | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a number matching an error value."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "even": {
              "kind": "method",
              "signature": "even(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value to round."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Rounds a positive number up and negative number down to the nearest even integer."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "exact": {
              "kind": "method",
              "signature": "exact(text1: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, text2: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "text1": {
                  "name": "text1",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the first text string."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "text2": {
                  "name": "text2",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the second text string."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether two text strings are exactly the same, and returns TRUE or FALSE. EXACT is case-sensitive."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "exp": {
              "kind": "method",
              "signature": "exp(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the exponent applied to the base e. The constant e equals 2.71828182845904, the base of the natural logarithm."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns e raised to the power of a given number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "expon_Dist": {
              "kind": "method",
              "signature": "expon_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, lambda: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value of the function, a nonnegative number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "lambda": {
                  "name": "lambda",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the parameter value, a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value for the function to return: the cumulative distribution function = TRUE; the probability density function = FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the exponential distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "f_Dist": {
              "kind": "method",
              "signature": "f_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom1: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom2: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value at which to evaluate the function, a nonnegative number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom1": {
                  "name": "degFreedom1",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom2": {
                  "name": "degFreedom2",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value for the function to return: the cumulative distribution function = TRUE; the probability density function = FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the (left-tailed) F probability distribution (degree of diversity) for two data sets."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "f_Dist_RT": {
              "kind": "method",
              "signature": "f_Dist_RT(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom1: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom2: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value at which to evaluate the function, a nonnegative number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom1": {
                  "name": "degFreedom1",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom2": {
                  "name": "degFreedom2",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the (right-tailed) F probability distribution (degree of diversity) for two data sets."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "f_Inv": {
              "kind": "method",
              "signature": "f_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom1: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom2: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "probability": {
                  "name": "probability",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a probability associated with the F cumulative distribution, a number between 0 and 1 inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom1": {
                  "name": "degFreedom1",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom2": {
                  "name": "degFreedom2",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse of the (left-tailed) F probability distribution: if p = F.DIST(x,...), then F.INV(p,...) = x."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "f_Inv_RT": {
              "kind": "method",
              "signature": "f_Inv_RT(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom1: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom2: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "probability": {
                  "name": "probability",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a probability associated with the F cumulative distribution, a number between 0 and 1 inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom1": {
                  "name": "degFreedom1",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom2": {
                  "name": "degFreedom2",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse of the (right-tailed) F probability distribution: if p = F.DIST.RT(x,...), then F.INV.RT(p,...) = x."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "fact": {
              "kind": "method",
              "signature": "fact(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the nonnegative number you want the factorial of."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the factorial of a number, equal to 1*2*3*...* Number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "factDouble": {
              "kind": "method",
              "signature": "factDouble(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value for which to return the double factorial."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the double factorial of a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "false": {
              "kind": "method",
              "signature": "false(): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the logical value FALSE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "find": {
              "kind": "method",
              "signature": "find(findText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, withinText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startNum?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "findText": {
                  "name": "findText",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text you want to find. Use double quotes (empty text) to match the first character in withinText; wildcard characters not allowed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "withinText": {
                  "name": "withinText",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text containing the text you want to find."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "startNum": {
                  "name": "startNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the character at which to start the search. The first character in withinText is character number 1. If omitted, startNum = 1."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the starting position of one text string within another text string. FIND is case-sensitive."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "findB": {
              "kind": "method",
              "signature": "findB(findText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, withinText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startNum?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "findText": {
                  "name": "findText",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text you want to find."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "withinText": {
                  "name": "withinText",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text containing the text you want to find."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "startNum": {
                  "name": "startNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the character at which to start the search."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Finds the starting position of one text string within another text string. FINDB is case-sensitive. Use with double-byte character sets (DBCS)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "fisher": {
              "kind": "method",
              "signature": "fisher(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value for which you want the transformation, a number between -1 and 1, excluding -1 and 1."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the Fisher transformation."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "fisherInv": {
              "kind": "method",
              "signature": "fisherInv(y: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "y": {
                  "name": "y",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value for which you want to perform the inverse of the transformation."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse of the Fisher transformation: if y = FISHER(x), then FISHERINV(y) = x."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "fixed": {
              "kind": "method",
              "signature": "fixed(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, decimals?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, noCommas?: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number you want to round and convert to text."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "decimals": {
                  "name": "decimals",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of digits to the right of the decimal point. If omitted, Decimals = 2."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "noCommas": {
                  "name": "noCommas",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: do not display commas in the returned text = TRUE; do display commas in the returned text = FALSE or omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Rounds a number to the specified number of decimals and returns the result as text with or without commas."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "floor_Math": {
              "kind": "method",
              "signature": "floor_Math(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mode?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want to round."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "significance": {
                  "name": "significance",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the multiple to which you want to round."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "mode": {
                  "name": "mode",
                  "description": [
                    {
                      "kind": "text",
                      "text": "When given and nonzero this function will round towards zero."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Rounds a number down, to the nearest integer or to the nearest multiple of significance."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "floor_Precise": {
              "kind": "method",
              "signature": "floor_Precise(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the numeric value you want to round."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "significance": {
                  "name": "significance",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the multiple to which you want to round."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Rounds a number down, to the nearest integer or to the nearest multiple of significance."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "fv": {
              "kind": "method",
              "signature": "fv(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pmt: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "nper": {
                  "name": "nper",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the total number of payment periods in the investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pmt": {
                  "name": "pmt",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the payment made each period; it cannot change over the life of the investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pv": {
                  "name": "pv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the present value, or the lump-sum amount that a series of future payments is worth now. If omitted, Pv = 0."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "type": {
                  "name": "type",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a value representing the timing of payment: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the future value of an investment based on periodic, constant payments and a constant interest rate."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "fvschedule": {
              "kind": "method",
              "signature": "fvschedule(principal: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, schedule: number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "principal": {
                  "name": "principal",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the present value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "schedule": {
                  "name": "schedule",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an array of interest rates to apply."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the future value of an initial principal after applying a series of compound interest rates."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "gamma": {
              "kind": "method",
              "signature": "gamma(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value for which you want to calculate Gamma."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the Gamma function value."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "gamma_Dist": {
              "kind": "method",
              "signature": "gamma_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, beta: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value at which you want to evaluate the distribution, a nonnegative number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "alpha": {
                  "name": "alpha",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a parameter to the distribution, a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "beta": {
                  "name": "beta",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a parameter to the distribution, a positive number. If beta = 1, GAMMA.DIST returns the standard gamma distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: return the cumulative distribution function = TRUE; return the probability mass function = FALSE or omitted."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the gamma distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "gamma_Inv": {
              "kind": "method",
              "signature": "gamma_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, beta: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "probability": {
                  "name": "probability",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the probability associated with the gamma distribution, a number between 0 and 1, inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "alpha": {
                  "name": "alpha",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a parameter to the distribution, a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "beta": {
                  "name": "beta",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a parameter to the distribution, a positive number. If beta = 1, GAMMA.INV returns the inverse of the standard gamma distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse of the gamma cumulative distribution: if p = GAMMA.DIST(x,...), then GAMMA.INV(p,...) = x."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "gammaLn": {
              "kind": "method",
              "signature": "gammaLn(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value for which you want to calculate GAMMALN, a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the natural logarithm of the gamma function."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "gammaLn_Precise": {
              "kind": "method",
              "signature": "gammaLn_Precise(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value for which you want to calculate GAMMALN.PRECISE, a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the natural logarithm of the gamma function."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "gauss": {
              "kind": "method",
              "signature": "gauss(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value for which you want the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns 0.5 less than the standard normal cumulative distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "gcd": {
              "kind": "method",
              "signature": "gcd(...values: Array<number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 values."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the greatest common divisor."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "geoMean": {
              "kind": "method",
              "signature": "geoMean(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the mean."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the geometric mean of an array or range of positive numeric data."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "geStep": {
              "kind": "method",
              "signature": "geStep(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, step?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value to test against step."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "step": {
                  "name": "step",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the threshold value."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Tests whether a number is greater than a threshold value."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "harMean": {
              "kind": "method",
              "signature": "harMean(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the harmonic mean."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the harmonic mean of a data set of positive numbers: the reciprocal of the arithmetic mean of reciprocals."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "hex2Bin": {
              "kind": "method",
              "signature": "hex2Bin(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the hexadecimal number you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "places": {
                  "name": "places",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of characters to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a Hexadecimal number to binary."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "hex2Dec": {
              "kind": "method",
              "signature": "hex2Dec(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the hexadecimal number you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a hexadecimal number to decimal."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "hex2Oct": {
              "kind": "method",
              "signature": "hex2Oct(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the hexadecimal number you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "places": {
                  "name": "places",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of characters to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a hexadecimal number to octal."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "hlookup": {
              "kind": "method",
              "signature": "hlookup(lookupValue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, tableArray: Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>, rowIndexNum: Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>, rangeLookup?: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number | string | boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number | string | boolean>",
                "description": []
              },
              "parameters": {
                "lookupValue": {
                  "name": "lookupValue",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value to be found in the first row of the table and can be a value, a reference, or a text string."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "tableArray": {
                  "name": "tableArray",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a table of text, numbers, or logical values in which data is looked up. tableArray can be a reference to a range or a range name."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rowIndexNum": {
                  "name": "rowIndexNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the row number in tableArray from which the matching value should be returned. The first row of values in the table is row 1."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rangeLookup": {
                  "name": "rangeLookup",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: to find the closest match in the top row (sorted in ascending order) = TRUE or omitted; find an exact match = FALSE."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Looks for a value in the top row of a table or array of values and returns the value in the same column from a row you specify."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "hour": {
              "kind": "method",
              "signature": "hour(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "serialNumber": {
                  "name": "serialNumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number in the date-time code used by Microsoft Excel, or text in time format, such as 16:48:00 or 4:48:00 PM."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the hour as a number from 0 (12:00 A.M.) to 23 (11:00 P.M.)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "hyperlink": {
              "kind": "method",
              "signature": "hyperlink(linkLocation: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, friendlyName?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number | string | boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number | string | boolean>",
                "description": []
              },
              "parameters": {
                "linkLocation": {
                  "name": "linkLocation",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text giving the path and file name to the document to be opened, a hard drive location, UNC address, or URL path."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "friendlyName": {
                  "name": "friendlyName",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is text or a number that is displayed in the cell. If omitted, the cell displays the linkLocation text."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Creates a shortcut or jump that opens a document stored on your hard drive, a network server, or on the Internet."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "hypGeom_Dist": {
              "kind": "method",
              "signature": "hypGeom_Dist(sampleS: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberSample: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, populationS: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberPop: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "sampleS": {
                  "name": "sampleS",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of successes in the sample."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numberSample": {
                  "name": "numberSample",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the size of the sample."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "populationS": {
                  "name": "populationS",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of successes in the population."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numberPop": {
                  "name": "numberPop",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the population size."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: for the cumulative distribution function, use TRUE; for the probability density function, use FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the hypergeometric distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "if": {
              "kind": "method",
              "signature": "if(logicalTest: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, valueIfTrue?: Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>, valueIfFalse?: Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number | string | boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number | string | boolean>",
                "description": []
              },
              "parameters": {
                "logicalTest": {
                  "name": "logicalTest",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is any value or expression that can be evaluated to TRUE or FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "valueIfTrue": {
                  "name": "valueIfTrue",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value that is returned if logicalTest is TRUE. If omitted, TRUE is returned. You can nest up to seven IF functions."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "valueIfFalse": {
                  "name": "valueIfFalse",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value that is returned if logicalTest is FALSE. If omitted, FALSE is returned."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether a condition is met, and returns one value if TRUE, and another value if FALSE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imAbs": {
              "kind": "method",
              "signature": "imAbs(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the absolute value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the absolute value (modulus) of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imaginary": {
              "kind": "method",
              "signature": "imaginary(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the imaginary coefficient."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the imaginary coefficient of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imArgument": {
              "kind": "method",
              "signature": "imArgument(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the argument."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the argument q, an angle expressed in radians."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imConjugate": {
              "kind": "method",
              "signature": "imConjugate(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the conjugate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the complex conjugate of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imCos": {
              "kind": "method",
              "signature": "imCos(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the cosine."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the cosine of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imCosh": {
              "kind": "method",
              "signature": "imCosh(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the hyperbolic cosine."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the hyperbolic cosine of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imCot": {
              "kind": "method",
              "signature": "imCot(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the cotangent."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the cotangent of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imCsc": {
              "kind": "method",
              "signature": "imCsc(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the cosecant."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the cosecant of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imCsch": {
              "kind": "method",
              "signature": "imCsch(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the hyperbolic cosecant."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the hyperbolic cosecant of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imDiv": {
              "kind": "method",
              "signature": "imDiv(inumber1: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, inumber2: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber1": {
                  "name": "inumber1",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the complex numerator or dividend."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "inumber2": {
                  "name": "inumber2",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the complex denominator or divisor."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the quotient of two complex numbers."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imExp": {
              "kind": "method",
              "signature": "imExp(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the exponential."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the exponential of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imLn": {
              "kind": "method",
              "signature": "imLn(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the natural logarithm."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the natural logarithm of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imLog10": {
              "kind": "method",
              "signature": "imLog10(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the common logarithm."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the base-10 logarithm of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imLog2": {
              "kind": "method",
              "signature": "imLog2(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the base-2 logarithm."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the base-2 logarithm of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imPower": {
              "kind": "method",
              "signature": "imPower(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number you want to raise to a power."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the power to which you want to raise the complex number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a complex number raised to an integer power."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imProduct": {
              "kind": "method",
              "signature": "imProduct(...values: Array<Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Inumber1, Inumber2,... are from 1 to 255 complex numbers to multiply."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the product of 1 to 255 complex numbers."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imReal": {
              "kind": "method",
              "signature": "imReal(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the real coefficient."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the real coefficient of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imSec": {
              "kind": "method",
              "signature": "imSec(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the secant."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the secant of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imSech": {
              "kind": "method",
              "signature": "imSech(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the hyperbolic secant."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the hyperbolic secant of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imSin": {
              "kind": "method",
              "signature": "imSin(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the sine."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the sine of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imSinh": {
              "kind": "method",
              "signature": "imSinh(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the hyperbolic sine."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the hyperbolic sine of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imSqrt": {
              "kind": "method",
              "signature": "imSqrt(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the square root."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the square root of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imSub": {
              "kind": "method",
              "signature": "imSub(inumber1: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, inumber2: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber1": {
                  "name": "inumber1",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the complex number from which to subtract inumber2."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "inumber2": {
                  "name": "inumber2",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the complex number to subtract from inumber1."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the difference of two complex numbers."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imSum": {
              "kind": "method",
              "signature": "imSum(...values: Array<Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are from 1 to 255 complex numbers to add."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the sum of complex numbers."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "imTan": {
              "kind": "method",
              "signature": "imTan(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "inumber": {
                  "name": "inumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a complex number for which you want the tangent."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the tangent of a complex number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "int": {
              "kind": "method",
              "signature": "int(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the real number you want to round down to an integer."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Rounds a number down to the nearest integer."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "intRate": {
              "kind": "method",
              "signature": "intRate(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, investment: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "investment": {
                  "name": "investment",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the amount invested in the security."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "redemption": {
                  "name": "redemption",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the amount to be received at maturity."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the interest rate for a fully invested security."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ipmt": {
              "kind": "method",
              "signature": "ipmt(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, per: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "per": {
                  "name": "per",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the period for which you want to find the interest and must be in the range 1 to Nper."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "nper": {
                  "name": "nper",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the total number of payment periods in an investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pv": {
                  "name": "pv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the present value, or the lump-sum amount that a series of future payments is worth now."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "fv": {
                  "name": "fv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the future value, or a cash balance you want to attain after the last payment is made. If omitted, Fv = 0."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "type": {
                  "name": "type",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value representing the timing of payment: at the end of the period = 0 or omitted, at the beginning of the period = 1."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the interest payment for a given period for an investment, based on periodic, constant payments and a constant interest rate."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "irr": {
              "kind": "method",
              "signature": "irr(values: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, guess?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an array or a reference to cells that contain numbers for which you want to calculate the internal rate of return."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "guess": {
                  "name": "guess",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number that you guess is close to the result of IRR; 0.1 (10 percent) if omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the internal rate of return for a series of cash flows."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "isErr": {
              "kind": "method",
              "signature": "isErr(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether a value is an error (#VALUE!, #REF!, #DIV/0!, #NUM!, #NAME?, or #NULL!) excluding #N/A, and returns TRUE or FALSE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "isError": {
              "kind": "method",
              "signature": "isError(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether a value is an error (#N/A, #VALUE!, #REF!, #DIV/0!, #NUM!, #NAME?, or #NULL!), and returns TRUE or FALSE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "isEven": {
              "kind": "method",
              "signature": "isEven(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value to test."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns TRUE if the number is even."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "isFormula": {
              "kind": "method",
              "signature": "isFormula(reference: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "reference": {
                  "name": "reference",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a reference to the cell you want to test. Reference can be a cell reference, a formula, or name that refers to a cell."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether a reference is to a cell containing a formula, and returns TRUE or FALSE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "isLogical": {
              "kind": "method",
              "signature": "isLogical(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether a value is a logical value (TRUE or FALSE), and returns TRUE or FALSE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "isNA": {
              "kind": "method",
              "signature": "isNA(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether a value is #N/A, and returns TRUE or FALSE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "isNonText": {
              "kind": "method",
              "signature": "isNonText(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want tested: a cell; a formula; or a name referring to a cell, formula, or value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether a value is not text (blank cells are not text), and returns TRUE or FALSE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "isNumber": {
              "kind": "method",
              "signature": "isNumber(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether a value is a number, and returns TRUE or FALSE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "iso_Ceiling": {
              "kind": "method",
              "signature": "iso_Ceiling(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want to round."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "significance": {
                  "name": "significance",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the optional multiple to which you want to round."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Rounds a number up, to the nearest integer or to the nearest multiple of significance."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "isOdd": {
              "kind": "method",
              "signature": "isOdd(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value to test."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns TRUE if the number is odd."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "isoWeekNum": {
              "kind": "method",
              "signature": "isoWeekNum(date: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "date": {
                  "name": "date",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the date-time code used by Microsoft Excel for date and time calculation."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the ISO week number in the year for a given date."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ispmt": {
              "kind": "method",
              "signature": "ispmt(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, per: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "per": {
                  "name": "per",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Period for which you want to find the interest."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "nper": {
                  "name": "nper",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Number of payment periods in an investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pv": {
                  "name": "pv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Lump sum amount that a series of future payments is right now."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the interest paid during a specific period of an investment."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "isref": {
              "kind": "method",
              "signature": "isref(value: Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether a value is a reference, and returns TRUE or FALSE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "isText": {
              "kind": "method",
              "signature": "isText(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether a value is text, and returns TRUE or FALSE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "kurt": {
              "kind": "method",
              "signature": "kurt(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the kurtosis."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the kurtosis of a data set."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "large": {
              "kind": "method",
              "signature": "large(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, k: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "array": {
                  "name": "array",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the array or range of data for which you want to determine the k-th largest value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "k": {
                  "name": "k",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the position (from the largest) in the array or cell range of the value to return."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the k-th largest value in a data set. For example, the fifth largest number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "lcm": {
              "kind": "method",
              "signature": "lcm(...values: Array<number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 values for which you want the least common multiple."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the least common multiple."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "left": {
              "kind": "method",
              "signature": "left(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numChars?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text string containing the characters you want to extract."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numChars": {
                  "name": "numChars",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies how many characters you want LEFT to extract; 1 if omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the specified number of characters from the start of a text string."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "leftb": {
              "kind": "method",
              "signature": "leftb(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numBytes?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text string containing the characters you want to extract."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numBytes": {
                  "name": "numBytes",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies how many characters you want LEFT to return."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the specified number of characters from the start of a text string. Use with double-byte character sets (DBCS)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "len": {
              "kind": "method",
              "signature": "len(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text whose length you want to find. Spaces count as characters."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of characters in a text string."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "lenb": {
              "kind": "method",
              "signature": "lenb(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text whose length you want to find."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of characters in a text string. Use with double-byte character sets (DBCS)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ln": {
              "kind": "method",
              "signature": "ln(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the positive real number for which you want the natural logarithm."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the natural logarithm of a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "log": {
              "kind": "method",
              "signature": "log(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, base?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the positive real number for which you want the logarithm."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "base": {
                  "name": "base",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the base of the logarithm; 10 if omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the logarithm of a number to the base you specify."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "log10": {
              "kind": "method",
              "signature": "log10(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the positive real number for which you want the base-10 logarithm."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the base-10 logarithm of a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "logNorm_Dist": {
              "kind": "method",
              "signature": "logNorm_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mean: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value at which to evaluate the function, a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "mean": {
                  "name": "mean",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the mean of ln(x)."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "standardDev": {
                  "name": "standardDev",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the standard deviation of ln(x), a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: for the cumulative distribution function, use TRUE; for the probability density function, use FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the lognormal distribution of x, where ln(x) is normally distributed with parameters Mean and Standard_dev."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "logNorm_Inv": {
              "kind": "method",
              "signature": "logNorm_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mean: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "probability": {
                  "name": "probability",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a probability associated with the lognormal distribution, a number between 0 and 1, inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "mean": {
                  "name": "mean",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the mean of ln(x)."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "standardDev": {
                  "name": "standardDev",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the standard deviation of ln(x), a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse of the lognormal cumulative distribution function of x, where ln(x) is normally distributed with parameters Mean and Standard_dev."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "lookup": {
              "kind": "method",
              "signature": "lookup(lookupValue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, lookupVector: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, resultVector?: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number | string | boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number | string | boolean>",
                "description": []
              },
              "parameters": {
                "lookupValue": {
                  "name": "lookupValue",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a value that LOOKUP searches for in lookupVector and can be a number, text, a logical value, or a name or reference to a value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "lookupVector": {
                  "name": "lookupVector",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a range that contains only one row or one column of text, numbers, or logical values, placed in ascending order."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "resultVector": {
                  "name": "resultVector",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a range that contains only one row or column, the same size as lookupVector."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Looks up a value either from a one-row or one-column range or from an array. Provided for backward compatibility."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "lower": {
              "kind": "method",
              "signature": "lower(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text you want to convert to lowercase. Characters in Text that are not letters are not changed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts all letters in a text string to lowercase."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "match": {
              "kind": "method",
              "signature": "match(lookupValue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, lookupArray: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, matchType?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "lookupValue": {
                  "name": "lookupValue",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you use to find the value you want in the array, a number, text, or logical value, or a reference to one of these."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "lookupArray": {
                  "name": "lookupArray",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a contiguous range of cells containing possible lookup values, an array of values, or a reference to an array."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "matchType": {
                  "name": "matchType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number 1, 0, or -1 indicating which value to return."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the relative position of an item in an array that matches a specified value in a specified order."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "max": {
              "kind": "method",
              "signature": "max(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers, empty cells, logical values, or text numbers for which you want the maximum."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the largest value in a set of values. Ignores logical values and text."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "maxA": {
              "kind": "method",
              "signature": "maxA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers, empty cells, logical values, or text numbers for which you want the maximum."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the largest value in a set of values. Does not ignore logical values and text."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "mduration": {
              "kind": "method",
              "signature": "mduration(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, coupon: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yld: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "coupon": {
                  "name": "coupon",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's annual coupon rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "yld": {
                  "name": "yld",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's annual yield."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the Macauley modified duration for a security with an assumed par value of $100."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "median": {
              "kind": "method",
              "signature": "median(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the median."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the median, or the number in the middle of the set of given numbers."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "mid": {
              "kind": "method",
              "signature": "mid(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startNum: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numChars: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text string from which you want to extract the characters."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "startNum": {
                  "name": "startNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the position of the first character you want to extract. The first character in Text is 1."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numChars": {
                  "name": "numChars",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies how many characters to return from Text."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the characters from the middle of a text string, given a starting position and length."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "midb": {
              "kind": "method",
              "signature": "midb(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startNum: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numBytes: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text string containing the characters you want to extract."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "startNum": {
                  "name": "startNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the position of the first character you want to extract in text."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numBytes": {
                  "name": "numBytes",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies how many characters to return from text."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns characters from the middle of a text string, given a starting position and length. Use with double-byte character sets (DBCS)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "min": {
              "kind": "method",
              "signature": "min(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers, empty cells, logical values, or text numbers for which you want the minimum."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the smallest number in a set of values. Ignores logical values and text."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "minA": {
              "kind": "method",
              "signature": "minA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers, empty cells, logical values, or text numbers for which you want the minimum."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the smallest value in a set of values. Does not ignore logical values and text."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "minute": {
              "kind": "method",
              "signature": "minute(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "serialNumber": {
                  "name": "serialNumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number in the date-time code used by Microsoft Excel or text in time format, such as 16:48:00 or 4:48:00 PM."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the minute, a number from 0 to 59."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "mirr": {
              "kind": "method",
              "signature": "mirr(values: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, financeRate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, reinvestRate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an array or a reference to cells that contain numbers that represent a series of payments (negative) and income (positive) at regular periods."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "financeRate": {
                  "name": "financeRate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the interest rate you pay on the money used in the cash flows."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "reinvestRate": {
                  "name": "reinvestRate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the interest rate you receive on the cash flows as you reinvest them."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the internal rate of return for a series of periodic cash flows, considering both cost of investment and interest on reinvestment of cash."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "mod": {
              "kind": "method",
              "signature": "mod(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, divisor: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number for which you want to find the remainder after the division is performed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "divisor": {
                  "name": "divisor",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number by which you want to divide Number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the remainder after a number is divided by a divisor."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "month": {
              "kind": "method",
              "signature": "month(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "serialNumber": {
                  "name": "serialNumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number in the date-time code used by Microsoft Excel."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the month, a number from 1 (January) to 12 (December)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "mround": {
              "kind": "method",
              "signature": "mround(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, multiple: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value to round."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "multiple": {
                  "name": "multiple",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the multiple to which you want to round number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a number rounded to the desired multiple."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "multiNomial": {
              "kind": "method",
              "signature": "multiNomial(...values: Array<number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 values for which you want the multinomial."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the multinomial of a set of numbers."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "n": {
              "kind": "method",
              "signature": "n(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want converted."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts non-number value to a number, dates to serial numbers, TRUE to 1, anything else to 0 (zero)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "na": {
              "kind": "method",
              "signature": "na(): FunctionResult<number | string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number | string>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the error value #N/A (value not available)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "negBinom_Dist": {
              "kind": "method",
              "signature": "negBinom_Dist(numberF: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberS: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, probabilityS: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "numberF": {
                  "name": "numberF",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of failures."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numberS": {
                  "name": "numberS",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the threshold number of successes."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "probabilityS": {
                  "name": "probabilityS",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the probability of a success; a number between 0 and 1."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function, use FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the negative binomial distribution, the probability that there will be Number_f failures before the Number_s-th success, with Probability_s probability of a success."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "networkDays": {
              "kind": "method",
              "signature": "networkDays(startDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, endDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, holidays?: number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "startDate": {
                  "name": "startDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a serial date number that represents the start date."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "endDate": {
                  "name": "endDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a serial date number that represents the end date."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "holidays": {
                  "name": "holidays",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an optional set of one or more serial date numbers to exclude from the working calendar, such as state and federal holidays and floating holidays."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of whole workdays between two dates."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "networkDays_Intl": {
              "kind": "method",
              "signature": "networkDays_Intl(startDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, endDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, weekend?: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, holidays?: number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "startDate": {
                  "name": "startDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a serial date number that represents the start date."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "endDate": {
                  "name": "endDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a serial date number that represents the end date."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "weekend": {
                  "name": "weekend",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number or string specifying when weekends occur."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "holidays": {
                  "name": "holidays",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an optional set of one or more serial date numbers to exclude from the working calendar, such as state and federal holidays and floating holidays."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of whole workdays between two dates with custom weekend parameters."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "nominal": {
              "kind": "method",
              "signature": "nominal(effectRate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, npery: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "effectRate": {
                  "name": "effectRate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the effective interest rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "npery": {
                  "name": "npery",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of compounding periods per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the annual nominal interest rate."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "norm_Dist": {
              "kind": "method",
              "signature": "norm_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mean: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value for which you want the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "mean": {
                  "name": "mean",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the arithmetic mean of the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "standardDev": {
                  "name": "standardDev",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the standard deviation of the distribution, a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: for the cumulative distribution function, use TRUE; for the probability density function, use FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the normal distribution for the specified mean and standard deviation."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "norm_Inv": {
              "kind": "method",
              "signature": "norm_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mean: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "probability": {
                  "name": "probability",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a probability corresponding to the normal distribution, a number between 0 and 1 inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "mean": {
                  "name": "mean",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the arithmetic mean of the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "standardDev": {
                  "name": "standardDev",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the standard deviation of the distribution, a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse of the normal cumulative distribution for the specified mean and standard deviation."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "norm_S_Dist": {
              "kind": "method",
              "signature": "norm_S_Dist(z: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "z": {
                  "name": "z",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value for which you want the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value for the function to return: the cumulative distribution function = TRUE; the probability density function = FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the standard normal distribution (has a mean of zero and a standard deviation of one)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "norm_S_Inv": {
              "kind": "method",
              "signature": "norm_S_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "probability": {
                  "name": "probability",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a probability corresponding to the normal distribution, a number between 0 and 1 inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the inverse of the standard normal cumulative distribution (has a mean of zero and a standard deviation of one)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "not": {
              "kind": "method",
              "signature": "not(logical: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "logical": {
                  "name": "logical",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a value or expression that can be evaluated to TRUE or FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Changes FALSE to TRUE, or TRUE to FALSE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "now": {
              "kind": "method",
              "signature": "now(): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the current date and time formatted as a date and time."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "nper": {
              "kind": "method",
              "signature": "nper(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pmt: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pmt": {
                  "name": "pmt",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the payment made each period; it cannot change over the life of the investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pv": {
                  "name": "pv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the present value, or the lump-sum amount that a series of future payments is worth now."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "fv": {
                  "name": "fv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the future value, or a cash balance you want to attain after the last payment is made. If omitted, zero is used."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "type": {
                  "name": "type",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "npv": {
              "kind": "method",
              "signature": "npv(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the rate of discount over the length of one period."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 254 payments and income, equally spaced in time and occurring at the end of each period."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the net present value of an investment based on a discount rate and a series of future payments (negative values) and income (positive values)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "numberValue": {
              "kind": "method",
              "signature": "numberValue(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, decimalSeparator?: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, groupSeparator?: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the string representing the number you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "decimalSeparator": {
                  "name": "decimalSeparator",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the character used as the decimal separator in the string."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "groupSeparator": {
                  "name": "groupSeparator",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the character used as the group separator in the string."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts text to number in a locale-independent manner."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "oct2Bin": {
              "kind": "method",
              "signature": "oct2Bin(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the octal number you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "places": {
                  "name": "places",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of characters to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts an octal number to binary."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "oct2Dec": {
              "kind": "method",
              "signature": "oct2Dec(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the octal number you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts an octal number to decimal."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "oct2Hex": {
              "kind": "method",
              "signature": "oct2Hex(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the octal number you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "places": {
                  "name": "places",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of characters to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts an octal number to hexadecimal."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "odd": {
              "kind": "method",
              "signature": "odd(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value to round."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Rounds a positive number up and negative number down to the nearest odd integer."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "oddFPrice": {
              "kind": "method",
              "signature": "oddFPrice(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, issue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, firstCoupon: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yld: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "issue": {
                  "name": "issue",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's issue date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "firstCoupon": {
                  "name": "firstCoupon",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's first coupon date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's interest rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "yld": {
                  "name": "yld",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's annual yield."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "redemption": {
                  "name": "redemption",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's redemption value per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the price per $100 face value of a security with an odd first period."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "oddFYield": {
              "kind": "method",
              "signature": "oddFYield(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, issue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, firstCoupon: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "issue": {
                  "name": "issue",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's issue date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "firstCoupon": {
                  "name": "firstCoupon",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's first coupon date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's interest rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pr": {
                  "name": "pr",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's price."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "redemption": {
                  "name": "redemption",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's redemption value per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the yield of a security with an odd first period."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "oddLPrice": {
              "kind": "method",
              "signature": "oddLPrice(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, lastInterest: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yld: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "lastInterest": {
                  "name": "lastInterest",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's last coupon date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's interest rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "yld": {
                  "name": "yld",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's annual yield."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "redemption": {
                  "name": "redemption",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's redemption value per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the price per $100 face value of a security with an odd last period."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "oddLYield": {
              "kind": "method",
              "signature": "oddLYield(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, lastInterest: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "lastInterest": {
                  "name": "lastInterest",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's last coupon date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's interest rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pr": {
                  "name": "pr",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's price."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "redemption": {
                  "name": "redemption",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's redemption value per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the yield of a security with an odd last period."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "or": {
              "kind": "method",
              "signature": "or(...values: Array<boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 conditions that you want to test that can be either TRUE or FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether any of the arguments are TRUE, and returns TRUE or FALSE. Returns FALSE only if all arguments are FALSE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "pduration": {
              "kind": "method",
              "signature": "pduration(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the interest rate per period."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pv": {
                  "name": "pv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the present value of the investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "fv": {
                  "name": "fv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the desired future value of the investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of periods required by an investment to reach a specified value."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "percentile_Exc": {
              "kind": "method",
              "signature": "percentile_Exc(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, k: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "array": {
                  "name": "array",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the array or range of data that defines relative standing."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "k": {
                  "name": "k",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the percentile value that is between 0 through 1, inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the k-th percentile of values in a range, where k is in the range 0..1, exclusive."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "percentile_Inc": {
              "kind": "method",
              "signature": "percentile_Inc(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, k: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "array": {
                  "name": "array",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the array or range of data that defines relative standing."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "k": {
                  "name": "k",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the percentile value that is between 0 through 1, inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the k-th percentile of values in a range, where k is in the range 0..1, inclusive."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "percentRank_Exc": {
              "kind": "method",
              "signature": "percentRank_Exc(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "array": {
                  "name": "array",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the array or range of data with numeric values that defines relative standing."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value for which you want to know the rank."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "significance": {
                  "name": "significance",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an optional value that identifies the number of significant digits for the returned percentage, three digits if omitted (0.xxx%)."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the rank of a value in a data set as a percentage of the data set as a percentage (0..1, exclusive) of the data set."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "percentRank_Inc": {
              "kind": "method",
              "signature": "percentRank_Inc(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "array": {
                  "name": "array",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the array or range of data with numeric values that defines relative standing."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value for which you want to know the rank."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "significance": {
                  "name": "significance",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an optional value that identifies the number of significant digits for the returned percentage, three digits if omitted (0.xxx%)."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the rank of a value in a data set as a percentage of the data set as a percentage (0..1, inclusive) of the data set."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "permut": {
              "kind": "method",
              "signature": "permut(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberChosen: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the total number of objects."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numberChosen": {
                  "name": "numberChosen",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of objects in each permutation."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of permutations for a given number of objects that can be selected from the total objects."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "permutationa": {
              "kind": "method",
              "signature": "permutationa(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberChosen: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the total number of objects."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numberChosen": {
                  "name": "numberChosen",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of objects in each permutation."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of permutations for a given number of objects (with repetitions) that can be selected from the total objects."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "phi": {
              "kind": "method",
              "signature": "phi(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number for which you want the density of the standard normal distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the value of the density function for a standard normal distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "pi": {
              "kind": "method",
              "signature": "pi(): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the value of Pi, 3.14159265358979, accurate to 15 digits."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "pmt": {
              "kind": "method",
              "signature": "pmt(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the interest rate per period for the loan. For example, use 6%/4 for quarterly payments at 6% APR."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "nper": {
                  "name": "nper",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the total number of payments for the loan."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pv": {
                  "name": "pv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the present value: the total amount that a series of future payments is worth now."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "fv": {
                  "name": "fv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the future value, or a cash balance you want to attain after the last payment is made, 0 (zero) if omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "type": {
                  "name": "type",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Calculates the payment for a loan based on constant payments and a constant interest rate."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "poisson_Dist": {
              "kind": "method",
              "signature": "poisson_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mean: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of events."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "mean": {
                  "name": "mean",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the expected numeric value, a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: for the cumulative Poisson probability, use TRUE; for the Poisson probability mass function, use FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the Poisson distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "power": {
              "kind": "method",
              "signature": "power(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, power: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the base number, any real number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "power": {
                  "name": "power",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the exponent, to which the base number is raised."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the result of a number raised to a power."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ppmt": {
              "kind": "method",
              "signature": "ppmt(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, per: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "per": {
                  "name": "per",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the period and must be in the range 1 to nper."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "nper": {
                  "name": "nper",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the total number of payment periods in an investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pv": {
                  "name": "pv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the present value: the total amount that a series of future payments is worth now."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "fv": {
                  "name": "fv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the future value, or cash balance you want to attain after the last payment is made."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "type": {
                  "name": "type",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the payment on the principal for a given investment based on periodic, constant payments and a constant interest rate."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "price": {
              "kind": "method",
              "signature": "price(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yld: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's annual coupon rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "yld": {
                  "name": "yld",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's annual yield."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "redemption": {
                  "name": "redemption",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's redemption value per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the price per $100 face value of a security that pays periodic interest."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "priceDisc": {
              "kind": "method",
              "signature": "priceDisc(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, discount: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "discount": {
                  "name": "discount",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's discount rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "redemption": {
                  "name": "redemption",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's redemption value per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the price per $100 face value of a discounted security."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "priceMat": {
              "kind": "method",
              "signature": "priceMat(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, issue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yld: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "issue": {
                  "name": "issue",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's issue date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's interest rate at date of issue."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "yld": {
                  "name": "yld",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's annual yield."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the price per $100 face value of a security that pays interest at maturity."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "product": {
              "kind": "method",
              "signature": "product(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers, logical values, or text representations of numbers that you want to multiply."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Multiplies all the numbers given as arguments."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "proper": {
              "kind": "method",
              "signature": "proper(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is text enclosed in quotation marks, a formula that returns text, or a reference to a cell containing text to partially capitalize."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a text string to proper case; the first letter in each word to uppercase, and all other letters to lowercase."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "pv": {
              "kind": "method",
              "signature": "pv(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pmt: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "nper": {
                  "name": "nper",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the total number of payment periods in an investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pmt": {
                  "name": "pmt",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the payment made each period and cannot change over the life of the investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "fv": {
                  "name": "fv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the future value, or a cash balance you want to attain after the last payment is made."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "type": {
                  "name": "type",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the present value of an investment: the total amount that a series of future payments is worth now."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "quartile_Exc": {
              "kind": "method",
              "signature": "quartile_Exc(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, quart: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "array": {
                  "name": "array",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the array or cell range of numeric values for which you want the quartile value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "quart": {
                  "name": "quart",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number: minimum value = 0; 1st quartile = 1; median value = 2; 3rd quartile = 3; maximum value = 4."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the quartile of a data set, based on percentile values from 0..1, exclusive."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "quartile_Inc": {
              "kind": "method",
              "signature": "quartile_Inc(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, quart: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "array": {
                  "name": "array",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the array or cell range of numeric values for which you want the quartile value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "quart": {
                  "name": "quart",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number: minimum value = 0; 1st quartile = 1; median value = 2; 3rd quartile = 3; maximum value = 4."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the quartile of a data set, based on percentile values from 0..1, inclusive."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "quotient": {
              "kind": "method",
              "signature": "quotient(numerator: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, denominator: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "numerator": {
                  "name": "numerator",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the dividend."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "denominator": {
                  "name": "denominator",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the divisor."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the integer portion of a division."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "radians": {
              "kind": "method",
              "signature": "radians(angle: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "angle": {
                  "name": "angle",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an angle in degrees that you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts degrees to radians."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rand": {
              "kind": "method",
              "signature": "rand(): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a random number greater than or equal to 0 and less than 1, evenly distributed (changes on recalculation)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "randBetween": {
              "kind": "method",
              "signature": "randBetween(bottom: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, top: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "bottom": {
                  "name": "bottom",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the smallest integer RANDBETWEEN will return."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "top": {
                  "name": "top",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the largest integer RANDBETWEEN will return."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a random number between the numbers you specify."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rank_Avg": {
              "kind": "method",
              "signature": "rank_Avg(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ref: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, order?: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number for which you want to find the rank."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "ref": {
                  "name": "ref",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an array of, or a reference to, a list of numbers. Nonnumeric values are ignored."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "order": {
                  "name": "order",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number: rank in the list sorted descending = 0 or omitted; rank in the list sorted ascending = any nonzero value."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the rank of a number in a list of numbers: its size relative to other values in the list; if more than one value has the same rank, the average rank is returned."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rank_Eq": {
              "kind": "method",
              "signature": "rank_Eq(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ref: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, order?: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number for which you want to find the rank."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "ref": {
                  "name": "ref",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an array of, or a reference to, a list of numbers. Nonnumeric values are ignored."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "order": {
                  "name": "order",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number: rank in the list sorted descending = 0 or omitted; rank in the list sorted ascending = any nonzero value."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the rank of a number in a list of numbers: its size relative to other values in the list; if more than one value has the same rank, the top rank of that set of values is returned."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rate": {
              "kind": "method",
              "signature": "rate(nper: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pmt: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, guess?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "nper": {
                  "name": "nper",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the total number of payment periods for the loan or investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pmt": {
                  "name": "pmt",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the payment made each period and cannot change over the life of the loan or investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pv": {
                  "name": "pv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the present value: the total amount that a series of future payments is worth now."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "fv": {
                  "name": "fv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the future value, or a cash balance you want to attain after the last payment is made. If omitted, uses Fv = 0."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "type": {
                  "name": "type",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "guess": {
                  "name": "guess",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is your guess for what the rate will be; if omitted, Guess = 0.1 (10 percent)."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the interest rate per period of a loan or an investment. For example, use 6%/4 for quarterly payments at 6% APR."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "received": {
              "kind": "method",
              "signature": "received(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, investment: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, discount: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "investment": {
                  "name": "investment",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the amount invested in the security."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "discount": {
                  "name": "discount",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's discount rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the amount received at maturity for a fully invested security."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "replace": {
              "kind": "method",
              "signature": "replace(oldText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startNum: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numChars: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, newText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "oldText": {
                  "name": "oldText",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is text in which you want to replace some characters."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "startNum": {
                  "name": "startNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the position of the character in oldText that you want to replace with newText."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numChars": {
                  "name": "numChars",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of characters in oldText that you want to replace."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "newText": {
                  "name": "newText",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text that will replace characters in oldText."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Replaces part of a text string with a different text string."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "replaceB": {
              "kind": "method",
              "signature": "replaceB(oldText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startNum: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numBytes: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, newText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "oldText": {
                  "name": "oldText",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is text in which you want to replace some characters."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "startNum": {
                  "name": "startNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the position of the character in oldText that you want to replace with newText."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numBytes": {
                  "name": "numBytes",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of characters in oldText that you want to replace with newText."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "newText": {
                  "name": "newText",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text that will replace characters in oldText."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Replaces part of a text string with a different text string. Use with double-byte character sets (DBCS)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rept": {
              "kind": "method",
              "signature": "rept(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberTimes: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text you want to repeat."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numberTimes": {
                  "name": "numberTimes",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a positive number specifying the number of times to repeat text."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Repeats text a given number of times. Use REPT to fill a cell with a number of instances of a text string."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "right": {
              "kind": "method",
              "signature": "right(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numChars?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text string that contains the characters you want to extract."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numChars": {
                  "name": "numChars",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies how many characters you want to extract, 1 if omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the specified number of characters from the end of a text string."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rightb": {
              "kind": "method",
              "signature": "rightb(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numBytes?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text string containing the characters you want to extract."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numBytes": {
                  "name": "numBytes",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies how many characters you want to extract."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the specified number of characters from the end of a text string. Use with double-byte character sets (DBCS)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "roman": {
              "kind": "method",
              "signature": "roman(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, form?: boolean | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the Arabic numeral you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "form": {
                  "name": "form",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number specifying the type of Roman numeral you want."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts an Arabic numeral to Roman, as text."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "round": {
              "kind": "method",
              "signature": "round(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numDigits: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number you want to round."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numDigits": {
                  "name": "numDigits",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of digits to which you want to round. Negative rounds to the left of the decimal point; zero to the nearest integer."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Rounds a number to a specified number of digits."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "roundDown": {
              "kind": "method",
              "signature": "roundDown(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numDigits: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is any real number that you want rounded down."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numDigits": {
                  "name": "numDigits",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of digits to which you want to round. Negative rounds to the left of the decimal point; zero or omitted, to the nearest integer."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Rounds a number down, toward zero."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "roundUp": {
              "kind": "method",
              "signature": "roundUp(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numDigits: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is any real number that you want rounded up."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numDigits": {
                  "name": "numDigits",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of digits to which you want to round. Negative rounds to the left of the decimal point; zero or omitted, to the nearest integer."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Rounds a number up, away from zero."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rows": {
              "kind": "method",
              "signature": "rows(array: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "array": {
                  "name": "array",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an array, an array formula, or a reference to a range of cells for which you want the number of rows."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of rows in a reference or array."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rri": {
              "kind": "method",
              "signature": "rri(nper: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "nper": {
                  "name": "nper",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of periods for the investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pv": {
                  "name": "pv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the present value of the investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "fv": {
                  "name": "fv",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the future value of the investment."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns an equivalent interest rate for the growth of an investment."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sec": {
              "kind": "method",
              "signature": "sec(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the angle in radians for which you want the secant."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the secant of an angle."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sech": {
              "kind": "method",
              "signature": "sech(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the angle in radians for which you want the hyperbolic secant."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the hyperbolic secant of an angle."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "second": {
              "kind": "method",
              "signature": "second(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "serialNumber": {
                  "name": "serialNumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number in the date-time code used by Microsoft Excel or text in time format, such as 16:48:23 or 4:48:47 PM."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the second, a number from 0 to 59."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "seriesSum": {
              "kind": "method",
              "signature": "seriesSum(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, m: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, coefficients: Excel.Range | string | number | boolean | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the input value to the power series."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "n": {
                  "name": "n",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the initial power to which you want to raise x."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "m": {
                  "name": "m",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the step by which to increase n for each term in the series."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "coefficients": {
                  "name": "coefficients",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a set of coefficients by which each successive power of x is multiplied."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | string | number | boolean | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the sum of a power series based on the formula."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sheet": {
              "kind": "method",
              "signature": "sheet(value?: Excel.Range | string | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the name of a sheet or a reference that you want the sheet number of. If omitted the number of the sheet containing the function is returned."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "Excel.Range | string | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the sheet number of the referenced sheet."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sheets": {
              "kind": "method",
              "signature": "sheets(reference?: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "reference": {
                  "name": "reference",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a reference for which you want to know the number of sheets it contains. If omitted the number of sheets in the workbook containing the function is returned."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of sheets in a reference."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sign": {
              "kind": "method",
              "signature": "sign(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is any real number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the sign of a number: 1 if the number is positive, zero if the number is zero, or -1 if the number is negative."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sin": {
              "kind": "method",
              "signature": "sin(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the angle in radians for which you want the sine. Degrees * PI()/180 = radians."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the sine of an angle."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sinh": {
              "kind": "method",
              "signature": "sinh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is any real number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the hyperbolic sine of a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "skew": {
              "kind": "method",
              "signature": "skew(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the skewness."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the skewness of a distribution: a characterization of the degree of asymmetry of a distribution around its mean."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "skew_p": {
              "kind": "method",
              "signature": "skew_p(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the skewness of a distribution based on a population: a characterization of the degree of asymmetry of a distribution around its mean."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sln": {
              "kind": "method",
              "signature": "sln(cost: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, life: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "cost": {
                  "name": "cost",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the initial cost of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "salvage": {
                  "name": "salvage",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the salvage value at the end of the life of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "life": {
                  "name": "life",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset)."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the straight-line depreciation of an asset for one period."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "small": {
              "kind": "method",
              "signature": "small(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, k: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "array": {
                  "name": "array",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an array or range of numerical data for which you want to determine the k-th smallest value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "k": {
                  "name": "k",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the position (from the smallest) in the array or range of the value to return."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the k-th smallest value in a data set. For example, the fifth smallest number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sqrt": {
              "kind": "method",
              "signature": "sqrt(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number for which you want the square root."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the square root of a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sqrtPi": {
              "kind": "method",
              "signature": "sqrtPi(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number by which p is multiplied."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the square root of (number * Pi)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "standardize": {
              "kind": "method",
              "signature": "standardize(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mean: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value you want to normalize."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "mean": {
                  "name": "mean",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the arithmetic mean of the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "standardDev": {
                  "name": "standardDev",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the standard deviation of the distribution, a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a normalized value from a distribution characterized by a mean and standard deviation."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "stDev_P": {
              "kind": "method",
              "signature": "stDev_P(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers corresponding to a population and can be numbers or references that contain numbers."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Calculates standard deviation based on the entire population given as arguments (ignores logical values and text)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "stDev_S": {
              "kind": "method",
              "signature": "stDev_S(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers corresponding to a sample of a population and can be numbers or references that contain numbers."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Estimates standard deviation based on a sample (ignores logical values and text in the sample)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "stDevA": {
              "kind": "method",
              "signature": "stDevA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 values corresponding to a sample of a population and can be values or names or references to values."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Estimates standard deviation based on a sample, including logical values and text. Text and the logical value FALSE have the value 0; the logical value TRUE has the value 1."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "stDevPA": {
              "kind": "method",
              "signature": "stDevPA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 values corresponding to a population and can be values, names, arrays, or references that contain values."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Calculates standard deviation based on an entire population, including logical values and text. Text and the logical value FALSE have the value 0; the logical value TRUE has the value 1."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "substitute": {
              "kind": "method",
              "signature": "substitute(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, oldText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, newText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, instanceNum?: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text or the reference to a cell containing text in which you want to substitute characters."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "oldText": {
                  "name": "oldText",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the existing text you want to replace. If the case of oldText does not match the case of text, SUBSTITUTE will not replace the text."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "newText": {
                  "name": "newText",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text you want to replace oldText with."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "instanceNum": {
                  "name": "instanceNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies which occurrence of oldText you want to replace. If omitted, every instance of oldText is replaced."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Replaces existing text with new text in a text string."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "subtotal": {
              "kind": "method",
              "signature": "subtotal(functionNum: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ...values: Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "functionNum": {
                  "name": "functionNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number 1 to 11 that specifies the summary function for the subtotal."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 254 ranges or references for which you want the subtotal."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a subtotal in a list or database."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sum": {
              "kind": "method",
              "signature": "sum(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers to sum. Logical values and text are ignored in cells, included if typed as arguments."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds all the numbers in a range of cells."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sumIf": {
              "kind": "method",
              "signature": "sumIf(range: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, sumRange?: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "range": {
                  "name": "range",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range of cells you want evaluated."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "criteria": {
                  "name": "criteria",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the condition or criteria in the form of a number, expression, or text that defines which cells will be added."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "sumRange": {
                  "name": "sumRange",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Are the actual cells to sum. If omitted, the cells in range are used."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds the cells specified by a given condition or criteria."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sumIfs": {
              "kind": "method",
              "signature": "sumIfs(sumRange: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ...values: Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any> | number | string | boolean>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "sumRange": {
                  "name": "sumRange",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Are the actual cells to sum."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, where the first element of each pair is the Is the range of cells you want evaluated for the particular condition , and the second element is is the condition or criteria in the form of a number, expression, or text that defines which cells will be added."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any> | number | string | boolean>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds the cells specified by a given set of conditions or criteria."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sumSq": {
              "kind": "method",
              "signature": "sumSq(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numbers, arrays, names, or references to arrays for which you want the sum of the squares."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the sum of the squares of the arguments. The arguments can be numbers, arrays, names, or references to cells that contain numbers."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "syd": {
              "kind": "method",
              "signature": "syd(cost: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, life: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, per: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "cost": {
                  "name": "cost",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the initial cost of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "salvage": {
                  "name": "salvage",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the salvage value at the end of the life of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "life": {
                  "name": "life",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset)."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "per": {
                  "name": "per",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the period and must use the same units as Life."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the sum-of-years' digits depreciation of an asset for a specified period."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "t": {
              "kind": "method",
              "signature": "t(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value to test."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Checks whether a value is text, and returns the text if it is, or returns double quotes (empty text) if it is not."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "t_Dist": {
              "kind": "method",
              "signature": "t_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the numeric value at which to evaluate the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom": {
                  "name": "degFreedom",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an integer indicating the number of degrees of freedom that characterize the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: for the cumulative distribution function, use TRUE; for the probability density function, use FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the left-tailed Student's t-distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "t_Dist_2T": {
              "kind": "method",
              "signature": "t_Dist_2T(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the numeric value at which to evaluate the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom": {
                  "name": "degFreedom",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an integer indicating the number of degrees of freedom that characterize the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the two-tailed Student's t-distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "t_Dist_RT": {
              "kind": "method",
              "signature": "t_Dist_RT(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the numeric value at which to evaluate the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom": {
                  "name": "degFreedom",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an integer indicating the number of degrees of freedom that characterize the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the right-tailed Student's t-distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "t_Inv": {
              "kind": "method",
              "signature": "t_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "probability": {
                  "name": "probability",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the probability associated with the two-tailed Student's t-distribution, a number between 0 and 1 inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom": {
                  "name": "degFreedom",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a positive integer indicating the number of degrees of freedom to characterize the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the left-tailed inverse of the Student's t-distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "t_Inv_2T": {
              "kind": "method",
              "signature": "t_Inv_2T(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "probability": {
                  "name": "probability",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the probability associated with the two-tailed Student's t-distribution, a number between 0 and 1 inclusive."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "degFreedom": {
                  "name": "degFreedom",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a positive integer indicating the number of degrees of freedom to characterize the distribution."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the two-tailed inverse of the Student's t-distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "tan": {
              "kind": "method",
              "signature": "tan(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the angle in radians for which you want the tangent. Degrees * PI()/180 = radians."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the tangent of an angle."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "tanh": {
              "kind": "method",
              "signature": "tanh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is any real number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the hyperbolic tangent of a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "tbillEq": {
              "kind": "method",
              "signature": "tbillEq(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, discount: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the Treasury bill's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the Treasury bill's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "discount": {
                  "name": "discount",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the Treasury bill's discount rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the bond-equivalent yield for a treasury bill."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "tbillPrice": {
              "kind": "method",
              "signature": "tbillPrice(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, discount: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the Treasury bill's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the Treasury bill's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "discount": {
                  "name": "discount",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the Treasury bill's discount rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the price per $100 face value for a treasury bill."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "tbillYield": {
              "kind": "method",
              "signature": "tbillYield(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the Treasury bill's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the Treasury bill's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pr": {
                  "name": "pr",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the Treasury Bill's price per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the yield for a treasury bill."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "text": {
              "kind": "method",
              "signature": "text(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, formatText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number, a formula that evaluates to a numeric value, or a reference to a cell containing a numeric value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "formatText": {
                  "name": "formatText",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number format in text form from the Category box on the Number tab in the Format Cells dialog box (not General)."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a value to text in a specific number format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "time": {
              "kind": "method",
              "signature": "time(hour: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, minute: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, second: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "hour": {
                  "name": "hour",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number from 0 to 23 representing the hour."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "minute": {
                  "name": "minute",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number from 0 to 59 representing the minute."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "second": {
                  "name": "second",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number from 0 to 59 representing the second."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts hours, minutes, and seconds given as numbers to an Excel serial number, formatted with a time format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "timevalue": {
              "kind": "method",
              "signature": "timevalue(timeText: string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "timeText": {
                  "name": "timeText",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a text string that gives a time in any one of the Microsoft Excel time formats (date information in the string is ignored)."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a text time to an Excel serial number for a time, a number from 0 (12:00:00 AM) to 0.999988426 (11:59:59 PM). Format the number with a time format after entering the formula."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "today": {
              "kind": "method",
              "signature": "today(): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the current date formatted as a date."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{}",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "trim": {
              "kind": "method",
              "signature": "trim(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text from which you want spaces removed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Removes all spaces from a text string except for single spaces between words."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "trimMean": {
              "kind": "method",
              "signature": "trimMean(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, percent: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "array": {
                  "name": "array",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the range or array of values to trim and average."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "percent": {
                  "name": "percent",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the fractional number of data points to exclude from the top and bottom of the data set."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the mean of the interior portion of a set of data values."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "true": {
              "kind": "method",
              "signature": "true(): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the logical value TRUE."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "trunc": {
              "kind": "method",
              "signature": "trunc(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numDigits?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number you want to truncate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "numDigits": {
                  "name": "numDigits",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number specifying the precision of the truncation, 0 (zero) if omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Truncates a number to an integer by removing the decimal, or fractional, part of the number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "type": {
              "kind": "method",
              "signature": "type(value: boolean | string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Can be any value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns an integer representing the data type of a value: number = 1; text = 2; logical value = 4; error value = 16; array = 64."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "unichar": {
              "kind": "method",
              "signature": "unichar(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the Unicode number representing a character."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the Unicode character referenced by the given numeric value."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "unicode": {
              "kind": "method",
              "signature": "unicode(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the character that you want the Unicode value of."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number (code point) corresponding to the first character of the text."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "upper": {
              "kind": "method",
              "signature": "upper(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text you want converted to uppercase, a reference or a text string."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a text string to all uppercase letters."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "usdollar": {
              "kind": "method",
              "signature": "usdollar(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, decimals?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<string>",
                "description": []
              },
              "parameters": {
                "number": {
                  "name": "number",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number, a reference to a cell containing a number, or a formula that evaluates to a number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "decimals": {
                  "name": "decimals",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of digits to the right of the decimal point."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a number to text, using currency format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "value": {
              "kind": "method",
              "signature": "value(text: string | boolean | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the text enclosed in quotation marks or a reference to a cell containing the text you want to convert."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | boolean | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts a text string that represents a number to a number."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "var_P": {
              "kind": "method",
              "signature": "var_P(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numeric arguments corresponding to a population."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Calculates variance based on the entire population (ignores logical values and text in the population)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "var_S": {
              "kind": "method",
              "signature": "var_S(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 numeric arguments corresponding to a sample of a population."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Estimates variance based on a sample (ignores logical values and text in the sample)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "varA": {
              "kind": "method",
              "signature": "varA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 value arguments corresponding to a sample of a population."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Estimates variance based on a sample, including logical values and text. Text and the logical value FALSE have the value 0; the logical value TRUE has the value 1."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "varPA": {
              "kind": "method",
              "signature": "varPA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 255 value arguments corresponding to a population."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Calculates variance based on the entire population, including logical values and text. Text and the logical value FALSE have the value 0; the logical value TRUE has the value 1."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "vdb": {
              "kind": "method",
              "signature": "vdb(cost: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, life: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startPeriod: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, endPeriod: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, factor?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, noSwitch?: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "cost": {
                  "name": "cost",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the initial cost of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "salvage": {
                  "name": "salvage",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the salvage value at the end of the life of the asset."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "life": {
                  "name": "life",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset)."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "startPeriod": {
                  "name": "startPeriod",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the starting period for which you want to calculate the depreciation, in the same units as Life."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "endPeriod": {
                  "name": "endPeriod",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the ending period for which you want to calculate the depreciation, in the same units as Life."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "factor": {
                  "name": "factor",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the rate at which the balance declines, 2 (double-declining balance) if omitted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "noSwitch": {
                  "name": "noSwitch",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Switch to straight-line depreciation when depreciation is greater than the declining balance = FALSE or omitted; do not switch = TRUE."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the depreciation of an asset for any period you specify, including partial periods, using the double-declining balance method or some other method you specify."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "vlookup": {
              "kind": "method",
              "signature": "vlookup(lookupValue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, tableArray: Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>, colIndexNum: Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>, rangeLookup?: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number | string | boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number | string | boolean>",
                "description": []
              },
              "parameters": {
                "lookupValue": {
                  "name": "lookupValue",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value to be found in the first column of the table, and can be a value, a reference, or a text string."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "tableArray": {
                  "name": "tableArray",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a table of text, numbers, or logical values, in which data is retrieved. tableArray can be a reference to a range or a range name."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "colIndexNum": {
                  "name": "colIndexNum",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the column number in tableArray from which the matching value should be returned. The first column of values in the table is column 1."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rangeLookup": {
                  "name": "rangeLookup",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: to find the closest match in the first column (sorted in ascending order) = TRUE or omitted; find an exact match = FALSE."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Looks for a value in the leftmost column of a table, and then returns a value in the same row from a column you specify. By default, the table must be sorted in an ascending order."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "weekday": {
              "kind": "method",
              "signature": "weekday(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, returnType?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "serialNumber": {
                  "name": "serialNumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number that represents a date."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "returnType": {
                  "name": "returnType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number: for Sunday=1 through Saturday=7, use 1; for Monday=1 through Sunday=7, use 2; for Monday=0 through Sunday=6, use 3."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a number from 1 to 7 identifying the day of the week of a date."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "weekNum": {
              "kind": "method",
              "signature": "weekNum(serialNumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, returnType?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "serialNumber": {
                  "name": "serialNumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the date-time code used by Microsoft Excel for date and time calculation."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "returnType": {
                  "name": "returnType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number (1 or 2) that determines the type of the return value."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the week number in the year."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "weibull_Dist": {
              "kind": "method",
              "signature": "weibull_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, beta: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value at which to evaluate the function, a nonnegative number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "alpha": {
                  "name": "alpha",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a parameter to the distribution, a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "beta": {
                  "name": "beta",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a parameter to the distribution, a positive number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "cumulative": {
                  "name": "cumulative",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function, use FALSE."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the Weibull distribution."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "workDay": {
              "kind": "method",
              "signature": "workDay(startDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, days: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, holidays?: number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "startDate": {
                  "name": "startDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a serial date number that represents the start date."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "days": {
                  "name": "days",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of nonweekend and non-holiday days before or after startDate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "holidays": {
                  "name": "holidays",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an optional array of one or more serial date numbers to exclude from the working calendar, such as state and federal holidays and floating holidays."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the serial number of the date before or after a specified number of workdays."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "workDay_Intl": {
              "kind": "method",
              "signature": "workDay_Intl(startDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, days: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, weekend?: number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, holidays?: number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "startDate": {
                  "name": "startDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a serial date number that represents the start date."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "days": {
                  "name": "days",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of nonweekend and non-holiday days before or after startDate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "weekend": {
                  "name": "weekend",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number or string specifying when weekends occur."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "holidays": {
                  "name": "holidays",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is an optional array of one or more serial date numbers to exclude from the working calendar, such as state and federal holidays and floating holidays."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the serial number of the date before or after a specified number of workdays with custom weekend parameters."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "xirr": {
              "kind": "method",
              "signature": "xirr(values: number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>, dates: number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>, guess?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a series of cash flows that correspond to a schedule of payments in dates."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "dates": {
                  "name": "dates",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a schedule of payment dates that corresponds to the cash flow payments."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "guess": {
                  "name": "guess",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number that you guess is close to the result of XIRR."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the internal rate of return for a schedule of cash flows."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "xnpv": {
              "kind": "method",
              "signature": "xnpv(rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, values: number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>, dates: number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the discount rate to apply to the cash flows."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a series of cash flows that correspond to a schedule of payments in dates."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "dates": {
                  "name": "dates",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a schedule of payment dates that corresponds to the cash flow payments."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the net present value for a schedule of cash flows."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "xor": {
              "kind": "method",
              "signature": "xor(...values: Array<boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<boolean>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<boolean>",
                "description": []
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "List of parameters, whose elements are 1 to 254 conditions you want to test that can be either TRUE or FALSE and can be logical values, arrays, or references."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": true,
                  "type": "Array<boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a logical 'Exclusive Or' of all arguments."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "year": {
              "kind": "method",
              "signature": "year(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "serialNumber": {
                  "name": "serialNumber",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a number in the date-time code used by Microsoft Excel."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the year of a date, an integer in the range 1900 - 9999."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "yearFrac": {
              "kind": "method",
              "signature": "yearFrac(startDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, endDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "startDate": {
                  "name": "startDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a serial date number that represents the start date."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "endDate": {
                  "name": "endDate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is a serial date number that represents the end date."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the year fraction representing the number of whole days between start_date and end_date."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "yield": {
              "kind": "method",
              "signature": "yield(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's annual coupon rate."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pr": {
                  "name": "pr",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's price per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "redemption": {
                  "name": "redemption",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's redemption value per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "frequency": {
                  "name": "frequency",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the number of coupon payments per year."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the yield on a security that pays periodic interest."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "yieldDisc": {
              "kind": "method",
              "signature": "yieldDisc(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pr": {
                  "name": "pr",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's price per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "redemption": {
                  "name": "redemption",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's redemption value per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the annual yield for a discounted security. For example, a treasury bill."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "yieldMat": {
              "kind": "method",
              "signature": "yieldMat(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, issue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "settlement": {
                  "name": "settlement",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's settlement date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "maturity": {
                  "name": "maturity",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's maturity date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "issue": {
                  "name": "issue",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's issue date, expressed as a serial date number."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "rate": {
                  "name": "rate",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's interest rate at date of issue."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "pr": {
                  "name": "pr",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the security's price per $100 face value."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "basis": {
                  "name": "basis",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the type of day count basis to use."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the annual yield of a security that pays interest at maturity."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "z_Test": {
              "kind": "method",
              "signature": "z_Test(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, sigma?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "FunctionResult<number>",
                "description": []
              },
              "parameters": {
                "array": {
                  "name": "array",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the array or range of data against which to test X."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "x": {
                  "name": "x",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the value to test."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                },
                "sigma": {
                  "name": "sigma",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Is the population (known) standard deviation. If omitted, the sample standard deviation is used."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the one-tailed P-value of a z-test."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "HorizontalAlignment": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "Icon": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a cell icon."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "index": {
              "kind": "property",
              "signature": "index: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the index of the icon in the given set."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "property",
              "signature": "set: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the set that the icon is part of."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "IconCollections": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "fiveArrows": {
              "kind": "property",
              "signature": "fiveArrows: FiveArrowsSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "FiveArrowsSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "fiveArrowsGray": {
              "kind": "property",
              "signature": "fiveArrowsGray: FiveArrowsGraySet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "FiveArrowsGraySet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "fiveBoxes": {
              "kind": "property",
              "signature": "fiveBoxes: FiveBoxesSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "FiveBoxesSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "fiveQuarters": {
              "kind": "property",
              "signature": "fiveQuarters: FiveQuartersSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "FiveQuartersSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "fiveRating": {
              "kind": "property",
              "signature": "fiveRating: FiveRatingSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "FiveRatingSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "fourArrows": {
              "kind": "property",
              "signature": "fourArrows: FourArrowsSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "FourArrowsSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "fourArrowsGray": {
              "kind": "property",
              "signature": "fourArrowsGray: FourArrowsGraySet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "FourArrowsGraySet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "fourRating": {
              "kind": "property",
              "signature": "fourRating: FourRatingSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "FourRatingSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "fourRedToBlack": {
              "kind": "property",
              "signature": "fourRedToBlack: FourRedToBlackSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "FourRedToBlackSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "fourTrafficLights": {
              "kind": "property",
              "signature": "fourTrafficLights: FourTrafficLightsSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "FourTrafficLightsSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "threeArrows": {
              "kind": "property",
              "signature": "threeArrows: ThreeArrowsSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ThreeArrowsSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "threeArrowsGray": {
              "kind": "property",
              "signature": "threeArrowsGray: ThreeArrowsGraySet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ThreeArrowsGraySet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "threeFlags": {
              "kind": "property",
              "signature": "threeFlags: ThreeFlagsSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ThreeFlagsSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "threeSigns": {
              "kind": "property",
              "signature": "threeSigns: ThreeSignsSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ThreeSignsSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "threeStars": {
              "kind": "property",
              "signature": "threeStars: ThreeStarsSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ThreeStarsSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "threeSymbols": {
              "kind": "property",
              "signature": "threeSymbols: ThreeSymbolsSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ThreeSymbolsSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "threeSymbols2": {
              "kind": "property",
              "signature": "threeSymbols2: ThreeSymbols2Set;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ThreeSymbols2Set",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "threeTrafficLights1": {
              "kind": "property",
              "signature": "threeTrafficLights1: ThreeTrafficLights1Set;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ThreeTrafficLights1Set",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "threeTrafficLights2": {
              "kind": "property",
              "signature": "threeTrafficLights2: ThreeTrafficLights2Set;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ThreeTrafficLights2Set",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "threeTriangles": {
              "kind": "property",
              "signature": "threeTriangles: ThreeTrianglesSet;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ThreeTrianglesSet",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "IconSet": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "IconSetConditionalFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents an IconSet criteria for conditional formatting."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "criteria": {
              "kind": "property",
              "signature": "criteria: Array<Excel.ConditionalIconCriterion>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<Excel.ConditionalIconCriterion>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "An array of Criteria and IconSets for the rules and potential custom icons for conditional icons. Note that for the first criterion only the custom icon can be modified, while type, formula and operator will be ignored when set."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.IconSetConditionalFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.IconSetConditionalFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "reverseIconOrder": {
              "kind": "property",
              "signature": "reverseIconOrder: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "If true, reverses the icon orders for the IconSet. Note that this cannot be set if custom icons are used."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.IconSetConditionalFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.IconSetConditionalFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "showIconOnly": {
              "kind": "property",
              "signature": "showIconOnly: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "If true, hides the values and only shows icons."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "style": {
              "kind": "property",
              "signature": "style: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "If set, displays the IconSet option for the conditional format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"criteria\": ConditionalIconCriterion[];\n            \"reverseIconOrder\": boolean;\n            \"showIconOnly\": boolean;\n            \"style\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ImageFittingMode": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "InsertShiftDirection": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "NamedItem": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a defined name for a range of cells or value. Names can be primitive named objects (as seen in the type below), range object, reference to a range. This object can be used to obtain range object associated with names."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "comment": {
              "kind": "property",
              "signature": "comment: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the comment associated with this name."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "delete": {
              "kind": "method",
              "signature": "delete(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes the given name."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getRange": {
              "kind": "method",
              "signature": "getRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the range object that is associated with the name. Throws an error if the named item's type is not a range."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getRangeOrNullObject": {
              "kind": "method",
              "signature": "getRangeOrNullObject(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the range object that is associated with the name. Returns a null object if the named item's type is not a range."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.NamedItem;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.NamedItem",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "name": {
              "kind": "property",
              "signature": "readonly name: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The name of the object. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "scope": {
              "kind": "property",
              "signature": "readonly scope: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the name is scoped to the workbook or to a specific worksheet. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.NamedItemUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.NamedItemUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"comment\": string;\n            \"name\": string;\n            \"scope\": string;\n            \"type\": string;\n            \"value\": any;\n            \"visible\": boolean;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "type": {
              "kind": "property",
              "signature": "readonly type: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates the type of the value returned by the name's formula. See Excel.NamedItemType for details. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "value": {
              "kind": "property",
              "signature": "readonly value: any;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the value computed by the name's formula. For a named range, will return the range address. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "visible": {
              "kind": "property",
              "signature": "visible: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specifies whether the object is visible or not."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "worksheet": {
              "kind": "property",
              "signature": "readonly worksheet: Excel.Worksheet;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.Worksheet",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the worksheet on which the named item is scoped to. Throws an error if the items is scoped to the workbook instead."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "worksheetOrNullObject": {
              "kind": "property",
              "signature": "readonly worksheetOrNullObject: Excel.Worksheet;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.Worksheet",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the worksheet on which the named item is scoped to. Returns a null object if the item is scoped to the workbook instead."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "NamedItemCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A collection of all the nameditem objects that are part of the workbook or worksheet, depending on how it was reached."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "add": {
              "kind": "method",
              "signature": "add(name: string, reference: Excel.Range | string, comment?: string): Excel.NamedItem;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.NamedItem",
                "description": [
                  {
                    "kind": "text",
                    "text": ""
                  }
                ]
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The name of the named item."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "reference": {
                  "name": "reference",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The formula or the range that the name will refer to."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | string"
                },
                "comment": {
                  "name": "comment",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The comment associated with the named item"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds a new name to the collection of the given scope."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "addFormulaLocal": {
              "kind": "method",
              "signature": "addFormulaLocal(name: string, formula: string, comment?: string): Excel.NamedItem;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.NamedItem",
                "description": [
                  {
                    "kind": "text",
                    "text": ""
                  }
                ]
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The \"name\" of the named item."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "formula": {
                  "name": "formula",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The formula in the user's locale that the name will refer to."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "comment": {
                  "name": "comment",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The comment associated with the named item"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds a new name to the collection of the given scope using the user's locale for the formula."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of named items in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItem": {
              "kind": "method",
              "signature": "getItem(name: string): Excel.NamedItem;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.NamedItem",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [
                    {
                      "kind": "text",
                      "text": "nameditem name."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a nameditem object using its name"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemOrNullObject": {
              "kind": "method",
              "signature": "getItemOrNullObject(name: string): Excel.NamedItem;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.NamedItem",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [
                    {
                      "kind": "text",
                      "text": "nameditem name."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a nameditem object using its name. If the nameditem object does not exist, will return a null object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.NamedItem>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.NamedItem>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.NamedItemCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.NamedItemCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{}",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "NamedItemScope": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.4]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "NamedItemType": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "PivotTable": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents an Excel PivotTable."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.3]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "id": {
              "kind": "property",
              "signature": "readonly id: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Id of the PivotTable."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.PivotTable;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.PivotTable",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "name": {
              "kind": "property",
              "signature": "name: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Name of the PivotTable."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "refresh": {
              "kind": "method",
              "signature": "refresh(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Refreshes the PivotTable."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.PivotTableUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.PivotTableUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"id\": string;\n            \"name\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "worksheet": {
              "kind": "property",
              "signature": "readonly worksheet: Excel.Worksheet;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.Worksheet",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The worksheet containing the current PivotTable. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "PivotTableCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a collection of all the PivotTables that are part of the workbook or worksheet."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.3]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of pivot tables in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItem": {
              "kind": "method",
              "signature": "getItem(name: string): Excel.PivotTable;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.PivotTable",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Name of the PivotTable to be retrieved."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a PivotTable by name."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemOrNullObject": {
              "kind": "method",
              "signature": "getItemOrNullObject(name: string): Excel.PivotTable;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.PivotTable",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Name of the PivotTable to be retrieved."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a PivotTable by name. If the PivotTable does not exist, will return a null object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.PivotTable>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.PivotTable>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.PivotTableCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.PivotTableCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "refreshAll": {
              "kind": "method",
              "signature": "refreshAll(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Refreshes all the pivot tables in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{}",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "PresetCriteriaConditionalFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the the preset criteria conditional format such as above average/below average/unique values/contains blank/nonblank/error/noerror."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ConditionalRangeFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalRangeFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.PresetCriteriaConditionalFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.PresetCriteriaConditionalFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rule": {
              "kind": "property",
              "signature": "rule: Excel.ConditionalPresetCriteriaRule;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.ConditionalPresetCriteriaRule",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The rule of the conditional format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.PresetCriteriaConditionalFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.PresetCriteriaConditionalFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"format\": ConditionalRangeFormat;\n            \"rule\": ConditionalPresetCriteriaRule;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Range": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Range represents a set of one or more contiguous cells such as a cell, a row, a column, block of cells, etc."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "address": {
              "kind": "property",
              "signature": "readonly address: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the range reference in A1-style. Address value will contain the Sheet reference (e.g. Sheet1!A1:B4). Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "addressLocal": {
              "kind": "property",
              "signature": "readonly addressLocal: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents range reference for the specified range in the language of the user. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "calculate": {
              "kind": "method",
              "signature": "calculate(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Calculates a range of cells on a worksheet."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "cellCount": {
              "kind": "property",
              "signature": "readonly cellCount: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Number of cells in the range. This API will return -1 if the cell count exceeds 2^31-1 (2,147,483,647). Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "clear": {
              "kind": "method",
              "signature": "clear(applyTo?: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "applyTo": {
                  "name": "applyTo",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Determines the type of clear action. See Excel.ClearApplyTo for details."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Clear range values, format, fill, border, etc."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "columnCount": {
              "kind": "property",
              "signature": "readonly columnCount: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the total number of columns in the range. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "columnHidden": {
              "kind": "property",
              "signature": "columnHidden: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents if all columns of the current range are hidden."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "columnIndex": {
              "kind": "property",
              "signature": "readonly columnIndex: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the column number of the first cell in the range. Zero-indexed. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "conditionalFormats": {
              "kind": "property",
              "signature": "readonly conditionalFormats: Excel.ConditionalFormatCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalFormatCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Collection of ConditionalFormats that intersect the range. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "delete": {
              "kind": "method",
              "signature": "delete(shift: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "shift": {
                  "name": "shift",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies which way to shift the cells. See Excel.DeleteShiftDirection for details."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes the cells associated with the range."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.RangeFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.RangeFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a format object, encapsulating the range's font, fill, borders, alignment, and other properties. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "formulas": {
              "kind": "property",
              "signature": "formulas: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the formula in A1-style notation."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "formulasLocal": {
              "kind": "property",
              "signature": "formulasLocal: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English \"=SUM(A1, 1.5)\" formula would become \"=SUMME(A1; 1,5)\" in German."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "formulasR1C1": {
              "kind": "property",
              "signature": "formulasR1C1: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the formula in R1C1-style notation."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getBoundingRect": {
              "kind": "method",
              "signature": "getBoundingRect(anotherRange: Excel.Range | string): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "anotherRange": {
                  "name": "anotherRange",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The range object or address or range name."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the smallest range object that encompasses the given ranges. For example, the GetBoundingRect of \"B2:C5\" and \"D10:E15\" is \"B2:E16\"."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCell": {
              "kind": "method",
              "signature": "getCell(row: number, column: number): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "row": {
                  "name": "row",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Row number of the cell to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                },
                "column": {
                  "name": "column",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Column number of the cell to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the range object containing the single cell based on row and column numbers. The cell can be outside the bounds of its parent range, so long as it's stays within the worksheet grid. The returned cell is located relative to the top left cell of the range."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getColumn": {
              "kind": "method",
              "signature": "getColumn(column: number): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "column": {
                  "name": "column",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Column number of the range to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a column contained in the range."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getColumnsAfter": {
              "kind": "method",
              "signature": "getColumnsAfter(count?: number): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "count": {
                  "name": "count",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a certain number of columns to the right of the current Range object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getColumnsBefore": {
              "kind": "method",
              "signature": "getColumnsBefore(count?: number): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "count": {
                  "name": "count",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a certain number of columns to the left of the current Range object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getEntireColumn": {
              "kind": "method",
              "signature": "getEntireColumn(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an object that represents the entire column of the range (for example, if the current range represents cells \"B4:E11\", it's `getEntireColumn` is a range that represents columns \"B:E\")."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getEntireRow": {
              "kind": "method",
              "signature": "getEntireRow(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an object that represents the entire row of the range (for example, if the current range represents cells \"B4:E11\", it's `GetEntireRow` is a range that represents rows \"4:11\")."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getIntersection": {
              "kind": "method",
              "signature": "getIntersection(anotherRange: Excel.Range | string): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "anotherRange": {
                  "name": "anotherRange",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The range object or range address that will be used to determine the intersection of ranges."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the range object that represents the rectangular intersection of the given ranges."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getIntersectionOrNullObject": {
              "kind": "method",
              "signature": "getIntersectionOrNullObject(anotherRange: Excel.Range | string): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "anotherRange": {
                  "name": "anotherRange",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The range object or range address that will be used to determine the intersection of ranges."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the range object that represents the rectangular intersection of the given ranges. If no intersection is found, will return a null object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getLastCell": {
              "kind": "method",
              "signature": "getLastCell(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the last cell within the range. For example, the last cell of \"B2:D5\" is \"D5\"."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getLastColumn": {
              "kind": "method",
              "signature": "getLastColumn(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the last column within the range. For example, the last column of \"B2:D5\" is \"D2:D5\"."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getLastRow": {
              "kind": "method",
              "signature": "getLastRow(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the last row within the range. For example, the last row of \"B2:D5\" is \"B5:D5\"."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getOffsetRange": {
              "kind": "method",
              "signature": "getOffsetRange(rowOffset: number, columnOffset: number): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "rowOffset": {
                  "name": "rowOffset",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The number of rows (positive, negative, or 0) by which the range is to be offset. Positive values are offset downward, and negative values are offset upward."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                },
                "columnOffset": {
                  "name": "columnOffset",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The number of columns (positive, negative, or 0) by which the range is to be offset. Positive values are offset to the right, and negative values are offset to the left."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an object which represents a range that's offset from the specified range. The dimension of the returned range will match this range. If the resulting range is forced outside the bounds of the worksheet grid, an error will be thrown."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getResizedRange": {
              "kind": "method",
              "signature": "getResizedRange(deltaRows: number, deltaColumns: number): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "deltaRows": {
                  "name": "deltaRows",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The number of rows by which to expand the bottom-right corner, relative to the current range. Use a positive number to expand the range, or a negative number to decrease it."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                },
                "deltaColumns": {
                  "name": "deltaColumns",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The number of columnsby which to expand the bottom-right corner, relative to the current range. Use a positive number to expand the range, or a negative number to decrease it."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a Range object similar to the current Range object, but with its bottom-right corner expanded (or contracted) by some number of rows and columns."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getRow": {
              "kind": "method",
              "signature": "getRow(row: number): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "row": {
                  "name": "row",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Row number of the range to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a row contained in the range."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getRowsAbove": {
              "kind": "method",
              "signature": "getRowsAbove(count?: number): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "count": {
                  "name": "count",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a certain number of rows above the current Range object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getRowsBelow": {
              "kind": "method",
              "signature": "getRowsBelow(count?: number): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "count": {
                  "name": "count",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a certain number of rows below the current Range object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getUsedRange": {
              "kind": "method",
              "signature": "getUsedRange(valuesOnly?: boolean): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "valuesOnly": {
                  "name": "valuesOnly",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Considers only cells with values as used cells. [Api set: ExcelApi 1.2]"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the used range of the given range object. If there are no used cells within the range, this function will throw an ItemNotFound error."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getUsedRangeOrNullObject": {
              "kind": "method",
              "signature": "getUsedRangeOrNullObject(valuesOnly?: boolean): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "valuesOnly": {
                  "name": "valuesOnly",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Considers only cells with values as used cells."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the used range of the given range object. If there are no used cells within the range, this function will return a null object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getVisibleView": {
              "kind": "method",
              "signature": "getVisibleView(): Excel.RangeView;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.RangeView",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the visible rows of the current range."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "hidden": {
              "kind": "property",
              "signature": "readonly hidden: boolean;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents if all cells of the current range are hidden."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "insert": {
              "kind": "method",
              "signature": "insert(shift: string): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "shift": {
                  "name": "shift",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies which way to shift the cells. See Excel.InsertShiftDirection for details."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space. Returns a new Range object at the now blank space."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "merge": {
              "kind": "method",
              "signature": "merge(across?: boolean): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "across": {
                  "name": "across",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Set true to merge cells in each row of the specified range as separate merged cells. The default value is false."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Merge the range cells into one region in the worksheet."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "numberFormat": {
              "kind": "property",
              "signature": "numberFormat: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents Excel's number format code for the given cell."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rowCount": {
              "kind": "property",
              "signature": "readonly rowCount: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the total number of rows in the range. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rowHidden": {
              "kind": "property",
              "signature": "rowHidden: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents if all rows of the current range are hidden."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rowIndex": {
              "kind": "property",
              "signature": "readonly rowIndex: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the row number of the first cell in the range. Zero-indexed. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "select": {
              "kind": "method",
              "signature": "select(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Selects the specified range in the Excel UI."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.RangeUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.RangeUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sort": {
              "kind": "property",
              "signature": "readonly sort: Excel.RangeSort;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.RangeSort",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the range sort of the current range."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "text": {
              "kind": "property",
              "signature": "readonly text: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Text values of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"address\": string;\n            \"addressLocal\": string;\n            \"cellCount\": number;\n            \"columnCount\": number;\n            \"columnHidden\": boolean;\n            \"columnIndex\": number;\n            \"format\": RangeFormat;\n            \"formulas\": any[][];\n            \"formulasLocal\": any[][];\n            \"formulasR1C1\": any[][];\n            \"hidden\": boolean;\n            \"numberFormat\": any[][];\n            \"rowCount\": number;\n            \"rowHidden\": boolean;\n            \"rowIndex\": number;\n            \"text\": any[][];\n            \"values\": any[][];\n            \"valueTypes\": string[][];\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "track": {
              "kind": "method",
              "signature": "track(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for context.trackedObjects.add(thisObject). If you are using this object across \".sync\" calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "unmerge": {
              "kind": "method",
              "signature": "unmerge(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Unmerge the range cells into separate cells."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "untrack": {
              "kind": "method",
              "signature": "untrack(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Release the memory associated with this object, if it has previously been tracked. This call is shorthand for context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You will need to call \"context.sync()\" before the memory release takes effect."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "values": {
              "kind": "property",
              "signature": "values: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "valueTypes": {
              "kind": "property",
              "signature": "readonly valueTypes: Array<Array<string>>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Array<string>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the type of data of each cell. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "worksheet": {
              "kind": "property",
              "signature": "readonly worksheet: Excel.Worksheet;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.Worksheet",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The worksheet containing the current range. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "RangeBorder": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the border of an object."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "color": {
              "kind": "property",
              "signature": "color: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\")."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.RangeBorder;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.RangeBorder",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.RangeBorderUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.RangeBorderUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sideIndex": {
              "kind": "property",
              "signature": "readonly sideIndex: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constant value that indicates the specific side of the border. See Excel.BorderIndex for details. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "style": {
              "kind": "property",
              "signature": "style: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "One of the constants of line style specifying the line style for the border. See Excel.BorderLineStyle for details."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"color\": string;\n            \"sideIndex\": string;\n            \"style\": string;\n            \"weight\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "weight": {
              "kind": "property",
              "signature": "weight: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specifies the weight of the border around a range. See Excel.BorderWeight for details."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "RangeBorderCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the border objects that make up the range border."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "count": {
              "kind": "property",
              "signature": "readonly count: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Number of border objects in the collection. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItem": {
              "kind": "method",
              "signature": "getItem(index: string): Excel.RangeBorder;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.RangeBorder",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Index value of the border object to be retrieved. See Excel.BorderIndex for details."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a border object using its name"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemAt": {
              "kind": "method",
              "signature": "getItemAt(index: number): Excel.RangeBorder;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.RangeBorder",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Index value of the object to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a border object using its index"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.RangeBorder>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.RangeBorder>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.RangeBorderCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.RangeBorderCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"count\": number;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "RangeFill": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the background of a range object."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "clear": {
              "kind": "method",
              "signature": "clear(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Resets the range background."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "color": {
              "kind": "property",
              "signature": "color: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\")"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.RangeFill;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.RangeFill",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.RangeFillUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.RangeFillUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"color\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "RangeFont": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This object represents the font attributes (font name, font size, color, etc.) for an object."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "bold": {
              "kind": "property",
              "signature": "bold: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the bold status of font."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "color": {
              "kind": "property",
              "signature": "color: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "HTML color code representation of the text color. E.g. #FF0000 represents Red."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "italic": {
              "kind": "property",
              "signature": "italic: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the italic status of the font."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.RangeFont;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.RangeFont",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "name": {
              "kind": "property",
              "signature": "name: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Font name (e.g. \"Calibri\")"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.RangeFontUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.RangeFontUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "size": {
              "kind": "property",
              "signature": "size: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Font size."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"bold\": boolean;\n            \"color\": string;\n            \"italic\": boolean;\n            \"name\": string;\n            \"size\": number;\n            \"underline\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "underline": {
              "kind": "property",
              "signature": "underline: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Type of underline applied to the font. See Excel.RangeUnderlineStyle for details."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "RangeFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A format object encapsulating the range's font, fill, borders, alignment, and other properties."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "autofitColumns": {
              "kind": "method",
              "signature": "autofitColumns(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Changes the width of the columns of the current range to achieve the best fit, based on the current data in the columns."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "autofitRows": {
              "kind": "method",
              "signature": "autofitRows(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Changes the height of the rows of the current range to achieve the best fit, based on the current data in the columns."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "borders": {
              "kind": "property",
              "signature": "readonly borders: Excel.RangeBorderCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.RangeBorderCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Collection of border objects that apply to the overall range. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "columnWidth": {
              "kind": "property",
              "signature": "columnWidth: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets or sets the width of all colums within the range. If the column widths are not uniform, null will be returned."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "fill": {
              "kind": "property",
              "signature": "readonly fill: Excel.RangeFill;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.RangeFill",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the fill object defined on the overall range. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "font": {
              "kind": "property",
              "signature": "readonly font: Excel.RangeFont;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.RangeFont",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the font object defined on the overall range. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "horizontalAlignment": {
              "kind": "property",
              "signature": "horizontalAlignment: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the horizontal alignment for the specified object. See Excel.HorizontalAlignment for details."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.RangeFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.RangeFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "protection": {
              "kind": "property",
              "signature": "readonly protection: Excel.FormatProtection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.FormatProtection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the format protection object for a range."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rowHeight": {
              "kind": "property",
              "signature": "rowHeight: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets or sets the height of all rows in the range. If the row heights are not uniform null will be returned."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.RangeFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.RangeFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"columnWidth\": number;\n            \"fill\": RangeFill;\n            \"font\": RangeFont;\n            \"horizontalAlignment\": string;\n            \"protection\": FormatProtection;\n            \"rowHeight\": number;\n            \"verticalAlignment\": string;\n            \"wrapText\": boolean;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "verticalAlignment": {
              "kind": "property",
              "signature": "verticalAlignment: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the vertical alignment for the specified object. See Excel.VerticalAlignment for details."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "wrapText": {
              "kind": "property",
              "signature": "wrapText: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates if Excel wraps the text in the object. A null value indicates that the entire range doesn't have uniform wrap setting"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "RangeReference": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a string reference of the form SheetName!A1:B5, or a global or local named range."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "address": {
              "kind": "property",
              "signature": "address: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "RangeSort": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Manages sorting operations on Range objects."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "apply": {
              "kind": "method",
              "signature": "apply(fields: Array<Excel.SortField>, matchCase?: boolean, hasHeaders?: boolean, orientation?: string, method?: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "fields": {
                  "name": "fields",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The list of conditions to sort on."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Array<Excel.SortField>"
                },
                "matchCase": {
                  "name": "matchCase",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Whether to have the casing impact string ordering."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                },
                "hasHeaders": {
                  "name": "hasHeaders",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Whether the range has a header."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                },
                "orientation": {
                  "name": "orientation",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Whether the operation is sorting rows or columns."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                },
                "method": {
                  "name": "method",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The ordering method used for Chinese characters."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Perform a sort operation."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{}",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "RangeUnderlineStyle": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "RangeValueType": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "RangeView": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "RangeView represents a set of visible cells of the parent range."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.3]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "cellAddresses": {
              "kind": "property",
              "signature": "readonly cellAddresses: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the cell addresses of the RangeView."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "columnCount": {
              "kind": "property",
              "signature": "readonly columnCount: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of visible columns. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "formulas": {
              "kind": "property",
              "signature": "formulas: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the formula in A1-style notation."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "formulasLocal": {
              "kind": "property",
              "signature": "formulasLocal: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English \"=SUM(A1, 1.5)\" formula would become \"=SUMME(A1; 1,5)\" in German."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "formulasR1C1": {
              "kind": "property",
              "signature": "formulasR1C1: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the formula in R1C1-style notation."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getRange": {
              "kind": "method",
              "signature": "getRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the parent range associated with the current RangeView."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "index": {
              "kind": "property",
              "signature": "readonly index: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a value that represents the index of the RangeView. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.RangeView;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.RangeView",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "numberFormat": {
              "kind": "property",
              "signature": "numberFormat: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents Excel's number format code for the given cell."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rowCount": {
              "kind": "property",
              "signature": "readonly rowCount: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of visible rows. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rows": {
              "kind": "property",
              "signature": "readonly rows: Excel.RangeViewCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.RangeViewCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents a collection of range views associated with the range. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.RangeViewUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.RangeViewUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "text": {
              "kind": "property",
              "signature": "readonly text: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Text values of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"cellAddresses\": any[][];\n            \"columnCount\": number;\n            \"formulas\": any[][];\n            \"formulasLocal\": any[][];\n            \"formulasR1C1\": any[][];\n            \"index\": number;\n            \"numberFormat\": any[][];\n            \"rowCount\": number;\n            \"text\": any[][];\n            \"values\": any[][];\n            \"valueTypes\": string[][];\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "values": {
              "kind": "property",
              "signature": "values: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the raw values of the specified range view. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "valueTypes": {
              "kind": "property",
              "signature": "readonly valueTypes: Array<Array<string>>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Array<string>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the type of data of each cell. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "RangeViewCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a collection of RangeView objects."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.3]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of RangeView objects in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemAt": {
              "kind": "method",
              "signature": "getItemAt(index: number): Excel.RangeView;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.RangeView",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Index of the visible row."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a RangeView Row via it's index. Zero-Indexed."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.RangeView>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.RangeView>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.RangeViewCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.RangeViewCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{}",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "RequestContext": {
          "kind": "class",
          "extends": "OfficeCore.RequestContext",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The RequestContext object facilitates requests to the Excel application. Since the Office add-in and the Excel application run in two different processes, the request context is required to get access to the Excel object model from the add-in."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__constructor": {
              "kind": "constructor",
              "signature": "constructor(url?: string | Session);",
              "parameters": {
                "url": {
                  "name": "url",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | Session"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constructs a new instance of the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "RequestContext"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "excel",
                    "exportName": "Excel",
                    "memberName": "RequestContext"
                  }
                },
                {
                  "kind": "text",
                  "text": " class"
                }
              ],
              "remarks": []
            },
            "application": {
              "kind": "property",
              "signature": "readonly application: Application;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Application",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "workbook": {
              "kind": "property",
              "signature": "readonly workbook: Workbook;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Workbook",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "run": {
          "kind": "function",
          "signature": "export function run<T>(requestInfo: OfficeExtension.RequestUrlAndHeaderInfo | Session, objects: OfficeExtension.ClientObject[], batch: (context: Excel.RequestContext) => OfficeExtension.IPromise<T>): OfficeExtension.IPromise<T>;",
          "returnValue": {
            "type": "OfficeExtension.IPromise<T>",
            "description": []
          },
          "parameters": {
            "requestInfo": {
              "name": "requestInfo",
              "description": [
                {
                  "kind": "text",
                  "text": "The URL of the remote workbook and the request headers to be sent."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "OfficeExtension.RequestUrlAndHeaderInfo | Session"
            },
            "objects": {
              "name": "objects",
              "description": [
                {
                  "kind": "text",
                  "text": "An array of previously-created API objects. The array will be validated to make sure that all of the objects share the same context. The batch will use this shared RequestContext, which means that any changes applied to these objects will be picked up by \"context.sync()\"."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "OfficeExtension.ClientObject[]"
            },
            "batch": {
              "name": "batch",
              "description": [
                {
                  "kind": "text",
                  "text": "A function that takes in a RequestContext and returns a promise (typically, just the result of \"context.sync()\"). The context parameter facilitates requests to the Excel application. Since the Office add-in and the Excel application run in two different processes, the RequestContext is required to get access to the Excel object model from the add-in."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "(context: Excel.RequestContext) => OfficeExtension.IPromise<T>"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Executes a batch script that performs actions on the Excel object model, using the remote RequestContext of previously-created API objects."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "SelectionChangedEventArgs": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides information about the document that raised the SelectionChanged event."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "workbook": {
              "kind": "property",
              "signature": "workbook: Excel.Workbook;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.Workbook",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the workbook object that raised the SelectionChanged event."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Session": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides connection session for a remote workbook."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__constructor": {
              "kind": "constructor",
              "signature": "constructor(workbookUrl?: string, requestHeaders?: {\n            [name: string]: string;\n        }, persisted?: boolean);",
              "parameters": {
                "workbookUrl": {
                  "name": "workbookUrl",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                },
                "requestHeaders": {
                  "name": "requestHeaders",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            [name: string]: string;\n        }"
                },
                "persisted": {
                  "name": "persisted",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constructs a new instance of the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Session"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "excel",
                    "exportName": "Excel",
                    "memberName": "Session"
                  }
                },
                {
                  "kind": "text",
                  "text": " class"
                }
              ],
              "remarks": []
            },
            "close": {
              "kind": "method",
              "signature": "close(): OfficeExtension.IPromise<void>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.IPromise<void>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Close the session."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Setting": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Setting represents a key-value pair of a setting persisted to the document."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.4]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "delete": {
              "kind": "method",
              "signature": "delete(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes the setting."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "key": {
              "kind": "property",
              "signature": "readonly key: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the key that represents the id of the Setting. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.Setting;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Setting",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.SettingUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.SettingUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"key\": string;\n            \"value\": any;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "value": {
              "kind": "property",
              "signature": "value: any;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the value stored for this setting."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "SettingCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a collection of worksheet objects that are part of the workbook."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.4]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "add": {
              "kind": "method",
              "signature": "add(key: string, value: string | number | boolean | Array<any> | any): Excel.Setting;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Setting",
                "description": []
              },
              "parameters": {
                "key": {
                  "name": "key",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The Key of the new setting."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The Value for the new setting."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | number | boolean | Array<any> | any"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets or adds the specified setting to the workbook."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of Settings in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItem": {
              "kind": "method",
              "signature": "getItem(key: string): Excel.Setting;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Setting",
                "description": []
              },
              "parameters": {
                "key": {
                  "name": "key",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Key of the setting."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a Setting entry via the key."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemOrNullObject": {
              "kind": "method",
              "signature": "getItemOrNullObject(key: string): Excel.Setting;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Setting",
                "description": []
              },
              "parameters": {
                "key": {
                  "name": "key",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The key of the setting."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a Setting entry via the key. If the Setting does not exist, will return a null object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.Setting>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.Setting>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.SettingCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.SettingCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "onSettingsChanged": {
              "kind": "property",
              "signature": "readonly onSettingsChanged: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Occurs when the Settings in the document are changed."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{}",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "SettingsChangedEventArgs": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides information about the setting that raised the SettingsChanged event"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.4]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "settings": {
              "kind": "property",
              "signature": "settings: Excel.SettingCollection;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.SettingCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the Setting object that represents the binding that raised the SettingsChanged event"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "SheetVisibility": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "SortDataOption": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "SortField": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a condition in a sorting operation."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "ascending": {
              "kind": "property",
              "signature": "ascending?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents whether the sorting is done in an ascending fashion."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "color": {
              "kind": "property",
              "signature": "color?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the color that is the target of the condition if the sorting is on font or cell color."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "dataOption": {
              "kind": "property",
              "signature": "dataOption?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents additional sorting options for this field."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "icon": {
              "kind": "property",
              "signature": "icon?: Excel.Icon;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.Icon",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the icon that is the target of the condition if the sorting is on the cell's icon."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "key": {
              "kind": "property",
              "signature": "key: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sortOn": {
              "kind": "property",
              "signature": "sortOn?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the type of sorting of this condition."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "SortMethod": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "SortOn": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "SortOrientation": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "Table": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents an Excel table."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "clearFilters": {
              "kind": "method",
              "signature": "clearFilters(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Clears all the filters currently applied on the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "columns": {
              "kind": "property",
              "signature": "readonly columns: Excel.TableColumnCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.TableColumnCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents a collection of all the columns in the table. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "convertToRange": {
              "kind": "method",
              "signature": "convertToRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Converts the table into a normal range of cells. All data is preserved."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "delete": {
              "kind": "method",
              "signature": "delete(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getDataBodyRange": {
              "kind": "method",
              "signature": "getDataBodyRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the range object associated with the data body of the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getHeaderRowRange": {
              "kind": "method",
              "signature": "getHeaderRowRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the range object associated with header row of the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getRange": {
              "kind": "method",
              "signature": "getRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the range object associated with the entire table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getTotalRowRange": {
              "kind": "method",
              "signature": "getTotalRowRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the range object associated with totals row of the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "highlightFirstColumn": {
              "kind": "property",
              "signature": "highlightFirstColumn: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the first column contains special formatting."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "highlightLastColumn": {
              "kind": "property",
              "signature": "highlightLastColumn: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the last column contains special formatting."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "id": {
              "kind": "property",
              "signature": "readonly id: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.Table;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Table",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "name": {
              "kind": "property",
              "signature": "name: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Name of the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "reapplyFilters": {
              "kind": "method",
              "signature": "reapplyFilters(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Reapplies all the filters currently on the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rows": {
              "kind": "property",
              "signature": "readonly rows: Excel.TableRowCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.TableRowCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents a collection of all the rows in the table. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.TableUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.TableUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "showBandedColumns": {
              "kind": "property",
              "signature": "showBandedColumns: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "showBandedRows": {
              "kind": "property",
              "signature": "showBandedRows: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "showFilterButton": {
              "kind": "property",
              "signature": "showFilterButton: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "showHeaders": {
              "kind": "property",
              "signature": "showHeaders: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the header row is visible or not. This value can be set to show or remove the header row."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "showTotals": {
              "kind": "property",
              "signature": "showTotals: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the total row is visible or not. This value can be set to show or remove the total row."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sort": {
              "kind": "property",
              "signature": "readonly sort: Excel.TableSort;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.TableSort",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the sorting for the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "style": {
              "kind": "property",
              "signature": "style: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constant value that represents the Table style. Possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"highlightFirstColumn\": boolean;\n            \"highlightLastColumn\": boolean;\n            \"id\": number;\n            \"name\": string;\n            \"showBandedColumns\": boolean;\n            \"showBandedRows\": boolean;\n            \"showFilterButton\": boolean;\n            \"showHeaders\": boolean;\n            \"showTotals\": boolean;\n            \"style\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "worksheet": {
              "kind": "property",
              "signature": "readonly worksheet: Excel.Worksheet;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.Worksheet",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The worksheet containing the current table. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "TableCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a collection of all the tables that are part of the workbook or worksheet, depending on how it was reached."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "add": {
              "kind": "method",
              "signature": "add(address: Excel.Range | string, hasHeaders: boolean): Excel.Table;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Table",
                "description": []
              },
              "parameters": {
                "address": {
                  "name": "address",
                  "description": [
                    {
                      "kind": "text",
                      "text": "A Range object, or a string address or name of the range representing the data source. If the address does not contain a sheet name, the currently-active sheet is used. [Api set: ExcelApi 1.1 for string parameter; 1.3 for accepting a Range object as well]"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Excel.Range | string"
                },
                "hasHeaders": {
                  "name": "hasHeaders",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e,. when this property set to false), Excel will automatically generate header shifting the data down by one row."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Create a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "count": {
              "kind": "property",
              "signature": "readonly count: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of tables in the workbook. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of tables in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItem": {
              "kind": "method",
              "signature": "getItem(key: number | string): Excel.Table;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Table",
                "description": []
              },
              "parameters": {
                "key": {
                  "name": "key",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Name or ID of the table to be retrieved."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a table by Name or ID."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemAt": {
              "kind": "method",
              "signature": "getItemAt(index: number): Excel.Table;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Table",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Index value of the object to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a table based on its position in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemOrNullObject": {
              "kind": "method",
              "signature": "getItemOrNullObject(key: number | string): Excel.Table;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Table",
                "description": []
              },
              "parameters": {
                "key": {
                  "name": "key",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Name or ID of the table to be retrieved."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a table by Name or ID. If the table does not exist, will return a null object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.Table>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.Table>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.TableCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TableCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"count\": number;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "TableColumn": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a column in a table."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "delete": {
              "kind": "method",
              "signature": "delete(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes the column from the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "filter": {
              "kind": "property",
              "signature": "readonly filter: Excel.Filter;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.Filter",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Retrieve the filter applied to the column."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getDataBodyRange": {
              "kind": "method",
              "signature": "getDataBodyRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the range object associated with the data body of the column."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getHeaderRowRange": {
              "kind": "method",
              "signature": "getHeaderRowRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the range object associated with the header row of the column."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getRange": {
              "kind": "method",
              "signature": "getRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the range object associated with the entire column."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getTotalRowRange": {
              "kind": "method",
              "signature": "getTotalRowRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the range object associated with the totals row of the column."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "id": {
              "kind": "property",
              "signature": "readonly id: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a unique key that identifies the column within the table. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "index": {
              "kind": "property",
              "signature": "readonly index: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.TableColumn;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TableColumn",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "name": {
              "kind": "property",
              "signature": "name: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the name of the table column."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1 for getting the name; 1.4 for setting it.]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.TableColumnUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.TableColumnUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"id\": number;\n            \"index\": number;\n            \"name\": string;\n            \"values\": any[][];\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "values": {
              "kind": "property",
              "signature": "values: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "TableColumnCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a collection of all the columns that are part of the table."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "add": {
              "kind": "method",
              "signature": "add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number, name?: string): Excel.TableColumn;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TableColumn",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the relative position of the new column. If null or -1, the addition happens at the end. Columns with a higher index will be shifted to the side. Zero-indexed."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number"
                },
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "A 2-dimensional array of unformatted values of the table column."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "Array<Array<boolean | string | number>> | boolean | string | number"
                },
                "name": {
                  "name": "name",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the name of the new column. If null, the default name will be used."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds a new column to the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1 requires an index smaller than the total column count; 1.4 allows index to be optional (null or -1) and will append a column at the end; 1.4 allows name parameter at creation time.]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "count": {
              "kind": "property",
              "signature": "readonly count: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of columns in the table. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of columns in the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItem": {
              "kind": "method",
              "signature": "getItem(key: number | string): Excel.TableColumn;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TableColumn",
                "description": []
              },
              "parameters": {
                "key": {
                  "name": "key",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Column Name or ID."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a column object by Name or ID."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemAt": {
              "kind": "method",
              "signature": "getItemAt(index: number): Excel.TableColumn;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TableColumn",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Index value of the object to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a column based on its position in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemOrNullObject": {
              "kind": "method",
              "signature": "getItemOrNullObject(key: number | string): Excel.TableColumn;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TableColumn",
                "description": []
              },
              "parameters": {
                "key": {
                  "name": "key",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Column Name or ID."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number | string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a column object by Name or ID. If the column does not exist, will return a null object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.TableColumn>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.TableColumn>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.TableColumnCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TableColumnCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"count\": number;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "TableRow": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a row in a table."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data. That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "delete": {
              "kind": "method",
              "signature": "delete(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes the row from the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getRange": {
              "kind": "method",
              "signature": "getRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the range object associated with the entire row."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "index": {
              "kind": "property",
              "signature": "readonly index: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the index number of the row within the rows collection of the table. Zero-indexed. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.TableRow;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TableRow",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.TableRowUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.TableRowUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"index\": number;\n            \"values\": any[][];\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "values": {
              "kind": "property",
              "signature": "values: Array<Array<any>>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<Array<any>>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "TableRowCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a collection of all the rows that are part of the table."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data. That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "add": {
              "kind": "method",
              "signature": "add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number): Excel.TableRow;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TableRow",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number"
                },
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "A 2-dimensional array of unformatted values of the table row."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "Array<Array<boolean | string | number>> | boolean | string | number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds one or more rows to the table. The return object will be the top of the newly added row(s)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data. That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1 for adding a single row; 1.4 allows adding of multiple rows.]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "count": {
              "kind": "property",
              "signature": "readonly count: number;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the number of rows in the table. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCount": {
              "kind": "method",
              "signature": "getCount(): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of rows in the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemAt": {
              "kind": "method",
              "signature": "getItemAt(index: number): Excel.TableRow;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TableRow",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Index value of the object to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a row based on its position in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data. That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.TableRow>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.TableRow>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.TableRowCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TableRowCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"count\": number;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "TableSort": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Manages sorting operations on Table objects."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "apply": {
              "kind": "method",
              "signature": "apply(fields: Array<Excel.SortField>, matchCase?: boolean, method?: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "fields": {
                  "name": "fields",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The list of conditions to sort on."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Array<Excel.SortField>"
                },
                "matchCase": {
                  "name": "matchCase",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Whether to have the casing impact string ordering."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                },
                "method": {
                  "name": "method",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The ordering method used for Chinese characters."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Perform a sort operation."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "clear": {
              "kind": "method",
              "signature": "clear(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Clears the sorting that is currently on the table. While this doesn't modify the table's ordering, it clears the state of the header buttons."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "fields": {
              "kind": "property",
              "signature": "readonly fields: Array<Excel.SortField>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.SortField>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the current conditions used to last sort the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.TableSort;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TableSort",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "matchCase": {
              "kind": "property",
              "signature": "readonly matchCase: boolean;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents whether the casing impacted the last sort of the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "method": {
              "kind": "property",
              "signature": "readonly method: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents Chinese character ordering method last used to sort the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "reapply": {
              "kind": "method",
              "signature": "reapply(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Reapplies the current sorting parameters to the table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"fields\": SortField[];\n            \"matchCase\": boolean;\n            \"method\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "TextConditionalFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a specific text conditional format."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ConditionalRangeFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalRangeFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.TextConditionalFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TextConditionalFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rule": {
              "kind": "property",
              "signature": "rule: Excel.ConditionalTextComparisonRule;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.ConditionalTextComparisonRule",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The rule of the conditional format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.TextConditionalFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.TextConditionalFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"format\": ConditionalRangeFormat;\n            \"rule\": ConditionalTextComparisonRule;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ThreeArrowsGraySet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "grayDownArrow": {
              "kind": "property",
              "signature": "grayDownArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "graySideArrow": {
              "kind": "property",
              "signature": "graySideArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "grayUpArrow": {
              "kind": "property",
              "signature": "grayUpArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ThreeArrowsSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "greenUpArrow": {
              "kind": "property",
              "signature": "greenUpArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "redDownArrow": {
              "kind": "property",
              "signature": "redDownArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowSideArrow": {
              "kind": "property",
              "signature": "yellowSideArrow: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ThreeFlagsSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "greenFlag": {
              "kind": "property",
              "signature": "greenFlag: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "redFlag": {
              "kind": "property",
              "signature": "redFlag: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowFlag": {
              "kind": "property",
              "signature": "yellowFlag: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ThreeSignsSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "greenCircle": {
              "kind": "property",
              "signature": "greenCircle: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "redDiamond": {
              "kind": "property",
              "signature": "redDiamond: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowTriangle": {
              "kind": "property",
              "signature": "yellowTriangle: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ThreeStarsSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "goldStar": {
              "kind": "property",
              "signature": "goldStar: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "halfGoldStar": {
              "kind": "property",
              "signature": "halfGoldStar: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "silverStar": {
              "kind": "property",
              "signature": "silverStar: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ThreeSymbols2Set": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "greenCheck": {
              "kind": "property",
              "signature": "greenCheck: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "redCross": {
              "kind": "property",
              "signature": "redCross: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowExclamation": {
              "kind": "property",
              "signature": "yellowExclamation: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ThreeSymbolsSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "greenCheckSymbol": {
              "kind": "property",
              "signature": "greenCheckSymbol: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "redCrossSymbol": {
              "kind": "property",
              "signature": "redCrossSymbol: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowExclamationSymbol": {
              "kind": "property",
              "signature": "yellowExclamationSymbol: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ThreeTrafficLights1Set": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "greenCircle": {
              "kind": "property",
              "signature": "greenCircle: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "redCircleWithBorder": {
              "kind": "property",
              "signature": "redCircleWithBorder: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowCircle": {
              "kind": "property",
              "signature": "yellowCircle: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ThreeTrafficLights2Set": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "greenTrafficLight": {
              "kind": "property",
              "signature": "greenTrafficLight: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "redTrafficLight": {
              "kind": "property",
              "signature": "redTrafficLight: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowTrafficLight": {
              "kind": "property",
              "signature": "yellowTrafficLight: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ThreeTrianglesSet": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__index": {
              "kind": "method",
              "signature": "[index: number]: Icon;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Icon",
                "description": []
              },
              "parameters": {
                "index": {
                  "name": "index",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "greenUpTriangle": {
              "kind": "property",
              "signature": "greenUpTriangle: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "redDownTriangle": {
              "kind": "property",
              "signature": "redDownTriangle: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "yellowDash": {
              "kind": "property",
              "signature": "yellowDash: Icon;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Icon",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "TopBottomConditionalFormat": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a Top/Bottom conditional format."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "format": {
              "kind": "property",
              "signature": "readonly format: Excel.ConditionalRangeFormat;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ConditionalRangeFormat",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.TopBottomConditionalFormat;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.TopBottomConditionalFormat",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "rule": {
              "kind": "property",
              "signature": "rule: Excel.ConditionalTopBottomRule;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Excel.ConditionalTopBottomRule",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The criteria of the Top/Bottom conditional format."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.TopBottomConditionalFormatUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.TopBottomConditionalFormatUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"format\": ConditionalRangeFormat;\n            \"rule\": ConditionalTopBottomRule;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "VerticalAlignment": {
          "kind": "namespace",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "exports": {}
        },
        "Workbook": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "application": {
              "kind": "property",
              "signature": "readonly application: Excel.Application;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.Application",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents Excel application instance that contains this workbook. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "bindings": {
              "kind": "property",
              "signature": "readonly bindings: Excel.BindingCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.BindingCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents a collection of bindings that are part of the workbook. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "customXmlParts": {
              "kind": "property",
              "signature": "readonly customXmlParts: Excel.CustomXmlPartCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.CustomXmlPartCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the collection of custom XML parts contained by this workbook. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "functions": {
              "kind": "property",
              "signature": "readonly functions: Excel.Functions;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.Functions",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents Excel application instance that contains this workbook. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getSelectedRange": {
              "kind": "method",
              "signature": "getSelectedRange(): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the currently selected range from the workbook."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.Workbook;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Workbook",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "names": {
              "kind": "property",
              "signature": "readonly names: Excel.NamedItemCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.NamedItemCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents a collection of workbook scoped named items (named ranges and constants). Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "onSelectionChanged": {
              "kind": "property",
              "signature": "readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Occurs when the selection in the document is changed."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "pivotTables": {
              "kind": "property",
              "signature": "readonly pivotTables: Excel.PivotTableCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.PivotTableCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents a collection of PivotTables associated with the workbook. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "settings": {
              "kind": "property",
              "signature": "readonly settings: Excel.SettingCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.SettingCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents a collection of Settings associated with the workbook. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "tables": {
              "kind": "property",
              "signature": "readonly tables: Excel.TableCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.TableCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents a collection of tables associated with the workbook. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{}",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "worksheets": {
              "kind": "property",
              "signature": "readonly worksheets: Excel.WorksheetCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.WorksheetCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents a collection of worksheets associated with the workbook. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Worksheet": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "An Excel worksheet is a grid of cells. It can contain data, tables, charts, etc."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "activate": {
              "kind": "method",
              "signature": "activate(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Activate the worksheet in the Excel UI."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "calculate": {
              "kind": "method",
              "signature": "calculate(markAllDirty: boolean): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "markAllDirty": {
                  "name": "markAllDirty",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Calculates all cells on a worksheet."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.6 (PREVIEW)]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "charts": {
              "kind": "property",
              "signature": "readonly charts: Excel.ChartCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.ChartCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns collection of charts that are part of the worksheet. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "delete": {
              "kind": "method",
              "signature": "delete(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes the worksheet from the workbook."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCell": {
              "kind": "method",
              "signature": "getCell(row: number, column: number): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "row": {
                  "name": "row",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The row number of the cell to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                },
                "column": {
                  "name": "column",
                  "description": [
                    {
                      "kind": "text",
                      "text": "the column number of the cell to be retrieved. Zero-indexed."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the range object containing the single cell based on row and column numbers. The cell can be outside the bounds of its parent range, so long as it's stays within the worksheet grid."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getNext": {
              "kind": "method",
              "signature": "getNext(visibleOnly?: boolean): Excel.Worksheet;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Worksheet",
                "description": []
              },
              "parameters": {
                "visibleOnly": {
                  "name": "visibleOnly",
                  "description": [
                    {
                      "kind": "text",
                      "text": "If true, considers only visible worksheets, skipping over any hidden ones."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the worksheet that follows this one. If there are no worksheets following this one, this method will throw an error."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getNextOrNullObject": {
              "kind": "method",
              "signature": "getNextOrNullObject(visibleOnly?: boolean): Excel.Worksheet;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Worksheet",
                "description": []
              },
              "parameters": {
                "visibleOnly": {
                  "name": "visibleOnly",
                  "description": [
                    {
                      "kind": "text",
                      "text": "If true, considers only visible worksheets, skipping over any hidden ones."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the worksheet that follows this one. If there are no worksheets following this one, this method will return a null object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getPrevious": {
              "kind": "method",
              "signature": "getPrevious(visibleOnly?: boolean): Excel.Worksheet;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Worksheet",
                "description": []
              },
              "parameters": {
                "visibleOnly": {
                  "name": "visibleOnly",
                  "description": [
                    {
                      "kind": "text",
                      "text": "If true, considers only visible worksheets, skipping over any hidden ones."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the worksheet that precedes this one. If there are no previous worksheets, this method will throw an error."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getPreviousOrNullObject": {
              "kind": "method",
              "signature": "getPreviousOrNullObject(visibleOnly?: boolean): Excel.Worksheet;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Worksheet",
                "description": []
              },
              "parameters": {
                "visibleOnly": {
                  "name": "visibleOnly",
                  "description": [
                    {
                      "kind": "text",
                      "text": "If true, considers only visible worksheets, skipping over any hidden ones."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the worksheet that precedes this one. If there are no previous worksheets, this method will return a null objet."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getRange": {
              "kind": "method",
              "signature": "getRange(address?: string): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "address": {
                  "name": "address",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The address or the name of the range. If not specified, the entire worksheet range is returned."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the range object specified by the address or name."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getUsedRange": {
              "kind": "method",
              "signature": "getUsedRange(valuesOnly?: boolean): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "valuesOnly": {
                  "name": "valuesOnly",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Considers only cells with values as used cells (ignoring formatting). [Api set: ExcelApi 1.2]"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them. If the entire worksheet is blank, this function will return the top left cell (i.e.,: it will *not* throw an error)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getUsedRangeOrNullObject": {
              "kind": "method",
              "signature": "getUsedRangeOrNullObject(valuesOnly?: boolean): Excel.Range;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Range",
                "description": []
              },
              "parameters": {
                "valuesOnly": {
                  "name": "valuesOnly",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Considers only cells with values as used cells."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them. If the entire worksheet is blank, this function will return a null object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "id": {
              "kind": "property",
              "signature": "readonly id: string;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a value that uniquely identifies the worksheet in a given workbook. The value of the identifier remains the same even when the worksheet is renamed or moved. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.Worksheet;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Worksheet",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "name": {
              "kind": "property",
              "signature": "name: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The display name of the worksheet."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "names": {
              "kind": "property",
              "signature": "readonly names: Excel.NamedItemCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.NamedItemCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Collection of names scoped to the current worksheet. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "pivotTables": {
              "kind": "property",
              "signature": "readonly pivotTables: Excel.PivotTableCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.PivotTableCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Collection of PivotTables that are part of the worksheet. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.3]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "position": {
              "kind": "property",
              "signature": "position: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The zero-based position of the worksheet within the workbook."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "protection": {
              "kind": "property",
              "signature": "readonly protection: Excel.WorksheetProtection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.WorksheetProtection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns sheet protection object for a worksheet."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(properties: Interfaces.WorksheetUpdateData, options?: {\n            throwOnReadOnly?: boolean;\n        }): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "properties": {
                  "name": "properties",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Interfaces.WorksheetUpdateData"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "{\n            /**\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\n             */\n            throwOnReadOnly?: boolean;\n        }"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets multiple properties on the object at the same time, based on JSON input."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "tables": {
              "kind": "property",
              "signature": "readonly tables: Excel.TableCollection;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.TableCollection",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Collection of tables that are part of the worksheet. Read-only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"id\": string;\n            \"name\": string;\n            \"position\": number;\n            \"protection\": WorksheetProtection;\n            \"visibility\": string;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "visibility": {
              "kind": "property",
              "signature": "visibility: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Visibility of the worksheet."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1 for reading visibility; 1.2 for setting it.]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "WorksheetCollection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a collection of worksheet objects that are part of the workbook."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.1]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "add": {
              "kind": "method",
              "signature": "add(name?: string): Excel.Worksheet;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Worksheet",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The name of the worksheet to be added. If specified, name should be unqiue. If not specified, Excel determines the name of the new worksheet."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds a new worksheet to the workbook. The worksheet will be added at the end of existing worksheets. If you wish to activate the newly added worksheet, call \".activate() on it."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getActiveWorksheet": {
              "kind": "method",
              "signature": "getActiveWorksheet(): Excel.Worksheet;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Worksheet",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the currently active worksheet in the workbook."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getCount": {
              "kind": "method",
              "signature": "getCount(visibleOnly?: boolean): OfficeExtension.ClientResult<number>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "OfficeExtension.ClientResult<number>",
                "description": []
              },
              "parameters": {
                "visibleOnly": {
                  "name": "visibleOnly",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of worksheets in the collection."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getFirst": {
              "kind": "method",
              "signature": "getFirst(visibleOnly?: boolean): Excel.Worksheet;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Worksheet",
                "description": []
              },
              "parameters": {
                "visibleOnly": {
                  "name": "visibleOnly",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the first worksheet in the collection. If true, considers only visible worksheets, skipping over any hidden ones."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItem": {
              "kind": "method",
              "signature": "getItem(key: string): Excel.Worksheet;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Worksheet",
                "description": []
              },
              "parameters": {
                "key": {
                  "name": "key",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The Name or ID of the worksheet."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a worksheet object using its Name or ID."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.1]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getItemOrNullObject": {
              "kind": "method",
              "signature": "getItemOrNullObject(key: string): Excel.Worksheet;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Worksheet",
                "description": []
              },
              "parameters": {
                "key": {
                  "name": "key",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The Name or ID of the worksheet."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a worksheet object using its Name or ID. If the worksheet does not exist, will return a null object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.4]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getLast": {
              "kind": "method",
              "signature": "getLast(visibleOnly?: boolean): Excel.Worksheet;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.Worksheet",
                "description": []
              },
              "parameters": {
                "visibleOnly": {
                  "name": "visibleOnly",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "boolean"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the last worksheet in the collection. If true, considers only visible worksheets, skipping over any hidden ones."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.5]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "items": {
              "kind": "property",
              "signature": "readonly items: Array<Excel.Worksheet>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Array<Excel.Worksheet>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the loaded child items in this collection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.WorksheetCollection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.WorksheetCollection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{}",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "WorksheetProtection": {
          "kind": "class",
          "extends": "OfficeExtension.ClientObject",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the protection of a sheet object."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "load": {
              "kind": "method",
              "signature": "load(option?: string | string[] | OfficeExtension.LoadOption): Excel.WorksheetProtection;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Excel.WorksheetProtection",
                "description": []
              },
              "parameters": {
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | OfficeExtension.LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "options": {
              "kind": "property",
              "signature": "readonly options: Excel.WorksheetProtectionOptions;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Excel.WorksheetProtectionOptions",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sheet protection options. Read-Only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "protect": {
              "kind": "method",
              "signature": "protect(options?: Excel.WorksheetProtectionOptions): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "sheet protection options."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "Excel.WorksheetProtectionOptions"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Protects a worksheet. Fails if the worksheet has been protected."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "protected": {
              "kind": "property",
              "signature": "readonly protected: boolean;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates if the worksheet is protected. Read-Only."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "toJSON": {
              "kind": "method",
              "signature": "toJSON:",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "{\n            \"options\": WorksheetProtectionOptions;\n            \"protected\": boolean;\n        }",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "unprotect": {
              "kind": "method",
              "signature": "unprotect(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Unprotects a worksheet."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "WorksheetProtectionOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the options in sheet protection."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "[Api set: ExcelApi 1.2]"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "allowAutoFilter": {
              "kind": "property",
              "signature": "allowAutoFilter?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the worksheet protection option of allowing using auto filter feature."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "allowDeleteColumns": {
              "kind": "property",
              "signature": "allowDeleteColumns?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the worksheet protection option of allowing deleting columns."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "allowDeleteRows": {
              "kind": "property",
              "signature": "allowDeleteRows?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the worksheet protection option of allowing deleting rows."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "allowFormatCells": {
              "kind": "property",
              "signature": "allowFormatCells?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the worksheet protection option of allowing formatting cells."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "allowFormatColumns": {
              "kind": "property",
              "signature": "allowFormatColumns?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the worksheet protection option of allowing formatting columns."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "allowFormatRows": {
              "kind": "property",
              "signature": "allowFormatRows?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the worksheet protection option of allowing formatting rows."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "allowInsertColumns": {
              "kind": "property",
              "signature": "allowInsertColumns?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the worksheet protection option of allowing inserting columns."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "allowInsertHyperlinks": {
              "kind": "property",
              "signature": "allowInsertHyperlinks?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the worksheet protection option of allowing inserting hyperlinks."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "allowInsertRows": {
              "kind": "property",
              "signature": "allowInsertRows?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the worksheet protection option of allowing inserting rows."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "allowPivotTables": {
              "kind": "property",
              "signature": "allowPivotTables?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the worksheet protection option of allowing using PivotTable feature."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "allowSort": {
              "kind": "property",
              "signature": "allowSort?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Represents the worksheet protection option of allowing using sort feature."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: ExcelApi 1.2]"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        }
      }
    }
  }
}
