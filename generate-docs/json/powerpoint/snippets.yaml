'PowerPoint.Presentation#insertSlidesFromBase64:member(1)':
  - >-
    // Link to full sample:
    https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/powerpoint/slide-management/insert-slides.yaml

    await PowerPoint.run(async function(context) {
        const selectedSlideID = await getSelectedSlideID();

        context.presentation.insertSlidesFromBase64(chosenFileBase64, {
            formatting: PowerPoint.InsertSlideFormatting.useDestinationTheme,
            targetSlideId: selectedSlideID + "#"
        });
        await context.sync();
    });
'PowerPoint.SlideCollection#add:member(1)':
  - >-
    // Link to full sample:
    https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/powerpoint/preview-apis/add-slides.yaml

    const chosenMaster = $("#master-id").val() as string;

    const chosenLayout = $("#layout-id").val() as string;


    await PowerPoint.run(async function(context) {
      context.presentation.slides.add({
        slideMasterId: chosenMaster,
        layoutId: chosenLayout
      });
      await context.sync();
    });
'PowerPoint.createPresentation:function(1)':
  - |-
    var myFile = document.getElementById("file");
    var reader = new FileReader();

    reader.onload = function (event) {
        // strip off the metadata before the base64-encoded string
        var startIndex = event.target.result.indexOf("base64,");
        var copyBase64 = event.target.result.substr(startIndex + 7);

        PowerPoint.createPresentation(copyBase64);        
    };

    // read in the file as a data URL so we can parse the base64-encoded string
    reader.readAsDataURL(myFile.files[0]);
