'Visio.Document#getActivePage:member(1)':
  - |-
    Visio.run(session, function (ctx) {
        var document = ctx.document;
        var activePage = document.getActivePage();
        activePage.load("name");
        return ctx.sync().then(function () {
            console.log("pageName: " +activePage.name);
        });   
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });
'Visio.Document#pages:member':
  - |-
    Visio.run(session, function (ctx) {
        var pages = ctx.document.pages;
        var pageCount = pages.getCount();
        return ctx.sync().then(function () {
            console.log("Pages Count: " +pageCount.value);
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });
'Visio.Document#setActivePage:member(1)':
  - |-
    Visio.run(session, function (ctx) {
        var document = ctx.document;
        var pageName = "Page-1";
        document.setActivePage(pageName);
        return ctx.sync();
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });
'Visio.PageCollection#getItem:member(1)':
  - |-
    Visio.run(session, function (ctx) {
        var pageName = 'Page-1';
        var page = ctx.document.pages.getItem(pageName);
        page.activate();
        return ctx.sync();
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });
'Visio.SelectionChangedEventArgs:interface':
  - >-
    var eventResult; // Global Variable to store the EventHandlerResult returned
    on attaching handler.


    function AttachHandler() {
        Visio.run(session, function(ctx) {
            var doc = ctx.document;
            eventResult = doc.onSelectionChanged.add(
                function (args) {
                    console.log("Selected Shape Name: "+args.shapeNames[0]);
                });
            return ctx.sync().then(function(){
                console.log("Handler attached");
            });
        }).catch(function(error) {
            console.log("Error: " + error);
            if (error instanceof OfficeExtension.Error) {
                console.log("Debug info: " + JSON.stringify(error.debugInfo));
            }
        });

        function onSelectionChanged(args) {
            console.log(Date.now() + "Selection Changes Event" + JSON.stringify(args));
        }
    }


    function RemoveHandler() {
        if (!eventResult || !eventResult.context) {
            console.log("Handler has not been attached");
            return;
        }

        Visio.run(eventResult.context, function(ctx) {
            eventResult.remove();
            return ctx.sync().then(function (){
                eventResult = null;
                console.log("Handler removed");
            });
        }).catch(function(error) {
            console.log("Error: " + error);
            if (error instanceof OfficeExtension.Error) {
                console.log("Debug info: " + JSON.stringify(error.debugInfo));
            }
        });
    }
'Visio.Shape#load:member(2)':
  - |-
    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Sample Name";
        var shape = activePage.shapes.getItem(shapeName);
        shape.load(["name", "id", "text", "select"]);
        return ctx.sync().then(function () {
            console.log(shape.name);
            console.log(shape.id);
            console.log(shape.text);
            console.log(shape.select);
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });
  - |-
    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shape = activePage.shapes.getItem(0);
        shape.view.highlight = { color: "#E7E7E7", width: 100 };
        return ctx.sync();
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });
'Visio.ShapeCollection#getCount:member(1)':
  - |-
    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var numShapesActivePage = activePage.shapes.getCount();
        return ctx.sync().then(function () {
            console.log("Shapes Count: " + numShapesActivePage.value);
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });
