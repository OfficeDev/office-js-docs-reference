{
  "kind": "package",
  "name": "office",
  "summary": [],
  "remarks": [],
  "exports": {
    "Office": {
      "kind": "namespace",
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "exports": {
        "ActiveView": {
          "kind": "enum",
          "values": {
            "Edit": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The active view of the host application lets the user edit the content in the document."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Read": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The active view of the host application only lets the user read the content in the document."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the state of the active view of the document, for example, whether the user can edit the document."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: PowerPoint"
            }
          ],
          "isBeta": false
        },
        "AddBindingFromNamedItemOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides options for configuring the binding that is created."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "id": {
              "kind": "property",
              "signature": "id?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The unique ID of the binding. Autogenerated if not supplied."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "AddBindingFromPromptOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides options for configuring the prompt and identifying the binding that is created."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "id": {
              "kind": "property",
              "signature": "id?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The unique ID of the binding. Autogenerated if not supplied."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "promptText": {
              "kind": "property",
              "signature": "promptText?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specifies the string to display in the prompt UI that tells the user what to select. Limited to 200 characters. If no promptText argument is passed, \"Please make a selection\" is displayed."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "sampleData": {
              "kind": "property",
              "signature": "sampleData?: Office.TableData;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Office.TableData",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specifies a table of sample data displayed in the prompt UI as an example of the kinds of fields (columns) that can be bound by your add-in. The headers provided in the TableData object specify the labels used in the field selection UI. Note: This parameter is used only in add-ins for Access. It is ignored if provided when calling the method in an add-in for Excel."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "AddBindingFromSelectionOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides options for configuring the prompt and identifying the binding that is created."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "columns": {
              "kind": "property",
              "signature": "columns?: Array<string>;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<string>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The names of the columns involved in the binding."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "id": {
              "kind": "property",
              "signature": "id?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The unique ID of the binding. Autogenerated if not supplied."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "AsyncContextOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "AsyncResult": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "An object which encapsulates the result of an asynchronous request, including status and error information if the request failed."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, Outlook, PowerPoint, Project, Word"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "When the function you pass to the `callback` parameter of an \"Async\" method executes, it receives an AsyncResult object that you can access from the `callback` function's only parameter."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext: any;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the user-defined item passed to the optional `asyncContext` parameter of the invoked method in the same state as it was passed in. This the user-defined item (which can be of any JavaScript type: String, Number, Boolean, Object, Array, Null, or Undefined) passed to the optional `asyncContext` parameter of the invoked method. Returns Undefined, if you didn't pass anything to the asyncContext parameter."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Outlook, PowerPoint, Project, Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "error": {
              "kind": "property",
              "signature": "error: Error;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Error",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.Error"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "Error"
                  }
                },
                {
                  "kind": "text",
                  "text": " object that provides a description of the error, if any error occurred."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Outlook, PowerPoint, Project, Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "status": {
              "kind": "property",
              "signature": "status: AsyncResultStatus;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "AsyncResultStatus",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.AsyncResultStatus"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "AsyncResultStatus"
                  }
                },
                {
                  "kind": "text",
                  "text": " of the asynchronous operation."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Outlook, PowerPoint, Project, Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "value": {
              "kind": "property",
              "signature": "value: any;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the payload or content of this asynchronous operation, if any."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "You access the AsyncResult object in the function passed as the argument to the callback parameter of an \"Async\" method, such as the `getSelectedDataAsync` and `setSelectedDataAsync` methods of the Document object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Note: What the value property returns for a particular \"Async\" method varies depending on the purpose and context of that method. To determine what is returned by the value property for an \"Async\" method, refer to the \"Callback value\" section of the method's topic. For a complete listing of the \"Async\" methods, see the Remarks section of the AsyncResult object topic."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Outlook, PowerPoint, Project, Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "AsyncResultStatus": {
          "kind": "enum",
          "values": {
            "Failed": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The call failed, check the error object."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Succeeded": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The call succeeded."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the result of an asynchronous call."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Returned by the status property of the AsyncResult object."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, Outlook, PowerPoint, Project, Word"
            }
          ],
          "isBeta": false
        },
        "Auth": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The Office Auth namespace, Office.context.auth, provides a method that allows the Office host to obtain and access the add-in token. Indirectly, enable the add-in to access the signed-in user's Microsoft Graph data without requiring the user to sign in a second time."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "getAccessTokenAsync": {
              "kind": "method",
              "signature": "getAccessTokenAsync(options?: AuthOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. Accepts an AuthOptions object to define sign-on behaviors."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AuthOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. Accepts a callback method to handle the token acquisition attempt. If AsyncResult.status is \"succeeded\", then AsyncResult.value is the raw AAD v. 2.0-formatted access token."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Calls the Azure Active Directory V 2.0 endpoint to get an access token to your add-in's web application. Allows add-ins to identify users. Server side code can use this token to access Microsoft Graph for the add-in's web application by using the "
                },
                {
                  "kind": "web-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "\"on behalf of\" OAuth flow"
                    }
                  ],
                  "targetUrl": "https://docs.microsoft.com/azure/active-directory/develop/active-directory-v2-protocols-oauth-on-behalf-of"
                },
                {
                  "kind": "text",
                  "text": "."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Excel, OneNote, Outlook, PowerPoint, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Requirement sets: IdentityAPI"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "This API requires a single sign-on configuration that bridges the add-in to an Azure application. Office users sign-in with Organizational Accounts and Microsoft Accounts. Microsoft Azure returns tokens intended for both user account types to access resources in the Microsoft Graph."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "AuthOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides options for the user experience when Office obtains an access token to the add-in from AAD v. 2.0 with the getAccessTokenAsync method."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "authChallenge": {
              "kind": "property",
              "signature": "authChallenge?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Causes Office to prompt the user to provide the additional factor when the tenancy being targeted by Microsoft Graph requires multifactor authentication. The string value identifies the type of additional factor that is required. In most cases, you won't know at development time whether the user's tenant requires an additional factor or what the string should be. So this option would be used in a \"second try\" call of getAccessTokenAsync after Microsoft Graph has sent an error requesting the additional factor and containing the string that should be used with the authChallenge option."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "forceAddAccount": {
              "kind": "property",
              "signature": "forceAddAccount?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Prompts the user to add (or to switch if already added) his or her Office account."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "forceConsent": {
              "kind": "property",
              "signature": "forceConsent?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Causes Office to display the add-in consent experience. Useful if the add-in's Azure permissions have changed or if the user's consent has been revoked."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "Binding": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a binding to a section of the document."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, Word"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Available in Requirement sets: MatrixBinding, TableBinding, TextBinding"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "The Binding object exposes the functionality possessed by all bindings regardless of type."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "The Binding object is never called directly. It is the abstract parent class of the objects that represent each type of binding: MatrixBinding, TableBinding, or TextBinding. All three of these objects inherit the getDataAsync and setDataAsync methods from the Binding object that enable to you interact with the data in the binding. They also inherit the id and type properties for querying those property values. Additionally, the MatrixBinding and TableBinding objects expose additional methods for matrix- and table-specific features, such as counting the number of rows and columns."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "addHandlerAsync": {
              "kind": "method",
              "signature": "addHandlerAsync(eventType: EventType, handler: any, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The event type. For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "handler": {
                  "name": "handler",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The event handler function to add, whose only parameter is of type"
                    },
                    {
                      "kind": "api-link",
                      "elements": [
                        {
                          "kind": "text",
                          "text": "Office.BindingDataChangedEventArgs"
                        }
                      ],
                      "target": {
                        "scopeName": "",
                        "packageName": "office",
                        "exportName": "Office",
                        "memberName": "BindingDataChangedEventArgs"
                      }
                    },
                    {
                      "kind": "text",
                      "text": " or "
                    },
                    {
                      "kind": "api-link",
                      "elements": [
                        {
                          "kind": "text",
                          "text": "Office.BindingSelectionChangedEventArgs"
                        }
                      ],
                      "target": {
                        "scopeName": "",
                        "packageName": "office",
                        "exportName": "Office",
                        "memberName": "BindingSelectionChangedEventArgs"
                      }
                    },
                    {
                      "kind": "text",
                      "text": "."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds an event handler to the object for the specified "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.EventType"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "EventType"
                  }
                },
                {
                  "kind": "text",
                  "text": ". Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "document": {
              "kind": "property",
              "signature": "document: Document;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Document",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Get the Document object associated with the binding."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getDataAsync": {
              "kind": "method",
              "signature": "getDataAsync(options?: GetBindingDataOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options for how to get the data in a binding."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "GetBindingDataOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the data contained within the binding."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement sets: MatrixBindings, TableBindings, TextBindings"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range)."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "id": {
              "kind": "property",
              "signature": "id: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A string that uniquely identifies this binding among the bindings in the same Document object."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "removeHandlerAsync": {
              "kind": "method",
              "signature": "removeHandlerAsync(eventType: EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The event type. For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options to determine which event handler or handlers are removed."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "RemoveHandlerOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Removes the specified handler from the binding for the specified event type."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: BindingEvents"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "setDataAsync": {
              "kind": "method",
              "signature": "setDataAsync(data: TableData | any, options?: SetBindingDataOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "data": {
                  "name": "data",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The data to be set in the current selection. Possible data types by host: string: Excel, Excel Online, Word, and Word Online only array of arrays: Excel and Word only"
                    },
                    {
                      "kind": "api-link",
                      "elements": [
                        {
                          "kind": "text",
                          "text": "Office.TableData"
                        }
                      ],
                      "target": {
                        "scopeName": "",
                        "packageName": "office",
                        "exportName": "Office",
                        "memberName": "TableData"
                      }
                    },
                    {
                      "kind": "text",
                      "text": ": Access, Excel, and Word only"
                    },
                    {
                      "kind": "paragraph"
                    },
                    {
                      "kind": "text",
                      "text": "HTML: Word and Word Online only"
                    },
                    {
                      "kind": "paragraph"
                    },
                    {
                      "kind": "text",
                      "text": "Office Open XML: Word only"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "TableData | any"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options for how to set the data in a binding."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "SetBindingDataOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Writes data to the bound section of the document represented by the specified binding object."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement sets: MatrixBindings, TableBindings, TextBindings"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "type": {
              "kind": "property",
              "signature": "type: BindingType;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "BindingType",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the type of the binding."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "BindingDataChangedEventArgs": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides information about the binding that raised the DataChanged event."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, Word"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "binding": {
              "kind": "property",
              "signature": "binding: Binding;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Binding",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.Binding"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "Binding"
                  }
                },
                {
                  "kind": "text",
                  "text": " object that represents the binding that raised the DataChanged event."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "type": {
              "kind": "property",
              "signature": "type: EventType;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "EventType",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.EventType"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "EventType"
                  }
                },
                {
                  "kind": "text",
                  "text": " enumeration value that identifies the kind of event that was raised."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "Bindings": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the bindings the add-in has within the document."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts:"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "addFromNamedItemAsync": {
              "kind": "method",
              "signature": "addFromNamedItemAsync(itemName: string, bindingType: BindingType, options?: AddBindingFromNamedItemOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "itemName": {
                  "name": "itemName",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Name of the bindable object in the document. For Example 'MyExpenses' table in Excel.\""
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "bindingType": {
                  "name": "bindingType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The"
                    },
                    {
                      "kind": "api-link",
                      "elements": [
                        {
                          "kind": "text",
                          "text": "Office.BindingType"
                        }
                      ],
                      "target": {
                        "scopeName": "",
                        "packageName": "office",
                        "exportName": "Office",
                        "memberName": "BindingType"
                      }
                    },
                    {
                      "kind": "text",
                      "text": " for the data. The method returns null if the selected object cannot be coerced into the specified type."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "BindingType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options for configuring the binding that is created."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AddBindingFromNamedItemOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Creates a binding against a named object in the document."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: MatrixBindings, TableBindings, TextBindings"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "For Excel, the itemName parameter can refer to a named range or a table."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "By default, adding a table in Excel assigns the name \"Table1\" for the first table you add, \"Table2\" for the second table you add, and so on. To assign a meaningful name for a table in the Excel UI, use the Table Name property on the Table Tools | Design tab of the ribbon."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Note: In Excel, when specifying a table as a named item, you must fully qualify the name to include the worksheet name in the name of the table in this format: \"Sheet1!Table1\""
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "For Word, the itemName parameter refers to the Title property of a Rich Text content control. (You can't bind to content controls other than the Rich Text content control)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "By default, a content control has no Title value assigned. To assign a meaningful name in the Word UI, after inserting a Rich Text content control from the Controls group on the Developer tab of the ribbon, use the Properties command in the Controls group to display the Content Control Properties dialog box. Then set the Title property of the content control to the name you want to reference from your code."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Note: In Word, if there are multiple Rich Text content controls with the same Title property value (name), and you try to bind to one these content controls with this method (by specifying its name as the itemName parameter), the operation will fail."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "addFromPromptAsync": {
              "kind": "method",
              "signature": "addFromPromptAsync(bindingType: BindingType, options?: AddBindingFromPromptOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "bindingType": {
                  "name": "bindingType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the type of the binding object to create. Required. Returns null if the selected object cannot be coerced into the specified type."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "BindingType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options for configuring the prompt and identifying the binding that is created."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AddBindingFromPromptOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Create a binding by prompting the user to make a selection on the document."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: Not in a set"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Adds a binding object of the specified type to the Bindings collection, which will be identified with the supplied id. The method fails if the specified selection cannot be bound."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "addFromSelectionAsync": {
              "kind": "method",
              "signature": "addFromSelectionAsync(bindingType: BindingType, options?: AddBindingFromSelectionOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "bindingType": {
                  "name": "bindingType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the type of the binding object to create. Required. Returns null if the selected object cannot be coerced into the specified type."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "BindingType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options for configuring the prompt and identifying the binding that is created."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AddBindingFromSelectionOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Create a binding based on the user's current selection."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: MatrixBindings, TableBindings, TextBindings"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Adds the specified type of binding object to the Bindings collection, which will be identified with the supplied id."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Note In Excel, if you call the addFromSelectionAsync method passing in the Binding.id of an existing binding, the Binding.type of that binding is used, and its type cannot be changed by specifying a different value for the bindingType parameter.If you need to use an existing id and change the bindingType, call the Bindings.releaseByIdAsync method first to release the binding, and then call the addFromSelectionAsync method to reestablish the binding with a new type."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "document": {
              "kind": "property",
              "signature": "document: Document;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Document",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.Document"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "Document"
                  }
                },
                {
                  "kind": "text",
                  "text": " object that represents the document associated with this set of bindings."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getAllAsync": {
              "kind": "method",
              "signature": "getAllAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets all bindings that were previously created."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: MatrixBindings, TableBindings, TextBindings"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getByIdAsync": {
              "kind": "method",
              "signature": "getByIdAsync(id: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the unique name of the binding object. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Retrieves a binding based on its Name"
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts, MatrixBindings, TableBindings, TextBindings"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Fails if the specified id does not exist."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "releaseByIdAsync": {
              "kind": "method",
              "signature": "releaseByIdAsync(id: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the unique name to be used to identify the binding object. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Removes the binding from the document"
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: MatrixBindings, TableBindings, TextBindings"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Fails if the specified id does not exist."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "BindingSelectionChangedEventArgs": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides information about the binding that raised the SelectionChanged event."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, Word"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "binding": {
              "kind": "property",
              "signature": "binding: Binding;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Binding",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.Binding"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "Binding"
                  }
                },
                {
                  "kind": "text",
                  "text": " object that represents the binding that raised the SelectionChanged event."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "columnCount": {
              "kind": "property",
              "signature": "columnCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of columns selected. If a single cell is selected returns 1."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "If the user makes a non-contiguous selection, the count for the last contiguous selection within the binding is returned."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "For Word, this property will work only for bindings of "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.BindingType"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "BindingType"
                  }
                },
                {
                  "kind": "text",
                  "text": " \"table\". If the binding is of type \"matrix\", null is returned. Also, the call will fail if the table contains merged cells, because the structure of the table must be uniform for this property to work correctly."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "rowCount": {
              "kind": "property",
              "signature": "rowCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of rows selected. If a single cell is selected returns 1."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "If the user makes a non-contiguous selection, the count for the last contiguous selection within the binding is returned."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "For Word, this property will work only for bindings of "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.BindingType"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "BindingType"
                  }
                },
                {
                  "kind": "text",
                  "text": " \"table\". If the binding is of type \"matrix\", null is returned. Also, the call will fail if the table contains merged cells, because the structure of the table must be uniform for this property to work correctly."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "startColumn": {
              "kind": "property",
              "signature": "startColumn: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The zero-based index of the first column of the selection counting from the leftmost column in the binding."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "If the user makes a non-contiguous selection, the coordinates for the last contiguous selection within the binding are returned."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "For Word, this property will work only for bindings of "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.BindingType"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "BindingType"
                  }
                },
                {
                  "kind": "text",
                  "text": " \"table\". If the binding is of type \"matrix\", null is returned. Also, the call will fail if the table contains merged cells, because the structure of the table must be uniform for this property to work correctly."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "startRow": {
              "kind": "property",
              "signature": "startRow: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The zero-based index of the first row of the selection counting from the first row in the binding."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "If the user makes a non-contiguous selection, the coordinates for the last contiguous selection within the binding are returned."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "For Word, this property will work only for bindings of "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.BindingType"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "BindingType"
                  }
                },
                {
                  "kind": "text",
                  "text": " \"table\". If the binding is of type \"matrix\", null is returned. Also, the call will fail if the table contains merged cells, because the structure of the table must be uniform for this property to work correctly."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "type": {
              "kind": "property",
              "signature": "type: EventType;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "EventType",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.EventType"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "EventType"
                  }
                },
                {
                  "kind": "text",
                  "text": " enumeration value that identifies the kind of event that was raised."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "BindingType": {
          "kind": "enum",
          "values": {
            "Matrix": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Tabular data without a header row. Data is returned as an array of arrays, for example in this form: [[row1column1, row1column2],[row2column1, row2column2]]"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Table": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Tabular data with a header row. Data is returned as a TableData object."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Plain text. Data is returned as a run of characters."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the type of the binding object that should be returned."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, Word"
            }
          ],
          "isBeta": false
        },
        "CoercionType": {
          "kind": "enum",
          "values": {
            "Html": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Return or set data as HTML."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Only applies to data in add-ins for Word and Outlook add-ins for Outlook (compose mode)."
                }
              ],
              "isBeta": false
            },
            "Image": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Data is returned or set as an image stream."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Only applies to data in Excel, Word and PowerPoint."
                }
              ],
              "isBeta": false
            },
            "Matrix": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Return or set data as tabular data with no headers. Data is returned or set as an array of arrays containing one-dimensional runs of characters. For example, three rows of string values in two columns would be: [[\"R1C1\", \"R1C2\"], [\"R2C1\", \"R2C2\"], [\"R3C1\", \"R3C2\"]]."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Only applies to data in Excel and Word."
                }
              ],
              "isBeta": false
            },
            "Ooxml": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Return or set data as Office Open XML."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Only applies to data in Word."
                }
              ],
              "isBeta": false
            },
            "SlideRange": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Return a JSON object that contains an array of the ids, titles, and indexes of the selected slides.For example, `{\"slides\":[{\"id\":257,\"title\":\"Slide 2\",\"index\":2},{\"id\":256,\"title\":\"Slide 1\",\"index\":1}]}` for a selection of two slides."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Only applies to data in PowerPoint when calling the Document.getSelectedData method to get the current slide or selected range of slides."
                }
              ],
              "isBeta": false
            },
            "Table": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Return or set data as tabular data with optional headers. Data is returned or set as an array of arrays with optional headers."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Only applies to data in Access, Excel and Word."
                }
              ],
              "isBeta": false
            },
            "Text": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Return or set data as text (string).Data is returned or set as a one-dimensional run of characters."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies how to coerce data returned or set by the invoked method."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "PowerPoint supports only `Office.CoercionType.Text`, `Office.CoercionType.Image`, and `Office.CoercionType.SlideRange`. Project supports only `Office.CoercionType.Text`."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, Outlook, PowerPoint, Project, Word"
            }
          ],
          "isBeta": false
        },
        "Context": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the runtime environment of the add-in and provides access to key objects of the API."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, Outlook, PowerPoint, Project, Word"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "auth": {
              "kind": "property",
              "signature": "auth: Auth;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Auth",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Provides information and access to the signed-in user."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "commerceAllowed": {
              "kind": "property",
              "signature": "commerceAllowed: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "True, if the current platform allows the add-in to display a UI for selling or upgrading; otherwise returns False."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "The iOS App Store doesn't support apps with add-ins that provide links to additional payment systems. However, Office Add-ins running on the Windows desktop or for Office Online in the browser, do allow such links. If you want the UI of your add-in to provide a link to an external payment system on platforms other than iOS, you can use the commerceAllowed property to control when that link is displayed."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "contentLanguage": {
              "kind": "property",
              "signature": "contentLanguage: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the locale (language) specified by the user for editing the document or item."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "diagnostics": {
              "kind": "property",
              "signature": "diagnostics: ContextInformation;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ContextInformation",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets information about the environment in which the add-in is running."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "displayLanguage": {
              "kind": "property",
              "signature": "displayLanguage: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the locale (language) specified by the user for the UI of the Office host application."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "When using in Outlook,the applicable modes are Compose or read."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "document": {
              "kind": "property",
              "signature": "document: Document;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Document",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an object that represents the document the content or task pane add-in is interacting with."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "host": {
              "kind": "property",
              "signature": "host: HostType;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "HostType",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Contains the Office application host in which the add-in is running."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "license": {
              "kind": "property",
              "signature": "license: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the license information for the user's Office installation."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "mailbox": {
              "kind": "property",
              "signature": "mailbox: Mailbox;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Mailbox",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Provides access to the Outlook Add-in object model for Microsoft Outlook and Microsoft Outlook on the web."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Namespaces:"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- diagnostics: Provides diagnostic information to an Outlook add-in."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- item: Provides methods and properties for accessing a message or appointment in an Outlook add-in."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- userProfile: Provides information about the user in an Outlook add-in."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: Mailbox 1.0]"
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": ""
                },
                {
                  "kind": "web-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Minimum permission level"
                    }
                  ],
                  "targetUrl": "https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions"
                },
                {
                  "kind": "text",
                  "text": ": Restricted"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Applicable Outlook mode: Compose or read"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "officeTheme": {
              "kind": "property",
              "signature": "officeTheme: OfficeTheme;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "OfficeTheme",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Provides access to the properties for Office theme colors."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "platform": {
              "kind": "property",
              "signature": "platform: PlatformType;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "PlatformType",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Provides the platform on which the add-in is running."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "requirements": {
              "kind": "property",
              "signature": "requirements: RequirementSetSupport;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "RequirementSetSupport",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Provides a method for determining what requirement sets are supported on the current host and platform."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "roamingSettings": {
              "kind": "property",
              "signature": "roamingSettings: RoamingSettings;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "RoamingSettings",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an object that represents the custom settings or state of a mail add-in saved to a user's mailbox."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "The RoamingSettings object lets you store and access data for a mail add-in that is stored in a user's mailbox, so that is available to that add-in when it is running from any host client application used to access that mailbox."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "[Api set: Mailbox 1.0]"
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": ""
                },
                {
                  "kind": "web-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Minimum permission level"
                    }
                  ],
                  "targetUrl": "https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions"
                },
                {
                  "kind": "text",
                  "text": ": Restricted"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Applicable Outlook mode: Compose or read"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "touchEnabled": {
              "kind": "property",
              "signature": "touchEnabled: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specifies whether the platform and device allows touch interaction."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Use the touchEnabled property to determine when your add-in is running on a touch device and if necessary, adjust the kind of controls, and size and spacing of elements in your add-in's UI to accommodate touch interactions."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "ui": {
              "kind": "property",
              "signature": "ui: UI;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "UI",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Provides objects and methods that you can use to create and manipulate UI components, such as dialog boxes."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "ContextInformation": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides information about the environment in which the add-in is running."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "host": {
              "kind": "property",
              "signature": "host: Office.HostType;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Office.HostType",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the Office application host in which the add-in is running."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "platform": {
              "kind": "property",
              "signature": "platform: Office.PlatformType;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Office.PlatformType",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the platform on which the add-in is running."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "version": {
              "kind": "property",
              "signature": "version: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the version of Office on which the add-in is running."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "CustomXmlNode": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents an XML node in a tree in a document."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Word"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Available in Requirement set: CustomXmlParts"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "baseName": {
              "kind": "property",
              "signature": "baseName: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the base name of the node without the namespace prefix, if one exists."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getNodesAsync": {
              "kind": "method",
              "signature": "getNodesAsync(xPath: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "xPath": {
                  "name": "xPath",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The XPath expression that specifies the nodes to get. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the nodes associated with the XPath expression."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getNodeValueAsync": {
              "kind": "method",
              "signature": "getNodeValueAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the node value."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getTextAsync": {
              "kind": "method",
              "signature": "getTextAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the text of an XML node in a custom XML part."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getXmlAsync": {
              "kind": "method",
              "signature": "getXmlAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the node's XML."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "namespaceUri": {
              "kind": "property",
              "signature": "namespaceUri: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Retrieves the string GUID of the CustomXMLPart."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "nodeType": {
              "kind": "property",
              "signature": "nodeType: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the type of the CustomXMLNode."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "setNodeValueAsync": {
              "kind": "method",
              "signature": "setNodeValueAsync(value: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The value to be set on the node"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets the node value."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "setTextAsync": {
              "kind": "method",
              "signature": "setTextAsync(text: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Required. The text value of the XML node."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously sets the text of an XML node in a custom XML part."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "setXmlAsync": {
              "kind": "method",
              "signature": "setXmlAsync(xml: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "xml": {
                  "name": "xml",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The XML to be set on the node"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets the node XML."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "CustomXMLNodeType": {
          "kind": "enum",
          "values": {
            "Attribute": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The node is an attribute."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "CData": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The node is CData."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Element": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The node is an element."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "NodeComment": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The node is a comment."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "NodeDocument": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The node is a Document element."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ProcessingInstruction": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The node is a processing instruction."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The node is text."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the type of the XML node."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Word"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Available in Requirement set: CustomXmlParts"
            }
          ],
          "isBeta": false
        },
        "CustomXmlPart": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a single CustomXMLPart in an "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "Office.CustomXmlParts"
                }
              ],
              "target": {
                "scopeName": "",
                "packageName": "office",
                "exportName": "Office",
                "memberName": "CustomXmlParts"
              }
            },
            {
              "kind": "text",
              "text": " collection."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Word"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Available in Requirement set: CustomXmlParts"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "addHandlerAsync": {
              "kind": "method",
              "signature": "addHandlerAsync(eventType: EventType, handler: (result: any) => void, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the type of event to add. For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`, `Office.EventType.NodeInserted`, and `Office.EventType.NodeReplaced`."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "handler": {
                  "name": "handler",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The event handler function to add, whose only parameter is of type"
                    },
                    {
                      "kind": "api-link",
                      "elements": [
                        {
                          "kind": "text",
                          "text": "Office.NodeDeletedEventArgs"
                        }
                      ],
                      "target": {
                        "scopeName": "",
                        "packageName": "office",
                        "exportName": "Office",
                        "memberName": "NodeDeletedEventArgs"
                      }
                    },
                    {
                      "kind": "text",
                      "text": ", "
                    },
                    {
                      "kind": "api-link",
                      "elements": [
                        {
                          "kind": "text",
                          "text": "Office.NodeInsertedEventArgs"
                        }
                      ],
                      "target": {
                        "scopeName": "",
                        "packageName": "office",
                        "exportName": "Office",
                        "memberName": "NodeInsertedEventArgs"
                      }
                    },
                    {
                      "kind": "text",
                      "text": ", or "
                    },
                    {
                      "kind": "api-link",
                      "elements": [
                        {
                          "kind": "text",
                          "text": "Office.NodeReplacedEventArgs"
                        }
                      ],
                      "target": {
                        "scopeName": "",
                        "packageName": "office",
                        "exportName": "Office",
                        "memberName": "NodeReplacedEventArgs"
                      }
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "(result: any) => void"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds an event handler to the object using the specified event type."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "builtIn": {
              "kind": "property",
              "signature": "builtIn: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "True, if the custom XML part is built in; otherwise false."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "deleteAsync": {
              "kind": "method",
              "signature": "deleteAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes the Custom XML Part."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getNodesAsync": {
              "kind": "method",
              "signature": "getNodesAsync(xPath: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "xPath": {
                  "name": "xPath",
                  "description": [
                    {
                      "kind": "text",
                      "text": "An XPath expression that specifies the nodes you want returned. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getXmlAsync": {
              "kind": "method",
              "signature": "getXmlAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously gets the XML inside this custom XML part."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "id": {
              "kind": "property",
              "signature": "id: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the GUID of the CustomXMLPart."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "namespaceManager": {
              "kind": "property",
              "signature": "namespaceManager: CustomXmlPrefixMappings;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "CustomXmlPrefixMappings",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the set of namespace prefix mappings ("
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.CustomXmlPrefixMappings"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "CustomXmlPrefixMappings"
                  }
                },
                {
                  "kind": "text",
                  "text": ") used against the current CustomXMLPart."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "removeHandlerAsync": {
              "kind": "method",
              "signature": "removeHandlerAsync(eventType: EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the type of event to remove. For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`, `Office.EventType.NodeInserted`, and `Office.EventType.NodeReplaced`."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "handler": {
                  "name": "handler",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The name of the handler to remove."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: any) => void"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options to determine which event handler or handlers are removed."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "RemoveHandlerOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Removes an event handler for the specified event type."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "CustomXmlParts": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a collection of CustomXmlPart objects."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Word"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Available in Requirement set: CustomXmlParts"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "addAsync": {
              "kind": "method",
              "signature": "addAsync(xml: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "xml": {
                  "name": "xml",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The XML to add to the newly created custom XML part."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously adds a new custom XML part to a file."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getByIdAsync": {
              "kind": "method",
              "signature": "getByIdAsync(id: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The GUID of the custom XML part, including opening and closing braces."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously gets the specified custom XML part by its id."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getByNamespaceAsync": {
              "kind": "method",
              "signature": "getByNamespaceAsync(ns: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "ns": {
                  "name": "ns",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The namespace URI."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously gets the specified custom XML part(s) by its namespace."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "CustomXmlPrefixMappings": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a collection of CustomXmlPart objects."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Word"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "addNamespaceAsync": {
              "kind": "method",
              "signature": "addNamespaceAsync(prefix: string, ns: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "prefix": {
                  "name": "prefix",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the prefix to add to the prefix mapping list. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "ns": {
                  "name": "ns",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the namespace URI to assign to the newly added prefix. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously adds a prefix to namespace mapping to use when querying an item."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "If no namespace is assigned to the requested prefix, the method returns an empty string (\"\")."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getNamespaceAsync": {
              "kind": "method",
              "signature": "getNamespaceAsync(prefix: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "prefix": {
                  "name": "prefix",
                  "description": [
                    {
                      "kind": "text",
                      "text": "TSpecifies the prefix to get the namespace for. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously gets the namespace mapped to the specified prefix."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "If the prefix already exists in the namespace manager, this method will overwrite the mapping of that prefix except when the prefix is one added or used by the data store internally, in which case it will return an error."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getPrefixAsync": {
              "kind": "method",
              "signature": "getPrefixAsync(ns: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "ns": {
                  "name": "ns",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the namespace to get the prefix for. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously gets the prefix for the specified namespace."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: CustomXmlParts"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "If no prefix is assigned to the requested namespace, the method returns an empty string (\"\"). If there are multiple prefixes specified in the namespace manager, the method returns the first prefix that matches the supplied namespace."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "Dialog": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The object that is returned when `UI.displayDialogAsync` is called. It exposes methods for registering event handlers and closing the dialog."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "addEventHandler": {
              "kind": "method",
              "signature": "addEventHandler(eventType: Office.EventType, handler: Function): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Office.EventType"
                },
                "handler": {
                  "name": "handler",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Function"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Registers an event handler. The two supported events are:"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- DialogMessageReceived. Triggered when the dialog box sends a message to its parent."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- DialogEventReceived. Triggered when the dialog box has been closed or otherwise unloaded."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "close": {
              "kind": "method",
              "signature": "close(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Called from a parent page to close the corresponding dialog box."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "DialogOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides options for how a dialog is displayed."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "displayInIframe": {
              "kind": "property",
              "signature": "displayInIframe?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Determines whether the dialog box should be displayed within an IFrame. This setting is only applicable in Office Online clients, and is ignored by other platforms. If false (default), the dialog will be displayed as a new browser window (pop-up). Recommended for authentication pages that cannot be displayed in an IFrame. If true, the dialog will be displayed as a floating overlay with an IFrame. This is best for user experience and performance."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "height": {
              "kind": "property",
              "signature": "height?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Defines the width of the dialog as a percentage of the current display. Defaults to 80%. 250px minimum."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "width": {
              "kind": "property",
              "signature": "width?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Defines the height of the dialog as a percentage of the current display. Defaults to 80%. 150px minimum."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "Document": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "An abstract class that represents the document the add-in is interacting with."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, PowerPoint, Project, Word"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "addHandlerAsync": {
              "kind": "method",
              "signature": "addHandlerAsync(eventType: EventType, handler: any, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "For a Document object event, the eventType parameter can be specified as `Office.EventType.Document.SelectionChanged` or `Office.EventType.Document.ActiveViewChanged`, or the corresponding text value of this enumeration."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "handler": {
                  "name": "handler",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The event handler function to add, whose only parameter is of type"
                    },
                    {
                      "kind": "api-link",
                      "elements": [
                        {
                          "kind": "text",
                          "text": "Office.DocumentSelectionChangedEventArgs"
                        }
                      ],
                      "target": {
                        "scopeName": "",
                        "packageName": "office",
                        "exportName": "Office",
                        "memberName": "DocumentSelectionChangedEventArgs"
                      }
                    },
                    {
                      "kind": "text",
                      "text": ". Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds an event handler for a Document object event."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Excel, PowerPoint, Project, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: DocumentEvents"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "bindings": {
              "kind": "property",
              "signature": "bindings: Bindings;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Bindings",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an object that provides access to the bindings defined in the document."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "You don't instantiate the Document object directly in your script. To call members of the Document object to interact with the current document or worksheet, use `Office.context.document` in your script."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "customXmlParts": {
              "kind": "property",
              "signature": "customXmlParts: CustomXmlParts;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "CustomXmlParts",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an object that represents the custom XML parts in the document."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getActiveViewAsync": {
              "kind": "method",
              "signature": "getActiveViewAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the state of the current view of the presentation (edit or read)."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Excel, PowerPoint, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: ActiveView"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Can trigger an event when the view changes."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getFileAsync": {
              "kind": "method",
              "signature": "getFileAsync(fileType: FileType, options?: GetFileOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "fileType": {
                  "name": "fileType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The format in which the file will be returned"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "FileType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options for setting the size of slices that the document will be divided into."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "GetFileOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the entire document file in slices of up to 4194304 bytes (4 MB). For add-ins for iOS, file slice is supported up to 65536 (64 KB). Note that specifying file slice size of above permitted limit will result in an \"Internal Error\" failure."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Excel, PowerPoint, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: File"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "For add-ins running in Office host applications other than Office for iOS, the getFileAsync method supports getting files in slices of up to 4194304 bytes (4 MB). For add-ins running in Office for iOS apps, the getFileAsync method supports getting files in slices of up to 65536 (64 KB)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "The fileType parameter can be specified by using the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.FileType"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "FileType"
                  }
                },
                {
                  "kind": "text",
                  "text": " enumeration or text values. But the possible values vary with the host:"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Excel Online, Win32, Mac, and iOS: `Office.FileType.Compressed`"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "PowerPoint on Windows desktop, Mac, and iPad, and PowerPoint Online: `Office.FileType.Compressed`, `Office.FileType.Pdf`"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Word on Windows desktop, Word on Mac, and Word Online: `Office.FileType.Compressed`, `Office.FileType.Pdf`, `Office.FileType.Text`"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Word on iPad: `Office.FileType.Compressed`, `Office.FileType.Text`"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getFilePropertiesAsync": {
              "kind": "method",
              "signature": "getFilePropertiesAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets file properties of the current document."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Excel, PowerPoint, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: not in a set"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "You get the file's URL with the url property (`asyncResult.value.url`)."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getProjectFieldAsync": {
              "kind": "method",
              "signature": "getProjectFieldAsync(fieldId: number, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "fieldId": {
                  "name": "fieldId",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Project level fields."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Project documents only. Get Project field (Ex. ProjectWebAccessURL)."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getResourceFieldAsync": {
              "kind": "method",
              "signature": "getResourceFieldAsync(resourceId: string, fieldId: number, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "resourceId": {
                  "name": "resourceId",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Either a string or value of the Resource Id."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "fieldId": {
                  "name": "fieldId",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Resource Fields."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Project documents only. Get resource field for provided resource Id. (Ex.ResourceName)"
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getSelectedDataAsync": {
              "kind": "method",
              "signature": "getSelectedDataAsync(coercionType: CoercionType, options?: GetSelectedDataOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "coercionType": {
                  "name": "coercionType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The type of data structure to return."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "CoercionType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options for customizing what data is returned and how it is formatted."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "GetSelectedDataOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Reads the data contained in the current selection in the document."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, PowerPoint, Project, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: Selection"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "The possible values for the coercionType parameter vary by the host:"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Excel, Excel Online, PowerPoint, PowerPoint Online, Word, and Word Online only: `Office.CoercionType.Text` (string)"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Excel, Word, and Word Online only: `Office.CoercionType.Matrix` (array of arrays)"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Access, Excel, Word, and Word Online only: `Office.CoercionType.Table` (TableData object)"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Word only: `Office.CoercionType.Html`"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Word and Word Online only: `Office.CoercionType.Ooxml` (Office Open XML)"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "PowerPoint and PowerPoint Online only: `Office.CoercionType.SlideRange`"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getSelectedResourceAsync": {
              "kind": "method",
              "signature": "getSelectedResourceAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Project documents only. Get the current selected Resource's Id."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getSelectedTaskAsync": {
              "kind": "method",
              "signature": "getSelectedTaskAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Project documents only. Get the current selected Task's Id."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getSelectedViewAsync": {
              "kind": "method",
              "signature": "getSelectedViewAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Project documents only. Get the current selected View Type (Ex. Gantt) and View Name."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getTaskAsync": {
              "kind": "method",
              "signature": "getTaskAsync(taskId: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "taskId": {
                  "name": "taskId",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Either a string or value of the Task Id."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Project documents only. Get the Task Name, WSS Task Id, and ResourceNames for given taskId."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getTaskFieldAsync": {
              "kind": "method",
              "signature": "getTaskFieldAsync(taskId: string, fieldId: number, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "taskId": {
                  "name": "taskId",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Either a string or value of the Task Id."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "fieldId": {
                  "name": "fieldId",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Task Fields."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Project documents only. Get task field for provided task Id. (Ex. StartDate)."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getWSSUrlAsync": {
              "kind": "method",
              "signature": "getWSSUrlAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Project documents only. Get the WSS Url and list name for the Tasks List, the MPP is synced too."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "goToByIdAsync": {
              "kind": "method",
              "signature": "goToByIdAsync(id: string | number, goToType: GoToType, options?: GoToByIdOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The identifier of the object or location to go to."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | number"
                },
                "goToType": {
                  "name": "goToType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The type of the location to go to."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "GoToType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options for whether to select the location that is navigated to."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "GoToByIdOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Goes to the specified object or location in the document."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Excel, PowerPoint, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: not in a set"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "PowerPoint doesn't support the goToByIdAsync method in Master Views."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "The behavior caused by the selectionMode option varies by host:"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "In Excel: Office.SelectionMode.Selected selects all content in the binding, or named item. Office.SelectionMode.None for text bindings, selects the cell; for matrix bindings, table bindings, and named items, selects the first data cell (not first cell in header row for tables)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "In PowerPoint: Office.SelectionMode.Selected selects the slide title or first textbox on the slide. Office.SelectionMode.None Doesn't select anything."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "In Word: Office.SelectionMode.Selected selects all content in the binding. Office.SelectionMode.None for text bindings, moves the cursor to the beginning of the text; for matrix bindings and table bindings, selects the first data cell (not first cell in header row for tables)."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "mode": {
              "kind": "property",
              "signature": "mode: DocumentMode;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "DocumentMode",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the mode the document is in."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "removeHandlerAsync": {
              "kind": "method",
              "signature": "removeHandlerAsync(eventType: EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The event type. For document can be 'Document.SelectionChanged' or 'Document.ActiveViewChanged'."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options to determine which event handler or handlers are removed."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "RemoveHandlerOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Removes an event handler for the specified event type."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Excel, PowerPoint, Project, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: DocumentEvents"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "setSelectedDataAsync": {
              "kind": "method",
              "signature": "setSelectedDataAsync(data: string | TableData | any[][], options?: SetSelectedDataOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "data": {
                  "name": "data",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The data to be set. Either a string or"
                    },
                    {
                      "kind": "api-link",
                      "elements": [
                        {
                          "kind": "text",
                          "text": "Office.CoercionType"
                        }
                      ],
                      "target": {
                        "scopeName": "",
                        "packageName": "office",
                        "exportName": "Office",
                        "memberName": "CoercionType"
                      }
                    },
                    {
                      "kind": "text",
                      "text": " value, 2d array or TableData object."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string | TableData | any[][]"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options for how to insert data to the selection."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "SetSelectedDataOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Writes the specified data into the current selection."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, PowerPoint, Project, Word, Word Online"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: Selection"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "The possible CoercionTypes that can be used for the data parameter, or for the coercionType option, vary by host:"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Office.CoercionType.Text: Excel, Word, PowerPoint"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Office.CoercionType.Matrix: Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Office.CoercionType.Table: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Office.CoercionType.Html: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Office.CoercionType.Ooxml: Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Office.CoercionType.Image: Excel, Word, PowerPoint"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "settings": {
              "kind": "property",
              "signature": "settings: Settings;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Settings",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an object that represents the saved custom settings of the content or task pane add-in for the current document."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "url": {
              "kind": "property",
              "signature": "url: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the URL of the document that the host application currently has open. Returns null if the URL is unavailable."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "DocumentMode": {
          "kind": "enum",
          "values": {
            "ReadOnly": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The document is read-only."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ReadWrite": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The document can be read and written to."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies whether the document in the associated application is read-only or read-write."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Returned by the mode property of the Document object."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Hosts: Excel, PowerPoint, Project, Word"
            }
          ],
          "isBeta": false
        },
        "DocumentSelectionChangedEventArgs": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides information about the document that raised the SelectionChanged event."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "document": {
              "kind": "property",
              "signature": "document: Document;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Document",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.Document"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "Document"
                  }
                },
                {
                  "kind": "text",
                  "text": " object that represents the document that raised the SelectionChanged event."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "type": {
              "kind": "property",
              "signature": "type: EventType;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "EventType",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Get an "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.EventType"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "EventType"
                  }
                },
                {
                  "kind": "text",
                  "text": " enumeration value that identifies the kind of event that was raised."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "Error": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides specific information about an error that occurred during an asynchronous data operation."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The Error object is accessed from the AsyncResult object that is returned in the function passed as the callback argument of an asynchronous data operation, such as the setSelectedDataAsync method of the Document object."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, Outlook, PowerPoint, Project, Word"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "code": {
              "kind": "property",
              "signature": "code: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the numeric code of the error."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "message": {
              "kind": "property",
              "signature": "message: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the name of the error."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "name": {
              "kind": "property",
              "signature": "name: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a detailed description of the error."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "EventType": {
          "kind": "enum",
          "values": {
            "ActiveViewChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Document.ActiveViewChanged event was raised."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BindingDataChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Occurs when data within the binding is changed."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "To add an event handler for the BindingDataChanged event of a binding, use the addHandlerAsync method of the Binding object. The event handler receives an argument of type BindingDataChangedEventArgs."
                }
              ],
              "isBeta": false
            },
            "BindingSelectionChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Occurs when the selection is changed within the binding."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: BindingEvents"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "To add an event handler for the BindingSelectionChanged event of a binding, use the addHandlerAsync method of the Binding object. The event handler receives an argument of type BindingSelectionChangedEventArgs."
                }
              ],
              "isBeta": false
            },
            "DialogEventReceived": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when Dialog has a event, such as dialog closed, dialog navigation failed."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "DialogMessageReceived": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when Dialog sends a message via MessageParent."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "DocumentSelectionChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a document level selection happens"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ItemChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Document.SelectionChanged event was raised."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "NodeDeleted": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a customXmlPart node was deleted"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "NodeInserted": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a customXmlPart node was inserted"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "NodeReplaced": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a customXmlPart node was replaced"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "RecurrencePatternChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The recurrence pattern of the selected series has changed."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ResourceSelectionChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a Resource selection happens in Project."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "SettingsChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Settings.settingsChanged event was raised."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "TaskSelectionChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a Task selection happens in Project."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ViewSelectionChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a View selection happens in Project."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the kind of event that was raised. Returned by the `type` property of an *EventName*EventArgs object."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Add-ins for Project support the `Office.EventType.ResourceSelectionChanged`, `Office.EventType.TaskSelectionChanged`, and `Office.EventType.ViewSelectionChanged` event types."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, PowerPoint, Project, Word"
            }
          ],
          "isBeta": false
        },
        "File": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the document file associated with an Office Add-in."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Access the File object with the AsyncResult.value property in the callback function passed to the Document.getFileAsync method."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Hosts: PowerPoint, Word"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "closeAsync": {
              "kind": "method",
              "signature": "closeAsync(callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult. When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can access from the callback function's only parameter. Available in Requirement set: File"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Closes the document file."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "No more than two documents are allowed to be in memory; otherwise the Document.getFileAsync operation will fail. Use the File.closeAsync method to close the file when you are finished working with it."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "In the callback function passed to the closeAsync method, you can use the properties of the AsyncResult object to return the following information."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "<table> <tr> <th>Property</th> <th>Use to...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Always returns undefined because there is no object or data to retrieve.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determine the success or failure of the operation.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Access an Error object that provides error information if the operation failed.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>A user-defined item of any type that is returned in the AsyncResult object without being altered.</td> </tr> </table>"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Hosts: PowerPoint, Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getSliceAsync": {
              "kind": "method",
              "signature": "getSliceAsync(sliceIndex: number, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "sliceIndex": {
                  "name": "sliceIndex",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the zero-based index of the slice to be retrieved. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult. When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can access from the callback function's only parameter. Available in Requirement set: File"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the specified slice."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "In the callback function passed to the getSliceAsync method, you can use the properties of the AsyncResult object to return the following information."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "<table> <tr> <th>Property</th> <th>Use to...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Access the Slice object.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determine the success or failure of the operation.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Access an Error object that provides error information if the operation failed.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>A user-defined item of any type that is returned in the AsyncResult object without being altered.</td> </tr> </table>"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Hosts: PowerPoint, Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "size": {
              "kind": "property",
              "signature": "size: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the document file size in bytes."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: PowerPoint, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: File"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "sliceCount": {
              "kind": "property",
              "signature": "sliceCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of slices into which the file is divided."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: PowerPoint, Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "FileProperties": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "url": {
              "kind": "property",
              "signature": "url: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "File's URL"
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "FileType": {
          "kind": "enum",
          "values": {
            "Compressed": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the entire document (.pptx, .docx, or .xslx) in Office Open XML (OOXML) format as a byte array."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Pdf": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the entire document in PDF format as a byte array."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns only the text of the document as a string. (Word only)"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the format in which to return the document."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: PowerPoint, Word"
            }
          ],
          "isBeta": false
        },
        "FilterType": {
          "kind": "enum",
          "values": {
            "All": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Return all data (not filtered by the host application)."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "OnlyVisible": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Return only the visible data (as filtered by the host application)."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies whether filtering from the host application is applied when the data is retrieved."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Excel, Project, Word"
            }
          ],
          "isBeta": false
        },
        "GetBindingDataOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides options for how to get the data in a binding."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "If the rows option is used, the value must be \"thisRow\"."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "coercionType": {
              "kind": "property",
              "signature": "coercionType?: Office.CoercionType | string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Office.CoercionType | string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The expected shape of the selection. Use "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.CoercionType"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "CoercionType"
                  }
                },
                {
                  "kind": "text",
                  "text": " or text value. Default: The original, uncoerced type of the binding."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "columnCount": {
              "kind": "property",
              "signature": "columnCount?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "For table or matrix bindings, specifies the number of columns offset from the startColumn. Default is all subsequent columns."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "filterType": {
              "kind": "property",
              "signature": "filterType?: Office.FilterType | string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Office.FilterType | string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specify whether to get only the visible (filtered in) data or all the data (default is all). Useful when filtering data. Use Office.FilterType or text value."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "rowCount": {
              "kind": "property",
              "signature": "rowCount?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "For table or matrix bindings, specifies the number of rows offset from the startRow. Default is all subsequent rows."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "rows": {
              "kind": "property",
              "signature": "rows?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Only for table bindings in content add-ins for Access. Specifies the pre-defined string \"thisRow\" to get data in the currently selected row."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "startColumn": {
              "kind": "property",
              "signature": "startColumn?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "For table or matrix bindings, specifies the zero-based starting column for a subset of the data in the binding. Default is first column."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "startRow": {
              "kind": "property",
              "signature": "startRow?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "For table or matrix bindings, specifies the zero-based starting row for a subset of the data in the binding. Default is first row."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "valueFormat": {
              "kind": "property",
              "signature": "valueFormat?: Office.ValueFormat | string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Office.ValueFormat | string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specifies whether values, such as numbers and dates, are returned with their formatting applied. Use Office.ValueFormat or text value. Default: Unformatted data."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "GetFileOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides options for setting the size of slices that the document will be divided into."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "sliceSize": {
              "kind": "property",
              "signature": "sliceSize?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The the size of the slices in bytes. The maximum (and the default) is 4194304 (4MB)."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "GetSelectedDataOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides options for customizing what data is returned and how it is formatted."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "filterType": {
              "kind": "property",
              "signature": "filterType?: Office.FilterType | string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Office.FilterType | string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specify whether to get only the visible (that is, filtered-in) data or all the data. Useful when filtering data. Use "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.FilterType"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "FilterType"
                  }
                },
                {
                  "kind": "text",
                  "text": " or string equivalent. This parameter is ignored in Word documents."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "valueFormat": {
              "kind": "property",
              "signature": "valueFormat?: Office.ValueFormat | string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Office.ValueFormat | string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specify whether the data is formatted. Use Office.ValueFormat or string equivalent."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "GoToByIdOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides options for whether to select the location that is navigated to."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The behavior caused by the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "options.selectionMode"
                }
              ],
              "target": {
                "scopeName": "",
                "packageName": "office",
                "exportName": "Office",
                "memberName": "SelectionMode"
              }
            },
            {
              "kind": "text",
              "text": " option varies by host:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "In Excel: Office.SelectionMode.Selected selects all content in the binding, or named item. Office.SelectionMode.None for text bindings, selects the cell; for matrix bindings, table bindings, and named items, selects the first data cell (not first cell in header row for tables)."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "In PowerPoint: Office.SelectionMode.Selected selects the slide title or first textbox on the slide. Office.SelectionMode.None Doesn't select anything."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "In Word: Office.SelectionMode.Selected selects all content in the binding. Office.SelectionMode.None for text bindings, moves the cursor to the beginning of the text; for matrix bindings and table bindings, selects the first data cell (not first cell in header row for tables)."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "selectionMode": {
              "kind": "property",
              "signature": "selectionMode?: Office.SelectionMode | string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Office.SelectionMode | string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specifies whether the location specified by the id parameter is selected (highlighted). Use "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.SelectionMode"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "SelectionMode"
                  }
                },
                {
                  "kind": "text",
                  "text": " or string equivalent. See the Remarks for more information."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "GoToType": {
          "kind": "enum",
          "values": {
            "Binding": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Goes to a binding object using the specified binding id."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Index": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Goes to the specified index by slide number or Office.Index"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "NamedItem": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Goes to a named item using that item's name. In Excel, you can use any structured reference for a named range or table: \"Worksheet2!Table1\""
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Slide": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Goes to a slide using the specified id."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the type of place or object to navigate to."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Excel, PowerPoint, Word"
            }
          ],
          "isBeta": false
        },
        "HostType": {
          "kind": "enum",
          "values": {
            "Access": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Office host is Microsoft Access."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Excel": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Office host is Microsoft Excel."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "OneNote": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Office host is Microsoft OneNote."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Outlook": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Office host is Microsoft Outlook."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "PowerPoint": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Office host is Microsoft PowerPoint."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Project": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Office host is Microsoft Project."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Word": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Office host is Microsoft Word."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the host Office application in which the add-in is running."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Excel, Word, PowerPoint, Outlook, OneNote, Project, Access"
            }
          ],
          "isBeta": false
        },
        "InitializationReason": {
          "kind": "enum",
          "values": {
            "DocumentOpened": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The add-in is already part of the document that was opened."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Inserted": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The add-in was just inserted into the document."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies whether the add-in was just inserted or was already contained in the document."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Excel, Project, Word"
            }
          ],
          "isBeta": false
        },
        "initialize": {
          "kind": "function",
          "signature": "export function initialize(reason: InitializationReason): void;",
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "reason": {
              "name": "reason",
              "description": [
                {
                  "kind": "text",
                  "text": "Indicates how the app was initialized."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "InitializationReason"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Occurs when the runtime environment is loaded and the add-in is ready to start interacting with the application and hosted document."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "The reason parameter of the initialize event listener function returns an `InitializationReason` enumeration value that specifies how initialization occurred. A task pane or content add-in can be initialized in two ways:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "- The user just inserted it from Recently Used Add-ins section of the Add-in drop-down list on the Insert tab of the ribbon in the Office host application, or from Insert add-in dialog box."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "- The user opened a document that already contains the add-in."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "*Note*: The reason parameter of the initialize event listener function only returns an `InitializationReason` enumeration value for task pane and content add-ins. It does not return a value for Outlook add-ins."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, Outlook, PowerPoint, Project, Word"
            }
          ],
          "isBeta": false
        },
        "IPromiseConstructor": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "__new": {
              "kind": "method",
              "signature": "new <T>(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void): Promise<T>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Promise<T>",
                "description": []
              },
              "parameters": {
                "executor": {
                  "name": "executor",
                  "description": [
                    {
                      "kind": "text",
                      "text": "A callback used to initialize the promise. This callback is passed two arguments: a resolve callback used resolve the promise with a value or the result of another promise, and a reject callback used to reject the promise with a provided reason or error."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "(resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Creates a new Promise."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "all": {
              "kind": "method",
              "signature": "all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>",
                "description": [
                  {
                    "kind": "text",
                    "text": "A new Promise."
                  }
                ]
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "An array of Promises."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected when any Promise is rejected."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "prototype": {
              "kind": "property",
              "signature": "readonly prototype: Promise<any>;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "Promise<any>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A reference to the prototype."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "race": {
              "kind": "method",
              "signature": "race<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10>",
                "description": [
                  {
                    "kind": "text",
                    "text": "A new Promise."
                  }
                ]
              },
              "parameters": {
                "values": {
                  "name": "values",
                  "description": [
                    {
                      "kind": "text",
                      "text": "An array of Promises."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "reject": {
              "kind": "method",
              "signature": "reject(reason: any): Promise<never>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Promise<never>",
                "description": [
                  {
                    "kind": "text",
                    "text": "A new rejected Promise."
                  }
                ]
              },
              "parameters": {
                "reason": {
                  "name": "reason",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The reason the promise was rejected."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Creates a new rejected promise for the provided reason."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "resolve": {
              "kind": "method",
              "signature": "resolve<T>(value: T | PromiseLike<T>): Promise<T>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Promise<T>",
                "description": [
                  {
                    "kind": "text",
                    "text": "A promise whose internal state matches the provided promise."
                  }
                ]
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "A promise."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "T | PromiseLike<T>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Creates a new resolved promise for the provided value."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "MatrixBinding": {
          "kind": "interface",
          "extends": "Binding",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a binding in two dimensions of rows and columns."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Excel, Word"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Available in Requirement set: MatrixBindings"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "The MatrixBinding object inherits the id property, type property, getDataAsync method, and setDataAsync method from the Binding object."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "columnCount": {
              "kind": "property",
              "signature": "columnCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of columns in the matrix data structure, as an integer value."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, PowerPoint, Project, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: MatrixBindings"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "rowCount": {
              "kind": "property",
              "signature": "rowCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of rows in the matrix data structure, as an integer value."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, PowerPoint, Project, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: MatrixBindings"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "NodeDeletedEventArgs": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides information about the deleted node that raised the dataNodeDeleted event."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Word"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "isUndoRedo": {
              "kind": "property",
              "signature": "isUndoRedo: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets whether the node was deleted as part of an Undo/Redo action by the user."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "oldNextSibling": {
              "kind": "property",
              "signature": "oldNextSibling: CustomXmlNode;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "CustomXmlNode",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the former next sibling of the node that was just deleted from the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.CustomXmlPart"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "CustomXmlPart"
                  }
                },
                {
                  "kind": "text",
                  "text": " object."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "oldNode": {
              "kind": "property",
              "signature": "oldNode: CustomXmlNode;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "CustomXmlNode",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the node which was just deleted from the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Office.CustomXmlPart"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "CustomXmlPart"
                  }
                },
                {
                  "kind": "text",
                  "text": " object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Note that this node may have children, if a subtree is being removed from the document. Also, this node will be a \"disconnected\" node in that you can query down from the node, but you cannot query up the tree - the node appears to exist alone."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "NodeInsertedEventArgs": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides information about the inserted node that raised the dataNodeInserted event."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Word"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "isUndoRedo": {
              "kind": "property",
              "signature": "isUndoRedo: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets whether the node was inserted as part of an Undo/Redo action by the user."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "newNode": {
              "kind": "property",
              "signature": "newNode: CustomXmlNode;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "CustomXmlNode",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the node that was just added to the CustomXMLPart object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Note that this node may have children, if a subtree was just added to the document."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "NodeReplacedEventArgs": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides information about the replaced node that raised the dataNodeReplaced event."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "isUndoRedo": {
              "kind": "property",
              "signature": "isUndoRedo: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets whether the replaced node was inserted as part of an undo or redo operation by the user."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "newNode": {
              "kind": "property",
              "signature": "newNode: CustomXmlNode;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "CustomXmlNode",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the node that was just added to the CustomXMLPart object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Note that this node may have children, if a subtree was just added to the document."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "oldNode": {
              "kind": "property",
              "signature": "oldNode: CustomXmlNode;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "CustomXmlNode",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the node which was just deleted (replaced) from the CustomXmlPart object."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Note that this node may have children, if a subtree is being removed from the document. Also, this node will be a \"disconnected\" node in that you can query down from the node, but you cannot query up the tree - the node appears to exist alone."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "OfficeTheme": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides access to the properties for Office theme colors."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Using Office theme colors lets you coordinate the color scheme of your add-in with the current Office theme selected by the user with File > Office Account > Office Theme UI, which is applied across all Office host applications. Using Office theme colors is appropriate for mail and task pane add-ins."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Excel, Outlook, Powerpoint, Project, Word"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "bodyBackgroundColor": {
              "kind": "property",
              "signature": "bodyBackgroundColor: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the Office theme body background color as a hexadecimal color triplet (e.g. \"FFA500\")."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "bodyForegroundColor": {
              "kind": "property",
              "signature": "bodyForegroundColor: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the Office theme body foreground color as a hexadecimal color triplet (e.g. \"FFA500\")."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "controlBackgroundColor": {
              "kind": "property",
              "signature": "controlBackgroundColor: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the Office theme control background color as a hexadecimal color triplet (e.g. \"FFA500\")."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "controlForegroundColor": {
              "kind": "property",
              "signature": "controlForegroundColor: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the Office theme body control color as a hexadecimal color triplet (e.g. \"FFA500\")."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "onReady": {
          "kind": "function",
          "signature": "export function onReady(callback?: (info: { host: HostType, platform: PlatformType }) => any): Promise<{ host: HostType, platform: PlatformType }>;",
          "returnValue": {
            "type": "Promise<{ host: HostType, platform: PlatformType }>",
            "description": [
              {
                "kind": "text",
                "text": "A Promise that contains the host and platform info, once initialization is completed."
              }
            ]
          },
          "parameters": {
            "callback": {
              "name": "callback",
              "description": [
                {
                  "kind": "text",
                  "text": "An optional callback method, that will receive the host and platform info. Alternatively, rather than use a callback, an add-in may simply wait for the Promise returned by the function to resolve."
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "(info: { host: HostType, platform: PlatformType }) => any"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Ensures that the Office JavaScript APIs are ready to be called by the add-in. If the framework hasn't initialized yet, the callback or promise will wait until the Office host is ready to accept API calls. Note that though this API is intended to be used inside an Office add-in, it can also be used outside the add-in. In that case, once Office.js determines that it is running outside of an Office host application, it will call the callback and resolve the promise with \"null\" for both the host and platform."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "PlatformType": {
          "kind": "enum",
          "values": {
            "Android": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The platform is an Android device."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "iOS": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The platform an iOS device."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Mac": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The platform is Mac."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "OfficeOnline": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The platform is Office Online."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "PC": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The platform is PC (Windows)."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Universal": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The platform is WinRT."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the OS or other platform on which the Office host application is running."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Excel, Word, PowerPoint, Outlook, OneNote, Project, Access"
            }
          ],
          "isBeta": false
        },
        "ProjectProjectFields": {
          "kind": "enum",
          "values": {
            "CurrencyDigits": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The number of digits after the decimal for the currency."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "CurrencySymbol": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The currency symbol."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "CurrencySymbolPosition": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The placement of the currency symbol: Not specified = -1; Before the value with no space ($0) = 0; After the value with no space (0$) = 1; Before the value with a space ($ 0) = 2; After the value with a space (0 $) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "DurationUnits": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The project finish date."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "GUID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The GUID of the project."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ProjectServerUrl": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Project Web App URL, for projects that are stored in Project Server."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ReadOnly": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specifies whether the project is read-only."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The project start date."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "VERSION": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The project version."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "WorkUnits": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work units of the project, such as days or hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "WSSList": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The name of the SharePoint list, for projects that are synchronized with a tasks list."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "WSSUrl": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The SharePoint URL, for projects that are synchronized with a SharePoint list."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the project fields that are available as a parameter for the getProjectFieldAsync method."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "A ProjectProjectFields constant can be used as a parameter of the getProjectFieldAsync method."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Hosts: Project"
            }
          ],
          "isBeta": false
        },
        "ProjectResourceFields": {
          "kind": "enum",
          "values": {
            "Accrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The accrual method that defines how a task accrues the cost of the resource: Accrues when the task starts = 1, accrues when the task ends = 2, accrues as the task progresses (prorated) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ActualCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The calculated actual cost of the resource for assignments in the project."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ActualOvertimeCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The actual overtime cost for a resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ActualOvertimeWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The actual overtime work for a resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ActualOvertimeWorkProtected": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The actual overtime work for the resource that has been protected (made read-only)."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ActualWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The actual work that the resource has done on assignments in the project."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ActualWorkProtected": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The actual work for the resource that has been protected (made read-only)."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaseCalendar": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The name of the base calendar for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline resource, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work for the baseline resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline resource, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work for the baseline resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline resource, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work for the baseline resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline resource, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work for the baseline resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline resource, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work for the baseline resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline resource, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work for the baseline resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline resource, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work for the baseline resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline resource, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work for the baseline resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline resource, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work for the baseline resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline resource, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work for the baseline resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaselineBudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaselineBudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline resource, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaselineCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The baseline cost for the resource for assignments in the project."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaselineWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The baseline work for the resource for assignments in the project, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Code": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The code value of the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total cost of the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "CostPerUse": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost per use of the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Email": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The email address of the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "End": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The end date of the resource availability."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag11": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag12": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag13": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag14": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag15": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag16": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag17": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag18": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag19": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag20": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Generic": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the resource is a generic resource (identified by skill rather than by name)."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Group": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The group the resource belongs to."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Name": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The name of the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Notes": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The text value of the notes regarding the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number11": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number12": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number13": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number14": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number15": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number16": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number17": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number18": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number19": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number20": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "OverAllocated": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the resource is overallocated."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "OvertimeCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The overtime cost for a resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "OvertimeRate": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The overtime rate for a resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "OvertimeWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The overtime work for a resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "PercentWorkComplete": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The percentage of work complete for a resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "RegularWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The amount of regular work for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "RemainingCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The remaining cost for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "RemainingOvertimeCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The remaining overtime cost for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "RemainingOvertimeWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The remaining overtime work for the resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "RemainingWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The remaining work for the resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ResourceCalendarGUID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The GUID of the resource calendar."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ResourceCreationDate": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The date the resource was created."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ResourceGUID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The ID of the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "StandardRate": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The standard rate of pay for the resource, in cost per hour."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text11": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text12": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text13": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text14": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text15": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text16": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text17": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text18": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text19": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text20": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text21": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text22": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text23": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text24": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text25": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text26": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text27": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text28": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text29": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text30": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the resource."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Units": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The percentage of work units that the resource has assigned in the project. If the resource is working full-time on the project, Units = 100."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total work for the resource, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the resource fields that are available as a parameter for the getResourceFieldAsync method."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "A ProjectResourceFields constant can be used as a parameter of the getResourceFieldAsync method."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For more information about working with fields in Project, see "
            },
            {
              "kind": "web-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "Available fields"
                }
              ],
              "targetUrl": "https://support.office.com/article/Available-fields-reference-615a4563-1cc3-40f4-b66f-1b17e793a460"
            },
            {
              "kind": "text",
              "text": " reference. In Project Help, search for Available fields."
            }
          ],
          "isBeta": false
        },
        "ProjectTaskFields": {
          "kind": "enum",
          "values": {
            "Active": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the task is active."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ActualCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The current actual cost for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ActualDuration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The actual duration of the task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ActualFinish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The actual finish date of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ActualOvertimeCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The actual overtime cost for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ActualOvertimeWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The actual overtime work for the task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ActualStart": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The actual start date of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ActualWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The actual work for the task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline task, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The duration for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The finish date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The fixed cost of any non-resource expense for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The accrual method that defines how the baseline task accrues fixed costs: Accrues when the task starts = 1, accrues when the task ends = 2, accrues as the task progresses (prorated) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total person-hours scheduled for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline task, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The duration for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The finish date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The fixed cost of any non-resource expense for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The accrual method that defines how the baseline task accrues fixed costs: Accrues when the task starts = 1, accrues when the task ends = 2, accrues as the task progresses (prorated) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total person-hours scheduled for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline task, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The duration for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The finish date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The fixed cost of any non-resource expense for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The accrual method that defines how the baseline task accrues fixed costs: Accrues when the task starts = 1, accrues when the task ends = 2, accrues as the task progresses (prorated) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total person-hours scheduled for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline task, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The duration for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The finish date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The fixed cost of any non-resource expense for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The accrual method that defines how the baseline task accrues fixed costs: Accrues when the task starts = 1, accrues when the task ends = 2, accrues as the task progresses (prorated) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total person-hours scheduled for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline task, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The duration for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The finish date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The fixed cost of any non-resource expense for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The accrual method that defines how the baseline task accrues fixed costs: Accrues when the task starts = 1, accrues when the task ends = 2, accrues as the task progresses (prorated) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total person-hours scheduled for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline task, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The duration for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The finish date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The fixed cost of any non-resource expense for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The accrual method that defines how the baseline task accrues fixed costs: Accrues when the task starts = 1, accrues when the task ends = 2, accrues as the task progresses (prorated) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total person-hours scheduled for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline task, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The duration for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The finish date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The fixed cost of any non-resource expense for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The accrual method that defines how the baseline task accrues fixed costs: Accrues when the task starts = 1, accrues when the task ends = 2, accrues as the task progresses (prorated) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total person-hours scheduled for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline task, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The duration for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The finish date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The fixed cost of any non-resource expense for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The accrual method that defines how the baseline task accrues fixed costs: Accrues when the task starts = 1, accrues when the task ends = 2, accrues as the task progresses (prorated) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total person-hours scheduled for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline task, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The duration for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The finish date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The fixed cost of any non-resource expense for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The accrual method that defines how the baseline task accrues fixed costs: Accrues when the task starts = 1, accrues when the task ends = 2, accrues as the task progresses (prorated) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total person-hours scheduled for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline task, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The duration for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The finish date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The fixed cost of any non-resource expense for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The accrual method that defines how the baseline task accrues fixed costs: Accrues when the task starts = 1, accrues when the task ends = 2, accrues as the task progresses (prorated) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total person-hours scheduled for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaselineBudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaselineBudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the baseline task, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaselineCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cost for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaselineDuration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The duration for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaselineFinish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The finish date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaselineFixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The fixed cost of any non-resource expense for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaselineFixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The accrual method that defines how the baseline task accrues fixed costs: Accrues when the task starts = 1, accrues when the task ends = 2, accrues as the task progresses (prorated) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaselineStart": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BaselineWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total person-hours scheduled for the baseline task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Basline3Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date for the baseline task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget cost for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BudgetFixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BudgetFixedWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The budget work for the task, in hours."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ConstraintDate": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A constraint date for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ConstraintType": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A constraint type for the task: As Soon As Possible = 0, As Late As Possible = 1, Must Start On = 2, Must Finish On = 3, Start No Earlier Than = 4, Start No Later Than = 5, Finish No Earlier Than = 6, Finish No Later Than = 7."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total cost of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Cost9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A cost field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Critical": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the task is on the critical path."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Date9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A date field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Deadline": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The deadline for a task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Duration9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A duration field of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "EarnedValueMethod": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The method for calculating earned value for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The finish date of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Finish9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A finish field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "FinishSlack": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The duration between the Early Finish and Late Finish dates for the task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The fixed cost for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The accrual method that defines how the baseline task accrues fixed costs: Accrues when the task starts = 1, accrues when the task ends = 2, accrues as the task progresses (prorated) = 3."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag11": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag12": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag13": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag14": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag15": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag16": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag17": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag18": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag19": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag20": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Flag9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A Boolean flag field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "FreeSlack": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The amount of time that the task can be delayed without delaying its successor tasks."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "HasRollupSubTasks": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the task has rollup subtasks."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The index of the selected task. After the project summary task, the index of the first task in a project is 1."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "IsRollup": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether subtask information is rolled up to the summary task bar."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Milestone": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the task is a milestone."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Name": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The name of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Notes": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The text value of the notes regarding the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number11": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number12": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number13": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number14": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number15": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number16": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number17": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number18": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number19": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number20": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Number9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A number field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "OutlineLevel": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The level of the task in the outline hierarchy."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Overallocated": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether any assignments for a task are overallocated."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "OvertimeCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The overtime cost for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "OvertimeWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The overtime work for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "PercentComplete": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The percent complete status of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "PercentWorkComplete": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The percentage of work completed for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Predecessors": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The IDs of the task's predecessors."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "PreleveledFinish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The finish date of a task before leveling occurred."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "PreleveledStart": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date of a task before leveling occurred."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Priority": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The priority of the task, with values from 0 (low) to 1000 (high). The default priority value is 500."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "RegularWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The amount of regular work for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "RemainingCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The remaining cost for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "RemainingDuration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The remaining duration for the task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "RemainingOvertimeCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The remaining overtime cost for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "RemainingWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The remaining work for the task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ResourceNames": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The names of the resources assigned to a task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ScheduledDuration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The scheduled (as opposed to actual) duration of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ScheduledFinish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The scheduled (as opposed to actual) finish date of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ScheduledStart": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The scheduled (as opposed to actual) start date of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The start date of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Start9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A start field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "StartSlack": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The duration between the Early Start and Late Start dates for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Status": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The status of the task: Complete = 0, on schedule = 1, late = 2, future task = 3, status not available = 4."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "StatusManager": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The enterprise resource responsible for accepting or rejecting assignment progress updates for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Successors": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The IDs of the task's successors."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Summary": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the task is a summary task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "TaskCalendarGUID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The GUID of the task calendar."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "TaskGUID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The GUID of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text11": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text12": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text13": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text14": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text15": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text16": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text17": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text18": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text19": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text20": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text21": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text22": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text23": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text24": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text25": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text26": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text27": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text28": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text29": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text30": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A text field for the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "TotalSlack": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total slack time for the task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Type": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The way the task is calculated: Fixed units = 0, fixed duration = 1, fixed work = 2."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "WBS": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work breakdown structure code of the task."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "WBSPREDECESSORS": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work breakdown structure codes of the task predecessors, separated by the list separator."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "WBSSUCCESSORS": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The work breakdown structure codes of the task successors, separated by the list separator."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The total person-hours scheduled for the task, in minutes."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "WSSID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The ID of the task in a SharePoint list, for a project that is synchronized with a SharePoint tasks list."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the task fields that are available as a parameter for the getTaskFieldAsync method."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "A ProjectTaskFields constant can be used as a parameter of the getTaskFieldAsync method."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For more information about working with fields in Project, see the "
            },
            {
              "kind": "web-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "Available fields"
                }
              ],
              "targetUrl": "https://support.office.com/article/Available-fields-reference-615a4563-1cc3-40f4-b66f-1b17e793a460"
            },
            {
              "kind": "text",
              "text": " reference. In Project Help, search for Available fields."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Hosts: Project"
            }
          ],
          "isBeta": false
        },
        "ProjectViewTypes": {
          "kind": "enum",
          "values": {
            "Calendar": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Calendar view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Gantt": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Gantt chart view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "NetworkDiagram": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Network Diagram view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ResourceForm": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Resource Form view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ResourceGraph": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Resource Graph view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ResourceNames": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Resource Names view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ResourceSheet": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Resource Sheet view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ResourceUsage": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Resource Usage view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "TaskDetails": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Task Details view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "TaskDiagram": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Task Diagram view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "TaskForm": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Task form view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "TaskNameForm": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Task Name Form view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "TaskSheet": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Task Sheet view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "TaskUsage": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Task Usage view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "TeamPlanner": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Team Planner view."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Timeline": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The Timeline view."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the types of views that the getSelectedViewAsync method can recognize."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The getSelectedViewAsync method returns the ProjectViewTypes constant value and name that corresponds to the active view."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Hosts: Project"
            }
          ],
          "isBeta": false
        },
        "RangeCoordinates": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies a cell, or row, or column, by its zero-based row and/or column number. Example: {row: 3, column: 4} specifies the cell in the 3rd (zero-based) row in the 4th (zero-based) column."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "column": {
              "kind": "property",
              "signature": "column?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The zero-based column of the range. If not specified, all cells, in the row specified by `row` are included."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "row": {
              "kind": "property",
              "signature": "row?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The zero-based row of the range. If not specified, all cells, in the column specified by `column` are included."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "RangeFormatConfiguration": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies a range and its formatting."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "cells": {
              "kind": "property",
              "signature": "cells: Office.Table | RangeCoordinates;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Office.Table | RangeCoordinates",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specifies the range. Example of using Office.Table enum: Office.Table.All. Example of using RangeCoordinates: {row: 3, column: 4} specifies the cell in the 3rd (zero-based) row in the 4th (zero-based) column."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "format": {
              "kind": "property",
              "signature": "format: object;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "object",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specifies the formatting as key-value pairs. Example: {borderColor: \"white\", fontStyle: \"bold\"}"
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "RemoveHandlerOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides options to determine which event handler or handlers are removed."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "handler": {
              "kind": "property",
              "signature": "handler?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The handler to be removed. If not specified all handlers for the specified event type are removed."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "RequirementSetSupport": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides information about what Requirement Sets are supported in current environment."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "isSetSupported": {
              "kind": "method",
              "signature": "isSetSupported(name: string, minVersion?: number): boolean;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "boolean",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Set name; e.g., \"MatrixBindings\"."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "minVersion": {
                  "name": "minVersion",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The minimum required version; e.g., \"1.4\"."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Check if the specified requirement set is supported by the host Office application."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "SaveSettingsOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides options for saving settings."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "overwriteIfStale": {
              "kind": "property",
              "signature": "overwriteIfStale?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates whether the setting will be replaced if stale."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "select": {
          "kind": "function",
          "signature": "export function select(expression: string, callback?: (result: AsyncResult) => void): Binding;",
          "returnValue": {
            "type": "Binding",
            "description": []
          },
          "parameters": {
            "expression": {
              "name": "expression",
              "description": [
                {
                  "kind": "text",
                  "text": "The object to be retrieved. Example \"bindings#BindingName\", retrieves a binding promise for a binding named 'BindingName'"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "callback": {
              "name": "callback",
              "description": [
                {
                  "kind": "text",
                  "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "(result: AsyncResult) => void"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Returns a promise of an object described in the expression. Callback is invoked only if method fails."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "SelectionMode": {
          "kind": "enum",
          "values": {
            "Default": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "None": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The cursor is moved the beginning of the location."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Selected": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The location will be selected (highlighted)."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies whether to select (highlight) the location to navigate to (when using the Document.goToByIdAsync method)."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Excel, PowerPoint, Word"
            }
          ],
          "isBeta": false
        },
        "SetBindingDataOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides options for how to set the data in a binding."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "If the rows option is used, the value must be \"thisRow\"."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "cellFormat": {
              "kind": "property",
              "signature": "cellFormat?: Array<RangeFormatConfiguration>;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<RangeFormatConfiguration>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Use only with binding type table and when a TableData object is passed for the data parameter. An array of objects that specify a range of columns, rows, or cells and specify, as key-value pairs, the cell formatting to apply to that range."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Example: `[{cells: Office.Table.Data, format: {fontColor: \"yellow\"}}, {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}]`"
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "coercionType": {
              "kind": "property",
              "signature": "coercionType?: Office.CoercionType | string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Office.CoercionType | string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Explicitly sets the shape of the data object. If not supplied is inferred from the data type."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "columns": {
              "kind": "property",
              "signature": "columns?: Array<string>;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<string>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Only for table bindings in content add-ins for Access. Array of strings. Specifies the column names."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "rows": {
              "kind": "property",
              "signature": "rows?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Only for table bindings in content add-ins for Access. Specifies the pre-defined string \"thisRow\" to get data in the currently selected row."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "startColumn": {
              "kind": "property",
              "signature": "startColumn?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specifies the zero-based starting column for a subset of the data. Only for table or matrix bindings. If omitted, data is set starting in the first column."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "startRow": {
              "kind": "property",
              "signature": "startRow?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Specifies the zero-based starting row for a subset of the data in the binding. Only for table or matrix bindings. If omitted, data is set starting in the first row."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "tableOptions": {
              "kind": "property",
              "signature": "tableOptions?: object;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "object",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "For an inserted table, a list of key-value pairs that specify table formatting options, such as header row, total row, and banded rows. Example: `{bandedRows: true, filterButton: false}`"
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "SetSelectedDataOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides options for how to insert data to the selection."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "A user-defined item of any type that is returned, unchanged, in the value property of the AsyncResult object that is passed to a callback."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "cellFormat": {
              "kind": "property",
              "signature": "cellFormat?: Array<RangeFormatConfiguration>;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<RangeFormatConfiguration>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Use only with binding type table and when a TableData object is passed for the data parameter. An array of objects that specify a range of columns, rows, or cells and specify, as key-value pairs, the cell formatting to apply to that range."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Example: `[{cells: Office.Table.Data, format: {fontColor: \"yellow\"}}, {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}]`"
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "coercionType": {
              "kind": "property",
              "signature": "coercionType?: Office.CoercionType | string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Office.CoercionType | string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Explicitly sets the shape of the data object. If not supplied is inferred from the data type."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "imageHeight": {
              "kind": "property",
              "signature": "imageHeight?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "This option is applicable for inserting images. Indicates the image height. If this option is provided without the imageWidth, the image will scale to match the value of the image height. If both image width and image height are provided, the image will be resized accordingly. If neither the image height or width is provided, the default image size and aspect ratio will be used. This value is in points."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "imageLeft": {
              "kind": "property",
              "signature": "imageLeft?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "This option is applicable for inserting images. Indicates the insert location in relation to the left side of the slide for PowerPoint, and its relation to the currently selected cell in Excel. This value is ignored for Word. This value is in points."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "imageTop": {
              "kind": "property",
              "signature": "imageTop?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "This option is applicable for inserting images. Indicates the insert location in relation to the top of the slide for PowerPoint, and its relation to the currently selected cell in Excel. This value is ignored for Word. This value is in points."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "imageWidth": {
              "kind": "property",
              "signature": "imageWidth?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "This option is applicable for inserting images. Indicates the image width. If this option is provided without the imageHeight, the image will scale to match the value of the image width. If both image width and image height are provided, the image will be resized accordingly. If neither the image height or width is provided, the default image size and aspect ratio will be used. This value is in points."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "tableOptions": {
              "kind": "property",
              "signature": "tableOptions?: object;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "object",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "For an inserted table, a list of key-value pairs that specify table formatting options, such as header row, total row, and banded rows. Example: `{bandedRows: true, filterButton: false}`"
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "Settings": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents custom settings for a task pane or content add-in that are stored in the host document as name/value pairs."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The settings created by using the methods of the Settings object are saved per add-in and per document. That is, they are available only to the add-in that created them, and only from the document in which they are saved."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "The name of a setting is a string, while the value can be a string, number, boolean, null, object, or array."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "The Settings object is automatically loaded as part of the Document object, and is available by calling the settings property of that object when the add-in is activated. The developer is responsible for calling the saveAsync method after adding or deleting settings to save the settings in the document."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, PowerPoint, Word"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Available in Requirement set: Settings"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "addHandlerAsync": {
              "kind": "method",
              "signature": "addHandlerAsync(eventType: EventType, handler: any, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the type of event to add. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "handler": {
                  "name": "handler",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The event handler function to add. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult. When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can access from the callback function's only parameter."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds an event handler for the settingsChanged event."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Important: Your add-in's code can register a handler for the settingsChanged event when the add-in is running with any Excel client, but the event will fire only when the add-in is loaded with a spreadsheet that is opened in Excel Online, and more than one user is editing the spreadsheet (co-authoring). Therefore, effectively the settingsChanged event is supported only in Excel Online in co-authoring scenarios."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "In the callback function passed to the addHandlerAsync method, you can use the properties of the AsyncResult object to return the following information."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "<table> <tr> <th>Property</th> <th>Use to...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Always returns undefined because there is no data or object to retrieve when adding an event handler.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determine the success or failure of the operation.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Access an Error object that provides error information if the operation failed.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>A user-defined item of any type that is returned in the AsyncResult object without being altered.</td> </tr> </table>"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Hosts: Excel"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: Settings"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "get": {
              "kind": "method",
              "signature": "get(name: string): any;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "any",
                "description": [
                  {
                    "kind": "text",
                    "text": "An object that has property names mapped to JSON serialized values."
                  }
                ]
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Retrieves the specified setting."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, PowerPoint, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: Settings"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "refreshAsync": {
              "kind": "method",
              "signature": "refreshAsync(callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult. When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can access from the callback function's only parameter."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Reads all settings persisted in the document and refreshes the content or task pane add-in's copy of those settings held in memory."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "This method is useful in Word and PowerPoint coauthoring scenarios when multiple instances of the same add-in are working against the same document. Because each add-in is working against an in-memory copy of the settings loaded from the document at the time the user opened it, the settings values used by each user can get out of sync. This can happen whenever an instance of the add-in calls the Settings.saveAsync method to persist all of that user's settings to the document. Calling the refreshAsync method from the event handler for the settingsChanged event of the add-in will refresh the settings values for all users."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "The refreshAsync method can be called from add-ins created for Excel, but since it doesn't support coauthoring there is no reason to do so."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "In the callback function passed to the refreshAsync method, you can use the properties of the AsyncResult object to return the following information."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "<table> <tr> <th>Property</th> <th>Use to...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Access a Settings object with the refreshed values.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determine the success or failure of the operation.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Access an Error object that provides error information if the operation failed.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>A user-defined item of any type that is returned in the AsyncResult object without being altered.</td> </tr> </table>"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, PowerPoint, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: Settings"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "remove": {
              "kind": "method",
              "signature": "remove(name: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Removes the specified setting."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Important: Be aware that the Settings.remove method affects only the in-memory copy of the settings property bag. To persist the removal of the specified setting in the document, at some point after calling the Settings.remove method and before the add-in is closed, you must call the Settings.saveAsync method."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "null is a valid value for a setting. Therefore, assigning null to the setting will not remove it from the settings property bag."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, PowerPoint, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: Settings"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "removeHandlerAsync": {
              "kind": "method",
              "signature": "removeHandlerAsync(eventType: EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the type of event to remove. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options to determine which event handler or handlers are removed."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "RemoveHandlerOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Removes an event handler for the settingsChanged event."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can access from the callback function's only parameter. In the callback function passed to the removeHandlerAsync method, you can use the properties of the AsyncResult object to return the following information."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "saveAsync": {
              "kind": "method",
              "signature": "saveAsync(options?: SaveSettingsOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides options for saving settings."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "SaveSettingsOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult. When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can access from the callback function's only parameter."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Persists the in-memory copy of the settings property bag in the document."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Any settings previously saved by an add-in are loaded when it is initialized, so during the lifetime of the session you can just use the set and get methods to work with the in-memory copy of the settings property bag. When you want to persist the settings so that they are available the next time the add-in is used, use the saveAsync method."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Note: The saveAsync method persists the in-memory settings property bag into the document file; however, the changes to the document file itself are saved only when the user (or AutoRecover setting) saves the document to the file system. The refreshAsync method is only useful in coauthoring scenarios (which are only supported in Word) when other instances of the same add-in might change the settings and those changes should be made available to all instances."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "In the callback function passed to the saveAsync method, you can use the properties of the AsyncResult object to return the following information."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "<table> <tr> <th>Property</th> <th>Use to...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Always returns undefined because there is no object or data to retrieve.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determine the success or failure of the operation.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Access an Error object that provides error information if the operation failed.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>A user-defined item of any type that is returned in the AsyncResult object without being altered.</td> </tr> </table>"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, PowerPoint, Word"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "set": {
              "kind": "method",
              "signature": "set(name: string, value: any): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Specifies the value to be stored."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets or creates the specified setting."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Important: Be aware that the Settings.set method affects only the in-memory copy of the settings property bag. To make sure that additions or changes to settings will be available to your add-in the next time the document is opened, at some point after calling the Settings.set method and before the add-in is closed, you must call the Settings.saveAsync method to persist settings in the document."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "The set method creates a new setting of the specified name if it does not already exist, or sets an existing setting of the specified name in the in-memory copy of the settings property bag. After you call the Settings.saveAsync method, the value is stored in the document as the serialized JSON representation of its data type. A maximum of 2MB is available for the settings of each add-in."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, PowerPoint, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: Settings"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "Slice": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a slice of a document file."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The Slice object is accessed with the File.getSliceAsync method."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Hosts: PowerPoint, Word"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Available in Requirement set: File"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "data": {
              "kind": "property",
              "signature": "data: any;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the raw data of the file slice in `Office.FileType.Text` (\"text\") or `Office.FileType.Compressed` (\"compressed\") format as specified by the fileType parameter of the call to the Document.getFileAsync method."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Files in the \"compressed\" format will return a byte array that can be transformed to a base64-encoded string if required."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Hosts: PowerPoint, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: File"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "index": {
              "kind": "property",
              "signature": "index: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the zero-based index of the file slice."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: PowerPoint, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: File"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "size": {
              "kind": "property",
              "signature": "size: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the size of the slice in bytes."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: PowerPoint, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: File"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "Table": {
          "kind": "enum",
          "values": {
            "All": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The entire table, including column headers, data, and totals (if any)."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Data": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Only the data (no headers and totals)."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Headers": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Only the header row."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies enumerated values for the cells: property in the cellFormat parameter of "
            },
            {
              "kind": "web-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "table formatting methods"
                }
              ],
              "targetUrl": "https://docs.microsoft.com/en-us/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table"
            },
            {
              "kind": "text",
              "text": "."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Excel"
            }
          ],
          "isBeta": false
        },
        "TableBinding": {
          "kind": "interface",
          "extends": "Binding",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a binding in two dimensions of rows and columns, optionally with headers."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, PowerPoint, Project, Word"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Available in Requirement set: TableBindings"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "The TableBinding object inherits the id property, type property, getDataAsync method, and setDataAsync method from the Binding object."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For Excel, note that after you establish a table binding in Excel, each new row a user adds to the table is automatically included in the binding and rowCount increases."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "addColumnsAsync": {
              "kind": "method",
              "signature": "addColumnsAsync(tableData: TableData | any[][], options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "tableData": {
                  "name": "tableData",
                  "description": [
                    {
                      "kind": "text",
                      "text": "An array of arrays (\"matrix\") or a TableData object that contains one or more columns of data to add to the table. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "TableData | any[][]"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds the specified data to the table as additional columns."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: TableBindings"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "To add one or more columns specifying the values of the data and headers, pass a TableData object as the data parameter. To add one or more columns specifying only the data, pass an array of arrays (\"matrix\") as the data parameter."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "The success or failure of an addColumnsAsync operation is atomic. That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- Each row in the array you pass as the data argument must have the same number of rows as the table being updated. If not, the entire operation will fail."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- Each row and cell in the array must successfully add that row or cell to the table in the newly added column(s). If any row or cell fails to be set for any reason, the entire operation will fail."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Additional remark for Excel Online: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "addRowsAsync": {
              "kind": "method",
              "signature": "addRowsAsync(rows: TableData | any[][], options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "rows": {
                  "name": "rows",
                  "description": [
                    {
                      "kind": "text",
                      "text": "An array of arrays (\"matrix\") or a TableData object that contains one or more rows of data to add to the table. Required."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "TableData | any[][]"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds the specified data to the table as additional rows."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: TableBindings"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "To add one or more columns specifying the values of the data and headers, pass a TableData object as the data parameter. To add one or more columns specifying only the data, pass an array of arrays (\"matrix\") as the data parameter."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "The success or failure of an addRowsAsync operation is atomic. That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- Each row in the array you pass as the data argument must have the same number of columns as the table being updated. If not, the entire operation will fail."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- Each column and cell in the array must successfully add that column or cell to the table in the newly added rows(s). If any column or cell fails to be set for any reason, the entire operation will fail."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Additional remark for Excel Online: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "clearFormatsAsync": {
              "kind": "method",
              "signature": "clearFormatsAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Clears formatting on the bound table."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Excel"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: Not in a set"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "See "
                },
                {
                  "kind": "web-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "Format tables in add-ins for Excel"
                    }
                  ],
                  "targetUrl": "https://docs.microsoft.com/en-us/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table"
                },
                {
                  "kind": "text",
                  "text": " for more information."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "columnCount": {
              "kind": "property",
              "signature": "columnCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of columns in the TableBinding, as an integer value."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel,Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: TableBindings"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "deleteAllDataValuesAsync": {
              "kind": "method",
              "signature": "deleteAllDataValuesAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes all non-header rows and their values in the table, shifting appropriately for the host application."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: TableBindings"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "In Excel, if the table has no header row, this method will delete the table itself."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "getFormatsAsync": {
              "kind": "method",
              "signature": "getFormatsAsync(cellReference?: any, formats?: any[], options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "cellReference": {
                  "name": "cellReference",
                  "description": [
                    {
                      "kind": "text",
                      "text": "An object literal containing name-value pairs that specify the range of cells to get formatting from."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "formats": {
                  "name": "formats",
                  "description": [
                    {
                      "kind": "text",
                      "text": "An array specifying the format properties to get."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any[]"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the formatting on specified items in the table."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "hasHeaders": {
              "kind": "property",
              "signature": "hasHeaders: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "True, if the table has headers; otherwise false."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel, PowerPoint, Project, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: TableBindings"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "rowCount": {
              "kind": "property",
              "signature": "rowCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the number of rows in the TableBinding, as an integer value."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Access, Excel,Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: TableBindings"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "When you insert an empty table by selecting a single row in Excel 2013 and Excel Online (using Table on the Insert tab), both Office host applications create a single row of headers followed by a single blank row. However, if your add-in's script creates a binding for this newly inserted table (for example, by using the addFromSelectionAsync method), and then checks the value of the rowCount property, the value returned will differ depending whether the spreadsheet is open in Excel 2013 or Excel Online."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- In Excel on the desktop, rowCount will return 0 (the blank row following the headers is not counted)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- In Excel Online, rowCount will return 1 (the blank row following the headers is counted)."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "You can work around this difference in your script by checking if rowCount == 1, and if so, then checking if the row contains all empty strings."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "In content add-ins for Access, for performance reasons the rowCount property always returns -1."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "setFormatsAsync": {
              "kind": "method",
              "signature": "setFormatsAsync(formatsInfo?: any[], options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "formatsInfo": {
                  "name": "formatsInfo",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Array elements are themselves three-element arrays:[target, type, formats] target: The identifier of the item to format. String. type: The kind of item to format. String. formats: An object literal containing a list of property name-value pairs that define the formatting to apply."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any[]"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets formatting on specified items and data in the table."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Excel"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: Not in a set"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "setTableOptionsAsync": {
              "kind": "method",
              "signature": "setTableOptionsAsync(tableOptions: any, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "tableOptions": {
                  "name": "tableOptions",
                  "description": [
                    {
                      "kind": "text",
                      "text": "An object literal containing a list of property name-value pairs that define the table options to apply."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Provides an option for preserving context data of any type, unchanged, for use in a callback."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "AsyncContextOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Updates table formatting options on the bound table."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Excel"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: Not in a set"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "TableData": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents the data in a table or a "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "Office.TableBinding"
                }
              ],
              "target": {
                "scopeName": "",
                "packageName": "office",
                "exportName": "Office",
                "memberName": "TableBinding"
              }
            },
            {
              "kind": "text",
              "text": "."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Excel, Word"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Available in Requirement set: TableBindings"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "__constructor": {
              "kind": "constructor",
              "signature": "constructor(rows: any[][], headers: any[]);",
              "parameters": {
                "rows": {
                  "name": "rows",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any[][]"
                },
                "headers": {
                  "name": "headers",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any[]"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constructs a new instance of the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "TableData"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "TableData"
                  }
                },
                {
                  "kind": "text",
                  "text": " class"
                }
              ],
              "remarks": []
            },
            "headers": {
              "kind": "property",
              "signature": "headers: any[];",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any[]",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets or sets the headers of the table."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "To specify headers, you must specify an array of arrays that corresponds to the structure of the table. For example, to specify headers for a two-column table you would set the header property to [['header1', 'header2']]."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "If you specify null for the headers property (or leaving the property empty when you construct a TableData object), the following results occur when your code executes:"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- If you insert a new table, the default column headers for the table are created."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- If you overwrite or update an existing table, the existing headers are not altered."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Hosts: Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: TableBindings"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "rows": {
              "kind": "property",
              "signature": "rows: any[][];",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any[][]",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets or sets the rows in the table. Returns an array of arrays that contains the data in the table. Returns an empty array ``, if there are no rows."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "To specify rows, you must specify an array of arrays that corresponds to the structure of the table. For example, to specify two rows of string values in a two-column table you would set the rows property to [['a', 'b'], ['c', 'd']]."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "If you specify null for the rows property (or leave the property empty when you construct a TableData object), the following results occur when your code executes:"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- If you insert a new table, a blank row will be inserted."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- If you overwrite or update an existing table, the existing rows are not altered."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Hosts: Excel, Word"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Available in Requirement set: TableBindings"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "TextBinding": {
          "kind": "interface",
          "extends": "Binding",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents a bound text selection in the document."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, PowerPoint, Project, Word"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Available in Requirement set: TextBindings"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "The TextBinding object inherits the id property, type property, getDataAsync method, and setDataAsync method from the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "Office.Binding"
                }
              ],
              "target": {
                "scopeName": "",
                "packageName": "office",
                "exportName": "Office",
                "memberName": "Binding"
              }
            },
            {
              "kind": "text",
              "text": " object. It does not implement any additional properties or methods of its own."
            }
          ],
          "isBeta": false,
          "isSealed": false
        },
        "UI": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides objects and methods that you can use to create and manipulate UI components, such as dialog boxes, in your Office Add-ins."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "closeContainer": {
              "kind": "method",
              "signature": "closeContainer(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Closes the UI container where the JavaScript is executing."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "The behavior of this method is specified by the following:"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- Called from a UI-less command button: No effect. Any dialog opened by displayDialogAsync will remain open."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- Called from a taskpane: The taskpane will close. Any dialog opened by displayDialogAsync will also close. If the taskpane supports pinning and was pinned by the user, it will be un-pinned."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- Called from a module extension: No effect."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Hosts: Excel, Word, PowerPoint, Outlook (Minimum requirement set: Mailbox 1.5)"
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "displayDialogAsync": {
              "kind": "method",
              "signature": "displayDialogAsync(startAddress: string, options?: DialogOptions, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "startAddress": {
                  "name": "startAddress",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Accepts the initial HTTPS URL that opens in the dialog."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. Accepts a DialogOptions object to define dialog display."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "DialogOptions"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. Accepts a callback method to handle the dialog creation attempt. If successful, the AsyncResult.value is a DialogHandler object."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Displays a dialog to show or collect information from the user or to facilitate Web navigation."
                }
              ],
              "remarks": [
                {
                  "kind": "text",
                  "text": "Hosts: Word, Excel, Outlook, PowerPoint"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Requirement sets: DialogApi, Mailbox 1.4"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "The initial page must be on the same domain as the parent page (the startAddress parameter). After the initial page loads, you can go to other domains."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Any page calling `office.context.ui.messageParent` must also be on the same domain as the parent page."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "The following design considerations apply to dialog boxes:"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- An Office Add-in can have only one dialog box open at any time."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- Every dialog box can be moved and resized by the user."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- Every dialog box is centered on the screen when opened."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- Dialog boxes appear on top of the host application and in the order in which they were created."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Use a dialog box to:"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- Display authentication pages to collect user credentials."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- Display an error/progress/input screen from a ShowTaspane or ExecuteAction command."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "- Temporarily increase the surface area that a user has available to complete a task."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Do not use a dialog box to interact with a document. Use a task pane instead."
                }
              ],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "messageParent": {
              "kind": "method",
              "signature": "messageParent(messageObject: any): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "messageObject": {
                  "name": "messageObject",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Accepts a message from the dialog to deliver to the add-in."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Delivers a message from the dialog box to its parent/opener page. The page calling this API must be on the same domain as the parent."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "useShortNamespace": {
          "kind": "function",
          "signature": "export function useShortNamespace(useShortNamespace: boolean): void;",
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "useShortNamespace": {
              "name": "useShortNamespace",
              "description": [
                {
                  "kind": "text",
                  "text": "True to use the shortcut alias; otherwise false to disable it. The default is true."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "boolean"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Toggles on and off the `Office` alias for the full `Microsoft.Office.WebExtension` namespace."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Hosts: Access, Excel, Outlook, PowerPoint, Project, Word"
            }
          ],
          "isBeta": false
        },
        "ValueFormat": {
          "kind": "enum",
          "values": {
            "Formatted": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Return formatted data."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Unformatted": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Return unformatted data."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies whether values, such as numbers and dates, returned by the invoked method are returned with their formatting applied."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "For example, if the valueFormat parameter is specified as \"formatted\", a number formatted as currency, or a date formatted as mm/dd/yy in the host application will have its formatting preserved. If the valueFormat parameter is specified as \"unformatted\", a date will be returned in its underlying sequential serial number form."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Hosts: Excel, Project, Word"
            }
          ],
          "isBeta": false
        }
      }
    },
    "OfficeExtension": {
      "kind": "namespace",
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "exports": {
        "ClientObject": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "An abstract proxy object that represents an object in an Office document. You create proxy objects from the context (or from other proxy objects), add commands to a queue to act on the object, and then synchronize the proxy object state with the document by calling `context.sync()`."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "context": {
              "kind": "property",
              "signature": "context: ClientRequestContext;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ClientRequestContext",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The request context associated with the object"
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "isNullObject": {
              "kind": "property",
              "signature": "isNullObject: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a boolean value for whether the corresponding object is a null object. You must call `context.sync()` before reading the isNullObject property."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "ClientRequestContext": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "An abstract RequestContext object that facilitates requests to the host Office application. The `Excel.run and `Word.run` methods provide a request context."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "__constructor": {
              "kind": "constructor",
              "signature": "constructor(url?: string);",
              "parameters": {
                "url": {
                  "name": "url",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constructs a new instance of the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "ClientRequestContext"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "OfficeExtension",
                    "memberName": "ClientRequestContext"
                  }
                },
                {
                  "kind": "text",
                  "text": " class"
                }
              ],
              "remarks": []
            },
            "debugInfo": {
              "kind": "property",
              "signature": "readonly debugInfo: RequestContextDebugInfo;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "RequestContextDebugInfo",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Debug information"
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "load": {
              "kind": "method",
              "signature": "load(object: ClientObject, option?: string | string[] | LoadOption): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "object": {
                  "name": "object",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientObject"
                },
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "loadRecursive": {
              "kind": "method",
              "signature": "loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "object": {
                  "name": "object",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The object to be loaded."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientObject"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The key-value pairing of load options for the types, such as `{ \"Workbook\": \"worksheets,tables\", \"Worksheet\": \"tables\", \"Tables\": \"name\" }`"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "{ [typeName: string]: string | string[] | LoadOption }"
                },
                "maxDepth": {
                  "name": "maxDepth",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The maximum recursive depth."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to recursively load the specified properties of the object and its navigation properties."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "You must call `context.sync()` before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "requestHeaders": {
              "kind": "property",
              "signature": "requestHeaders:",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "{ [name: string]: string }",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Request headers"
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "sync": {
              "kind": "method",
              "signature": "sync<T>(passThroughValue?: T): Promise<T>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Promise<T>",
                "description": []
              },
              "parameters": {
                "passThroughValue": {
                  "name": "passThroughValue",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "T"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Synchronizes the state between JavaScript proxy objects and the Office document, by executing instructions queued on the request context and retrieving properties of loaded Office objects for use in your code. This method returns a promise, which is resolved when the synchronization is complete."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "trace": {
              "kind": "method",
              "signature": "trace(message: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "message": {
                  "name": "message",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds a trace message to the queue. If the promise returned by `context.sync()` is rejected due to an error, this adds a \".traceMessages\" array to the OfficeExtension.Error object, containing all trace messages that were executed. These messages can help you monitor the program execution sequence and detect the cause of the error."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "trackedObjects": {
              "kind": "property",
              "signature": "trackedObjects: TrackedObjects;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "TrackedObjects",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Collection of objects that are tracked for automatic adjustments based on surrounding changes in the document."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "ClientResult": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [
            "T"
          ],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Contains the result for methods that return primitive types. The object's value property is retrieved from the document after `context.sync()` is invoked."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "value": {
              "kind": "property",
              "signature": "value: T;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "T",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The value of the result that is retrieved from the document after `context.sync()` is invoked."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "DebugInfo": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "code": {
              "kind": "property",
              "signature": "code: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Error code string, such as \"InvalidArgument\"."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "errorLocation": {
              "kind": "property",
              "signature": "errorLocation?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The object type and property or method name (or similar information), if available."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "fullStatements": {
              "kind": "property",
              "signature": "fullStatements?: string[];",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string[]",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "All statements in the batch request (including any potentially-sensitive information that was specified in the request), if available."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "These statements may not match the code exactly as written, but will be a close approximation."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "innerError": {
              "kind": "property",
              "signature": "innerError?: DebugInfo | string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "DebugInfo | string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Inner error, if applicable."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "message": {
              "kind": "property",
              "signature": "message: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The error message passed through from the host Office application."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "statements": {
              "kind": "property",
              "signature": "statements?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The statement that caused the error, if available."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "This statement will never contain any potentially-sensitive data and may not match the code exactly as written, but will be a close approximation."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "surroundingStatements": {
              "kind": "property",
              "signature": "surroundingStatements?: string[];",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string[]",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The statements that closely precede and follow the statement that caused the error, if available."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "These statements will never contain any potentially-sensitive data and may not match the code exactly as written, but will be a close approximation."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "EmbeddedOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "container": {
              "kind": "property",
              "signature": "container?: HTMLElement;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "HTMLElement",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "height": {
              "kind": "property",
              "signature": "height?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "id": {
              "kind": "property",
              "signature": "id?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "sessionKey": {
              "kind": "property",
              "signature": "sessionKey?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "timeoutInMilliseconds": {
              "kind": "property",
              "signature": "timeoutInMilliseconds?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "width": {
              "kind": "property",
              "signature": "width?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "EmbeddedSession": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "__constructor": {
              "kind": "constructor",
              "signature": "constructor(url: string, options?: EmbeddedOptions);",
              "parameters": {
                "url": {
                  "name": "url",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "EmbeddedOptions"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constructs a new instance of the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "EmbeddedSession"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "OfficeExtension",
                    "memberName": "EmbeddedSession"
                  }
                },
                {
                  "kind": "text",
                  "text": " class"
                }
              ],
              "remarks": []
            },
            "init": {
              "kind": "method",
              "signature": "public init(): Promise<any>;",
              "accessModifier": "public",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Promise<any>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "Error": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The error object returned by `context.sync()`, if a promise is rejected due to an error while processing the request."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "code": {
              "kind": "property",
              "signature": "code: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Error code string, such as \"InvalidArgument\"."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "debugInfo": {
              "kind": "property",
              "signature": "debugInfo: DebugInfo;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "DebugInfo",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Debug info (useful for detailed logging of the error, i.e., via `JSON.stringify(...)`)."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "innerError": {
              "kind": "property",
              "signature": "innerError: Error;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Error",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Inner error, if applicable."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "message": {
              "kind": "property",
              "signature": "message: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The error message passed through from the host Office application."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "name": {
              "kind": "property",
              "signature": "name: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Error name: \"OfficeExtension.Error\"."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "stack": {
              "kind": "property",
              "signature": "stack: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Stack trace, if applicable."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "traceMessages": {
              "kind": "property",
              "signature": "traceMessages: Array<string>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<string>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Trace messages (if any) that were added via a `context.trace()` invocation before calling `context.sync()`. If there was an error, this contains all trace messages that were executed before the error occurred. These messages can help you monitor the program execution sequence and detect the case of the error."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "ErrorCodes": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "accessDenied": {
              "kind": "property",
              "signature": "public static accessDenied: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "activityLimitReached": {
              "kind": "property",
              "signature": "public static activityLimitReached: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "apiNotFound": {
              "kind": "property",
              "signature": "public static apiNotFound: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "cannotRegisterEvent": {
              "kind": "property",
              "signature": "public static cannotRegisterEvent: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "connectionFailure": {
              "kind": "property",
              "signature": "public static connectionFailure: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "generalException": {
              "kind": "property",
              "signature": "public static generalException: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "invalidArgument": {
              "kind": "property",
              "signature": "public static invalidArgument: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "invalidObjectPath": {
              "kind": "property",
              "signature": "public static invalidObjectPath: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "invalidRequestContext": {
              "kind": "property",
              "signature": "public static invalidRequestContext: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "propertyNotLoaded": {
              "kind": "property",
              "signature": "public static propertyNotLoaded: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "runMustReturnPromise": {
              "kind": "property",
              "signature": "public static runMustReturnPromise: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "valueNotLoaded": {
              "kind": "property",
              "signature": "public static valueNotLoaded: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "EventHandlerResult": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [
            "T"
          ],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "__constructor": {
              "kind": "constructor",
              "signature": "constructor(context: ClientRequestContext, handlers: EventHandlers<T>, handler: (args: T) => Promise<any>);",
              "parameters": {
                "context": {
                  "name": "context",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientRequestContext"
                },
                "handlers": {
                  "name": "handlers",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventHandlers<T>"
                },
                "handler": {
                  "name": "handler",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "(args: T) => Promise<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constructs a new instance of the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "EventHandlerResult"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "OfficeExtension",
                    "memberName": "EventHandlerResult"
                  }
                },
                {
                  "kind": "text",
                  "text": " class"
                }
              ],
              "remarks": []
            },
            "context": {
              "kind": "property",
              "signature": "context: ClientRequestContext;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ClientRequestContext",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The request context associated with the object"
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "remove": {
              "kind": "method",
              "signature": "remove(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "EventHandlers": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [
            "T"
          ],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "__constructor": {
              "kind": "constructor",
              "signature": "constructor(context: ClientRequestContext, parentObject: ClientObject, name: string, eventInfo: EventInfo<T>);",
              "parameters": {
                "context": {
                  "name": "context",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientRequestContext"
                },
                "parentObject": {
                  "name": "parentObject",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientObject"
                },
                "name": {
                  "name": "name",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "eventInfo": {
                  "name": "eventInfo",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventInfo<T>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constructs a new instance of the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "EventHandlers"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "OfficeExtension",
                    "memberName": "EventHandlers"
                  }
                },
                {
                  "kind": "text",
                  "text": " class"
                }
              ],
              "remarks": []
            },
            "add": {
              "kind": "method",
              "signature": "add(handler: (args: T) => Promise<any>): EventHandlerResult<T>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "EventHandlerResult<T>",
                "description": []
              },
              "parameters": {
                "handler": {
                  "name": "handler",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "(args: T) => Promise<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "remove": {
              "kind": "method",
              "signature": "remove(handler: (args: T) => Promise<any>): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "handler": {
                  "name": "handler",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "(args: T) => Promise<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "EventInfo": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [
            "T"
          ],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "eventArgsTransformFunc": {
              "kind": "property",
              "signature": "eventArgsTransformFunc: (args: any) => Promise<T>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "(args: any) => Promise<T>",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "registerFunc": {
              "kind": "property",
              "signature": "registerFunc: (callback: (args: any) => void) => Promise<any>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "(callback: (args: any) => void) => Promise<any>",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "unregisterFunc": {
              "kind": "property",
              "signature": "unregisterFunc: (callback: (args: any) => void) => Promise<any>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "(callback: (args: any) => void) => Promise<any>",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "LoadOption": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "expand": {
              "kind": "property",
              "signature": "expand?: string | string[];",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string | string[]",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "select": {
              "kind": "property",
              "signature": "select?: string | string[];",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string | string[]",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "skip": {
              "kind": "property",
              "signature": "skip?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "top": {
              "kind": "property",
              "signature": "top?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "RequestContextDebugInfo": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Contains debug information about the request context."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "pendingStatements": {
              "kind": "property",
              "signature": "pendingStatements: string[];",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string[]",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The statements to be executed in the host."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "These statements may not match the code exactly as written, but will be a close approximation."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "RequestUrlAndHeaderInfo": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Request URL and headers"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "headers": {
              "kind": "property",
              "signature": "headers?:",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "{\n            [name: string]: string;\n        }",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Request headers"
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "url": {
              "kind": "property",
              "signature": "url: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Request URL"
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "TrackedObjects": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Collection of tracked objects, contained within a request context. See \"context.trackedObjects\" for more information."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "add": {
              "kind": "method",
              "signature": "add(object: ClientObject): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "object": {
                  "name": "object",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientObject"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Track a new object for automatic adjustment based on surrounding changes in the document. Only some object types require this. If you are using an object across \".sync\" calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            },
            "remove": {
              "kind": "method",
              "signature": "remove(object: ClientObject): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "object": {
                  "name": "object",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientObject"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Release the memory associated with an object that was previously added to this collection. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You will need to call `context.sync()` before the memory release takes effect."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        },
        "UpdateOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "members": {
            "throwOnReadOnly": {
              "kind": "property",
              "signature": "throwOnReadOnly?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Throw an error if the passed-in property list includes read-only properties (default = true)."
                }
              ],
              "remarks": [],
              "isBeta": false,
              "isSealed": false,
              "isVirtual": false,
              "isOverride": false
            }
          }
        }
      }
    }
  }
}
