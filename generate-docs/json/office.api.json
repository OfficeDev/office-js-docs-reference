{
  "kind": "package",
  "name": "office",
  "summary": [],
  "remarks": [],
  "exports": {
    "Office": {
      "kind": "namespace",
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "exports": {
        "ActiveView": {
          "kind": "enum",
          "values": {
            "Edit": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Read": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "AsyncResult": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext: any;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "error": {
              "kind": "property",
              "signature": "error: Error;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Error",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "status": {
              "kind": "property",
              "signature": "status: AsyncResultStatus;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "AsyncResultStatus",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "value": {
              "kind": "property",
              "signature": "value: any;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "AsyncResultStatus": {
          "kind": "enum",
          "values": {
            "Failed": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Operation failed, check error object"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Succeeded": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Operation succeeded"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "Auth": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "getAccessTokenAsync": {
              "kind": "method",
              "signature": "getAccessTokenAsync(callback: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Optional. Accepts a callback method to handle the token acquisition attempt. If AsyncResult.status is \"succeeded\", then AsyncResult.value is the raw AAD v. 2.0-formatted access token."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Obtains an access token from AAD V 2.0 endpoint to grant the Office host application access to the add-in's web application."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "AuthOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "asyncContext": {
              "kind": "property",
              "signature": "asyncContext?: any;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Optional. A user-defined item of any type that is returned in the AsyncResult object without being altered."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "authChallenge": {
              "kind": "property",
              "signature": "authChallenge?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Optional. Causes Office to prompt the user to provide the additional factor when the tenancy being targeted by Microsoft Graph requires multifactor authentication. The string value identifies the type of additional factor that is required. In most cases, you won't know at development time whether the user's tenant requires an additional factor or what the string should be. So this option would be used in a \"second try\" call of getAccessTokenAsync after Microsoft Graph has sent an error requesting the additional factor and containing the string that should be used with the authChallenge option."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "forceAddAccount": {
              "kind": "property",
              "signature": "forceAddAccount?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Optional. Prompts the user to add (or to switch if already added) his or her Office account."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "forceConsent": {
              "kind": "property",
              "signature": "forceConsent?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Optional. Causes Office to display the add-in consent experience. Useful if the add-in's Azure permissions have changed or if the user's consent has been revoked."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Binding": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "addHandlerAsync": {
              "kind": "method",
              "signature": "addHandlerAsync(eventType: EventType, handler: any, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The event type. For binding it can be 'bindingDataChanged' and 'bindingSelectionChanged'"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "handler": {
                  "name": "handler",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The name of the handler"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds an event handler to the object using the specified event type."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "document": {
              "kind": "property",
              "signature": "document: Document;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Document",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "getDataAsync": {
              "kind": "method",
              "signature": "getDataAsync(options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {coercionType: 'matrix,'valueFormat: 'formatted', filterType:'all'} coercionType: The expected shape of the selection. If not specified returns the bindingType shape. Use Office.CoercionType or text value. valueFormat: Get data with or without format. Use Office.ValueFormat or text value. startRow: Used in partial get for table/matrix. Indicates the start row. startColumn: Used in partial get for table/matrix. Indicates the start column. rowCount: Used in partial get for table/matrix. Indicates the number of rows from the start row. columnCount: Used in partial get for table/matrix. Indicates the number of columns from the start column. filterType: Get the visible or all the data. Useful when filtering data. Use Office.FilterType or text value. asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the current selection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "id": {
              "kind": "property",
              "signature": "id: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Id of the Binding"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "removeHandlerAsync": {
              "kind": "method",
              "signature": "removeHandlerAsync(eventType: EventType, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The event type. For binding can be 'bindingDataChanged' and 'bindingSelectionChanged'"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {handler:eventHandler} handler: Indicates a specific handler to be removed, if not specified all handlers are removed asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Removes an event handler from the object using the specified event type."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "setDataAsync": {
              "kind": "method",
              "signature": "setDataAsync(data: TableData | any, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "data": {
                  "name": "data",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The data to be set. Either a string or value, 2d array or TableData object"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "TableData | any"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {coercionType:Office.CoercionType.Matrix} or {coercionType: 'matrix'} coercionType: Explicitly sets the shape of the data object. Use Office.CoercionType or text value. If not supplied is inferred from the data type. startRow: Used in partial set for table/matrix. Indicates the start row. startColumn: Used in partial set for table/matrix. Indicates the start column. asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Writes the specified data into the current selection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "type": {
              "kind": "property",
              "signature": "type: BindingType;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "BindingType",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Bindings": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "addFromNamedItemAsync": {
              "kind": "method",
              "signature": "addFromNamedItemAsync(itemName: string, bindingType: BindingType, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "itemName": {
                  "name": "itemName",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Name of the bindable object in the document. For Example 'MyExpenses' table in Excel.\""
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "bindingType": {
                  "name": "bindingType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The Office BindingType for the data"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "BindingType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {id: \"BindingID\"} id: Name of the binding, autogenerated if not supplied. asyncContext: Object keeping state for the callback columns: The string[] of the columns involved in the binding"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Creates a binding against a named object in the document"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "addFromPromptAsync": {
              "kind": "method",
              "signature": "addFromPromptAsync(bindingType: BindingType, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "bindingType": {
                  "name": "bindingType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The Office BindingType for the data"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "BindingType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "addFromPromptAsyncOptions- e.g. {promptText: \"Please select data\", id: \"mySales\"} promptText: Greet your users with a friendly word. asyncContext: Object keeping state for the callback id: Identifier. sampleData: A TableData that gives sample table in the Dialog.TableData.Headers is [][] of string."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Create a binding by prompting the user to make a selection on the document."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "addFromSelectionAsync": {
              "kind": "method",
              "signature": "addFromSelectionAsync(bindingType: BindingType, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "bindingType": {
                  "name": "bindingType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The Office BindingType for the data"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "BindingType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "addFromSelectionAsyncOptions- e.g. {id: \"BindingID\"} id: Identifier. asyncContext: Object keeping state for the callback columns: The string[] of the columns involved in the binding sampleData: A TableData that gives sample table in the Dialog.TableData.Headers is [][] of string."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Create a binding based on what the user's current selection."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "document": {
              "kind": "property",
              "signature": "document: Document;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Document",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "getAllAsync": {
              "kind": "method",
              "signature": "getAllAsync(options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets an array with all the binding objects in the document."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getByIdAsync": {
              "kind": "method",
              "signature": "getByIdAsync(id: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The binding id"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Retrieves a binding based on its Name"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "releaseByIdAsync": {
              "kind": "method",
              "signature": "releaseByIdAsync(id: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The binding id"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Removes the binding from the document"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "BindingType": {
          "kind": "enum",
          "values": {
            "Matrix": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Matrix based Binding"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Table": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Table based Binding"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Text based Binding"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "CoercionType": {
          "kind": "enum",
          "values": {
            "Html": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Coerce as HTML"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Image": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Coerce as Image"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Matrix": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Coerce as Matrix"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Ooxml": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Coerce as Office Open XML"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "SlideRange": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Coerce as JSON object containing an array of the ids, titles, and indexes of the selected slides."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Table": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Coerce as Table"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Coerce as Text"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "Context": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "document": {
              "kind": "property",
              "signature": "document: Document;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Document",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "CustomXmlNode": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "baseName": {
              "kind": "property",
              "signature": "baseName: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "getNodesAsync": {
              "kind": "method",
              "signature": "getNodesAsync(xPath: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "xPath": {
                  "name": "xPath",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The xPath expression"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the nodes associated with the xPath expression."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getNodeValueAsync": {
              "kind": "method",
              "signature": "getNodeValueAsync(options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the node value."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getTextAsync": {
              "kind": "method",
              "signature": "getTextAsync(options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously gets the text of an XML node in a custom XML part."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getXmlAsync": {
              "kind": "method",
              "signature": "getXmlAsync(options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the node's XML."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "namespaceUri": {
              "kind": "property",
              "signature": "namespaceUri: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "nodeType": {
              "kind": "property",
              "signature": "nodeType: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "setNodeValueAsync": {
              "kind": "method",
              "signature": "setNodeValueAsync(value: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The value to be set on the node"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets the node value."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "setTextAsync": {
              "kind": "method",
              "signature": "setTextAsync(text: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "text": {
                  "name": "text",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Required. The text value of the XML node."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously sets the text of an XML node in a custom XML part."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "setXmlAsync": {
              "kind": "method",
              "signature": "setXmlAsync(xml: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "xml": {
                  "name": "xml",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The XML to be set on the node"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets the node XML."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "CustomXmlPart": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "addHandlerAsync": {
              "kind": "method",
              "signature": "addHandlerAsync(eventType: EventType, handler?: (result: any) => void, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The event type. For CustomXmlPartNode it can be 'nodeDeleted', 'nodeInserted' or 'nodeReplaced'"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "handler": {
                  "name": "handler",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The name of the handler"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: any) => void"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds an event handler to the object using the specified event type."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "builtIn": {
              "kind": "property",
              "signature": "builtIn: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "deleteAsync": {
              "kind": "method",
              "signature": "deleteAsync(options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Deletes the Custom XML Part."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getNodesAsync": {
              "kind": "method",
              "signature": "getNodesAsync(xPath: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "xPath": {
                  "name": "xPath",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The xPath expression"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the nodes associated with the xPath expression."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getXmlAsync": {
              "kind": "method",
              "signature": "getXmlAsync(options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the XML for the Custom XML Part."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "id": {
              "kind": "property",
              "signature": "id: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "namespaceManager": {
              "kind": "property",
              "signature": "namespaceManager: CustomXmlPrefixMappings;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "CustomXmlPrefixMappings",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "removeHandlerAsync": {
              "kind": "method",
              "signature": "removeHandlerAsync(eventType: EventType, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The event type. For CustomXmlPartNode it can be 'nodeDeleted', 'nodeInserted' or 'nodeReplaced'"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {handler:eventHandler} handler: Indicates a specific handler to be removed, if not specified all handlers are removed asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Removes an event handler from the object using the specified event type."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "CustomXmlParts": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "addAsync": {
              "kind": "method",
              "signature": "addAsync(xml: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "xml": {
                  "name": "xml",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The XML to add to the newly created custom XML part."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously adds a new custom XML part to a file."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getByIdAsync": {
              "kind": "method",
              "signature": "getByIdAsync(id: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "id": {
                  "name": "id",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The id of the custom XML part."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously gets the specified custom XML part by its id."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getByNamespaceAsync": {
              "kind": "method",
              "signature": "getByNamespaceAsync(ns: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "ns": {
                  "name": "ns",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The namespace to search."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "A function that is invoked when the callback returns, whose only parameter is of type AsyncResult."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Asynchronously gets the specified custom XML part(s) by its namespace."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "CustomXmlPrefixMappings": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "addNamespaceAsync": {
              "kind": "method",
              "signature": "addNamespaceAsync(prefix: string, ns: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "prefix": {
                  "name": "prefix",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The namespace prefix"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "ns": {
                  "name": "ns",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The namespace URI"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds a namespace."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getNamespaceAsync": {
              "kind": "method",
              "signature": "getNamespaceAsync(prefix: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "prefix": {
                  "name": "prefix",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The namespace prefix"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a namespace with the specified prefix"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getPrefixAsync": {
              "kind": "method",
              "signature": "getPrefixAsync(ns: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "ns": {
                  "name": "ns",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The namespace URI"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a prefix for the specified URI"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "DialogHandler": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Dialog object returned as part of the displayDialogAsync callback. The object exposes methods for registering event handlers and closing the dialog"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "addEventHandler": {
              "kind": "method",
              "signature": "addEventHandler(eventType: Office.EventType, handler: Function): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Office.EventType"
                },
                "handler": {
                  "name": "handler",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "Function"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds an event handler for DialogMessageReceived or DialogEventReceived"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "close": {
              "kind": "method",
              "signature": "close(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "When called from an active add-in dialog, asynchronously closes the dialog."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "DialogOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "displayInIframe": {
              "kind": "property",
              "signature": "displayInIframe?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Optional. Determines whether the dialog box should be displayed within an IFrame. This setting is only applicable in Office Online clients, and is ignored on other platforms."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "height": {
              "kind": "property",
              "signature": "height?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Optional. Defines the width of the dialog as a percentage of the current display. Defaults to 99%. 250px minimum."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "width": {
              "kind": "property",
              "signature": "width?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Optional. Defines the height of the dialog as a percentage of the current display. Defaults to 99%. 150px minimum."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Document": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "getProjectFieldAsync": {
              "kind": "method",
              "signature": "getProjectFieldAsync(fieldId: number, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "fieldId": {
                  "name": "fieldId",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Project level fields."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Get Project field (Ex. ProjectWebAccessURL)."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getResourceFieldAsync": {
              "kind": "method",
              "signature": "getResourceFieldAsync(resourceId: string, fieldId: number, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "resourceId": {
                  "name": "resourceId",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Either a string or value of the Resource Id."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "fieldId": {
                  "name": "fieldId",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Resource Fields."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Get resource field for provided resource Id. (Ex.ResourceName)"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getSelectedResourceAsync": {
              "kind": "method",
              "signature": "getSelectedResourceAsync(options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Get the current selected Resource's Id."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getSelectedTaskAsync": {
              "kind": "method",
              "signature": "getSelectedTaskAsync(options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Get the current selected Task's Id."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getSelectedViewAsync": {
              "kind": "method",
              "signature": "getSelectedViewAsync(options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Get the current selected View Type (Ex. Gantt) and View Name."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getTaskAsync": {
              "kind": "method",
              "signature": "getTaskAsync(taskId: string, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "taskId": {
                  "name": "taskId",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Either a string or value of the Task Id."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Get the Task Name, WSS Task Id, and ResourceNames for given taskId."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getTaskFieldAsync": {
              "kind": "method",
              "signature": "getTaskFieldAsync(taskId: string, fieldId: number, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "taskId": {
                  "name": "taskId",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Either a string or value of the Task Id."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "fieldId": {
                  "name": "fieldId",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Task Fields."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Get task field for provided task Id. (Ex. StartDate)."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getWSSUrlAsync": {
              "kind": "method",
              "signature": "getWSSUrlAsync(options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Get the WSS Url and list name for the Tasks List, the MPP is synced too."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "DocumentMode": {
          "kind": "enum",
          "values": {
            "ReadOnly": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Document in Read Only Mode"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ReadWrite": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Document in Read/Write Mode"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "DocumentSelectionChangedEventArgs": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides information about the document that raised the SelectionChanged event."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "document": {
              "kind": "property",
              "signature": "document: Document;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Document",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a Document object that represents the document that raised the SelectionChanged event."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "type": {
              "kind": "property",
              "signature": "type: EventType;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "EventType",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Get an EventType enumeration value that identifies the kind of event that was raised."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Error": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides specific information about an error that occurred during an asynchronous data operation."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "code": {
              "kind": "property",
              "signature": "code: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the numeric code of the error."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "message": {
              "kind": "property",
              "signature": "message: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the name of the error."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "name": {
              "kind": "property",
              "signature": "name: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets a detailed description of the error."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "EventType": {
          "kind": "enum",
          "values": {
            "ActiveViewChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Occurs when the user changes the current view of the document."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BindingDataChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a binding level data change happens"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "BindingSelectionChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a binding level selection happens"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "DialogEventReceived": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when Dialog has a event, such as dialog closed, dialog navigation failed."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "DialogMessageReceived": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when Dialog sends a message via MessageParent."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "DocumentSelectionChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a document level selection happens"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ItemChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when the active item changes"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "NodeDeleted": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a customXmlPart node was deleted"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "NodeInserted": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a customXmlPart node was inserted"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "NodeReplaced": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a customXmlPart node was replaced"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ResourceSelectionChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a Resource selection happens in Project."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "SettingsChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when settings change in a co-Auth session."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "TaskSelectionChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a Task selection happens in Project."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "ViewSelectionChanged": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Triggers when a View selection happens in Project."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "File": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "closeAsync": {
              "kind": "method",
              "signature": "closeAsync(callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Closes the File."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getSliceAsync": {
              "kind": "method",
              "signature": "getSliceAsync(sliceIndex: number, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "sliceIndex": {
                  "name": "sliceIndex",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The index of the slice to be retrieved"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "number"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the specified slice."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "size": {
              "kind": "property",
              "signature": "size: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "sliceCount": {
              "kind": "property",
              "signature": "sliceCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FileProperties": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "url": {
              "kind": "property",
              "signature": "url: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "File's URL"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "FileType": {
          "kind": "enum",
          "values": {
            "Compressed": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the file as a byte array"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Pdf": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the file in PDF format as a byte array"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Text": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns the file as plain text"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "FilterType": {
          "kind": "enum",
          "values": {
            "All": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns all items"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "OnlyVisible": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns only visible items"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "GoToType": {
          "kind": "enum",
          "values": {
            "Binding": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Goes to a binding object using the specified binding id."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Index": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Goes to the specified index by slide number or enum Office.Index"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "NamedItem": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Goes to a named item using that item's name. In Excel, you can use any structured reference for a named range or table: \"Worksheet2!Table1\""
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Slide": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Goes to a slide using the specified id."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "HostType": {
          "kind": "enum",
          "values": {
            "Access": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Host is Access"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Excel": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Host is Excel"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "OneNote": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Host is OneNote"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Outlook": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Host is Outlook"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "PowerPoint": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Host is PowerPoint"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Project": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Host is Project"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Word": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Host is Word"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "Index": {
          "kind": "enum",
          "values": {
            "First": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Last": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Next": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Previous": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "InitializationReason": {
          "kind": "enum",
          "values": {
            "DocumentOpened": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates if the extension already existed in the document"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Inserted": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Indicates the app was just inserted in the document"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "initialize": {
          "kind": "function",
          "signature": "export function initialize(reason: InitializationReason): void;",
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "reason": {
              "name": "reason",
              "description": [
                {
                  "kind": "text",
                  "text": "Indicates how the app was initialized"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "InitializationReason"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This method is called after the Office API was loaded."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "MatrixBinding": {
          "kind": "interface",
          "extends": "Binding",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "columnCount": {
              "kind": "property",
              "signature": "columnCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "rowCount": {
              "kind": "property",
              "signature": "rowCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "OfficeTheme": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "bodyBackgroundColor": {
              "kind": "property",
              "signature": "bodyBackgroundColor: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "bodyForegroundColor": {
              "kind": "property",
              "signature": "bodyForegroundColor: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "controlBackgroundColor": {
              "kind": "property",
              "signature": "controlBackgroundColor: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "controlForegroundColor": {
              "kind": "property",
              "signature": "controlForegroundColor: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "onReady": {
          "kind": "function",
          "signature": "export function onReady(callback?: (info: { host: HostType, platform: PlatformType }) => any): Promise<{ host: HostType, platform: PlatformType }>;",
          "returnValue": {
            "type": "Promise<{ host: HostType, platform: PlatformType }>",
            "description": [
              {
                "kind": "text",
                "text": "A Promise that contains the host and platform info, once initialization is completed."
              }
            ]
          },
          "parameters": {
            "callback": {
              "name": "callback",
              "description": [
                {
                  "kind": "text",
                  "text": "An optional callback method, that will receive the host and platform info. Alternatively, rather than use a callback, an add-in may simply wait for the Promise returned by the function to resolve."
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "(info: { host: HostType, platform: PlatformType }) => any"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Ensures that the Office JavaScript APIs are ready to be called by the add-in. If the framework hasn't initialized yet, the callback or promise will wait until the Office host is ready to accept API calls. Note that though this API is intended to be used inside an Office add-in, it can also be used outside the add-in. In that case, once Office.js determines that it is running outside of an Office host application, it will call the callback and resolve the promise with \"null\" for both the host and platform."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "PlatformType": {
          "kind": "enum",
          "values": {
            "Android": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Platform is Android"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "iOS": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Platform is iOS"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Mac": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Platform is Mac"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "OfficeOnline": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Platform is Web"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "PC": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Platform is PC"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Universal": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Platform is Winrt"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "ProjectProjectFields": {
          "kind": "enum",
          "values": {
            "CurrencyDigits": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "CurrencySymbol": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "CurrencySymbolPosition": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "DurationUnits": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "GUID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ProjectServerUrl": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ReadOnly": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "VERSION": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "WorkUnits": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "WSSList": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "WSSUrl": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "ProjectResourceFields": {
          "kind": "enum",
          "values": {
            "Accrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ActualCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ActualOvertimeCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ActualOvertimeWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ActualOvertimeWorkProtected": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ActualWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ActualWorkProtected": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaseCalendar": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaselineBudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaselineBudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaselineCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaselineWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Code": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "CostPerUse": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Email": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "End": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag11": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag12": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag13": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag14": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag15": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag16": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag17": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag18": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag19": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag20": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Generic": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Group": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Name": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Notes": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number11": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number12": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number13": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number14": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number15": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number16": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number17": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number18": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number19": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number20": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "OverAllocated": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "OvertimeCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "OvertimeRate": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "OvertimeWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "PercentWorkComplete": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "RegularWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "RemainingCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "RemainingOvertimeCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "RemainingOvertimeWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "RemainingWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ResourceCalendarGUID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ResourceCreationDate": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ResourceGUID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "StandardRate": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text11": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text12": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text13": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text14": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text15": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text16": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text17": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text18": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text19": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text20": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text21": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text22": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text23": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text24": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text25": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text26": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text27": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text28": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text29": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text30": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Units": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "ProjectTaskFields": {
          "kind": "enum",
          "values": {
            "Active": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ActualCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ActualDuration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ActualFinish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ActualOvertimeCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ActualOvertimeWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ActualStart": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ActualWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline10Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline1Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline2Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline3Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline4Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline5Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline6Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline7Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline8Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Baseline9Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaselineBudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaselineBudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaselineCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaselineDuration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaselineFinish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaselineFixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaselineFixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaselineStart": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BaselineWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Basline3Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BudgetCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BudgetFixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BudgetFixedWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "BudgetWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ConstraintDate": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ConstraintType": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Cost9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Critical": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Date9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Deadline": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Duration9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "EarnedValueMethod": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Finish9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "FinishSlack": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "FixedCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "FixedCostAccrual": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag11": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag12": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag13": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag14": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag15": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag16": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag17": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag18": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag19": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag20": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Flag9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "FreeSlack": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "HasRollupSubTasks": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "IsRollup": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Milestone": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Name": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Notes": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number11": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number12": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number13": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number14": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number15": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number16": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number17": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number18": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number19": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number20": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Number9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "OutlineLevel": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Overallocated": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "OvertimeCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "OvertimeWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "PercentComplete": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "PercentWorkComplete": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Predecessors": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "PreleveledFinish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "PreleveledStart": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Priority": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "RegularWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "RemainingCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "RemainingDuration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "RemainingOvertimeCost": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "RemainingWork": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ResourceNames": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ScheduledDuration": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ScheduledFinish": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ScheduledStart": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Start9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "StartSlack": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Status": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "StatusManager": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Successors": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Summary": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "TaskCalendarGUID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "TaskGUID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text1": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text10": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text11": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text12": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text13": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text14": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text15": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text16": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text17": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text18": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text19": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text2": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text20": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text21": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text22": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text23": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text24": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text25": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text26": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text27": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text28": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text29": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text3": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text30": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text4": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text5": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text6": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text7": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text8": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Text9": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "TotalSlack": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Type": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "WBS": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "WBSPREDECESSORS": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "WBSSUCCESSORS": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Work": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "WSSID": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "ProjectViewTypes": {
          "kind": "enum",
          "values": {
            "Calendar": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Gantt": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "NetworkDiagram": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ResourceForm": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ResourceGraph": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ResourceNames": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ResourceSheet": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "ResourceUsage": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "TaskDetails": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "TaskDiagram": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "TaskForm": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "TaskNameForm": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "TaskSheet": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "TaskUsage": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "TeamPlanner": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Timeline": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "select": {
          "kind": "function",
          "signature": "export function select(expression: string, callback?: (result: AsyncResult) => void): Binding;",
          "returnValue": {
            "type": "Binding",
            "description": []
          },
          "parameters": {
            "expression": {
              "name": "expression",
              "description": [
                {
                  "kind": "text",
                  "text": "The object to be retrieved. Example \"bindings#BindingName\", retrieves a binding promise for a binding named 'BindingName'"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "callback": {
              "name": "callback",
              "description": [
                {
                  "kind": "text",
                  "text": "The optional callback method"
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "(result: AsyncResult) => void"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Returns a promise of an object described in the expression. Callback is invoked only if method fails."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "SelectionMode": {
          "kind": "enum",
          "values": {
            "Default": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "None": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Selected": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "Settings": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "addHandlerAsync": {
              "kind": "method",
              "signature": "addHandlerAsync(eventType: EventType, handler: any, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The event type. For settings can be 'settingsChanged'"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "handler": {
                  "name": "handler",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The name of the handler"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds an event handler for the object using the specified event type."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "get": {
              "kind": "method",
              "signature": "get(name: string): any;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "any",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Retrieves the setting with the specified name."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "refreshAsync": {
              "kind": "method",
              "signature": "refreshAsync(callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the latest version of the settings object."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "remove": {
              "kind": "method",
              "signature": "remove(name: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Removes the setting with the specified name."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "removeHandlerAsync": {
              "kind": "method",
              "signature": "removeHandlerAsync(eventType: EventType, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "eventType": {
                  "name": "eventType",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The event type. For settings can be 'settingsChanged'"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventType"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {handler:eventHandler} handler: Indicates a specific handler to be removed, if not specified all handlers are removed asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Removes an event handler for the specified event type."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "saveAsync": {
              "kind": "method",
              "signature": "saveAsync(callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Saves all settings."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "set": {
              "kind": "method",
              "signature": "set(name: string, value: any): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "name": {
                  "name": "name",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "value": {
                  "name": "value",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The value for the setting"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets a value for the setting with the specified name."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Slice": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "data": {
              "kind": "property",
              "signature": "data: any;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "index": {
              "kind": "property",
              "signature": "index: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "size": {
              "kind": "property",
              "signature": "size: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Table": {
          "kind": "enum",
          "values": {
            "All": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Data": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "Headers": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "TableBinding": {
          "kind": "interface",
          "extends": "Binding",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "addColumnsAsync": {
              "kind": "method",
              "signature": "addColumnsAsync(tableData: TableData | any[][], options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "tableData": {
                  "name": "tableData",
                  "description": [
                    {
                      "kind": "text",
                      "text": "A TableData object with the headers and rows"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "TableData | any[][]"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds the specified columns to the table"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "addRowsAsync": {
              "kind": "method",
              "signature": "addRowsAsync(rows: TableData | any[][], options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "rows": {
                  "name": "rows",
                  "description": [
                    {
                      "kind": "text",
                      "text": "A 2D array with the rows to add"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "TableData | any[][]"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds the specified rows to the table"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "clearFormatsAsync": {
              "kind": "method",
              "signature": "clearFormatsAsync(options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Clears formatting on the bound table."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "columnCount": {
              "kind": "property",
              "signature": "columnCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "deleteAllDataValuesAsync": {
              "kind": "method",
              "signature": "deleteAllDataValuesAsync(options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Clears the table"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "getFormatsAsync": {
              "kind": "method",
              "signature": "getFormatsAsync(cellReference?: any, formats?: any[], options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "cellReference": {
                  "name": "cellReference",
                  "description": [
                    {
                      "kind": "text",
                      "text": "An object literal containing name-value pairs that specify the range of cells to get formatting from."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "formats": {
                  "name": "formats",
                  "description": [
                    {
                      "kind": "text",
                      "text": "An array specifying the format properties to get."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any[]"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Gets the formatting on specified items in the table."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "hasHeaders": {
              "kind": "property",
              "signature": "hasHeaders: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "rowCount": {
              "kind": "property",
              "signature": "rowCount: number;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "setFormatsAsync": {
              "kind": "method",
              "signature": "setFormatsAsync(formatsInfo?: any[], options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "formatsInfo": {
                  "name": "formatsInfo",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Array elements are themselves three-element arrays:[target, type, formats] target: The identifier of the item to format. String. type: The kind of item to format. String. formats: An object literal containing a list of property name-value pairs that define the formatting to apply."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any[]"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Sets formatting on specified items and data in the table."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "setTableOptionsAsync": {
              "kind": "method",
              "signature": "setTableOptionsAsync(tableOptions: any, options?: any, callback?: (result: AsyncResult) => void): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "tableOptions": {
                  "name": "tableOptions",
                  "description": [
                    {
                      "kind": "text",
                      "text": "An object literal containing a list of property name-value pairs that define the table options to apply."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "any"
                },
                "callback": {
                  "name": "callback",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The optional callback method"
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "(result: AsyncResult) => void"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Updates table formatting options on the bound table."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "TableData": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__constructor": {
              "kind": "constructor",
              "signature": "constructor(rows: any[][], headers: any[]);",
              "parameters": {
                "rows": {
                  "name": "rows",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any[][]"
                },
                "headers": {
                  "name": "headers",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any[]"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constructs a new instance of the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "TableData"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "Office",
                    "memberName": "TableData"
                  }
                },
                {
                  "kind": "text",
                  "text": " class"
                }
              ],
              "remarks": []
            },
            "headers": {
              "kind": "property",
              "signature": "headers: any[];",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any[]",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "rows": {
              "kind": "property",
              "signature": "rows: any[][];",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "any[][]",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "TextBinding": {
          "kind": "interface",
          "extends": "Binding",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "UI": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "closeContainer": {
              "kind": "method",
              "signature": "closeContainer(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Closes the UI container where the JavaScript is executing."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Supported hosts: Outlook - Minimum requirement set: Mailbox 1.5"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "The behavior of this method is specified by the following:"
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Called from a UI-less command button: No effect. Any dialog opened by displayDialogAsync will remain open."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Called from a taskpane: The taskpane will close. Any dialog opened by displayDialogAsync will also close. If the taskpane supports pinning and was pinned by the user, it will be un-pinned."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "Called from a module extension: No effect."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "displayDialogAsync": {
              "kind": "method",
              "signature": "displayDialogAsync(startAddress: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "startAddress": {
                  "name": "startAddress",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Accepts the initial HTTPS Url that opens in the dialog."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Displays a dialog to show or collect information from the user or to facilitate Web navigation."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "messageParent": {
              "kind": "method",
              "signature": "messageParent(messageObject: any): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "messageObject": {
                  "name": "messageObject",
                  "description": [
                    {
                      "kind": "text",
                      "text": "Accepts a message from the dialog to deliver to the add-in."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "any"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Synchronously delivers a message from the dialog to its parent add-in."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "useShortNamespace": {
          "kind": "function",
          "signature": "export function useShortNamespace(useShortNamespace: boolean): void;",
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "useShortNamespace": {
              "name": "useShortNamespace",
              "description": [
                {
                  "kind": "text",
                  "text": "Indicates if 'true' that the short namespace will be used"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "boolean"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Indicates if the large namespace for objects will be used or not."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "ValueFormat": {
          "kind": "enum",
          "values": {
            "Formatted": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns items with format"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "Unformatted": {
              "kind": "enum value",
              "value": "",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns items without format"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "OfficeExtension": {
      "kind": "namespace",
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "exports": {
        "ClientObject": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "An abstract proxy object that represents an object in an Office document. You create proxy objects from the context (or from other proxy objects), add commands to a queue to act on the object, and then synchronize the proxy object state with the document by calling \"context.sync()\"."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "context": {
              "kind": "property",
              "signature": "context: ClientRequestContext;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ClientRequestContext",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The request context associated with the object"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "isNullObject": {
              "kind": "property",
              "signature": "isNullObject: boolean;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Returns a boolean value for whether the corresponding object is a null object. You must call \"context.sync()\" before reading the isNullObject property."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ClientRequestContext": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "An abstract RequestContext object that facilitates requests to the host Office application. The \"Excel.run\" and \"Word.run\" methods provide a request context."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__constructor": {
              "kind": "constructor",
              "signature": "constructor(url?: string);",
              "parameters": {
                "url": {
                  "name": "url",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constructs a new instance of the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "ClientRequestContext"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "OfficeExtension",
                    "memberName": "ClientRequestContext"
                  }
                },
                {
                  "kind": "text",
                  "text": " class"
                }
              ],
              "remarks": []
            },
            "debugInfo": {
              "kind": "property",
              "signature": "readonly debugInfo: RequestContextDebugInfo;",
              "isOptional": false,
              "isReadOnly": true,
              "isStatic": false,
              "type": "RequestContextDebugInfo",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Debug information"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "load": {
              "kind": "method",
              "signature": "load(object: ClientObject, option?: string | string[] | LoadOption): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "object": {
                  "name": "object",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientObject"
                },
                "option": {
                  "name": "option",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "string | string[] | LoadOption"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to load the specified properties of the object. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "loadRecursive": {
              "kind": "method",
              "signature": "loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "object": {
                  "name": "object",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The object to be loaded."
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientObject"
                },
                "options": {
                  "name": "options",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The key-value pairing of load options for the types, such as { \"Workbook\": \"worksheets,tables\", \"Worksheet\": \"tables\", \"Tables\": \"name\" }"
                    }
                  ],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "{ [typeName: string]: string | string[] | LoadOption }"
                },
                "maxDepth": {
                  "name": "maxDepth",
                  "description": [
                    {
                      "kind": "text",
                      "text": "The maximum recursive depth."
                    }
                  ],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "number"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Queues up a command to recursively load the specified properties of the object and its navigation properties. You must call \"context.sync()\" before reading the properties."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "requestHeaders": {
              "kind": "property",
              "signature": "requestHeaders:",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "{ [name: string]: string }",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Request headers"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "sync": {
              "kind": "method",
              "signature": "sync<T>(passThroughValue?: T): Promise<T>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Promise<T>",
                "description": []
              },
              "parameters": {
                "passThroughValue": {
                  "name": "passThroughValue",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "T"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Synchronizes the state between JavaScript proxy objects and the Office document, by executing instructions queued on the request context and retrieving properties of loaded Office objects for use in your code.�This method returns a promise, which is resolved when the synchronization is complete."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "trace": {
              "kind": "method",
              "signature": "trace(message: string): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "message": {
                  "name": "message",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Adds a trace message to the queue. If the promise returned by \"context.sync()\" is rejected due to an error, this adds a \".traceMessages\" array to the OfficeExtension.Error object, containing all trace messages that were executed. These messages can help you monitor the program execution sequence and detect the cause of the error."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "trackedObjects": {
              "kind": "property",
              "signature": "trackedObjects: TrackedObjects;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "TrackedObjects",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Collection of objects that are tracked for automatic adjustments based on surrounding changes in the document."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ClientResult": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [
            "T"
          ],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Contains the result for methods that return primitive types. The object's value property is retrieved from the document after \"context.sync()\" is invoked."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "value": {
              "kind": "property",
              "signature": "value: T;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "T",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The value of the result that is retrieved from the document after \"context.sync()\" is invoked."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "DebugInfo": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "code": {
              "kind": "property",
              "signature": "code: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Error code string, such as \"InvalidArgument\"."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "errorLocation": {
              "kind": "property",
              "signature": "errorLocation?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The object type and property or method name (or similar information), if available."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "fullStatements": {
              "kind": "property",
              "signature": "fullStatements?: string[];",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string[]",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "All statements in the batch request (including any potentially-sensitive information that was specified in the request), if available."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "These statements may not match the code exactly as written, but will be a close approximation."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "innerError": {
              "kind": "property",
              "signature": "innerError?: DebugInfo | string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "DebugInfo | string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Inner error, if applicable."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "message": {
              "kind": "property",
              "signature": "message: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The error message passed through from the host Office application."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "statements": {
              "kind": "property",
              "signature": "statements?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The statement that caused the error, if available."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "This statement will never contain any potentially-sensitive data and may not match the code exactly as written, but will be a close approximation."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "surroundingStatements": {
              "kind": "property",
              "signature": "surroundingStatements?: string[];",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string[]",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The statements that closely precede and follow the statement that caused the error, if available."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "These statements will never contain any potentially-sensitive data and may not match the code exactly as written, but will be a close approximation."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "EmbeddedOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "container": {
              "kind": "property",
              "signature": "container?: HTMLElement;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "HTMLElement",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "height": {
              "kind": "property",
              "signature": "height?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "id": {
              "kind": "property",
              "signature": "id?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "sessionKey": {
              "kind": "property",
              "signature": "sessionKey?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "timeoutInMilliseconds": {
              "kind": "property",
              "signature": "timeoutInMilliseconds?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "width": {
              "kind": "property",
              "signature": "width?: string;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "EmbeddedSession": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__constructor": {
              "kind": "constructor",
              "signature": "constructor(url: string, options?: EmbeddedOptions);",
              "parameters": {
                "url": {
                  "name": "url",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "options": {
                  "name": "options",
                  "description": [],
                  "isOptional": true,
                  "isSpread": false,
                  "type": "EmbeddedOptions"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constructs a new instance of the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "EmbeddedSession"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "OfficeExtension",
                    "memberName": "EmbeddedSession"
                  }
                },
                {
                  "kind": "text",
                  "text": " class"
                }
              ],
              "remarks": []
            },
            "init": {
              "kind": "method",
              "signature": "public init(): Promise<any>;",
              "accessModifier": "public",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "Promise<any>",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "Error": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The error object returned by \"context.sync()\", if a promise is rejected due to an error while processing the request."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "code": {
              "kind": "property",
              "signature": "code: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Error code string, such as \"InvalidArgument\"."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "debugInfo": {
              "kind": "property",
              "signature": "debugInfo: DebugInfo;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "DebugInfo",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Debug info (useful for detailed logging of the error, i.e., via JSON.stringify(...))."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "innerError": {
              "kind": "property",
              "signature": "innerError: Error;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Error",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Inner error, if applicable."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "message": {
              "kind": "property",
              "signature": "message: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The error message passed through from the host Office application."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "name": {
              "kind": "property",
              "signature": "name: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Error name: \"OfficeExtension.Error\"."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "stack": {
              "kind": "property",
              "signature": "stack: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Stack trace, if applicable."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "traceMessages": {
              "kind": "property",
              "signature": "traceMessages: Array<string>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "Array<string>",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Trace messages (if any) that were added via a \"context.trace()\" invocation before calling \"context.sync()\". If there was an error, this contains all trace messages that were executed before the error occurred. These messages can help you monitor the program execution sequence and detect the case of the error."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "ErrorCodes": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "accessDenied": {
              "kind": "property",
              "signature": "public static accessDenied: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "activityLimitReached": {
              "kind": "property",
              "signature": "public static activityLimitReached: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "apiNotFound": {
              "kind": "property",
              "signature": "public static apiNotFound: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "cannotRegisterEvent": {
              "kind": "property",
              "signature": "public static cannotRegisterEvent: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "connectionFailure": {
              "kind": "property",
              "signature": "public static connectionFailure: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "generalException": {
              "kind": "property",
              "signature": "public static generalException: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "invalidArgument": {
              "kind": "property",
              "signature": "public static invalidArgument: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "invalidObjectPath": {
              "kind": "property",
              "signature": "public static invalidObjectPath: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "invalidRequestContext": {
              "kind": "property",
              "signature": "public static invalidRequestContext: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "propertyNotLoaded": {
              "kind": "property",
              "signature": "public static propertyNotLoaded: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "runMustReturnPromise": {
              "kind": "property",
              "signature": "public static runMustReturnPromise: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "valueNotLoaded": {
              "kind": "property",
              "signature": "public static valueNotLoaded: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": true,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "EventHandlerResult": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [
            "T"
          ],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__constructor": {
              "kind": "constructor",
              "signature": "constructor(context: ClientRequestContext, handlers: EventHandlers<T>, handler: (args: T) => Promise<any>);",
              "parameters": {
                "context": {
                  "name": "context",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientRequestContext"
                },
                "handlers": {
                  "name": "handlers",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventHandlers<T>"
                },
                "handler": {
                  "name": "handler",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "(args: T) => Promise<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constructs a new instance of the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "EventHandlerResult"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "OfficeExtension",
                    "memberName": "EventHandlerResult"
                  }
                },
                {
                  "kind": "text",
                  "text": " class"
                }
              ],
              "remarks": []
            },
            "context": {
              "kind": "property",
              "signature": "context: ClientRequestContext;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "ClientRequestContext",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The request context associated with the object"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "remove": {
              "kind": "method",
              "signature": "remove(): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {},
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "EventHandlers": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [
            "T"
          ],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "__constructor": {
              "kind": "constructor",
              "signature": "constructor(context: ClientRequestContext, parentObject: ClientObject, name: string, eventInfo: EventInfo<T>);",
              "parameters": {
                "context": {
                  "name": "context",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientRequestContext"
                },
                "parentObject": {
                  "name": "parentObject",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientObject"
                },
                "name": {
                  "name": "name",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "string"
                },
                "eventInfo": {
                  "name": "eventInfo",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "EventInfo<T>"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Constructs a new instance of the "
                },
                {
                  "kind": "api-link",
                  "elements": [
                    {
                      "kind": "text",
                      "text": "EventHandlers"
                    }
                  ],
                  "target": {
                    "scopeName": "",
                    "packageName": "office",
                    "exportName": "OfficeExtension",
                    "memberName": "EventHandlers"
                  }
                },
                {
                  "kind": "text",
                  "text": " class"
                }
              ],
              "remarks": []
            },
            "add": {
              "kind": "method",
              "signature": "add(handler: (args: T) => Promise<any>): EventHandlerResult<T>;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "EventHandlerResult<T>",
                "description": []
              },
              "parameters": {
                "handler": {
                  "name": "handler",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "(args: T) => Promise<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "remove": {
              "kind": "method",
              "signature": "remove(handler: (args: T) => Promise<any>): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "handler": {
                  "name": "handler",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "(args: T) => Promise<any>"
                }
              },
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "EventInfo": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [
            "T"
          ],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "eventArgsTransformFunc": {
              "kind": "property",
              "signature": "eventArgsTransformFunc: (args: any) => Promise<T>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "(args: any) => Promise<T>",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "registerFunc": {
              "kind": "property",
              "signature": "registerFunc: (callback: (args: any) => void) => Promise<any>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "(callback: (args: any) => void) => Promise<any>",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "unregisterFunc": {
              "kind": "property",
              "signature": "unregisterFunc: (callback: (args: any) => void) => Promise<any>;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "(callback: (args: any) => void) => Promise<any>",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "LoadOption": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "expand": {
              "kind": "property",
              "signature": "expand?: string | string[];",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string | string[]",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "select": {
              "kind": "property",
              "signature": "select?: string | string[];",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string | string[]",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "skip": {
              "kind": "property",
              "signature": "skip?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            },
            "top": {
              "kind": "property",
              "signature": "top?: number;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "number",
              "deprecatedMessage": [],
              "summary": [],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "RequestContextDebugInfo": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Contains debug information about the request context."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "pendingStatements": {
              "kind": "property",
              "signature": "pendingStatements: string[];",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string[]",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "The statements to be executed in the host."
                },
                {
                  "kind": "paragraph"
                },
                {
                  "kind": "text",
                  "text": "These statements may not match the code exactly as written, but will be a close approximation."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "RequestUrlAndHeaderInfo": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Request URL and headers"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "headers": {
              "kind": "property",
              "signature": "headers?:",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "{\n            [name: string]: string;\n        }",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Request headers"
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "url": {
              "kind": "property",
              "signature": "url: string;",
              "isOptional": false,
              "isReadOnly": false,
              "isStatic": false,
              "type": "string",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Request URL"
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "TrackedObjects": {
          "kind": "class",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Collection of tracked objects, contained within a request context. See \"context.trackedObjects\" for more information."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "members": {
            "add": {
              "kind": "method",
              "signature": "add(object: ClientObject): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "object": {
                  "name": "object",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientObject"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Track a new object for automatic adjustment based on surrounding changes in the document. Only some object types require this. If you are using an object across \".sync\" calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created."
                }
              ],
              "remarks": [],
              "isBeta": false
            },
            "remove": {
              "kind": "method",
              "signature": "remove(object: ClientObject): void;",
              "accessModifier": "",
              "isOptional": false,
              "isStatic": false,
              "returnValue": {
                "type": "void",
                "description": []
              },
              "parameters": {
                "object": {
                  "name": "object",
                  "description": [],
                  "isOptional": false,
                  "isSpread": false,
                  "type": "ClientObject"
                }
              },
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Release the memory associated with an object that was previously added to this collection. Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You will need to call \"context.sync()\" before the memory release takes effect."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        },
        "UpdateOptions": {
          "kind": "interface",
          "extends": "",
          "implements": "",
          "typeParameters": [],
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "members": {
            "throwOnReadOnly": {
              "kind": "property",
              "signature": "throwOnReadOnly?: boolean;",
              "isOptional": true,
              "isReadOnly": false,
              "isStatic": false,
              "type": "boolean",
              "deprecatedMessage": [],
              "summary": [
                {
                  "kind": "text",
                  "text": "Throw an error if the passed-in property list includes read-only properties (default = true)."
                }
              ],
              "remarks": [],
              "isBeta": false
            }
          }
        }
      }
    }
  }
}
