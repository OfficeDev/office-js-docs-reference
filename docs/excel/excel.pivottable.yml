### YamlMime:UniversalReference
items:
  - uid: excel.Excel.PivotTable
    summary: |-
      Represents an Excel PivotTable.

      \[ [Api set: ExcelApi 1.3](http://bing.com) \]
    name: Excel.PivotTable
    fullName: excel.Excel.PivotTable
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.PivotTable.id
      - excel.Excel.PivotTable.load
      - excel.Excel.PivotTable.name
      - excel.Excel.PivotTable.refresh
      - excel.Excel.PivotTable.set
      - excel.Excel.PivotTable.toJSON
      - excel.Excel.PivotTable.worksheet
  - uid: excel.Excel.PivotTable.id
    summary: |-
      Id of the PivotTable.

      \[ [Api set: ExcelApi 1.5](http://bing.com) \]
    name: id
    fullName: excel.Excel.PivotTable.id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.PivotTable.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: excel.Excel.PivotTable.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[] | OfficeExtension.LoadOption): Excel.PivotTable;'
      return:
        type:
          - Excel.PivotTable
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'string | string[] | OfficeExtension.LoadOption'
  - uid: excel.Excel.PivotTable.name
    summary: |-
      Name of the PivotTable.

      \[ [Api set: ExcelApi 1.3](http://bing.com) \]
    name: name
    fullName: excel.Excel.PivotTable.name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.PivotTable.refresh
    summary: |-
      Refreshes the PivotTable.

      \[ [Api set: ExcelApi 1.3](http://bing.com) \]
    name: refresh()
    fullName: excel.Excel.PivotTable.refresh
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refresh(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.PivotTable.set
    summary: 'Sets multiple properties on the object at the same time, based on JSON input.'
    name: 'set(properties, options)'
    fullName: excel.Excel.PivotTable.set
    langs:
      - typeScript
    type: method
    syntax:
      content: "set(properties: Interfaces.PivotTableUpdateData, options?: {\r\n            throwOnReadOnly?: boolean;\r\n        }): void;"
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Interfaces.PivotTableUpdateData
        - id: options
          description: ''
          type:
            - "{\r\n            /**\r\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\r\n             */\r\n            throwOnReadOnly?: boolean;\r\n        }"
  - uid: excel.Excel.PivotTable.toJSON
    name: toJSON()
    fullName: excel.Excel.PivotTable.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON:'
      return:
        type:
          - "{\r\n            \"id\": string;\r\n            \"name\": string;\r\n        }"
        description: ''
  - uid: excel.Excel.PivotTable.worksheet
    summary: |-
      The worksheet containing the current PivotTable. Read-only.

      \[ [Api set: ExcelApi 1.3](http://bing.com) \]
    name: worksheet
    fullName: excel.Excel.PivotTable.worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - Excel.Worksheet
