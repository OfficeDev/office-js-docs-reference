### YamlMime:UniversalReference
items:
  - uid: outlook.Office.InternetHeaders
    summary: >-
      The InternetHeaders object represents properties that are preserved after the item leaves Exchange and converted
      to a MIME message. These properties are stored as x-headers in the MIME message.


      InternetHeaders are stored as key/value pairs on a per-item basis.


      \[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[ Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[ Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose
      or read</td></tr></table>
    isPreview: true
    name: Office.InternetHeaders
    fullName: outlook.Office.InternetHeaders
    langs:
      - typeScript
    type: interface
    package: outlook
    children:
      - outlook.Office.InternetHeaders.getAsync
      - outlook.Office.InternetHeaders.removeAsync
      - outlook.Office.InternetHeaders.setAsync
  - uid: outlook.Office.InternetHeaders.getAsync
    summary: >-
      Given an array of internet header names, this method returns a dictionary containing those internet headers and
      their values. If the add-in requests an x-header that is not available, that x-header will not be returned in the
      results.


      \[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[ Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[ Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose
      or read</td></tr></table>


      In addition to this signature, this method also has the following signature:


      `getAsync(names: string[], callback: (result: AsyncResult<Office.InternetHeaders>) => void): void;`

      #### Examples


      ```javascript

      Office.context.mailbox.item.internetHeaders.getAsync(["header1", "header2"], callback); 


      function callback(asyncResult) { 
          var dictionary = asyncResult.value; 
          var header1_value = dictionary["header1"]; 
      }

      ```
    isPreview: true
    name: 'getAsync(names, options, callback)'
    fullName: outlook.Office.InternetHeaders.getAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getAsync(names: string[], options?: Office.AsyncContextOptions, callback?: (result:
        AsyncResult<Office.InternetHeaders>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: names
          description: The names of the internet headers to be returned.
          type:
            - 'string[]'
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties: asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter, asyncResult, which is an Office.AsyncResult object.
          type:
            - '(result: AsyncResult<Office.InternetHeaders>) => void'
  - uid: outlook.Office.InternetHeaders.removeAsync
    summary: >-
      Given an array of internet header names, this method removes the specified headers from the internet header
      collection.


      \[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[ Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


      <tr><td>[ Applicable Outlook
      mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose</td></tr></table>


      In addition to this signature, this method also has the following signature:


      `removeAsync(names: string[], callback: (result: AsyncResult<Office.Body>) => void): void;`

      #### Examples


      ```javascript

      Office.context.mailbox.item.internetHeaders.removeAsync(["header1", "header2"]);

      ```
    isPreview: true
    name: 'removeAsync(names, options, callback)'
    fullName: outlook.Office.InternetHeaders.removeAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        removeAsync(names: string[], options?: Office.AsyncContextOptions, callback?: (result:
        AsyncResult<Office.InternetHeaders>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: names
          description: The names of the internet headers to be removed.
          type:
            - 'string[]'
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties: asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter, asyncResult, which is an Office.AsyncResult object.
          type:
            - '(result: AsyncResult<Office.InternetHeaders>) => void'
  - uid: outlook.Office.InternetHeaders.setAsync
    summary: >-
      Sets the specified internet headers to the specified values.


      The setAsync method creates a new header if the specified header does not already exist; otherwise, the existing
      value is replaced with the new value.


      \[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[ Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


      <tr><td>[ Applicable Outlook
      mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose</td></tr>


      In addition to this signature, this method also has the following signatures:


      `setAsync(headers: string, callback: (result: AsyncResult<void>) => void): void;`

      #### Examples


      ```javascript

      Office.context.mailbox.item.internetHeaders.setAsync({"header1": "value1", "header2": "value2"});

      ```
    isPreview: true
    name: 'setAsync(headers, options, callback)'
    fullName: outlook.Office.InternetHeaders.setAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        setAsync(headers: Object, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void):
        void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: headers
          description: >-
            The names and corresponding values of the headers to be set. Should be a dictionary object with keys being
            the names of the internet headers and values being the values of the internet headers.
          type:
            - Object
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type Office.AsyncResult. Any errors encountered will be provided in the asyncResult.error
            property.
          type:
            - '(result: AsyncResult<void>) => void'
