### YamlMime:UniversalReference
items:
  - uid: outlook.Office.Item
    summary: >-
      The item namespace is used to access the currently selected message, meeting request, or appointment. You can
      determine the type of the item by using the `itemType` property.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>Restricted</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>
    name: Office.Item
    fullName: outlook.Office.Item
    langs:
      - typeScript
    type: interface
    package: outlook
    children:
      - outlook.Office.Item.addHandlerAsync
      - outlook.Office.Item.body
      - outlook.Office.Item.dateTimeCreated
      - outlook.Office.Item.dateTimeModifed
      - outlook.Office.Item.itemType
      - outlook.Office.Item.loadCustomPropertiesAsync
      - outlook.Office.Item.notificationMessages
      - outlook.Office.Item.recurrence
      - outlook.Office.Item.removeHandlerAsync
      - outlook.Office.Item.seriesId
  - uid: outlook.Office.Item.addHandlerAsync
    summary: >-
      Adds an event handler for a supported event.


      Currently the only supported event type is Office.EventType.RecurrencePatternChanged, which is invoked when the
      user changes the recurrence pattern of a series.


      \[ [API set: Mailbox Preview](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>


      In addition to this signature, the method also has the following signature:


      `addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: AsyncResult) => void): void;`
    isPreview: true
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: outlook.Office.Item.addHandlerAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addHandlerAsync(eventType: Office.EventType, handler: any, options?: any, callback?: (result: AsyncResult) =>
        void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: The event that should invoke the handler.
          type:
            - Office.EventType
        - id: handler
          description: >-
            The function to handle the event. The function must accept a single parameter, which is an object literal.
            The type property on the parameter will match the eventType parameter passed to addHandlerAsync.
          type:
            - any
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - any
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter, asyncResult, which is an AsyncResult object.
          type:
            - '(result: AsyncResult) => void'
  - uid: outlook.Office.Item.body
    summary: |-
      Gets an object that provides methods for manipulating the body of an item.

      \[ [API set: Mailbox 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>
    name: body
    fullName: outlook.Office.Item.body
    langs:
      - typeScript
    type: property
    syntax:
      content: 'body: Office.Body;'
      return:
        type:
          - outlook.Office.Body
  - uid: outlook.Office.Item.dateTimeCreated
    summary: |-
      Gets the date and time that an item was created. Read mode only.

      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook
      mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Read</td></tr></table>
    name: dateTimeCreated
    fullName: outlook.Office.Item.dateTimeCreated
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dateTimeCreated: Date;'
      return:
        type:
          - Date
  - uid: outlook.Office.Item.dateTimeModifed
    summary: |-
      Gets the date and time that an item was last modified. Read mode only.

      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook
      mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Read</td></tr></table>


      Note: This member is not supported in Outlook for iOS or Outlook for Android.
    name: dateTimeModifed
    fullName: outlook.Office.Item.dateTimeModifed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dateTimeModifed: Date;'
      return:
        type:
          - Date
  - uid: outlook.Office.Item.itemType
    summary: >-
      Gets the type of item that an instance represents.


      The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance
      is a message or an appointment.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>
    name: itemType
    fullName: outlook.Office.Item.itemType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemType: Office.MailboxEnums.ItemType;'
      return:
        type:
          - outlook.Office.MailboxEnums.ItemType
  - uid: outlook.Office.Item.loadCustomPropertiesAsync
    summary: >-
      Asynchronously loads custom properties for this add-in on the selected item.


      Custom properties are stored as key/value pairs on a per-app, per-item basis. This method returns a
      CustomProperties object in the callback, which provides methods to access the custom properties specific to the
      current item and the current add-in. Custom properties are not encrypted on the item, so this should not be used
      as secure storage.


      The custom properties are provided as a CustomProperties object in the asyncResult.value property. This object can
      be used to get, set, and remove custom properties from the item and save changes to the custom property set back
      to the server.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>


      #### Examples


      ```javascript

      // The following example shows how to use the loadCustomPropertiesAsync method

      // to asynchronously load custom properties that are specific to the current item.

      // The example also shows how to use the saveAsync method to save these properties

      // back to the server. After loading the custom properties, the example uses the

      // get method to read the custom property myProp, the set method to write the

      // custom property otherProp, and then finally calls the saveAsync method to save

      // the custom properties.

      Office.initialize = function () {
          // Checks for the DOM to load using the jQuery ready function.
          $(document).ready(function () {
              // After the DOM is loaded, add-in-specific code can run.
              var mailbox = Office.context.mailbox;
              mailbox.item.loadCustomPropertiesAsync(customPropsCallback);
          });
      }

      function customPropsCallback(asyncResult) {
          var customProps = asyncResult.value;
          var myProp = customProps.get("myProp");

          customProps.set("otherProp", "value");
          customProps.saveAsync(saveCallback);
      }


      function saveCallback(asyncResult) {

      }

      ```
    name: 'loadCustomPropertiesAsync(callback, userContext)'
    fullName: outlook.Office.Item.loadCustomPropertiesAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadCustomPropertiesAsync(callback: (result: AsyncResult) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: >-
            When the method completes, the function passed in the callback parameter is called with a single parameter
            of type AsyncResult.
          type:
            - '(result: AsyncResult) => void'
        - id: userContext
          description: >-
            Optional. Developers can provide any object they wish to access in the callback function. This object can be
            accessed by the asyncResult.asyncContext property in the callback function.
          type:
            - any
  - uid: outlook.Office.Item.notificationMessages
    summary: |-
      Gets the notification messages for an item.

      \[ [API set: Mailbox 1.3](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>
    name: notificationMessages
    fullName: outlook.Office.Item.notificationMessages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'notificationMessages: Office.NotificationMessages;'
      return:
        type:
          - outlook.Office.NotificationMessages
  - uid: outlook.Office.Item.recurrence
    summary: >-
      Gets or sets the recurrence pattern of an appointment. Gets the recurrence pattern of a meeting request. Read and
      compose modes for appointment items. Read mode for meeting request items.


      The recurrence property returns a recurrence object for recurring appointments or meetings requests if an item is
      a series or an instance in a series. null is returned for single appointments and meeting requests of single
      appointments. undefined is returned for messages that are not meeting requests.


      Note: Meeting requests have an itemClass value of IPM.Schedule.Meeting.Request.


      Note: If the recurrence object is null, this indicates that the object is a single appointment or a meeting
      request of a single appointment and NOT a part of a series.


      \[ [API set: Mailbox Preview](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>
    isPreview: true
    name: recurrence
    fullName: outlook.Office.Item.recurrence
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrence: Office.Recurrence;'
      return:
        type:
          - outlook.Office.Recurrence
  - uid: outlook.Office.Item.removeHandlerAsync
    summary: >-
      Removes an event handler for a supported event.


      Currently the only supported event type is Office.EventType.RecurrencePatternChanged, which is invoked when the
      user changes the recurrence pattern of a series.


      \[ [API set: Mailbox Preview](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>


      In addition to this signature, the method also has the following signature:


      `removeHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: AsyncResult) => void): void;`
    isPreview: true
    name: 'removeHandlerAsync(eventType, handler, options, callback)'
    fullName: outlook.Office.Item.removeHandlerAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        removeHandlerAsync(eventType: Office.EventType, handler: any, options?: any, callback?: (result: AsyncResult) =>
        void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: The event that should invoke the handler.
          type:
            - Office.EventType
        - id: handler
          description: >-
            The function to handle the event. The function must accept a single parameter, which is an object literal.
            The type property on the parameter will match the eventType parameter passed to removeHandlerAsync.
          type:
            - any
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - any
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter, asyncResult, which is an AsyncResult object.
          type:
            - '(result: AsyncResult) => void'
  - uid: outlook.Office.Item.seriesId
    summary: >-
      Gets the id of the series that an instance belongs to.


      In OWA and Outlook, the seriesId returns the Exchange Web Services (EWS) ID of the parent (series) item that this
      item belongs to. However, in iOS and Android, the seriesId returns the REST ID of the parent item.


      Note: The identifier returned by the seriesId property is the same as the Exchange Web Services item identifier.
      The seriesId property is not identical to the Outlook IDs used by the Outlook REST API. Before making REST API
      calls using this value, it should be converted using Office.context.mailbox.convertToRestId. For more details, see
      [Use the Outlook REST APIs from an Outlook add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)<!--
      -->.


      The seriesId property returns null for items that do not have parent items such as single appointments, series
      items, or meeting requests and returns undefined for any other items that are not meeting requests.


      \[ [API set: Mailbox Preview](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>
    isPreview: true
    name: seriesId
    fullName: outlook.Office.Item.seriesId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'seriesId: string;'
      return:
        type:
          - string
