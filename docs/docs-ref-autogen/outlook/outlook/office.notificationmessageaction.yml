### YamlMime:TSType
name: Office.NotificationMessageAction
uid: 'outlook!Office.NotificationMessageAction:interface'
package: outlook!
fullName: Office.NotificationMessageAction
summary: >-
  The definition of the action for a notification message.


  \[ [API set: Mailbox
  Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)
  \]
remarks: >-
  **[Minimum permission
  level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
  -->**: `ReadItem`


  **[Applicable Outlook
  mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
  -->**: Compose
isPreview: true
isDeprecated: false
type: interface
properties:
  - name: actionText
    uid: 'outlook!Office.NotificationMessageAction#actionText:member'
    package: outlook!
    fullName: actionText
    summary: The text of the action link.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'actionText: string;'
      return:
        type: string
  - name: actionType
    uid: 'outlook!Office.NotificationMessageAction#actionType:member'
    package: outlook!
    fullName: actionType
    summary: >-
      The type of action to be performed. `ActionType.ShowTaskPane` is the only
      supported action.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'actionType: string | MailboxEnums.ActionType;'
      return:
        type: 'string | <xref uid="outlook!Office.MailboxEnums.ActionType:enum" />'
  - name: commandId
    uid: 'outlook!Office.NotificationMessageAction#commandId:member'
    package: outlook!
    fullName: commandId
    summary: The button defined in the manifest based on the item type.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'commandId: string;'
      return:
        type: string
  - name: contextData
    uid: 'outlook!Office.NotificationMessageAction#contextData:member'
    package: outlook!
    fullName: contextData
    summary: Any JSON data the button needs to pass on.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'contextData: any;'
      return:
        type: any
