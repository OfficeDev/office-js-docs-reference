### YamlMime:TSType
name: Office.DecryptedMessageAttachment
uid: outlook!Office.DecryptedMessageAttachment:interface
package: outlook!
fullName: Office.DecryptedMessageAttachment
summary: Represents an attachment in a decrypted message.
remarks: >-
  \[ [API set: Mailbox
  preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets)
  \]


  **[Minimum permission
  level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
  -->**: **read/write item**


  **[Applicable Outlook
  mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
  -->**: Message Read


  To learn how to develop an encryption add-in in Outlook, see [Create an
  encryption Outlook
  add-in](https://learn.microsoft.com/office/dev/add-ins/outlook/encryption-decryption)<!--
  -->.


  #### Examples


  ```TypeScript

  // This sample handles the OnMessageRead event to decrypt the body and
  attachments of a message.

  function onMessageReadHandler(event) {
      // Your code to decrypt the contents of a message would appear here.
      ...

      // Use the results from your decryption process to display the decrypted contents of the message body and attachments.
      const decryptedBodyContent = "<p>Please find attached the recent report and its supporting documentation.</p>";
      const decryptedBody = {
          coercionType: Office.CoercionType.Html,
          content: decryptedBodyContent
      };

      // Decrypted content and properties of a file attachment.
      const decryptedPdfFile = "JVBERi0xLjQKJeLjz9MKNCAwIG9i...";
      const pdfFileName = "Fabrikam_Report_202509";

      // Decrypted content and properties of a mail item.
      const decryptedEmailFile = "VGhpcyBpcyBhIHRleHQgZmlsZS4=...";
      const emailFileName = "Fabrikam_Report_202508.eml";

      // Decrypted properties of a cloud attachment.
      const cloudFilePath = "https://contosostorage.com/reports/weekly_forecast.xlsx";
      const cloudFileName = "weekly_forecast.xlsx";

      // Decrypted content and properties of an inline image.
      const decryptedImageFile = "iVBORw0KGgoAAAANSUhEUgAA...";
      const imageFileName = "banner.png";
      const imageContentId = "image001.png@01DC1DD9.1A4AA300";

      const decryptedAttachments = [
          {
              attachmentType: Office.MailboxEnums.AttachmentType.File,
              content: decryptedPdfFile,
              isInline: false,
              name: pdfFileName
          },
          {
              attachmentType: Office.MailboxEnums.AttachmentType.Item,
              content: decryptedEmailFile,
              isInline: false,
              name: emailFileName
          },
          {
              attachmentType: Office.MailboxEnums.AttachmentType.Cloud,
              isInline: false,
              name: cloudFileName,
              path: cloudFilePath
          },
          {
              attachmentType: Office.MailboxEnums.AttachmentType.File,
              content: decryptedImageFile,
              contentId: imageContentId,
              isInline: true,
              name: imageFileName
          }
      ];

      event.completed(
          {
              allowEvent: true,
              emailBody: decryptedBody,
              attachments: decryptedAttachments,
              contextData: { messageType: "ReplyFromDecryptedMessage" }
          }
      );
  }

  ```

isPreview: true
isDeprecated: false
type: interface
properties:
  - name: attachmentType
    uid: outlook!Office.DecryptedMessageAttachment#attachmentType:member
    package: outlook!
    fullName: attachmentType
    summary: Specifies the type of attachment.
    remarks: >-
      \[ [API set: Mailbox
      preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets)
      \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Message Read

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'attachmentType: MailboxEnums.AttachmentType;'
      return:
        type: <xref uid="outlook!Office.MailboxEnums.AttachmentType:enum" />
  - name: content
    uid: outlook!Office.DecryptedMessageAttachment#content:member
    package: outlook!
    fullName: content
    summary: Specifies the Base64-encoded content of the attachment.
    remarks: >-
      \[ [API set: Mailbox
      preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets)
      \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Message Read


      **Important**: The `content` property isn't supported by attachments
      of type `MailboxEnums.AttachmentType.Cloud`<!-- -->.

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'content: string;'
      return:
        type: string
  - name: contentId
    uid: outlook!Office.DecryptedMessageAttachment#contentId:member
    package: outlook!
    fullName: contentId
    summary: >-
      Specifies the content identifier of an inline attachment.


      The `contentId` property must be specified if `isInline` is set to
      `true`<!-- -->.
    remarks: >-
      \[ [API set: Mailbox
      preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets)
      \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Message Read


      **Important**: When images are added to a message as inline
      attachments, they're automatically assigned a content ID. In the body of a
      message, the content ID of an inline attachment is specified in the `src`
      attribute of the `<img>` element (for example, `<img width=96 height=96
      id="Picture_1" src="cid:image001.png@01DC1E6F.FC7C7410">`<!-- -->). To
      easily identify and provide these inline attachments during decryption, we
      recommend saving the content IDs of inline attachments to the message
      header during encryption. Call
      `Office.context.mailbox.item.getAttachmentsAsync` to get the content ID of
      an inline attachment. Then, call
      `Office.context.mailbox.item.internetHeaders.setAsync` to save the ID to
      the header of the message.

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'contentId?: string;'
      return:
        type: string
  - name: isInline
    uid: outlook!Office.DecryptedMessageAttachment#isInline:member
    package: outlook!
    fullName: isInline
    summary: >-
      If true, specifies that the decrypted attachment appears as an image in
      the body of the message instead of in the attachment list. If the
      `isInline` property isn't specified, its value is set to false.
    remarks: >-
      \[ [API set: Mailbox
      preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets)
      \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Message Read

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'isInline?: boolean;'
      return:
        type: boolean
  - name: name
    uid: outlook!Office.DecryptedMessageAttachment#name:member
    package: outlook!
    fullName: name
    summary: Specifies the name of the attachment.
    remarks: >-
      \[ [API set: Mailbox
      preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets)
      \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Message Read

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'name: string;'
      return:
        type: string
  - name: path
    uid: outlook!Office.DecryptedMessageAttachment#path:member
    package: outlook!
    fullName: path
    summary: >-
      Specifies the URL reference path of the attachment if its type is
      `MailboxEnums.AttachmentType.Cloud`<!-- -->. The `path` property must be
      specified for attachments of type `MailboxEnums.AttachmentType.Cloud`<!--
      -->.
    remarks: >-
      \[ [API set: Mailbox
      preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets)
      \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Message Read

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'path?: string;'
      return:
        type: string
