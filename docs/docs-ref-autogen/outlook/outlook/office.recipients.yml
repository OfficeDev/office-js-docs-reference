### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.Recipients:interface'
    summary: '\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]'
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose
    name: Office.Recipients
    fullName: Office.Recipients
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.Recipients#addAsync:member(1)'
      - 'outlook!Office.Recipients#addAsync:member(2)'
      - 'outlook!Office.Recipients#getAsync:member(1)'
      - 'outlook!Office.Recipients#getAsync:member(2)'
      - 'outlook!Office.Recipients#setAsync:member(1)'
      - 'outlook!Office.Recipients#setAsync:member(2)'
  - uid: 'outlook!Office.Recipients#addAsync:member(1)'
    summary: |-
      Adds a recipient list to the existing recipients for an appointment or message.

      The recipients parameter can be an array of one of the following:

      - Strings containing SMTP email addresses

      - EmailUser objects

      - EmailAddressDetails objects

      \[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**:
      ReadWriteItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose


      **Errors**:


      - NumberOfRecipientsExceeded: The number of recipients exceeded 100 entries.
    name: 'addAsync(recipients, options, callback)'
    fullName: 'addAsync(recipients, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options?: Office.AsyncContextOptions,
        callback?: (asyncResult: Office.AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: The recipients to add to the recipients list.
          type:
            - '(string | EmailUser | EmailAddressDetails)[]'
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type Office.AsyncResult. If adding the recipients fails, the asyncResult.error property will
            contain an error code.
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: 'outlook!Office.Recipients#addAsync:member(2)'
    summary: |-
      Adds a recipient list to the existing recipients for an appointment or message.

      The recipients parameter can be an array of one of the following:

      - Strings containing SMTP email addresses

      - [Office.EmailUser](xref:outlook!Office.EmailUser:interface) objects

      - [Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects

      \[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**:
      ReadWriteItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose


      **Errors**:


      - NumberOfRecipientsExceeded: The number of recipients exceeded 100 entries.
    name: 'addAsync(recipients, callback)'
    fullName: 'addAsync(recipients, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback?: (asyncResult:
        Office.AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: The recipients to add to the recipients list.
          type:
            - '(string | EmailUser | EmailAddressDetails)[]'
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type Office.AsyncResult. If adding the recipients fails, the asyncResult.error property will
            contain an error code.
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: 'outlook!Office.Recipients#getAsync:member(1)'
    summary: >-
      Gets a recipient list for an appointment or message.


      When the call completes, the asyncResult.value property will contain an array of
      [Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects.


      \[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getAsync(options: Office.AsyncContextOptions, callback: (asyncResult:
        Office.AsyncResult<EmailAddressDetails[]>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: >-
            An object literal that contains one or more of the following properties. asyncContext: Developers can
            provide any object they wish to access in the callback method.
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: >-
            When the method completes, the function passed in the callback parameter is called with a single parameter
            of type Office.AsyncResult. The `value` property of the result is an array of EmailAddressDetails objects.
          type:
            - '(asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void'
  - uid: 'outlook!Office.Recipients#getAsync:member(2)'
    summary: >-
      Gets a recipient list for an appointment or message.


      When the call completes, the asyncResult.value property will contain an array of
      [Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects.


      \[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: >-
            When the method completes, the function passed in the callback parameter is called with a single parameter
            of type Office.AsyncResult. The `value` property of the result is an array of EmailAddressDetails objects.
          type:
            - '(asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void'
  - uid: 'outlook!Office.Recipients#setAsync:member(1)'
    summary: |-
      Sets a recipient list for an appointment or message.

      The setAsync method overwrites the current recipient list.

      The recipients parameter can be an array of one of the following:

      - Strings containing SMTP email addresses

      - [Office.EmailUser](xref:outlook!Office.EmailUser:interface) objects

      - [Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects

      \[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**:
      ReadWriteItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose


      **Errors**:


      - NumberOfRecipientsExceeded: The number of recipients exceeded 100 entries.
    name: 'setAsync(recipients, options, callback)'
    fullName: 'setAsync(recipients, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options: Office.AsyncContextOptions,
        callback: (asyncResult: Office.AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: The recipients to add to the recipients list.
          type:
            - '(string | EmailUser | EmailAddressDetails)[]'
        - id: options
          description: >-
            An object literal that contains one or more of the following properties. asyncContext: Developers can
            provide any object they wish to access in the callback method.
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: >-
            When the method completes, the function passed in the callback parameter is called with a single parameter
            of type Office.AsyncResult. If setting the recipients fails the asyncResult.error property will contain a
            code that indicates any error that occurred while adding the data.
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: 'outlook!Office.Recipients#setAsync:member(2)'
    summary: |-
      Sets a recipient list for an appointment or message.

      The setAsync method overwrites the current recipient list.

      The recipients parameter can be an array of one of the following:

      - Strings containing SMTP email addresses

      - [Office.EmailUser](xref:outlook!Office.EmailUser:interface) objects

      - [Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects

      \[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**:
      ReadWriteItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose


      **Errors**:


      - NumberOfRecipientsExceeded: The number of recipients exceeded 100 entries.
    name: 'setAsync(recipients, callback)'
    fullName: 'setAsync(recipients, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback: (asyncResult:
        Office.AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: The recipients to add to the recipients list.
          type:
            - '(string | EmailUser | EmailAddressDetails)[]'
        - id: callback
          description: >-
            When the method completes, the function passed in the callback parameter is called with a single parameter
            of type Office.AsyncResult. If setting the recipients fails the asyncResult.error property will contain a
            code that indicates any error that occurred while adding the data.
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
