### YamlMime:TSType
name: Office.DisplayedSubject
uid: 'outlook!Office.DisplayedSubject:interface'
package: outlook!
fullName: Office.DisplayedSubject
summary: Provides a method to temporarily set the content displayed in the subject of a message in read mode.
remarks: >-
  \[ [API set: Mailbox preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


  **[Minimum permission
  level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
  **read/write item**


  **[Applicable Outlook
  mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
  Message Read
isPreview: true
isDeprecated: false
type: interface
methods:
  - name: 'setAsync(data, options, callback)'
    uid: 'outlook!Office.DisplayedSubject#setAsync:member(1)'
    package: outlook!
    fullName: 'setAsync(data, options, callback)'
    summary: >-
      Temporarily sets the content displayed in the subject of a message in read mode. The set content will remain
      visible until the user switches to a different messsage or closes the window of the current message.
    remarks: >-
      \[ [API set: Mailbox preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Message Read
    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        setAsync(data: string, options: Office.AsyncContextOptions, callback?: (asyncResult:
        Office.AsyncResult<void>) => void): void;
      parameters:
        - id: data
          description: The string to be temporarily displayed in the subject of a message. The string is limited to 255 characters.
          type: string
        - id: options
          description: >-
            An object literal that contains one or more of the following properties:- `asyncContext`<!-- -->: Developers
            can provide any object they wish to access in the callback function.
          type: '<xref uid="office!Office.AsyncContextOptions:interface" />'
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object. Any errors encountered will be
            provided in the `asyncResult.error` property.
          type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
      return:
        type: void
        description: ''
  - name: 'setAsync(data, callback)'
    uid: 'outlook!Office.DisplayedSubject#setAsync:member(2)'
    package: outlook!
    fullName: 'setAsync(data, callback)'
    summary: >-
      Temporarily sets the content displayed in the subject of a message in read mode. The set content will remain
      visible until the user switches to a different messsage or closes the window of the current message.
    remarks: >-
      \[ [API set: Mailbox preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Message Read


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/99-preview-apis/set-displayed-body-subject.yaml

      // This snippet temporarily sets the content displayed in the subject field of a message in read mode.

      // The set content will remain visible until the user switches to a different message in the Reading Pane or
      closes the window of the current message.

      const subjectText = $("#subject-text-field")
        .val()
        .toString();
      Office.context.mailbox.item.display.subject.setAsync(subjectText, (asyncResult) => {
        if (asyncResult.status === Office.AsyncResultStatus.Failed) {
          console.log(`Action failed with error: ${asyncResult.error.message}`);
          return;
        }

        console.log("Temporarily set the content displayed in the subject field.");
      });

      ```
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'setAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      parameters:
        - id: data
          description: The string to be temporarily displayed in the subject of a message. The string is limited to 255 characters.
          type: string
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object. Any errors encountered will be
            provided in the `asyncResult.error` property.
          type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
      return:
        type: void
        description: ''
