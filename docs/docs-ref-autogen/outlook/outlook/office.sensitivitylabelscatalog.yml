### YamlMime:TSType
name: Office.SensitivityLabelsCatalog
uid: 'outlook!Office.SensitivityLabelsCatalog:interface'
package: outlook!
fullName: Office.SensitivityLabelsCatalog
summary: >-
  Provides methods to check the status of the catalog of [sensitivity
  labels](https://learn.microsoft.com/microsoft-365/compliance/sensitivity-labels) in Outlook and retrieve all available
  sensitivity labels if the catalog is enabled.
remarks: >-
  \[ [API set: Mailbox preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


  **[Minimum permission
  level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
  **read/write item**


  **[Applicable Outlook
  mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
  Compose
isPreview: true
isDeprecated: false
type: interface
methods:
  - name: 'getAsync(options, callback)'
    uid: 'outlook!Office.SensitivityLabelsCatalog#getAsync:member(1)'
    package: outlook!
    fullName: 'getAsync(options, callback)'
    summary: Gets all the sensitivity labels that are enabled in Outlook.
    remarks: >-
      \[ [API set: Mailbox preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
      **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
      Compose


      **Recommended**: To determine whether the catalog of sensitivity labels is enabled in Outlook, call
      `getIsEnabledAsync` before using `getAsync`<!-- -->.
    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        getAsync(options: Office.AsyncContextOptions, callback: (asyncResult:
        Office.AsyncResult<SensitivityLabelDetails[]>) => void): void;
      parameters:
        - id: options
          description: >-
            An object literal that contains one or more of the following properties:- `asyncContext`<!-- -->: Developers
            can provide any object they wish to access in the callback function.
          type: '<xref uid="office!Office.AsyncContextOptions:interface" />'
        - id: callback
          description: >-
            When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object. The available sensitivity labels
            and their properties are returned in the `asyncResult.value` property.
          type: >-
            (asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref
            uid="outlook!Office.SensitivityLabelDetails:interface" />[]&gt;) =&gt; void
      return:
        type: void
        description: ''
  - name: getAsync(callback)
    uid: 'outlook!Office.SensitivityLabelsCatalog#getAsync:member(2)'
    package: outlook!
    fullName: getAsync(callback)
    summary: Gets all the sensitivity labels that are enabled in Outlook.
    remarks: >-
      \[ [API set: Mailbox preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
      **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
      Compose


      **Recommended**: To determine whether the catalog of sensitivity labels is enabled in Outlook, call
      `getIsEnabledAsync` before using `getAsync`<!-- -->.


      #### Examples


      ```javascript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/99-preview-apis/sensitivity-labels-catalog.yaml

      // This snippet gets all available sensitivity labels from the catalog.

      Office.context.sensitivityLabelsCatalog.getIsEnabledAsync((asyncResult) => {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded && asyncResult.value == true) {
          Office.context.sensitivityLabelsCatalog.getAsync((asyncResult) => {
            if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
              const catalog = asyncResult.value;
              console.log("Sensitivity Labels Catalog:");
              console.log(JSON.stringify(catalog));
            } else {
              console.log("Action failed with error: " + asyncResult.error.message);
            }
          });
        } else {
          console.log("Action failed with error: " + asyncResult.error.message);
        }
      });

      ```
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<SensitivityLabelDetails[]>) => void): void;'
      parameters:
        - id: callback
          description: >-
            When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object. The available sensitivity labels
            and their properties are returned in the `asyncResult.value` property.
          type: >-
            (asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref
            uid="outlook!Office.SensitivityLabelDetails:interface" />[]&gt;) =&gt; void
      return:
        type: void
        description: ''
  - name: 'getIsEnabledAsync(options, callback)'
    uid: 'outlook!Office.SensitivityLabelsCatalog#getIsEnabledAsync:member(1)'
    package: outlook!
    fullName: 'getIsEnabledAsync(options, callback)'
    summary: Checks whether the catalog of sensitivity labels is enabled in Outlook.
    remarks: >-
      \[ [API set: Mailbox preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
      **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
      Compose


      **Important**: The catalog of sensitivity labels is configured by an organization's administrator. For more
      information, see [Get started with sensitivity
      labels](https://learn.microsoft.com/microsoft-365/compliance/get-started-with-sensitivity-labels)<!-- -->.
    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        getIsEnabledAsync(options: Office.AsyncContextOptions, callback: (asyncResult:
        Office.AsyncResult<boolean>) => void): void;
      parameters:
        - id: options
          description: >-
            An object literal that contains one or more of the following properties:- `asyncContext`<!-- -->: Developers
            can provide any object they wish to access in the callback function.
          type: '<xref uid="office!Office.AsyncContextOptions:interface" />'
        - id: callback
          description: >-
            When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object. The status of the catalog of
            sensitivity labels is returned in the `asyncResult.value` property.
          type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;boolean&gt;) =&gt; void'
      return:
        type: void
        description: ''
  - name: getIsEnabledAsync(callback)
    uid: 'outlook!Office.SensitivityLabelsCatalog#getIsEnabledAsync:member(2)'
    package: outlook!
    fullName: getIsEnabledAsync(callback)
    summary: Checks whether the catalog of sensitivity labels is enabled in Outlook.
    remarks: >-
      \[ [API set: Mailbox preview](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
      **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
      Compose


      **Important**: The catalog of sensitivity labels is configured by an organization's administrator. For more
      information, see [Get started with sensitivity
      labels](https://learn.microsoft.com/microsoft-365/compliance/get-started-with-sensitivity-labels)<!-- -->.


      #### Examples


      ```javascript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/99-preview-apis/sensitivity-labels-catalog.yaml

      // This snippet determines if the sensitivity labels catalog is enabled on the current mailbox.

      Office.context.sensitivityLabelsCatalog.getIsEnabledAsync((asyncResult) => {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log(asyncResult.value);
        } else {
          console.log("Action failed with error: " + asyncResult.error.message);
        }
      });

      ```
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getIsEnabledAsync(callback: (asyncResult: Office.AsyncResult<boolean>) => void): void;'
      parameters:
        - id: callback
          description: >-
            When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object. The status of the catalog of
            sensitivity labels is returned in the `asyncResult.value` property.
          type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;boolean&gt;) =&gt; void'
      return:
        type: void
        description: ''
