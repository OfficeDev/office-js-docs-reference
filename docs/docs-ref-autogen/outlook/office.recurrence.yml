### YamlMime:UniversalReference
items:
  - uid: outlook.Office.Recurrence
    summary: >-
      The recurrence object provides methods to get and set the recurrence pattern of appointments but only get the
      recurrence pattern of meeting requests. It will have a dictionary with the following keys: seriesTime,
      recurrenceType, recurrenceProperties, and recurrenceTimeZone (optional).


      \[ [API set: Mailbox Preview](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      &lt;table&gt; &lt;tr&gt; &lt;th&gt;State&lt;/th&gt; &lt;th&gt;Editable?&lt;/th&gt; &lt;th&gt;Viewable?&lt;/th&gt;
      &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Appointment Organizer - Compose Series&lt;/td&gt; &lt;td&gt;Yes
      (setAsync)&lt;/td&gt; &lt;td&gt;Yes (getAsync)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Appointment Organizer -
      Compose Instance&lt;/td&gt; &lt;td&gt;No (setAsync returns error)&lt;/td&gt; &lt;td&gt;Yes (getAsync)&lt;/td&gt;
      &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Appointment Attendee - Read Series&lt;/td&gt; &lt;td&gt;No (setAsync not
      available)&lt;/td&gt; &lt;td&gt;Yes (item.recurrence)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Appointment
      Attendee - Read Instance&lt;/td&gt; &lt;td&gt;No (setAsync not available)&lt;/td&gt; &lt;td&gt;Yes
      (item.recurrence)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Meeting Request - Read Series&lt;/td&gt;
      &lt;td&gt;No (setAsync not available)&lt;/td&gt; &lt;td&gt;Yes (item.recurrence)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;
      &lt;td&gt;Meeting Request - Read Instance&lt;/td&gt; &lt;td&gt;No (setAsync not available)&lt;/td&gt;
      &lt;td&gt;Yes (item.recurrence)&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;


      [Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->: ReadItem


      Applicable Outlook mode: Compose or read
    isPreview: true
    name: Office.Recurrence
    fullName: outlook.Office.Recurrence
    langs:
      - typeScript
    type: interface
    package: outlook
    children:
      - outlook.Office.Recurrence.getAsync
      - outlook.Office.Recurrence.recurrenceProperties
      - outlook.Office.Recurrence.recurrenceTimeZone
      - outlook.Office.Recurrence.recurrenceType
      - outlook.Office.Recurrence.seriesTime
      - outlook.Office.Recurrence.setAsync
  - uid: outlook.Office.Recurrence.getAsync
    summary: |-
      Returns the current recurrence object of an appointment series.

      This method returns the entire recurrence object for the appointment series.

      \[ [API set: Mailbox Preview](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >
      [Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->: ReadItem


      Applicable Outlook mode: Compose or read


      In addition to the main signature, this method also has this signature:


      `getAsync(callback?: (result: AsyncResult) =&gt; void): void;`


      #### Examples


      ```javascript

      // This example gets the recurrence object of an appointment or meeting request item.

      Office.context.mailbox.item.recurrence.getAsync(callback);

      function callback(asyncResult){
          var context = asyncResult.context;
          var recurrence = asyncResult.value;
          var endDate = recurrence.seriesTime.getEndDate();
      }


      // The following is an example of the results of the getAsync call.

      Recurrence = {"recurrenceType": "weekly","recurrenceProperties": {"interval": 2, "days": ["mon","thu","fri"],
      "firstDayOfWeek": "sun"}, "seriesTime": {seriesTimeObject}, "recurrenceTimeZone": {"name": "Pacific Standard
      Time", "offset": -480}}

      ```
    isPreview: true
    name: 'getAsync(options, callback)'
    fullName: outlook.Office.Recurrence.getAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter, asyncResult, which is an AsyncResult object.
          type:
            - '(result: AsyncResult) => void'
  - uid: outlook.Office.Recurrence.recurrenceProperties
    summary: |-
      Gets or sets the properties of the recurring appointment series.

      \[ [API set: Mailbox Preview](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      [Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->: ReadItem


      Applicable Outlook mode: Compose or read
    isPreview: true
    name: recurrenceProperties
    fullName: outlook.Office.Recurrence.recurrenceProperties
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrenceProperties: RecurrenceProperties;'
      return:
        type:
          - RecurrenceProperties
  - uid: outlook.Office.Recurrence.recurrenceTimeZone
    summary: |-
      Gets or sets the properties of the recurring appointment series.

      \[ [API set: Mailbox Preview](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      [Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->: ReadItem


      Applicable Outlook mode: Compose or read
    isPreview: true
    name: recurrenceTimeZone
    fullName: outlook.Office.Recurrence.recurrenceTimeZone
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrenceTimeZone: MailboxEnums.RecurrenceTimeZone;'
      return:
        type:
          - MailboxEnums.RecurrenceTimeZone
  - uid: outlook.Office.Recurrence.recurrenceType
    summary: |-
      Gets or sets the type of the recurring appointment series.

      \[ [API set: Mailbox Preview](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      [Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->: ReadItem


      Applicable Outlook mode: Compose or read
    isPreview: true
    name: recurrenceType
    fullName: outlook.Office.Recurrence.recurrenceType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrenceType: MailboxEnums.RecurrenceType;'
      return:
        type:
          - MailboxEnums.RecurrenceType
  - uid: outlook.Office.Recurrence.seriesTime
    summary: >-
      The [Office.SeriesTime](xref:outlook.Office.SeriesTime) object enables you to manage the start and end dates of
      the recurring appointment series and the usual start and end times of instances. **This object is not in UTC
      time.** Instead, it is set in the time zone specified by the recurrenceTimeZone value or defaulted to the item's
      time zone.


      \[ [API set: Mailbox Preview](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      [Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->: ReadItem


      Applicable Outlook mode: Compose or read
    isPreview: true
    name: seriesTime
    fullName: outlook.Office.Recurrence.seriesTime
    langs:
      - typeScript
    type: property
    syntax:
      content: 'seriesTime: SeriesTime;'
      return:
        type:
          - SeriesTime
  - uid: outlook.Office.Recurrence.setAsync
    summary: |-
      Sets the recurrence pattern of an appointment series.

      Note: setAsync should only be available for series items and not instance items.

      \[ [API set: Mailbox Preview](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >
      [Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->: ReadWriteItem


      Applicable Outlook mode: Compose


      Errors: InvalidEndTime - The appointment end time is before its start time.


      In addition to the main signature, this method also has this signature:


      `setAsync(recurrencePattern: Recurrence, callback?: (result: AsyncResult) =&gt; void): void;`


      #### Examples


      ```javascript

      // The following example sets the recurrence pattern of an appointment series.

      var seriesTimeObject = new SeriesTime(); 

      seriesTimeObject.setStartDate(2017,11,2);  

      seriesTimeObject.setEndDate(2017,12,2); 

      seriesTimeObject.setStartTime(10,30); 

      seriesTimeObject.setDuration(30);


      var pattern = {"seriesTime": seriesTimeObject, "type": "Weekly", "properties": {"interval": ", "days": ["Tue",
      "Thu"], "firstDayOfWeek": "Sun"}, "recurrenceTimeZone": {"name": "Pacific Standard Time"}}; 


      Office.context.mailbox.item.recurrence.setAsync(pattern, options, callback);


      //Result: This created a recurring event from November 2, 2017 to December 2, 2017 at 10:30 A.M. to 11 A.M. PST
      every Tuesday and Thursday.

      ```
    isPreview: true
    name: 'setAsync(recurrencePattern, options, callback)'
    fullName: outlook.Office.Recurrence.setAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        setAsync(recurrencePattern: Recurrence, options?: AsyncContextOptions, callback?: (result: AsyncResult) =>
        void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recurrencePattern
          description: A recurrence object.
          type:
            - Recurrence
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter, asyncResult, which is an AsyncResult object.
          type:
            - '(result: AsyncResult) => void'
