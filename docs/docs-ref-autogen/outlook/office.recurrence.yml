### YamlMime:UniversalReference
items:
  - uid: outlook.Office.Recurrence
    summary: >-
      The recurrence object provides methods to get and set the recurrence pattern of appointments but only get the
      recurrence pattern of meeting requests. It will have a dictionary with the following keys: seriesTime,
      recurrenceType, recurrenceProperties, and recurrenceTimeZone (optional).


      \[ [API set: Mailbox 1.7](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>


      **States**


      <table> <tr> <th>State</th> <th>Editable?</th> <th>Viewable?</th> </tr> <tr> <td>Appointment Organizer - Compose
      Series</td> <td>Yes (setAsync)</td> <td>Yes (getAsync)</td> </tr> <tr> <td>Appointment Organizer - Compose
      Instance</td> <td>No (setAsync returns error)</td> <td>Yes (getAsync)</td> </tr> <tr> <td>Appointment Attendee -
      Read Series</td> <td>No (setAsync not available)</td> <td>Yes (item.recurrence)</td> </tr> <tr> <td>Appointment
      Attendee - Read Instance</td> <td>No (setAsync not available)</td> <td>Yes (item.recurrence)</td> </tr> <tr>
      <td>Meeting Request - Read Series</td> <td>No (setAsync not available)</td> <td>Yes (item.recurrence)</td> </tr>
      <tr> <td>Meeting Request - Read Instance</td> <td>No (setAsync not available)</td> <td>Yes (item.recurrence)</td>
      </tr> </table>
    name: Office.Recurrence
    fullName: outlook.Office.Recurrence
    langs:
      - typeScript
    type: interface
    package: outlook
    children:
      - outlook.Office.Recurrence.getAsync
      - outlook.Office.Recurrence.recurrenceProperties
      - outlook.Office.Recurrence.recurrenceTimeZone
      - outlook.Office.Recurrence.recurrenceType
      - outlook.Office.Recurrence.seriesTime
      - outlook.Office.Recurrence.setAsync
  - uid: outlook.Office.Recurrence.getAsync
    summary: |-
      Returns the current recurrence object of an appointment series.

      This method returns the entire recurrence object for the appointment series.

      \[ [API set: Mailbox 1.7](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>


      In addition to this signature, this method also has the following signature:


      `getAsync(callback?: (result: AsyncResult&lt;Office.Recurrence&gt;) => void): void;`

      #### Examples


      ```javascript

      // This example gets the recurrence object of an appointment or meeting request item.

      Office.context.mailbox.item.recurrence.getAsync(callback);

      function callback(asyncResult){
          var context = asyncResult.context;
          var recurrence = asyncResult.value;
          var endDate = recurrence.seriesTime.getEndDate();
      }


      // The following is an example of the results of the getAsync call.

      Recurrence = {
          "recurrenceType": "weekly",
          "recurrenceProperties": {"interval": 2, "days": ["mon","thu","fri"], "firstDayOfWeek": "sun"},
          "seriesTime": {seriesTimeObject}, 
          "recurrenceTimeZone": {"name": "Pacific Standard Time", "offset": -480}}
      ```
    name: 'getAsync(options, callback)'
    fullName: outlook.Office.Recurrence.getAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<Office.Recurrence>) => void):
        void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter, asyncResult, which is an Office.AsyncResult object. The `value` property of the result is a
            Recurrence object.
          type:
            - '(result: AsyncResult<Office.Recurrence>) => void'
  - uid: outlook.Office.Recurrence.recurrenceProperties
    summary: |-
      Gets or sets the properties of the recurring appointment series.

      \[ [API set: Mailbox 1.7](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>
    name: recurrenceProperties
    fullName: outlook.Office.Recurrence.recurrenceProperties
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrenceProperties: Office.RecurrenceProperties;'
      return:
        type:
          - outlook.Office.RecurrenceProperties
  - uid: outlook.Office.Recurrence.recurrenceTimeZone
    summary: |-
      Gets or sets the properties of the recurring appointment series.

      \[ [API set: Mailbox 1.7](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>
    name: recurrenceTimeZone
    fullName: outlook.Office.Recurrence.recurrenceTimeZone
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrenceTimeZone: Office.RecurrenceTimeZone;'
      return:
        type:
          - Office.RecurrenceTimeZone
  - uid: outlook.Office.Recurrence.recurrenceType
    summary: |-
      Gets or sets the type of the recurring appointment series.

      \[ [API set: Mailbox 1.7](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>
    name: recurrenceType
    fullName: outlook.Office.Recurrence.recurrenceType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrenceType: Office.MailboxEnums.RecurrenceType;'
      return:
        type:
          - outlook.Office.MailboxEnums.RecurrenceType
  - uid: outlook.Office.Recurrence.seriesTime
    summary: >-
      The [Office.SeriesTime](xref:outlook.Office.SeriesTime) object enables you to manage the start and end dates of
      the recurring appointment series and the usual start and end times of instances. **This object is not in UTC
      time.** Instead, it is set in the time zone specified by the recurrenceTimeZone value or defaulted to the item's
      time zone.


      \[ [API set: Mailbox 1.7](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>
    name: seriesTime
    fullName: outlook.Office.Recurrence.seriesTime
    langs:
      - typeScript
    type: property
    syntax:
      content: 'seriesTime: Office.SeriesTime;'
      return:
        type:
          - outlook.Office.SeriesTime
  - uid: outlook.Office.Recurrence.setAsync
    summary: |-
      Sets the recurrence pattern of an appointment series.

      Note: setAsync should only be available for series items and not instance items.

      \[ [API set: Mailbox 1.7](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


      <tr><td>[Applicable Outlook
      mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose</td></tr>


      <tr><td>Errors</td><td>InvalidEndTime - The appointment end time is before its start time.</td></tr></table>


      In addition to this signature, this method also has the following signature:


      `setAsync(recurrencePattern: Recurrence, callback?: (result: AsyncResult<void>) => void): void;`

      #### Examples


      ```javascript

      // The following example sets the recurrence pattern of an appointment series.

      var seriesTimeObject = new SeriesTime(); 

      seriesTimeObject.setStartDate(2017,11,2);  

      seriesTimeObject.setEndDate(2017,12,2); 

      seriesTimeObject.setStartTime(10,30); 

      seriesTimeObject.setDuration(30);


      var pattern = {
          "seriesTime": seriesTimeObject,
          "type": "weekly",
          "properties": {"interval": 1, "days": ["tue", "thu"], "firstDayOfWeek": "sun"},
          "recurrenceTimeZone": {"name": "Pacific Standard Time"}}; 

      Office.context.mailbox.item.recurrence.setAsync(pattern, options, callback);


      //Result: This created a recurring event from November 2, 2017 to December 2, 2017

      //        at 10:30 A.M. to 11 A.M. PST every Tuesday and Thursday.

      ```
    name: 'setAsync(recurrencePattern, options, callback)'
    fullName: outlook.Office.Recurrence.setAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        setAsync(recurrencePattern: Recurrence, options?: Office.AsyncContextOptions, callback?: (result:
        AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recurrencePattern
          description: A recurrence object.
          type:
            - Recurrence
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter, asyncResult, which is an Office.AsyncResult object.
          type:
            - '(result: AsyncResult<void>) => void'
