### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.PageCollection
    summary: |-
      Represents a collection of pages.

      \[ [API set: OneNoteApi 1.1](http://bing.com?type=onenote) \]
    name: OneNote.PageCollection
    fullName: onenote.OneNote.PageCollection
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.PageCollection.count
      - onenote.OneNote.PageCollection.getByTitle
      - onenote.OneNote.PageCollection.getItem
      - onenote.OneNote.PageCollection.getItemAt
      - onenote.OneNote.PageCollection.items
      - onenote.OneNote.PageCollection.load
  - uid: onenote.OneNote.PageCollection.count
    summary: |-
      Returns the number of pages in the collection. Read-only.

      \[ [API set: OneNoteApi 1.1](http://bing.com?type=onenote) \]
    name: count
    fullName: onenote.OneNote.PageCollection.count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'count: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.PageCollection.getByTitle
    summary: Gets the collection of pages with the specified title.
    name: getByTitle(title)
    fullName: onenote.OneNote.PageCollection.getByTitle
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByTitle(title: string): OneNote.PageCollection;'
      return:
        type:
          - OneNote.PageCollection
        description: ''
      parameters:
        - id: title
          description: 'The title of the page. \[Api set: OneNoteApi 1.1\]'
          type:
            - string
    remarks: |


      #### Examples

      ```javascript
      OneNote.run(function (context) {

          // Get all the pages in the current section.
          var allPages = context.application.getActiveSection().pages;

          // Queue a command to load the pages. 
          // For best performance, request specific properties.
          allPages.load("id"); 

          // Run the queued commands, and return a promise to indicate task completion.
          return context.sync()
              .then(function () {

                  // Get the sections with the specified name.
                  var todoPages = allPages.getByTitle("Todo list");

                  // Queue a command to load the section. 
                  // For best performance, request specific properties.
                  todoPages.load("id,title"); 

                  return context.sync()
                      .then(function () {

                          // Iterate through the collection or access items individually by index.
                          if (todoPages.items.length > 0) {
                              console.log("Page title: " + todoPages.items[0].title);
                              console.log("Page ID: " + todoPages.items[0].id);
                          }
                      });
              });
      })
      .catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
  - uid: onenote.OneNote.PageCollection.getItem
    summary: Gets a page by ID or by its index in the collection. Read-only.
    name: getItem(index)
    fullName: onenote.OneNote.PageCollection.getItem
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number | string): OneNote.Page;'
      return:
        type:
          - OneNote.Page
        description: ''
      parameters:
        - id: index
          description: 'The ID of the page, or the index location of the page in the collection. \[Api set: OneNoteApi 1.1\]'
          type:
            - number | string
  - uid: onenote.OneNote.PageCollection.getItemAt
    summary: Gets a page on its position in the collection.
    name: getItemAt(index)
    fullName: onenote.OneNote.PageCollection.getItemAt
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): OneNote.Page;'
      return:
        type:
          - OneNote.Page
        description: ''
      parameters:
        - id: index
          description: 'Index value of the object to be retrieved. Zero-indexed. \[Api set: OneNoteApi 1.1\]'
          type:
            - number
  - uid: onenote.OneNote.PageCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: onenote.OneNote.PageCollection.items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'items: Array<OneNote.Page>;'
      return:
        type:
          - Array<OneNote.Page>
  - uid: onenote.OneNote.PageCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: onenote.OneNote.PageCollection.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[] | OfficeExtension.LoadOption): OneNote.PageCollection;'
      return:
        type:
          - OneNote.PageCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'string | string[] | OfficeExtension.LoadOption'
