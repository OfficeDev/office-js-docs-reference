### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.PageCollection
    summary: |-
      Represents a collection of pages.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: OneNote.PageCollection
    fullName: onenote.OneNote.PageCollection
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.PageCollection.count
      - onenote.OneNote.PageCollection.getByTitle
      - onenote.OneNote.PageCollection.getItem
      - onenote.OneNote.PageCollection.getItemAt
      - onenote.OneNote.PageCollection.items
      - onenote.OneNote.PageCollection.load
      - onenote.OneNote.PageCollection.toJSON
      - onenote.OneNote.PageCollection.track
      - onenote.OneNote.PageCollection.untrack
  - uid: onenote.OneNote.PageCollection.count
    summary: |-
      Returns the number of pages in the collection. Read-only.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: count
    fullName: onenote.OneNote.PageCollection.count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.PageCollection.getByTitle
    summary: |-
      Gets the collection of pages with the specified title.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: getByTitle(title)
    fullName: onenote.OneNote.PageCollection.getByTitle
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByTitle(title: string): OneNote.PageCollection;'
      return:
        type:
          - onenote.OneNote.PageCollection
        description: ''
      parameters:
        - id: title
          description: The title of the page.
          type:
            - string
    remarks: |


      #### Examples

      ```javascript
      OneNote.run(function (context) {

          // Get all the pages in the current section.
          var allPages = context.application.getActiveSection().pages;

          // Queue a command to load the pages. 
          // For best performance, request specific properties.
          allPages.load("id"); 

          // Run the queued commands, and return a promise to indicate task completion.
          return context.sync()
              .then(function () {

                  // Get the sections with the specified name.
                  var todoPages = allPages.getByTitle("Todo list");

                  // Queue a command to load the section. 
                  // For best performance, request specific properties.
                  todoPages.load("id,title"); 

                  return context.sync()
                      .then(function () {

                          // Iterate through the collection or access items individually by index.
                          if (todoPages.items.length > 0) {
                              console.log("Page title: " + todoPages.items[0].title);
                              console.log("Page ID: " + todoPages.items[0].id);
                          }
                      });
              });
      })
      .catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
  - uid: onenote.OneNote.PageCollection.getItem
    summary: |-
      Gets a page by ID or by its index in the collection. Read-only.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: getItem(index)
    fullName: onenote.OneNote.PageCollection.getItem
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number | string): OneNote.Page;'
      return:
        type:
          - onenote.OneNote.Page
        description: ''
      parameters:
        - id: index
          description: 'The ID of the page, or the index location of the page in the collection.'
          type:
            - number | string
  - uid: onenote.OneNote.PageCollection.getItemAt
    summary: |-
      Gets a page on its position in the collection.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: getItemAt(index)
    fullName: onenote.OneNote.PageCollection.getItemAt
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): OneNote.Page;'
      return:
        type:
          - onenote.OneNote.Page
        description: ''
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type:
            - number
  - uid: onenote.OneNote.PageCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: onenote.OneNote.PageCollection.items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Array<OneNote.Page>;'
      return:
        type:
          - Array<OneNote.Page>
  - uid: onenote.OneNote.PageCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: onenote.OneNote.PageCollection.load
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        load(option?: OneNote.Interfaces.PageCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions):
        OneNote.PageCollection;
      return:
        type:
          - onenote.OneNote.PageCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OneNote.Interfaces.PageCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions
    remarks: |


      #### Examples

      ```javascript
      OneNote.run(function (context) {
          
          // Get the pages in the current section.
          var pages = context.application.getActiveSection().pages;
          
          // Queue a command to load the id and title for each page.            
          pages.load('id,title');
          
          // Run the queued commands, and return a promise to indicate task completion.
          return context.sync()
              .then(function () {
                  
                  // Display the properties.
                  $.each(pages.items, function(index, page) {
                      console.log(page.title);
                      console.log(page.id);
                  });
              }); 
      })
      .catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
  - uid: onenote.OneNote.PageCollection.toJSON
    name: toJSON()
    fullName: onenote.OneNote.PageCollection.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.PageCollectionData;'
      return:
        type:
          - onenote.OneNote.Interfaces.PageCollectionData
        description: ''
  - uid: onenote.OneNote.PageCollection.track
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: onenote.OneNote.PageCollection.track
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.PageCollection;'
      return:
        type:
          - onenote.OneNote.PageCollection
        description: ''
  - uid: onenote.OneNote.PageCollection.untrack
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: onenote.OneNote.PageCollection.untrack
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.PageCollection;'
      return:
        type:
          - onenote.OneNote.PageCollection
        description: ''
