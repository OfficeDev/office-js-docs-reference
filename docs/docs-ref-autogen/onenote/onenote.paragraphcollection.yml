### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.ParagraphCollection
    summary: |-
      Represents a collection of Paragraph objects.

      \[ [API set: OneNoteApi 1.1](http://bing.com?type=onenote) \]
    name: OneNote.ParagraphCollection
    fullName: onenote.OneNote.ParagraphCollection
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.ParagraphCollection.count
      - onenote.OneNote.ParagraphCollection.getItem
      - onenote.OneNote.ParagraphCollection.getItemAt
      - onenote.OneNote.ParagraphCollection.items
      - onenote.OneNote.ParagraphCollection.load
      - onenote.OneNote.ParagraphCollection.toJSON
      - onenote.OneNote.ParagraphCollection.track
      - onenote.OneNote.ParagraphCollection.untrack
  - uid: onenote.OneNote.ParagraphCollection.count
    summary: |-
      Returns the number of paragraphs in the page. Read-only.

      \[ [API set: OneNoteApi 1.1](http://bing.com?type=onenote) \]
    name: count
    fullName: onenote.OneNote.ParagraphCollection.count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.ParagraphCollection.getItem
    summary: |-
      Gets a Paragraph object by ID or by its index in the collection. Read-only.

      \[ [API set: OneNoteApi 1.1](http://bing.com?type=onenote) \]
    name: getItem(index)
    fullName: onenote.OneNote.ParagraphCollection.getItem
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number | string): OneNote.Paragraph;'
      return:
        type:
          - OneNote.Paragraph
        description: ''
      parameters:
        - id: index
          description: 'The ID of the Paragraph object, or the index location of the Paragraph object in the collection.'
          type:
            - number | string
  - uid: onenote.OneNote.ParagraphCollection.getItemAt
    summary: |-
      Gets a paragraph on its position in the collection.

      \[ [API set: OneNoteApi 1.1](http://bing.com?type=onenote) \]
    name: getItemAt(index)
    fullName: onenote.OneNote.ParagraphCollection.getItemAt
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): OneNote.Paragraph;'
      return:
        type:
          - OneNote.Paragraph
        description: ''
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type:
            - number
    remarks: |


      #### Examples

      ```javascript
      OneNote.run(function (context) {

          // Get the collection of pageContent items from the page.
          var pageContents = context.application.getActivePage().contents;

          // Get the first PageContent on the page, and then get its Outline's first paragraph.
          var pageContent = pageContents.getItemAt(0);
          var paragraphs = pageContent.outline.paragraphs;

          var firstParagraph = paragraphs.getItemAt(0);

          // Queue a command to load the type and richText.text property of this paragraph.
          firstParagraph.load("id,type");


          // Run the queued commands, and return a promise to indicate task completion.
          return context.sync()
              .then(function () {
                  // Write text from paragraph to console
                  console.log("First Paragraph found with id : " + firstParagraph.id + " and type " + firstParagraph.type);
              });
      })
      .catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      }); 
      ```
  - uid: onenote.OneNote.ParagraphCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: onenote.OneNote.ParagraphCollection.items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Array<OneNote.Paragraph>;'
      return:
        type:
          - Array<OneNote.Paragraph>
  - uid: onenote.OneNote.ParagraphCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: onenote.OneNote.ParagraphCollection.load
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        load(option?: OneNote.Interfaces.ParagraphCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions):
        OneNote.ParagraphCollection;
      return:
        type:
          - OneNote.ParagraphCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OneNote.Interfaces.ParagraphCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions
  - uid: onenote.OneNote.ParagraphCollection.toJSON
    name: toJSON()
    fullName: onenote.OneNote.ParagraphCollection.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.ParagraphCollectionData;'
      return:
        type:
          - OneNote.Interfaces.ParagraphCollectionData
        description: ''
  - uid: onenote.OneNote.ParagraphCollection.track
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: onenote.OneNote.ParagraphCollection.track
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.ParagraphCollection;'
      return:
        type:
          - OneNote.ParagraphCollection
        description: ''
  - uid: onenote.OneNote.ParagraphCollection.untrack
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: onenote.OneNote.ParagraphCollection.untrack
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.ParagraphCollection;'
      return:
        type:
          - OneNote.ParagraphCollection
        description: ''
