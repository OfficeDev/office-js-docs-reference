### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.TableRowCollection
    summary: |-
      Contains a collection of TableRow objects.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: OneNote.TableRowCollection
    fullName: onenote.OneNote.TableRowCollection
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.TableRowCollection.count
      - onenote.OneNote.TableRowCollection.getItem
      - onenote.OneNote.TableRowCollection.getItemAt
      - onenote.OneNote.TableRowCollection.items
      - onenote.OneNote.TableRowCollection.load
      - onenote.OneNote.TableRowCollection.toJSON
      - onenote.OneNote.TableRowCollection.track
      - onenote.OneNote.TableRowCollection.untrack
  - uid: onenote.OneNote.TableRowCollection.count
    summary: |-
      Returns the number of table rows in this collection. Read-only.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: count
    fullName: onenote.OneNote.TableRowCollection.count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.TableRowCollection.getItem
    summary: |-
      Gets a table row object by ID or by its index in the collection. Read-only.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: getItem(index)
    fullName: onenote.OneNote.TableRowCollection.getItem
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number | string): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: ''
      parameters:
        - id: index
          description: A number that identifies the index location of a table row object.
          type:
            - number | string
  - uid: onenote.OneNote.TableRowCollection.getItemAt
    summary: |-
      Gets a table row at its position in the collection.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: getItemAt(index)
    fullName: onenote.OneNote.TableRowCollection.getItemAt
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: ''
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type:
            - number
  - uid: onenote.OneNote.TableRowCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: onenote.OneNote.TableRowCollection.items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: OneNote.TableRow[];'
      return:
        type:
          - 'OneNote.TableRow[]'
  - uid: onenote.OneNote.TableRowCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: { select?: string; expand?: string; }): OneNote.TableRowCollection` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableRowCollection` -
      Only available on collection types. It is similar to the preceding signature. Option.top specifies the maximum
      number of collection items that can be included in the result. Option.skip specifies the number of items that are
      to be skipped and not included in the result. If option.top is specified, the result set will start after skipping
      the specified number of items.
    name: load(option)
    fullName: onenote.OneNote.TableRowCollection.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): OneNote.TableRowCollection;'
      return:
        type:
          - OneNote.TableRowCollection
        description: ''
      parameters:
        - id: option
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.TableRowCollection.toJSON
    name: toJSON()
    fullName: onenote.OneNote.TableRowCollection.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.TableRowCollectionData;'
      return:
        type:
          - OneNote.Interfaces.TableRowCollectionData
        description: ''
  - uid: onenote.OneNote.TableRowCollection.track
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: onenote.OneNote.TableRowCollection.track
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.TableRowCollection;'
      return:
        type:
          - OneNote.TableRowCollection
        description: ''
  - uid: onenote.OneNote.TableRowCollection.untrack
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: onenote.OneNote.TableRowCollection.untrack
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.TableRowCollection;'
      return:
        type:
          - OneNote.TableRowCollection
        description: ''
