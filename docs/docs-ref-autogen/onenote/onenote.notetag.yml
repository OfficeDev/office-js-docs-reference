### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.NoteTag
    summary: |-
      A container for the NoteTag in a paragraph.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: OneNote.NoteTag
    fullName: onenote.OneNote.NoteTag
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.NoteTag.id
      - onenote.OneNote.NoteTag.load
      - onenote.OneNote.NoteTag.status
      - onenote.OneNote.NoteTag.toJSON
      - onenote.OneNote.NoteTag.track
      - onenote.OneNote.NoteTag.type
      - onenote.OneNote.NoteTag.untrack
  - uid: onenote.OneNote.NoteTag.id
    summary: |-
      Gets the Id of the NoteTag object. Read-only.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: id
    fullName: onenote.OneNote.NoteTag.id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.NoteTag.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: onenote.OneNote.NoteTag.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.NoteTagLoadOptions): OneNote.NoteTag;'
      return:
        type:
          - onenote.OneNote.NoteTag
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - onenote.OneNote.Interfaces.NoteTagLoadOptions
  - uid: onenote.OneNote.NoteTag.status
    summary: |-
      Gets the status of the NoteTag object. Read-only.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: status
    fullName: onenote.OneNote.NoteTag.status
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly status: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.NoteTag.toJSON
    name: toJSON()
    fullName: onenote.OneNote.NoteTag.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.NoteTagData;'
      return:
        type:
          - onenote.OneNote.Interfaces.NoteTagData
        description: ''
  - uid: onenote.OneNote.NoteTag.track
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: onenote.OneNote.NoteTag.track
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.NoteTag;'
      return:
        type:
          - onenote.OneNote.NoteTag
        description: ''
  - uid: onenote.OneNote.NoteTag.type
    summary: |-
      Gets the type of the NoteTag object. Read-only.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: type
    fullName: onenote.OneNote.NoteTag.type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.NoteTag.untrack
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: onenote.OneNote.NoteTag.untrack
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.NoteTag;'
      return:
        type:
          - onenote.OneNote.NoteTag
        description: ''
