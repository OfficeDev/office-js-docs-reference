### YamlMime:TSType
name: OneNote.PageCollection
uid: 'onenote!OneNote.PageCollection:class'
package: onenote!
fullName: OneNote.PageCollection
summary: Represents a collection of pages.
remarks: '\[ [API set: OneNoteApi 1.1](/javascript/api/requirement-sets/onenote/onenote-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'onenote!OneNote.PageCollection#context:member'
    package: onenote!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="onenote!OneNote.RequestContext:class" />'
  - name: count
    uid: 'onenote!OneNote.PageCollection#count:member'
    package: onenote!
    fullName: count
    summary: Returns the number of pages in the collection.
    remarks: '\[ [API set: OneNoteApi 1.1](/javascript/api/requirement-sets/onenote/onenote-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly count: number;'
      return:
        type: number
  - name: items
    uid: 'onenote!OneNote.PageCollection#items:member'
    package: onenote!
    fullName: items
    summary: Gets the loaded child items in this collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly items: OneNote.Page[];'
      return:
        type: '<xref uid="onenote!OneNote.Page:class" />[]'
methods:
  - name: getByTitle(title)
    uid: 'onenote!OneNote.PageCollection#getByTitle:member(1)'
    package: onenote!
    fullName: getByTitle(title)
    summary: Gets the collection of pages with the specified title.
    remarks: |-
      \[ [API set: OneNoteApi 1.1](/javascript/api/requirement-sets/onenote/onenote-api-requirement-sets) \]

      #### Examples

      ```TypeScript
      await OneNote.run(async (context) => {

          // Get all the pages in the current section.
          const allPages = context.application.getActiveSection().pages;

          // Queue a command to load the pages.
          // For best performance, request specific properties.
          allPages.load("id"); 

          // Run the queued commands, and return a promise to indicate task completion.
          await context.sync();

          // Get the sections with the specified name.
          const todoPages = allPages.getByTitle("Todo list");

          // Queue a command to load the section.
          // For best performance, request specific properties.
          todoPages.load("id,title"); 

          await context.sync()

          // Iterate through the collection or access items individually by index.
          if (todoPages.items.length > 0) {
              console.log("Page title: " + todoPages.items[0].title);
              console.log("Page ID: " + todoPages.items[0].id);
          }
      });
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getByTitle(title: string): OneNote.PageCollection;'
      parameters:
        - id: title
          description: The title of the page.
          type: string
      return:
        type: '<xref uid="onenote!OneNote.PageCollection:class" />'
        description: ''
  - name: getItem(index)
    uid: 'onenote!OneNote.PageCollection#getItem:member(1)'
    package: onenote!
    fullName: getItem(index)
    summary: Gets a page by ID or by its index in the collection. Read-only.
    remarks: '\[ [API set: OneNoteApi 1.1](/javascript/api/requirement-sets/onenote/onenote-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItem(index: number | string): OneNote.Page;'
      parameters:
        - id: index
          description: 'The ID of the page, or the index location of the page in the collection.'
          type: number | string
      return:
        type: '<xref uid="onenote!OneNote.Page:class" />'
        description: ''
  - name: getItemAt(index)
    uid: 'onenote!OneNote.PageCollection#getItemAt:member(1)'
    package: onenote!
    fullName: getItemAt(index)
    summary: Gets a page on its position in the collection.
    remarks: '\[ [API set: OneNoteApi 1.1](/javascript/api/requirement-sets/onenote/onenote-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItemAt(index: number): OneNote.Page;'
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type: number
      return:
        type: '<xref uid="onenote!OneNote.Page:class" />'
        description: ''
  - name: load(options)
    uid: 'onenote!OneNote.PageCollection#load:member(1)'
    package: onenote!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: OneNote.Interfaces.PageCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions):
        OneNote.PageCollection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="onenote!OneNote.Interfaces.PageCollectionLoadOptions:interface" /> & <xref
            uid="onenote!OneNote.Interfaces.CollectionLoadOptions:interface" />
      return:
        type: '<xref uid="onenote!OneNote.PageCollection:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'onenote!OneNote.PageCollection#load:member(2)'
    package: onenote!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.PageCollection;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="onenote!OneNote.PageCollection:class" />'
        description: |-


          #### Examples

          ```TypeScript
          await OneNote.run(async (context) => {
              
              // Get the pages in the current section.
              const pages = context.application.getActiveSection().pages;
              
              // Queue a command to load the id and title for each page.
              pages.load('id,title');
              
              // Run the queued commands, and return a promise to indicate task completion.
              await context.sync();
                      
              // Display the properties.
              $.each(pages.items, function(index, page) {
                  console.log(page.title);
                  console.log(page.id);
              });
          });
          ```
  - name: load(propertyNamesAndPaths)
    uid: 'onenote!OneNote.PageCollection#load:member(3)'
    package: onenote!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): OneNote.PageCollection;'
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: '<xref uid="office!OfficeExtension.LoadOption:interface" />'
      return:
        type: '<xref uid="onenote!OneNote.PageCollection:class" />'
        description: ''
  - name: toJSON()
    uid: 'onenote!OneNote.PageCollection#toJSON:member(1)'
    package: onenote!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that's
      passed to it.) Whereas the original `OneNote.PageCollection` object is an API object, the `toJSON` method returns
      a plain JavaScript object (typed as `OneNote.Interfaces.PageCollectionData`<!-- -->) that contains an "items"
      array with shallow copies of any loaded properties from the collection's items.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): OneNote.Interfaces.PageCollectionData;'
      return:
        type: '<xref uid="onenote!OneNote.Interfaces.PageCollectionData:interface" />'
        description: ''
  - name: track()
    uid: 'onenote!OneNote.PageCollection#track:member(1)'
    package: onenote!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for
      [context.trackedObjects.add(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and
      get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the
      object to the tracked object collection when the object was first created.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): OneNote.PageCollection;'
      return:
        type: '<xref uid="onenote!OneNote.PageCollection:class" />'
        description: ''
  - name: untrack()
    uid: 'onenote!OneNote.PageCollection#untrack:member(1)'
    package: onenote!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so please remember to free any objects you add,
      once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): OneNote.PageCollection;'
      return:
        type: '<xref uid="onenote!OneNote.PageCollection:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
