### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.PageCollection:class'
    summary: |-
      Represents a collection of pages.

      \[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]
    name: OneNote.PageCollection
    fullName: OneNote.PageCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.PageCollection#context:member'
      - 'onenote!OneNote.PageCollection#count:member'
      - 'onenote!OneNote.PageCollection#getByTitle:member(1)'
      - 'onenote!OneNote.PageCollection#getItem:member(1)'
      - 'onenote!OneNote.PageCollection#getItemAt:member(1)'
      - 'onenote!OneNote.PageCollection#items:member'
      - 'onenote!OneNote.PageCollection#load:member(1)'
      - 'onenote!OneNote.PageCollection#load:member(2)'
      - 'onenote!OneNote.PageCollection#load:member(3)'
      - 'onenote!OneNote.PageCollection#toJSON:member(1)'
      - 'onenote!OneNote.PageCollection#track:member(1)'
      - 'onenote!OneNote.PageCollection#untrack:member(1)'
  - uid: 'onenote!OneNote.PageCollection#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.PageCollection#count:member'
    summary: |-
      Returns the number of pages in the collection. Read-only.

      \[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'onenote!OneNote.PageCollection#getByTitle:member(1)'
    summary: |-
      Gets the collection of pages with the specified title.

      \[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]
    name: getByTitle(title)
    fullName: getByTitle(title)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByTitle(title: string): OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
        description: |-


          #### Examples

          ```javascript
          OneNote.run(function (context) {

              // Get all the pages in the current section.
              var allPages = context.application.getActiveSection().pages;

              // Queue a command to load the pages. 
              // For best performance, request specific properties.
              allPages.load("id"); 

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Get the sections with the specified name.
                      var todoPages = allPages.getByTitle("Todo list");

                      // Queue a command to load the section. 
                      // For best performance, request specific properties.
                      todoPages.load("id,title"); 

                      return context.sync()
                          .then(function () {

                              // Iterate through the collection or access items individually by index.
                              if (todoPages.items.length > 0) {
                                  console.log("Page title: " + todoPages.items[0].title);
                                  console.log("Page ID: " + todoPages.items[0].id);
                              }
                          });
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: title
          description: The title of the page.
          type:
            - string
  - uid: 'onenote!OneNote.PageCollection#getItem:member(1)'
    summary: |-
      Gets a page by ID or by its index in the collection. Read-only.

      \[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number | string): OneNote.Page;'
      return:
        type:
          - 'onenote!OneNote.Page:class'
        description: ''
      parameters:
        - id: index
          description: 'The ID of the page, or the index location of the page in the collection.'
          type:
            - number | string
  - uid: 'onenote!OneNote.PageCollection#getItemAt:member(1)'
    summary: |-
      Gets a page on its position in the collection.

      \[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): OneNote.Page;'
      return:
        type:
          - 'onenote!OneNote.Page:class'
        description: ''
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type:
            - number
  - uid: 'onenote!OneNote.PageCollection#items:member'
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: OneNote.Page[];'
      return:
        type:
          - 'onenote!OneNote.PageCollection#items~0:complex'
  - uid: 'onenote!OneNote.PageCollection#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): OneNote.PageCollection` - Where option is a comma-delimited string or an array
      of strings that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): OneNote.PageCollection` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.PageCollection` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        load(option?: OneNote.Interfaces.PageCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions):
        OneNote.PageCollection;
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.PageCollection#load~0:complex'
  - uid: 'onenote!OneNote.PageCollection#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
        description: |-


          #### Examples

          ```javascript
          OneNote.run(function (context) {
              
              // Get the pages in the current section.
              var pages = context.application.getActiveSection().pages;
              
              // Queue a command to load the id and title for each page.            
              pages.load('id,title');
              
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      
                      // Display the properties.
                      $.each(pages.items, function(index, page) {
                          console.log(page.title);
                          console.log(page.id);
                      });
                  }); 
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.PageCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'onenote!OneNote.PageCollection#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original `OneNote.PageCollection` object is an API object, the `toJSON` method returns
      a plain JavaScript object (typed as `OneNote.Interfaces.PageCollectionData`<!-- -->) that contains an "items"
      array with shallow copies of any loaded properties from the collection's items.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.PageCollectionData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.PageCollectionData:interface'
        description: ''
  - uid: 'onenote!OneNote.PageCollection#track:member(1)'
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
        description: ''
  - uid: 'onenote!OneNote.PageCollection#untrack:member(1)'
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.PageCollection:class'
    name: OneNote.PageCollection
  - uid: 'onenote!OneNote.Page:class'
    name: OneNote.Page
  - uid: 'onenote!OneNote.PageCollection#items~0:complex'
    name: 'OneNote.Page[]'
    fullName: 'OneNote.Page[]'
    spec.typeScript:
      - uid: 'onenote!OneNote.Page:class'
        name: OneNote.Page
        fullName: OneNote.Page
      - name: '[]'
        fullName: '[]'
  - uid: 'onenote!OneNote.PageCollection#load~0:complex'
    name: OneNote.Interfaces.PageCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions
    fullName: OneNote.Interfaces.PageCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'onenote!OneNote.Interfaces.PageCollectionLoadOptions:interface'
        name: OneNote.Interfaces.PageCollectionLoadOptions
        fullName: OneNote.Interfaces.PageCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'onenote!OneNote.Interfaces.CollectionLoadOptions:interface'
        name: OneNote.Interfaces.CollectionLoadOptions
        fullName: OneNote.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'onenote!OneNote.Interfaces.PageCollectionData:interface'
    name: OneNote.Interfaces.PageCollectionData
