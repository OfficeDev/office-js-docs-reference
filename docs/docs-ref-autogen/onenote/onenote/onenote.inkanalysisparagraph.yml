### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.InkAnalysisParagraph:class'
    summary: |-
      Represents ink analysis data for an identified paragraph formed by ink strokes.

      \[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]
    name: OneNote.InkAnalysisParagraph
    fullName: OneNote.InkAnalysisParagraph
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.InkAnalysisParagraph#context:member'
      - 'onenote!OneNote.InkAnalysisParagraph#id:member'
      - 'onenote!OneNote.InkAnalysisParagraph#inkAnalysis:member'
      - 'onenote!OneNote.InkAnalysisParagraph#lines:member'
      - 'onenote!OneNote.InkAnalysisParagraph#load:member(1)'
      - 'onenote!OneNote.InkAnalysisParagraph#load:member(2)'
      - 'onenote!OneNote.InkAnalysisParagraph#load:member(3)'
      - 'onenote!OneNote.InkAnalysisParagraph#set:member(1)'
      - 'onenote!OneNote.InkAnalysisParagraph#set:member(2)'
      - 'onenote!OneNote.InkAnalysisParagraph#toJSON:member(1)'
      - 'onenote!OneNote.InkAnalysisParagraph#track:member(1)'
      - 'onenote!OneNote.InkAnalysisParagraph#untrack:member(1)'
  - uid: 'onenote!OneNote.InkAnalysisParagraph#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.InkAnalysisParagraph#id:member'
    summary: |-
      Gets the ID of the InkAnalysisParagraph object. Read-only.

      \[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.InkAnalysisParagraph#inkAnalysis:member'
    summary: |-
      Reference to the parent InkAnalysisPage. Read-only.

      \[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]
    name: inkAnalysis
    fullName: inkAnalysis
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inkAnalysis: OneNote.InkAnalysis;'
      return:
        type:
          - 'onenote!OneNote.InkAnalysis:class'
  - uid: 'onenote!OneNote.InkAnalysisParagraph#lines:member'
    summary: |-
      Gets the ink analysis lines in this ink analysis paragraph. Read-only.

      \[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]
    name: lines
    fullName: lines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly lines: OneNote.InkAnalysisLineCollection;'
      return:
        type:
          - 'onenote!OneNote.InkAnalysisLineCollection:class'
  - uid: 'onenote!OneNote.InkAnalysisParagraph#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): OneNote.InkAnalysisParagraph` - Where option is a comma-delimited string or an
      array of strings that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): OneNote.InkAnalysisParagraph` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.InkAnalysisParagraph` -
      Only available on collection types. It is similar to the preceding signature. Option.top specifies the maximum
      number of collection items that can be included in the result. Option.skip specifies the number of items that are
      to be skipped and not included in the result. If option.top is specified, the result set will start after skipping
      the specified number of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.InkAnalysisParagraphLoadOptions): OneNote.InkAnalysisParagraph;'
      return:
        type:
          - 'onenote!OneNote.InkAnalysisParagraph:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.InkAnalysisParagraphLoadOptions:interface'
  - uid: 'onenote!OneNote.InkAnalysisParagraph#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.InkAnalysisParagraph;'
      return:
        type:
          - 'onenote!OneNote.InkAnalysisParagraph:class'
        description: |-


          #### Examples

          ```javascript
          OneNote.run(function (ctx) {        
              var app = ctx.application;
              
              // Gets the active page.
              var page = app.getActivePage();
              
              // Load a line of ink words.
              page.load('inkAnalysisOrNull/paragraphs/lines');
              
              return ctx.sync()
                  .then(function() {
                      var inkParagraphs = page.inkAnalysisOrNull.paragraphs;
                      
                      // Log id of each line in ink paragraphs.
                      $.each(inkParagraphs.items, function(i, inkParagraph){
                          var inkLines = inkParagraph.lines;
                          $.each(inkLines.items, function (j, inkLine) {
                              console.log(inkLine.id);
                          })
                      })
                  })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          }); 
          ```
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.InkAnalysisParagraph#load:member(3)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.InkAnalysisParagraph;'
      return:
        type:
          - 'onenote!OneNote.InkAnalysisParagraph:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and
            propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.InkAnalysisParagraph#set:member(1)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: OneNote.InkAnalysisParagraph): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.InkAnalysisParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type:
            - 'onenote!OneNote.Interfaces.InkAnalysisParagraphUpdateData:interface'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'onenote!OneNote.InkAnalysisParagraph#set:member(2)'
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: OneNote.InkAnalysisParagraph): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'onenote!OneNote.InkAnalysisParagraph:class'
  - uid: 'onenote!OneNote.InkAnalysisParagraph#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original OneNote.InkAnalysisParagraph object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `OneNote.Interfaces.InkAnalysisParagraphData`<!-- -->) that contains
      shallow copies of any loaded child properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.InkAnalysisParagraphData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.InkAnalysisParagraphData:interface'
        description: ''
  - uid: 'onenote!OneNote.InkAnalysisParagraph#track:member(1)'
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.InkAnalysisParagraph;'
      return:
        type:
          - 'onenote!OneNote.InkAnalysisParagraph:class'
        description: ''
  - uid: 'onenote!OneNote.InkAnalysisParagraph#untrack:member(1)'
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.InkAnalysisParagraph;'
      return:
        type:
          - 'onenote!OneNote.InkAnalysisParagraph:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.InkAnalysis:class'
    name: OneNote.InkAnalysis
  - uid: 'onenote!OneNote.InkAnalysisLineCollection:class'
    name: OneNote.InkAnalysisLineCollection
  - uid: 'onenote!OneNote.InkAnalysisParagraph:class'
    name: OneNote.InkAnalysisParagraph
  - uid: 'onenote!OneNote.Interfaces.InkAnalysisParagraphLoadOptions:interface'
    name: OneNote.Interfaces.InkAnalysisParagraphLoadOptions
  - uid: 'onenote!OneNote.Interfaces.InkAnalysisParagraphUpdateData:interface'
    name: Interfaces.InkAnalysisParagraphUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'onenote!OneNote.Interfaces.InkAnalysisParagraphData:interface'
    name: OneNote.Interfaces.InkAnalysisParagraphData
