### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.InkAnalysisParagraph
    summary: |-
      Represents ink analysis data for an identified paragraph formed by ink strokes.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: OneNote.InkAnalysisParagraph
    fullName: onenote.OneNote.InkAnalysisParagraph
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.InkAnalysisParagraph.id
      - onenote.OneNote.InkAnalysisParagraph.inkAnalysis
      - onenote.OneNote.InkAnalysisParagraph.lines
      - onenote.OneNote.InkAnalysisParagraph.load
      - onenote.OneNote.InkAnalysisParagraph.set
      - onenote.OneNote.InkAnalysisParagraph.toJSON
      - onenote.OneNote.InkAnalysisParagraph.track
      - onenote.OneNote.InkAnalysisParagraph.untrack
  - uid: onenote.OneNote.InkAnalysisParagraph.id
    summary: |-
      Gets the ID of the InkAnalysisParagraph object. Read-only.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: id
    fullName: onenote.OneNote.InkAnalysisParagraph.id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.InkAnalysisParagraph.inkAnalysis
    summary: |-
      Reference to the parent InkAnalysisPage. Read-only.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: inkAnalysis
    fullName: onenote.OneNote.InkAnalysisParagraph.inkAnalysis
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inkAnalysis: OneNote.InkAnalysis;'
      return:
        type:
          - OneNote.InkAnalysis
  - uid: onenote.OneNote.InkAnalysisParagraph.lines
    summary: |-
      Gets the ink analysis lines in this ink analysis paragraph. Read-only.

      \[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]
    name: lines
    fullName: onenote.OneNote.InkAnalysisParagraph.lines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly lines: OneNote.InkAnalysisLineCollection;'
      return:
        type:
          - OneNote.InkAnalysisLineCollection
  - uid: onenote.OneNote.InkAnalysisParagraph.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: onenote.OneNote.InkAnalysisParagraph.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.InkAnalysisParagraphLoadOptions): OneNote.InkAnalysisParagraph;'
      return:
        type:
          - OneNote.InkAnalysisParagraph
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OneNote.Interfaces.InkAnalysisParagraphLoadOptions
    remarks: |


      #### Examples

      ```javascript
      OneNote.run(function (ctx) {        
          var app = ctx.application;
          
          // Gets the active page.
          var page = app.getActivePage();
          
          // Load a line of ink words.
          page.load('inkAnalysisOrNull/paragraphs/lines');
          
          return ctx.sync()
              .then(function() {
                  var inkParagraphs = page.inkAnalysisOrNull.paragraphs;
                  
                  // Log id of each line in ink paragraphs.
                  $.each(inkParagraphs.items, function(i, inkParagraph){
                      var inkLines = inkParagraph.lines;
                      $.each(inkLines.items, function (j, inkLine) {
                          console.log(inkLine.id);
                      })
                  })
              })
      })
      .catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      }); 
      ```
  - uid: onenote.OneNote.InkAnalysisParagraph.set
    summary: 'Sets multiple properties on the object at the same time, based on JSON input.'
    name: 'set(properties, options)'
    fullName: onenote.OneNote.InkAnalysisParagraph.set
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        set(properties: Interfaces.InkAnalysisParagraphUpdateData, options?: {
                    throwOnReadOnly?: boolean;
                }): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Interfaces.InkAnalysisParagraphUpdateData
        - id: options
          description: ''
          type:
            - |-
              {
                          /**
                           * Throw an error if the passed-in property list includes read-only properties (default = true).
                           */
                          throwOnReadOnly?: boolean;
                      }
  - uid: onenote.OneNote.InkAnalysisParagraph.toJSON
    name: toJSON()
    fullName: onenote.OneNote.InkAnalysisParagraph.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.InkAnalysisParagraphData;'
      return:
        type:
          - OneNote.Interfaces.InkAnalysisParagraphData
        description: ''
  - uid: onenote.OneNote.InkAnalysisParagraph.track
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: onenote.OneNote.InkAnalysisParagraph.track
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.InkAnalysisParagraph;'
      return:
        type:
          - OneNote.InkAnalysisParagraph
        description: ''
  - uid: onenote.OneNote.InkAnalysisParagraph.untrack
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: onenote.OneNote.InkAnalysisParagraph.untrack
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.InkAnalysisParagraph;'
      return:
        type:
          - OneNote.InkAnalysisParagraph
        description: ''
