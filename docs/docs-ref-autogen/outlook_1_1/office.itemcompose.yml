### YamlMime:UniversalReference
items:
  - uid: Outlook_1_1.Office.ItemCompose
    summary: >-
      The compose mode of [Office.context.mailbox.item](xref:Outlook_1_1.Office.Item)<!-- -->.


      Important: This is an internal Outlook object, not directly exposed through existing interfaces. You should treat
      this as a mode of `Office.context.mailbox.item`. Refer to the Object Model pages for more information.
    name: Office.ItemCompose
    fullName: Outlook_1_1.Office.ItemCompose
    langs:
      - typeScript
    type: interface
    extends:
      - Item
    package: Outlook_1_1
    children:
      - Outlook_1_1.Office.ItemCompose.addFileAttachmentAsync
      - Outlook_1_1.Office.ItemCompose.addItemAttachmentAsync
      - Outlook_1_1.Office.ItemCompose.getSelectedDataAsync
      - Outlook_1_1.Office.ItemCompose.removeAttachmentAsync
      - Outlook_1_1.Office.ItemCompose.subject
  - uid: Outlook_1_1.Office.ItemCompose.addFileAttachmentAsync
    summary: >-
      Adds a file to a message or appointment as an attachment.


      The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose
      form.


      You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same
      session.


      \[ [API set: Mailbox 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      [Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->: ReadWriteItem


      Applicable Outlook mode: Compose


      Errors:


      AttachmentSizeExceeded - The attachment is larger than allowed.


      FileTypeNotSupported - The attachment has an extension that is not allowed.


      NumberOfAttachmentsExceeded - The message or appointment has too many attachments.


      In addition to this signature, the method also has the following signatures:


      `addFileAttachmentAsync(uri: string, attachmentName: string): void;`


      `addFileAttachmentAsync(uri: string, attachmentName: string, options: AsyncContextOptions): void;`


      `addFileAttachmentAsync(uri: string, attachmentName: string, callback: (result: AsyncResult) =&gt; void): void;`
    name: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    fullName: Outlook_1_1.Office.ItemCompose.addFileAttachmentAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addFileAttachmentAsync(uri: string, attachmentName: string, options?: AsyncContextOptions, callback?: (result:
        AsyncResult) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: >-
            The URI that provides the location of the file to attach to the message or appointment. The maximum length
            is 2048 characters.
          type:
            - string
        - id: attachmentName
          description: >-
            The name of the attachment that is shown while the attachment is uploading. The maximum length is 255
            characters.
          type:
            - string
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method. inInline: If true, indicates that the
            attachment will be shown inline in the message body, and should not be displayed in the attachment list.
          type:
            - AsyncContextOptions
        - id: callback
          description: >-
            When the method completes, the function passed in the callback parameter is called with a single parameter
            of type asyncResult. On success, the attachment identifier will be provided in the asyncResult.value
            property. If uploading the attachment fails, the asyncResult object will contain an Error object that
            provides a description of the error.
          type:
            - '(result: AsyncResult) => void'
  - uid: Outlook_1_1.Office.ItemCompose.addItemAttachmentAsync
    summary: >-
      Adds an Exchange item, such as a message, as an attachment to the message or appointment.


      The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the
      compose form. If you specify a callback method, the method is called with one parameter, asyncResult, which
      contains either the attachment identifier or a code that indicates any error that occurred while attaching the
      item. You can use the options parameter to pass state information to the callback method, if needed.


      You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same
      session.


      If your Office add-in is running in Outlook Web App, the addItemAttachmentAsync method can attach items to items
      other than the item that you are editing; however, this is not supported and is not recommended.


      \[ [API set: Mailbox 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      [Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->: ReadWriteItem


      Applicable Outlook mode: Compose


      Errors:


      NumberOfAttachmentsExceeded - The message or appointment has too many attachments.


      In addition to the main signature, this method also has these signatures:


      `addItemAttachmentAsync(itemId: any, attachmentName: string): void;`


      `addItemAttachmentAsync(itemId: any, attachmentName: string, options: AsyncContextOptions): void;`


      `addItemAttachmentAsync(itemId: any, attachmentName: string, callback: (result: AsyncResult) =&gt; void): void;`
    name: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    fullName: Outlook_1_1.Office.ItemCompose.addItemAttachmentAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addItemAttachmentAsync(itemId: any, attachmentName: string, options?: AsyncContextOptions, callback?: (result:
        AsyncResult) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: The Exchange identifier of the item to attach. The maximum length is 100 characters.
          type:
            - any
        - id: attachmentName
          description: >-
            The name of the attachment that is shown while the attachment is uploading. The maximum length is 255
            characters.
          type:
            - string
        - id: options
          description: >-
            An object literal that contains one or more of the following properties. asyncContext: Developers can
            provide any object they wish to access in the callback method.
          type:
            - AsyncContextOptions
        - id: callback
          description: >-
            When the method completes, the function passed in the callback parameter is called with a single parameter
            of type AsyncResult. On success, the attachment identifier will be provided in the asyncResult.value
            property. If adding the attachment fails, the asyncResult object will contain an Error object that provides
            a description of the error.
          type:
            - '(result: AsyncResult) => void'
  - uid: Outlook_1_1.Office.ItemCompose.getSelectedDataAsync
    summary: >-
      Asynchronously returns selected data from the subject or body of a message.


      If there is no selection but the cursor is in the body or subject, the method returns null for the selected data.
      If a field other than the body or subject is selected, the method returns the InvalidSelection error.


      To access the selected data from the callback method, call asyncResult.value.data. To access the source property
      that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      [Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->: ReadWriteItem


      Applicable Outlook mode: Compose
    name: 'getSelectedDataAsync(coercionType, callback)'
    fullName: Outlook_1_1.Office.ItemCompose.getSelectedDataAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: CoercionType, callback: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: The selected data as a string with format determined by coercionType.
      parameters:
        - id: coercionType
          description: >-
            Requests a format for the data. If Text, the method returns the plain text as a string , removing any HTML
            tags present. If HTML, the method returns the selected text, whether it is plaintext or HTML.
          type:
            - CoercionType
        - id: callback
          description: >-
            When the method completes, the function passed in the callback parameter is called with a single parameter
            of type AsyncResult.
          type:
            - '(result: AsyncResult) => void'
  - uid: Outlook_1_1.Office.ItemCompose.removeAttachmentAsync
    summary: >-
      Removes an attachment from a message or appointment.


      The removeAttachmentAsync method removes the attachment with the specified identifier from the item. As a best
      practice, you should use the attachment identifier to remove an attachment only if the same mail app has added
      that attachment in the same session. In Outlook Web App and OWA for Devices, the attachment identifier is valid
      only within the same session. A session is over when the user closes the app, or if the user starts composing in
      an inline form and subsequently pops out the inline form to continue in a separate window.


      \[ [API set: Mailbox 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      [Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->: ReadWriteItem


      Applicable Outlook mode: Compose


      Errors: InvalidAttachmentId - The attachment identifier does not exist.


      In addition to this signature, the method also has the following signatures:


      `removeAttachmentAsync(attachmentIndex: string): void;`


      `removeAttachmentAsync(attachmentIndex: string, options: AsyncContextOptions): void;`


      `removeAttachmentAsync(attachmentIndex: string, callback: (result: AsyncResult) =&gt; void): void;`
    name: 'removeAttachmentAsync(attachmentIndex, options, callback)'
    fullName: Outlook_1_1.Office.ItemCompose.removeAttachmentAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        removeAttachmentAsync(attachmentIndex: string, options?: AsyncContextOptions, callback?: (result: AsyncResult)
        => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentIndex
          description: The identifier of the attachment to remove. The maximum length of the string is 100 characters.
          type:
            - string
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type AsyncResult. If removing the attachment fails, the asyncResult.error property will contain
            an error code with the reason for the failure.
          type:
            - '(result: AsyncResult) => void'
  - uid: Outlook_1_1.Office.ItemCompose.subject
    summary: |-
      Gets or sets the description that appears in the subject field of an item.

      The subject property gets or sets the entire subject of the item, as sent by the email server.

      The subject property returns a Subject object that provides methods to get and set the subject.

      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      [Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->: ReadItem


      Applicable Outlook mode: Compose or read
    name: subject
    fullName: Outlook_1_1.Office.ItemCompose.subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: Subject;'
      return:
        type:
          - Subject
