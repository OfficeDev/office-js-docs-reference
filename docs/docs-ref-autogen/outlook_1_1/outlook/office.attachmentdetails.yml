### YamlMime:TSType
name: Office.AttachmentDetails
uid: 'outlook!Office.AttachmentDetails:interface'
package: outlook!
fullName: Office.AttachmentDetails
summary: >-
  Represents an attachment on an item from the server. Read mode only.


  An array of `AttachmentDetails` objects is returned as the attachments
  property of an appointment or message item.


  \[ [API set: Mailbox
  1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)
  \]
remarks: >-
  **[Minimum permission
  level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
  -->**: `ReadItem`


  **[Applicable Outlook
  mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
  -->**: Read


  #### Examples


  ```javascript

  // The following code builds an HTML string with details

  // of all attachments on the current item.

  var item = Office.context.mailbox.item;

  var outputString = "";


  if (item.attachments.length > 0) {
      for (i = 0 ; i < item.attachments.length ; i++) {
          var attachment = item.attachments[i];
          outputString += "<BR>" + i + ". Name: ";
          outputString += attachment.name;
          outputString += "<BR>ID: " + attachment.id;
          outputString += "<BR>contentType: " + attachment.contentType;
          outputString += "<BR>size: " + attachment.size;
          outputString += "<BR>attachmentType: " + attachment.attachmentType;
          outputString += "<BR>isInline: " + attachment.isInline;
      }
  }


  console.log(outputString);

  ```
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: attachmentType
    uid: 'outlook!Office.AttachmentDetails#attachmentType:member'
    package: outlook!
    fullName: attachmentType
    summary: Gets a value that indicates the type of an attachment.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'attachmentType: MailboxEnums.AttachmentType | string;'
      return:
        type: >-
          <xref uid="outlook!Office.MailboxEnums.AttachmentType:enum" /> |
          string
  - name: contentType
    uid: 'outlook!Office.AttachmentDetails#contentType:member'
    package: outlook!
    fullName: contentType
    summary: Gets the MIME content type of the attachment.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'contentType: string;'
      return:
        type: string
  - name: id
    uid: 'outlook!Office.AttachmentDetails#id:member'
    package: outlook!
    fullName: id
    summary: >-
      Gets the Exchange attachment ID of the attachment. However, if the
      attachment type is `MailboxEnums.AttachmentType.Cloud`<!-- -->, then a URL
      for the file is returned.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string;'
      return:
        type: string
  - name: isInline
    uid: 'outlook!Office.AttachmentDetails#isInline:member'
    package: outlook!
    fullName: isInline
    summary: >-
      Gets a value that indicates whether the attachment should be displayed in
      the body of the item.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isInline: boolean;'
      return:
        type: boolean
  - name: name
    uid: 'outlook!Office.AttachmentDetails#name:member'
    package: outlook!
    fullName: name
    summary: >-
      Gets the name of the attachment.


      **Important**: For message or appointment items that were attached by
      drag-and-drop or "Attach Item", `name` includes a file extension in
      Outlook on Mac, but excludes the extension on the web or Windows.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name: string;'
      return:
        type: string
  - name: size
    uid: 'outlook!Office.AttachmentDetails#size:member'
    package: outlook!
    fullName: size
    summary: Gets the size of the attachment in bytes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'size: number;'
      return:
        type: number
