### YamlMime:TSType
name: Excel.Interfaces.TableRowLoadOptions
uid: 'excel!Excel.Interfaces.TableRowLoadOptions:interface'
package: excel!
fullName: Excel.Interfaces.TableRowLoadOptions
summary: >-
  Represents a row in a table.


  Note that unlike ranges or columns, which will adjust if new rows or columns are added before them, a `TableRow`
  object represents the physical location of the table row, but not the data. That is, if the data is sorted or if new
  rows are added, a table row will continue to point at the index for which it was created.
remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: $all
    uid: 'excel!Excel.Interfaces.TableRowLoadOptions#$all:member'
    package: excel!
    fullName: $all
    summary: >-
      Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`<!-- -->) but not
      the navigational properties (such as `Range.format.fill.color`<!-- -->).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: '$all?: boolean;'
      return:
        type: boolean
  - name: index
    uid: 'excel!Excel.Interfaces.TableRowLoadOptions#index:member'
    package: excel!
    fullName: index
    summary: Returns the index number of the row within the rows collection of the table. Zero-indexed.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'index?: boolean;'
      return:
        type: boolean
  - name: values
    uid: 'excel!Excel.Interfaces.TableRowLoadOptions#values:member'
    package: excel!
    fullName: values
    summary: >-
      Represents the raw values of the specified range. The data returned could be a string, number, or boolean. Cells
      that contain an error will return the error string. If the returned value starts with a plus ("+"), minus ("-"),
      or equal sign ("="), Excel interprets this value as a formula.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'values?: boolean;'
      return:
        type: boolean
  - name: valuesAsJson
    uid: 'excel!Excel.Interfaces.TableRowLoadOptions#valuesAsJson:member'
    package: excel!
    fullName: valuesAsJson
    summary: >-
      A JSON representation of the values in the cells in this table row. Unlike `TableRow.values`<!-- -->,
      `TableRow.valuesAsJson` supports all data types which can be in a cell. Examples include formatted number values
      and web images, in addition to the standard boolean, number, and string values. Data returned from this API always
      aligns with the en-US locale. To retrieve data in the user's display locale, use `TableRow.valuesAsJsonLocal`<!--
      -->.
    remarks: '\[ [API set: ExcelApi 1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'valuesAsJson?: boolean;'
      return:
        type: boolean
  - name: valuesAsJsonLocal
    uid: 'excel!Excel.Interfaces.TableRowLoadOptions#valuesAsJsonLocal:member'
    package: excel!
    fullName: valuesAsJsonLocal
    summary: >-
      A JSON representation of the values in the cells in this table row. Unlike `TableRow.values`<!-- -->,
      `TableRow.valuesAsJsonLocal` supports all data types which can be in a cell. Examples include formatted number
      values and web images, in addition to the standard boolean, number, and string values. Data returned from this API
      always aligns with the user's display locale. To retrieve data independent of locale, use
      `TableRow.valuesAsJson`<!-- -->.
    remarks: '\[ [API set: ExcelApi 1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'valuesAsJsonLocal?: boolean;'
      return:
        type: boolean
