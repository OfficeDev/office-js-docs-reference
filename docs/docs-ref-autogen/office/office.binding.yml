### YamlMime:UniversalReference
items:
  - uid: office.Office.Binding
    summary: |-
      Represents a binding to a section of the document.

      \*\*Hosts\*\*: Access, Excel, Word

      \*\*Available in Requirement sets\*\*: MatrixBinding, TableBinding, TextBinding

      \*\*Last changed in\*\*: 1.1
    remarks: >-
      The Binding object exposes the functionality possessed by all bindings regardless of type.


      The Binding object is never called directly. It is the abstract parent class of the objects that represent each
      type of binding: MatrixBinding, TableBinding, or TextBinding. All three of these objects inherit the getDataAsync
      and setDataAsync methods from the Binding object that enable to you interact with the data in the binding. They
      also inherit the id and type properties for querying those property values. Additionally, the MatrixBinding and
      TableBinding objects expose additional methods for matrix- and table-specific features, such as counting the
      number of rows and columns.
    name: Office.Binding
    fullName: office.Office.Binding
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.Binding.addHandlerAsync
      - office.Office.Binding.document
      - office.Office.Binding.getDataAsync
      - office.Office.Binding.id
      - office.Office.Binding.removeHandlerAsync
      - office.Office.Binding.setDataAsync
      - office.Office.Binding.type
  - uid: office.Office.Binding.addHandlerAsync
    summary: Adds an event handler to the object for the specified event type.
    remarks: >-
      You can add multiple event handlers for the specified eventType as long as the name of each event handler function
      is unique.
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: office.Office.Binding.addHandlerAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addHandlerAsync(eventType: EventType, handler: any, options?: any, callback?: (result: AsyncResult) => void):
        void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: >-
            The event type. For example, for bindings, it can be \*\*Office.EventType.BindingSelectionChanged\*\*,
            \*\*Office.EventType.BindingDataChanged\*\*, or the corresponding text values of these enumerations.
          type:
            - EventType
        - id: handler
          description: The event handler function to add.
          type:
            - any
        - id: options
          description: 'Syntax example: {asyncContext:context} asyncContext: Object keeping state for the callback'
          type:
            - any
        - id: callback
          description: 'A function that is invoked when the callback returns, whose only parameter is of type AsyncResult.'
          type:
            - '(result: AsyncResult) => void'
  - uid: office.Office.Binding.document
    summary: |-
      Get the Document object associated with the binding.

      \*\*Hosts\*\*: Access, Excel, Word

      \*\*Last changed in\*\*: 1.1
    name: document
    fullName: office.Office.Binding.document
    langs:
      - typeScript
    type: property
    syntax:
      content: 'document: Document;'
      return:
        type:
          - Document
  - uid: office.Office.Binding.getDataAsync
    summary: |-
      Returns the data contained within the binding.

      Hosts: Access, Excel, Word

      Available in Requirement sets: MatrixBindings, TableBindings, TextBindings

      Last changed in: 1.1
    remarks: >-
      When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values
      if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a
      contiguous and valid range).
    name: 'getDataAsync(options, callback)'
    fullName: office.Office.Binding.getDataAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataAsync(options?: any, callback?: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: >-
            Any of the following: coercionType: The expected shape of the selection. Use Office.CoercionType or text
            value. Default: The original, uncoerced type of the binding. valueFormat: Specifies whether values, such as
            numbers and dates, are returned with their formatting applied. Use Office.ValueFormat or text value.
            Default: Unformatted data. startRow: For table or matrix bindings, specifies the zero-based starting row for
            a subset of the data in the binding. Default is first row. startColumn: For table or matrix bindings,
            specifies the zero-based starting column for a subset of the data in the binding. Default is first column.
            rowCount: For table or matrix bindings, specifies the number of rows offset from the startRow. Default is
            all subsequent rows. columnCount: For table or matrix bindings, specifies the number of columns offset from
            the startColumn. Default is all subsequent columns. filterType: Specify whether to get only the visible
            (filtered in) data or all the data (default is all). Useful when filtering data. Use Office.FilterType or
            text value. asyncContext: Object keeping state for the callback rows: Only for table bindings in content
            add-ins for Access. Specifies the pre-defined string "thisRow" to get data in the currently selected row.
            Syntax example: {coercionType: 'matrix,'valueFormat: 'formatted', filterType:'all'}
          type:
            - any
        - id: callback
          description: The optional callback method
          type:
            - '(result: AsyncResult) => void'
  - uid: office.Office.Binding.id
    summary: |-
      A string that uniquely identifies this binding among the bindings in the same Document object.

      Hosts: Access, Excel, Word

      Last changed in: 1.1
    name: id
    fullName: office.Office.Binding.id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
  - uid: office.Office.Binding.removeHandlerAsync
    summary: |-
      Removes the specified handler from the binding for the specified event type.

      \*\*Hosts\*\*: Access, Excel, Word

      \*\*Available in Requirement set\*\*: BindingEvents

      \*\*Last changed in\*\*: 1.1
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: office.Office.Binding.removeHandlerAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: EventType, options?: any, callback?: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: The event type. For binding can be 'bindingDataChanged' and 'bindingSelectionChanged'
          type:
            - EventType
        - id: options
          description: >-
            Any of the following: handler: Indicates a specific handler to be removed, if not specified all handlers are
            removed asyncContext: A user-defined item of any type that is returned in the AsyncResult object without
            being altered. Syntax example: {handler:eventHandler}
          type:
            - any
        - id: callback
          description: 'A function that is invoked when the callback returns, whose only parameter is of type AsyncResult.'
          type:
            - '(result: AsyncResult) => void'
  - uid: office.Office.Binding.setDataAsync
    summary: |-
      Writes data to the bound section of the document represented by the specified binding object.

      \*\*Hosts\*\*: Access, Excel, Word

      \*\*Available in Requirement sets\*\*: MatrixBindings, TableBindings, TextBindings

      \*\*Last changed in\*\*: 1.1
    name: 'setDataAsync(data, options, callback)'
    fullName: office.Office.Binding.setDataAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDataAsync(data: TableData | any, options?: any, callback?: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: >-
            The data to be set in the current selection. Possible data types by host: string: Excel, Excel Online, Word,
            and Word Online only array of arrays: Excel and Word only \[TableData\](office.tabledata.md): Access, Excel,
            and Word only HTML: Word and Word Online only Office Open XML: Word only
          type:
            - TableData | any
        - id: options
          description: >-
            Any of the following: cellFormat: For an inserted table, a list of key-value pairs that specify a range of
            columns, rows, or cells and the cell formatting to apply to that range. coercionType: Explicitly sets the
            shape of the data object. Use Office.CoercionType or text value. If not supplied is inferred from the data
            type. columns: Only for table bindings in content add-ins for Access. Array of strings. Specifies the column
            names. rows: Only for table bindings in content add-ins for Access. \*\*Office.TableRange.ThisRow\*\*
            Specifies the pre-defined string "thisRow" to set data in the currently selected row. startRow: Specifies
            the zero-based starting row for a subset of the data in the binding. Only for table or matrix bindings. If
            omitted, data is set starting in the first row. startColumn: Specifies the zero-based starting column for a
            subset of the data. Only for table or matrix bindings. If omitted, data is set starting in the first column.
            tableOptions: For an inserted table, a list of key-value pairs that specify table formatting options, such
            as header row, total row, and banded rows. asyncContext: A user-defined item of any type that is returned in
            the AsyncResult object without being altered.
          type:
            - any
        - id: callback
          description: The optional callback method
          type:
            - '(result: AsyncResult) => void'
  - uid: office.Office.Binding.type
    summary: |-
      Gets the type of the binding.

      \*\*Hosts\*\*: Access, Excel, Word

      \*\*Last changed in\*\*: 1.1
    name: type
    fullName: office.Office.Binding.type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type: BindingType;'
      return:
        type:
          - BindingType
