### YamlMime:TSType
name: OfficeRuntime.AuthOptions
uid: 'office-runtime!OfficeRuntime.AuthOptions:interface'
package: office-runtime!
fullName: OfficeRuntime.AuthOptions
summary: >-
  Provides options for the user experience when Office obtains an access token
  to the add-in from AAD v. 2.0 with the `getAccessToken` method.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: allowConsentPrompt
    uid: 'office-runtime!OfficeRuntime.AuthOptions#allowConsentPrompt:member'
    package: office-runtime!
    fullName: allowConsentPrompt
    summary: >-
      Allows Office to get an access token silently or through interactive
      consent, if one is required. Default value is `false`<!-- -->. If set to
      `false`<!-- -->, Office will silently try to get an access token. If it
      fails to do so, Office will return a descriptive error. If set to
      `true`<!-- -->, Office will show an interactive consent UI after it fails
      to silently get an access token. The prompt will only allow consent to the
      AAD profile scope, not to any Microsoft Graph scopes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allowConsentPrompt?: boolean;'
      return:
        type: boolean
  - name: allowSignInPrompt
    uid: 'office-runtime!OfficeRuntime.AuthOptions#allowSignInPrompt:member'
    package: office-runtime!
    fullName: allowSignInPrompt
    summary: >-
      Allows Office to get an access token silently provided consent is present
      or show interactive UI to sign in the user. Default value is `false`<!--
      -->. If set to `false`<!-- -->, Office will silently try to get an access
      token. If it fails to do so, Office will return a descriptive error. If
      set to `true`<!-- -->, Office will show an interactive sign-in UI after it
      fails to silently get an access token.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allowSignInPrompt?: boolean;'
      return:
        type: boolean
  - name: asyncContext
    uid: 'office-runtime!OfficeRuntime.AuthOptions#asyncContext:member'
    package: office-runtime!
    fullName: asyncContext
    summary: >-
      A user-defined item of any type that is returned, unchanged, in the
      `asyncContext` property of the `AsyncResult` object that is passed to a
      callback.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'asyncContext?: any;'
      return:
        type: any
  - name: authChallenge
    uid: 'office-runtime!OfficeRuntime.AuthOptions#authChallenge:member'
    package: office-runtime!
    fullName: authChallenge
    summary: >-
      Causes Office to prompt the user to provide the additional factor when the
      tenancy being targeted by Microsoft Graph requires multifactor
      authentication. The string value identifies the type of additional factor
      that is required. In most cases, you won't know at development time
      whether the user's tenant requires an additional factor or what the string
      should be. So this option would be used in a "second try" call of
      `getAccessToken` after Microsoft Graph has sent an error requesting the
      additional factor and containing the string that should be used with the
      `authChallenge` option.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'authChallenge?: string;'
      return:
        type: string
  - name: forceAddAccount
    uid: 'office-runtime!OfficeRuntime.AuthOptions#forceAddAccount:member'
    package: office-runtime!
    fullName: forceAddAccount
    summary: >-
      Prompts the user to add their Office account (or to switch to it, if it is
      already added). Default value is `false`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `allowSignInPrompt` instead.
    syntax:
      content: 'forceAddAccount?: boolean;'
      return:
        type: boolean
  - name: forceConsent
    uid: 'office-runtime!OfficeRuntime.AuthOptions#forceConsent:member'
    package: office-runtime!
    fullName: forceConsent
    summary: >-
      Causes Office to display the add-in consent experience. Useful if the
      add-in's Azure permissions have changed or if the user's consent has been
      revoked. Default value is `false`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `allowConsentPrompt` instead.
    syntax:
      content: 'forceConsent?: boolean;'
      return:
        type: boolean
  - name: forMSGraphAccess
    uid: 'office-runtime!OfficeRuntime.AuthOptions#forMSGraphAccess:member'
    package: office-runtime!
    fullName: forMSGraphAccess
    summary: >-
      Causes Office to return a descriptive error when the add-in wants to
      access Microsoft Graph and the user/admin has not granted consent to Graph
      scopes. Default value is `false`<!-- -->. Office only supports consent to
      Graph scopes when the add-in has been deployed by a tenant admin. This
      information will not be available during development. Setting this option
      to `true` will cause Office to inform your add-in beforehand (by returning
      a descriptive error) if Graph access will fail.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'forMSGraphAccess?: boolean;'
      return:
        type: boolean
