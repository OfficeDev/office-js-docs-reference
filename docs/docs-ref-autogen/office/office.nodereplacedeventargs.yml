### YamlMime:UniversalReference
items:
  - uid: office.Office.NodeReplacedEventArgs
    summary: Provides information about the replaced node that raised the nodeReplaced event.
    name: Office.NodeReplacedEventArgs
    fullName: office.Office.NodeReplacedEventArgs
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.NodeReplacedEventArgs.isUndoRedo
      - office.Office.NodeReplacedEventArgs.newNode
      - office.Office.NodeReplacedEventArgs.oldNode
  - uid: office.Office.NodeReplacedEventArgs.isUndoRedo
    summary: Gets whether the replaced node was inserted as part of an undo or redo operation by the user.
    name: isUndoRedo
    fullName: office.Office.NodeReplacedEventArgs.isUndoRedo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isUndoRedo: boolean;'
      return:
        type:
          - boolean
  - uid: office.Office.NodeReplacedEventArgs.newNode
    summary: |-
      Gets the node that was just added to the CustomXMLPart object.

      Note that this node may have children, if a subtree was just added to the document.
    name: newNode
    fullName: office.Office.NodeReplacedEventArgs.newNode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'newNode: CustomXmlNode;'
      return:
        type:
          - CustomXmlNode
  - uid: office.Office.NodeReplacedEventArgs.oldNode
    summary: >-
      Gets the node which was just deleted (replaced) from the CustomXmlPart object.


      Note that this node may have children, if a subtree is being removed from the document. Also, this node will be a
      "disconnected" node in that you can query down from the node, but you cannot query up the tree - the node appears
      to exist alone.
    name: oldNode
    fullName: office.Office.NodeReplacedEventArgs.oldNode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'oldNode: CustomXmlNode;'
      return:
        type:
          - CustomXmlNode
