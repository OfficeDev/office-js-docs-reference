### YamlMime:UniversalReference
items:
  - uid: 'office!Office.AddinCommands.Event:interface'
    summary: >-
      The event object is passed as a parameter to add-in functions invoked by UI-less command buttons. The object
      allows the add-in to identify which button was clicked and to signal the host that it has completed its
      processing.
    remarks: >-
      See [Add-in commands requirement
      sets](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/add-in-commands-requirement-sets)
      for more support information.


      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: Restricted


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or
      Read
    name: Office.AddinCommands.Event
    fullName: Office.AddinCommands.Event
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.AddinCommands.Event#completed:member(1)'
      - 'office!Office.AddinCommands.Event#source:member'
  - uid: 'office!Office.AddinCommands.Event#completed:member(1)'
    summary: >-
      Indicates that the add-in has completed processing that was triggered by an add-in command button or event
      handler.


      This method must be called at the end of a function which was invoked by an add-in command defined with an Action
      element with an xsi:type attribute set to ExecuteFunction. Calling this method signals the host client that the
      function is complete and that it can clean up any state involved with invoking the function. For example, if the
      user closes Outlook before this method is called, Outlook will warn that a function is still executing.


      This method must be called in an event handler added via Office.context.mailbox.addHandlerAsync after completing
      processing of the event.


      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/javascript-api-for-office) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: Restricted


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or
      Read


      Mailbox 1.3 does not have the `options` parameter while Mailbox Preview does have support for `options` parameter.
    name: completed(options)
    fullName: completed(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'completed(options?: EventCompletedOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: Optional. An object that specifies behavior options for when the event is completed.
          type:
            - 'office!Office.AddinCommands.EventCompletedOptions:interface'
  - uid: 'office!Office.AddinCommands.Event#source:member'
    summary: Information about the control that triggered calling this function.
    remarks: >-
      This property is only supported in Outlook in [requirement
      set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)
      Mailbox 1.3 and later.
    name: source
    fullName: source
    langs:
      - typeScript
    type: property
    syntax:
      content: 'source:Source;'
      return:
        type:
          - 'office!Office.AddinCommands.Source:interface'
