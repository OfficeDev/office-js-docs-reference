### YamlMime:TSType
name: Office.AddinCommands.Event
uid: 'office!Office.AddinCommands.Event:interface'
package: office!
fullName: Office.AddinCommands.Event
summary: >-
  The `Event` object is passed as a parameter to add-in functions invoked by function command buttons. The object allows
  the add-in to identify which button was clicked and to signal the Office application that it has completed its
  processing.
remarks: >-
  For information on support in Excel, Word, and PowerPoint, see [Add-in commands requirement
  sets](https://learn.microsoft.com/javascript/api/requirement-sets/common/add-in-commands-requirement-sets)<!-- -->.


  The following outlines support information for Outlook.


  \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/javascript-api-for-office) \]


  See [Add-in commands requirement
  sets](https://learn.microsoft.com/javascript/api/requirement-sets/common/add-in-commands-requirement-sets) for more
  support information.


  **[Minimum permission level
  (Outlook)](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
  -->**: **restricted**


  **[Applicable Outlook
  mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
  Compose or Read
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: source
    uid: 'office!Office.AddinCommands.Event#source:member'
    package: office!
    fullName: source
    summary: Information about the control that triggered calling this function.
    remarks: >-
      The following outlines support information for Outlook.


      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/javascript-api-for-office) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **restricted**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose or Read


      #### Examples


      ```TypeScript

      // In this example, consider a button defined in an add-in manifest.

      // The following is the XML manifest definition. Below it is the Teams 

      // manifest (preview) definition.

      //

      //<Control xsi:type="Button" id="eventTestButton">

      //    <Label resid="eventButtonLabel" />

      //    <Tooltip resid="eventButtonTooltip" />

      //    <Supertip>

      //        <Title resid="eventSuperTipTitle" />

      //        <Description resid="eventSuperTipDescription" />

      //    </Supertip>

      //    <Icon>

      //        <bt:Image size="16" resid="blue-icon-16" />

      //        <bt:Image size="32" resid="blue-icon-32" />

      //        <bt:Image size="80" resid="blue-icon-80" />

      //    </Icon>

      //    <Action xsi:type="ExecuteFunction">

      //        <FunctionName>testEventObject</FunctionName>

      //    </Action>

      //</Control>

      //

      // The Teams manifest (preview) definition is the following.

      // Ellipses("...") indicate omitted properties.

      //

      //     "extensions": [

      //         {

      //             ...

      //             "runtimes": [

      //                 {

      //                  "id": "CommandsRuntime",

      //                  "type": "general",

      //                  "code": {

      //                      "page": "https://localhost:3000/commands.html",

      //                      "script": "https://localhost:3000/commands.js"

      //                  },

      //                  "lifetime": "short",

      //                  "actions": [

      //                      {

      //                          "id": "testEventObject",

      //                          "type": "executeFunction",

      //                          "displayName": "testEventObject"

      //                      }

      //                  ]

      //              }

      //             ],

      //             "ribbons": [

      //                 {

      //                     ...

      //                     "tabs": [

      //                         ...

      //                         "groups": [

      //                             ...

      //                             "controls": [

      //                                 {

      //                                      "id": "eventTestButton",

      //                                      "type": "button",

      //                                      "label": "Perform an action",

      //                                      "icons": [

      //                                          {

      //                                              "size": 16,

      //                                              "file": "https://localhost:3000/assets/blue-icon-16.png"

      //                                          },

      //                                          {

      //                                              "size": 32,

      //                                              "file": "https://localhost:3000/assets/blue-icon-32.png"

      //                                          },

      //                                          {

      //                                              "size": 80,

      //                                              "file": "https://localhost:3000/assets/blue-icon-80.png"

      //                                          }

      //                                      ],

      //                                      "supertip": {

      //                                          "title": "Perform an action",

      //                                          "description": "Perform an action when clicked."

      //                                      },

      //                                      "actionId": "testEventObject"

      //                                  }

      //                             ]

      //                         ]

      //                     ]                           

      //                 }

      //             ]

      //         }

      //     ]




      // The button has an id set to "eventTestButton", and will invoke

      // the testEventObject function defined in the add-in.

      // That function looks like this:

      function testEventObject(event) {
          // The event object implements the Event interface.

          // This value will be "eventTestButton".
          const buttonId = event.source.id;

          // Signal to the host app that processing is complete.
          event.completed();
      }

      ```

      ```TypeScript

      // Function is used by two buttons:

      // button1 and button2

      function multiButton (event) {
          // Check which button was clicked.
          const buttonId = event.source.id;

          if (buttonId === 'button1') {
              doButton1Action();
          } else {
              doButton2Action();
          }

          event.completed();
      }

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'source:Source;'
      return:
        type: '<xref uid="office!Office.AddinCommands.Source:interface" />'
methods:
  - name: completed(options)
    uid: 'office!Office.AddinCommands.Event#completed:member(1)'
    package: office!
    fullName: completed(options)
    summary: >-
      Indicates that the add-in has completed processing and will automatically be closed.


      This method must be called at the end of a function which was invoked by the following:


      - A function command button (that is, an add-in command defined with an **<!-- -->&lt;<!-- -->Action<!--
      -->&gt;<!-- -->** element, where the `xsi:type` attribute is set to `ExecuteFunction`<!-- -->).


      - An [event](https://learn.microsoft.com/javascript/api/manifest/event) defined in the [Events extension
      point](https://learn.microsoft.com/javascript/api/manifest/extensionpoint#events) of an on-send add-in in Outlook.
      For example, an `ItemSend` event.
    remarks: >-
      The following outlines support information for Outlook.


      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/javascript-api-for-office) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **restricted**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose or Read


      **Important**: The `options` parameter only applies to Outlook add-ins that implement the [on-send
      feature](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-on-send-addins)<!-- -->. It was introduced
      in Mailbox 1.8.


      #### Examples


      ```TypeScript

      // For the following example, the processItem function is

      // defined in the FunctionFile referenced from the add-in manifest,

      // and maps to the FunctionName of the action in the associated button control.

      function processItem(event) {
          // Do some processing.

          event.completed();
      }

      ```

      ```TypeScript

      // In this example, the checkMessage function was registered as an event handler for ItemSend.

      function checkMessage(event) {
          // Get the item being sent.
          const outgoingMsg = Office.context.mailbox.item;

          // Check if subject contains "BLOCK".
          outgoingMsg.subject.getAsync(function (result) {
              // Subject is in `result.value`.
              // If search term "BLOCK" is found, don't send the message.
              const notFound = -1;
              const allowEvent = (result.value.indexOf('BLOCK') === notFound);
              event.completed({ allowEvent: allowEvent });
          });
      }

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'completed(options?: EventCompletedOptions): void;'
      parameters:
        - id: options
          description: >-
            Optional. An object that specifies the behavior of an on-send add-in in Outlook when it completes processing
            an `ItemSend` event.
          type: '<xref uid="office!Office.AddinCommands.EventCompletedOptions:interface" />'
      return:
        type: void
        description: ''
