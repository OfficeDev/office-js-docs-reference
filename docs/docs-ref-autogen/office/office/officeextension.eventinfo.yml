### YamlMime:UniversalReference
items:
  - uid: 'office!OfficeExtension.EventInfo:interface'
    name: EventInfo
    fullName: OfficeExtension.EventInfo
    langs:
      - typeScript
    namespace: 'office!OfficeExtension:namespace'
    type: interface
    syntax:
      typeParameters:
        - id: T
    package: office!
    children:
      - 'office!OfficeExtension.EventInfo#eventArgsTransformFunc:member'
      - 'office!OfficeExtension.EventInfo#registerFunc:member'
      - 'office!OfficeExtension.EventInfo#unregisterFunc:member'
  - uid: 'office!OfficeExtension.EventInfo#eventArgsTransformFunc:member'
    name: eventArgsTransformFunc
    fullName: eventArgsTransformFunc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'eventArgsTransformFunc: (args: any) => Promise<T>;'
      return:
        type:
          - 'office!OfficeExtension.EventInfo#eventArgsTransformFunc~0:complex'
  - uid: 'office!OfficeExtension.EventInfo#registerFunc:member'
    name: registerFunc
    fullName: registerFunc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'registerFunc: (callback: (args: any) => void) => Promise<any>;'
      return:
        type:
          - 'office!OfficeExtension.EventInfo#registerFunc~0:complex'
  - uid: 'office!OfficeExtension.EventInfo#unregisterFunc:member'
    name: unregisterFunc
    fullName: unregisterFunc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'unregisterFunc: (callback: (args: any) => void) => Promise<any>;'
      return:
        type:
          - 'office!OfficeExtension.EventInfo#unregisterFunc~0:complex'
references:
  - uid: 'office!OfficeExtension.EventInfo#eventArgsTransformFunc~0:complex'
    name: '(args: any) => Promise<T>'
    fullName: '(args: any) => Promise<T>'
    spec.typeScript:
      - name: '(args: any) => '
        fullName: '(args: any) => '
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'office!OfficeExtension.EventInfo#registerFunc~0:complex'
    name: '(callback: (args: any) => void) => Promise<any>'
    fullName: '(callback: (args: any) => void) => Promise<any>'
    spec.typeScript:
      - name: '(callback: (args: any) => void) => '
        fullName: '(callback: (args: any) => void) => '
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <any>
        fullName: <any>
  - uid: 'office!OfficeExtension.EventInfo#unregisterFunc~0:complex'
    name: '(callback: (args: any) => void) => Promise<any>'
    fullName: '(callback: (args: any) => void) => Promise<any>'
    spec.typeScript:
      - name: '(callback: (args: any) => void) => '
        fullName: '(callback: (args: any) => void) => '
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <any>
        fullName: <any>
