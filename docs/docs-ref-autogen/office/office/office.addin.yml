### YamlMime:UniversalReference
items:
  - uid: 'office!Office.Addin:interface'
    summary: Represents add-in level functionality for operating or configuring various aspects of the add-in.
    name: Office.Addin
    fullName: Office.Addin
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.Addin#getStartupBehavior:member(1)'
      - 'office!Office.Addin#hide:member(1)'
      - 'office!Office.Addin#onVisibilityModeChanged:member(1)'
      - 'office!Office.Addin#setStartupBehavior:member(1)'
      - 'office!Office.Addin#showAsTaskpane:member(1)'
  - uid: 'office!Office.Addin#getStartupBehavior:member(1)'
    summary: Get the current startup behavior for the add-in.
    name: getStartupBehavior()
    fullName: getStartupBehavior()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getStartupBehavior(): Promise<Office.StartupBehavior>;'
      return:
        type:
          - 'office!Office.Addin#getStartupBehavior~0:complex'
        description: ''
  - uid: 'office!Office.Addin#hide:member(1)'
    summary: Hides the task pane.
    name: hide()
    fullName: hide()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'hide(): Promise<void>;'
      return:
        type:
          - 'office!Office.Addin#hide~0:complex'
        description: A promise that is resolved when the UI is hidden.
  - uid: 'office!Office.Addin#onVisibilityModeChanged:member(1)'
    summary: Adds a listener for the `onVisbilityModeChanged` event.
    name: onVisibilityModeChanged(listener)
    fullName: onVisibilityModeChanged(listener)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        onVisibilityModeChanged(
                    listener: (message: VisibilityModeChangedMessage) => void,
                ): Promise<RemoveEventListener>;
      return:
        type:
          - 'office!Office.Addin#onVisibilityModeChanged~0:complex'
        description: A promise that resolves when the listener is added.
      parameters:
        - id: listener
          description: >-
            The listener function that is called when the event is emitted. This function takes in a message for the
            receiving component.
          type:
            - 'office!Office.Addin#onVisibilityModeChanged~1:complex'
  - uid: 'office!Office.Addin#setStartupBehavior:member(1)'
    summary: Set the startup behavior for the add-in for when the document is opened next time.
    name: setStartupBehavior(behavior)
    fullName: setStartupBehavior(behavior)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setStartupBehavior(behavior: Office.StartupBehavior): Promise<void>;'
      return:
        type:
          - 'office!Office.Addin#setStartupBehavior~0:complex'
        description: ''
      parameters:
        - id: behavior
          description: ''
          type:
            - 'office!Office.StartupBehavior:enum'
  - uid: 'office!Office.Addin#showAsTaskpane:member(1)'
    summary: Shows the task pane associated with the add-in.
    name: showAsTaskpane()
    fullName: showAsTaskpane()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'showAsTaskpane(): Promise<void>;'
      return:
        type:
          - 'office!Office.Addin#showAsTaskpane~0:complex'
        description: A promise that is resolved when the UI is shown.
references:
  - uid: 'office!Office.Addin#getStartupBehavior~0:complex'
    name: Promise<Office.StartupBehavior>
    fullName: Promise<Office.StartupBehavior>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <
        fullName: <
      - uid: 'office!Office.StartupBehavior:enum'
        name: Office.StartupBehavior
        fullName: Office.StartupBehavior
      - name: '>'
        fullName: '>'
  - uid: 'office!Office.Addin#hide~0:complex'
    name: Promise<void>
    fullName: Promise<void>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <void>
        fullName: <void>
  - uid: 'office!Office.Addin#onVisibilityModeChanged~0:complex'
    name: Promise<RemoveEventListener>
    fullName: Promise<Office.RemoveEventListener>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <
        fullName: <
      - uid: 'office!Office.RemoveEventListener:type'
        name: RemoveEventListener
        fullName: Office.RemoveEventListener
      - name: '>'
        fullName: '>'
  - uid: 'office!Office.Addin#onVisibilityModeChanged~1:complex'
    name: '(message: VisibilityModeChangedMessage) => void'
    fullName: '(message: Office.VisibilityModeChangedMessage) => void'
    spec.typeScript:
      - name: '(message: '
        fullName: '(message: '
      - uid: 'office!Office.VisibilityModeChangedMessage:interface'
        name: VisibilityModeChangedMessage
        fullName: Office.VisibilityModeChangedMessage
      - name: ) => void
        fullName: ) => void
  - uid: 'office!Office.Addin#setStartupBehavior~0:complex'
    name: Promise<void>
    fullName: Promise<void>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <void>
        fullName: <void>
  - uid: 'office!Office.StartupBehavior:enum'
    name: Office.StartupBehavior
  - uid: 'office!Office.Addin#showAsTaskpane~0:complex'
    name: Promise<void>
    fullName: Promise<void>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <void>
        fullName: <void>
