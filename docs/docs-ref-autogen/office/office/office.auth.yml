### YamlMime:UniversalReference
items:
  - uid: 'office!Office.Auth:interface'
    summary: >-
      The Office Auth namespace, Office.context.auth, provides a method that allows the Office host to obtain an access
      token to the add-in's web application. Indirectly, this also enables the add-in to access the signed-in user's
      Microsoft Graph data without requiring the user to sign in a second time.
    isPreview: true
    name: Office.Auth
    fullName: Office.Auth
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.Auth#getAccessTokenAsync:member(1)'
      - 'office!Office.Auth#getAccessTokenAsync:member(2)'
  - uid: 'office!Office.Auth#getAccessTokenAsync:member(1)'
    summary: >-
      Calls the Azure Active Directory V 2.0 endpoint to get an access token to your add-in's web application. Enables
      add-ins to identify users. Server side code can use this token to access Microsoft Graph for the add-in's web
      application by using the ["on behalf of" OAuth
      flow](https://docs.microsoft.com/azure/active-directory/develop/active-directory-v2-protocols-oauth-on-behalf-of)<!--
      -->.


      Important: In Outlook, this API is not supported if the add-in is loaded in an Outlook.com or Gmail mailbox.
    remarks: >-
      **Hosts**: Excel, OneNote, Outlook, PowerPoint, Word


      **Requirement set**:
      [IdentityAPI](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/identity-api-requirement-sets)


      This API requires a single sign-on configuration that bridges the add-in to an Azure application. Office users
      sign-in with Organizational Accounts and Microsoft Accounts. Microsoft Azure returns tokens intended for both user
      account types to access resources in the Microsoft Graph.


      #### Examples


      ```javascript

      Office.context.auth.getAccessTokenAsync(function(result) {
          if (result.status === "succeeded") {
              var token = result.value;
              // ...
          } else {
              console.log("Error obtaining token", result.error);
          }
      });

      ```
    isPreview: true
    name: 'getAccessTokenAsync(options, callback)'
    fullName: 'getAccessTokenAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAccessTokenAsync(options?: AuthOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: Optional. Accepts an AuthOptions object to define sign-on behaviors.
          type:
            - 'office!Office.AuthOptions:interface'
        - id: callback
          description: >-
            Optional. Accepts a callback method that can use parse the token for the user's ID or use the token in the
            "on behalf of" flow to get access to Microsoft Graph. If AsyncResult.status is "succeeded", then
            AsyncResult.value is the raw AAD v. 2.0-formatted access token.
          type:
            - 'office!Office.Auth#getAccessTokenAsync~0:complex'
  - uid: 'office!Office.Auth#getAccessTokenAsync:member(2)'
    summary: >-
      Calls the Azure Active Directory V 2.0 endpoint to get an access token to your add-in's web application. Enables
      add-ins to identify users. Server side code can use this token to access Microsoft Graph for the add-in's web
      application by using the ["on behalf of" OAuth
      flow](https://docs.microsoft.com/azure/active-directory/develop/active-directory-v2-protocols-oauth-on-behalf-of)<!--
      -->.


      Important: In Outlook, this API is not supported if the add-in is loaded in an Outlook.com or Gmail mailbox.
    remarks: >-
      **Hosts**: Excel, OneNote, Outlook, PowerPoint, Word


      **Requirement set**:
      [IdentityAPI](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/identity-api-requirement-sets)


      This API requires a single sign-on configuration that bridges the add-in to an Azure application. Office users
      sign-in with Organizational Accounts and Microsoft Accounts. Microsoft Azure returns tokens intended for both user
      account types to access resources in the Microsoft Graph.
    isPreview: true
    name: getAccessTokenAsync(callback)
    fullName: getAccessTokenAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAccessTokenAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: >-
            Optional. Accepts a callback method that can use parse the token for the user's ID or use the token in the
            "on behalf of" flow to get access to Microsoft Graph. If AsyncResult.status is "succeeded", then
            AsyncResult.value is the raw AAD v. 2.0-formatted access token.
          type:
            - 'office!Office.Auth#getAccessTokenAsync~1:complex'
references:
  - uid: 'office!Office.AuthOptions:interface'
    name: AuthOptions
  - uid: 'office!Office.Auth#getAccessTokenAsync~0:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.Auth#getAccessTokenAsync~1:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
