### YamlMime:UniversalReference
items:
  - uid: 'office!Office.CustomXmlPart:interface'
    summary: >-
      Represents a single CustomXMLPart in an [Office.CustomXmlParts](xref:office!Office.CustomXmlParts:interface)
      collection.
    remarks: '**Hosts**: Word'
    name: Office.CustomXmlPart
    fullName: Office.CustomXmlPart
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.CustomXmlPart#addHandlerAsync:member(1)'
      - 'office!Office.CustomXmlPart#addHandlerAsync:member(2)'
      - 'office!Office.CustomXmlPart#builtIn:member'
      - 'office!Office.CustomXmlPart#deleteAsync:member(1)'
      - 'office!Office.CustomXmlPart#deleteAsync:member(2)'
      - 'office!Office.CustomXmlPart#getNodesAsync:member(1)'
      - 'office!Office.CustomXmlPart#getNodesAsync:member(2)'
      - 'office!Office.CustomXmlPart#getXmlAsync:member(1)'
      - 'office!Office.CustomXmlPart#getXmlAsync:member(2)'
      - 'office!Office.CustomXmlPart#id:member'
      - 'office!Office.CustomXmlPart#namespaceManager:member'
      - 'office!Office.CustomXmlPart#removeHandlerAsync:member(1)'
      - 'office!Office.CustomXmlPart#removeHandlerAsync:member(2)'
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync:member(1)'
    summary: Adds an event handler to the object using the specified event type.
    remarks: >-
      **Requirement set**:
      [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)


      You can add multiple event handlers for the specified eventType as long as the name of each event handler function
      is unique.
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, options?:
        Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: >-
            Specifies the type of event to add. For a CustomXmlPart object, the eventType parameter can be specified as
            `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and
            `Office.EventType.NodeReplaced`<!-- -->.
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: >-
            The event handler function to add, whose only parameter is of type
            [Office.NodeDeletedEventArgs](xref:office!Office.NodeDeletedEventArgs:interface)<!-- -->,
            [Office.NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)<!-- -->, or
            [Office.NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)
          type:
            - '(result: any) => void'
        - id: options
          description: 'Provides an option for preserving context data of any type, unchanged, for use in a callback.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: >-
            Optional. A function that is invoked when the callback returns, whose only parameter is of type
            [Office.AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync:member(2)'
    summary: Adds an event handler to the object using the specified event type.
    remarks: >-
      **Requirement set**:
      [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)


      You can add multiple event handlers for the specified eventType as long as the name of each event handler function
      is unique.
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, callback?: (result:
        AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: >-
            Specifies the type of event to add. For a CustomXmlPart object, the eventType parameter can be specified as
            `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and
            `Office.EventType.NodeReplaced`<!-- -->.
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: >-
            The event handler function to add, whose only parameter is of type
            [Office.NodeDeletedEventArgs](xref:office!Office.NodeDeletedEventArgs:interface)<!-- -->,
            [Office.NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)<!-- -->, or
            [Office.NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)
          type:
            - '(result: any) => void'
        - id: callback
          description: >-
            Optional. A function that is invoked when the callback returns, whose only parameter is of type
            [Office.AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: 'office!Office.CustomXmlPart#builtIn:member'
    summary: 'True, if the custom XML part is built in; otherwise false.'
    name: builtIn
    fullName: builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'builtIn: boolean;'
      return:
        type:
          - boolean
  - uid: 'office!Office.CustomXmlPart#deleteAsync:member(1)'
    summary: Deletes the Custom XML Part.
    remarks: >-
      **Requirement set**:
      [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)
    name: 'deleteAsync(options, callback)'
    fullName: 'deleteAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Provides an option for preserving context data of any type, unchanged, for use in a callback.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: >-
            Optional. A function that is invoked when the callback returns, whose only parameter is of type
            [Office.AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: 'office!Office.CustomXmlPart#deleteAsync:member(2)'
    summary: Deletes the Custom XML Part.
    remarks: >-
      **Requirement set**:
      [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)
    name: deleteAsync(callback)
    fullName: deleteAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: >-
            Optional. A function that is invoked when the callback returns, whose only parameter is of type
            [Office.AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: 'office!Office.CustomXmlPart#getNodesAsync:member(1)'
    summary: Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.
    remarks: >-
      **Requirement set**:
      [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: 'getNodesAsync(xPath, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result:
        AsyncResult<CustomXmlNode[]>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: An XPath expression that specifies the nodes you want returned. Required.
          type:
            - string
        - id: options
          description: 'Provides an option for preserving context data of any type, unchanged, for use in a callback.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: >-
            Optional. A function that is invoked when the callback returns, whose only parameter is of type
            [Office.AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->. The `value` property of the result
            is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to
            the xPath parameter.
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: 'office!Office.CustomXmlPart#getNodesAsync:member(2)'
    summary: Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.
    remarks: >-
      **Requirement set**:
      [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)
    name: 'getNodesAsync(xPath, callback)'
    fullName: 'getNodesAsync(xPath, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: An XPath expression that specifies the nodes you want returned. Required.
          type:
            - string
        - id: callback
          description: >-
            Optional. A function that is invoked when the callback returns, whose only parameter is of type
            [Office.AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->. The `value` property of the result
            is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to
            the xPath parameter.
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: 'office!Office.CustomXmlPart#getXmlAsync:member(1)'
    summary: Asynchronously gets the XML inside this custom XML part.
    remarks: >-
      **Requirement set**:
      [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)
    name: 'getXmlAsync(options, callback)'
    fullName: 'getXmlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Provides an option for preserving context data of any type, unchanged, for use in a callback.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: >-
            Optional. A function that is invoked when the callback returns, whose only parameter is of type
            [Office.AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->. The `value` property of the result
            is a string that contains the XML of the referenced CustomXmlPart object.
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: 'office!Office.CustomXmlPart#getXmlAsync:member(2)'
    summary: Asynchronously gets the XML inside this custom XML part.
    remarks: >-
      **Requirement set**:
      [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)
    name: getXmlAsync(callback)
    fullName: getXmlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: >-
            Optional. A function that is invoked when the callback returns, whose only parameter is of type
            [Office.AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->. The `value` property of the result
            is a string that contains the XML of the referenced CustomXmlPart object.
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: 'office!Office.CustomXmlPart#id:member'
    summary: Gets the GUID of the CustomXMLPart.
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
  - uid: 'office!Office.CustomXmlPart#namespaceManager:member'
    summary: >-
      Gets the set of namespace prefix mappings
      ([Office.CustomXmlPrefixMappings](xref:office!Office.CustomXmlPrefixMappings:interface)<!-- -->) used against the
      current CustomXmlPart.
    name: namespaceManager
    fullName: namespaceManager
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceManager: CustomXmlPrefixMappings;'
      return:
        type:
          - 'office!Office.CustomXmlPrefixMappings:interface'
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync:member(1)'
    summary: Removes an event handler for the specified event type.
    remarks: >-
      **Requirement set**:
      [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)
    name: 'removeHandlerAsync(eventType, handler, options, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions,
        callback?: (result: AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: >-
            Specifies the type of event to remove. For a CustomXmlPart object, the eventType parameter can be specified
            as `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and
            `Office.EventType.NodeReplaced`<!-- -->.
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: The name of the handler to remove.
          type:
            - '(result: any) => void'
        - id: options
          description: Provides options to determine which event handler or handlers are removed.
          type:
            - 'office!Office.RemoveHandlerOptions:interface'
        - id: callback
          description: >-
            Optional. A function that is invoked when the callback returns, whose only parameter is of type
            [Office.AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync:member(2)'
    summary: Removes an event handler for the specified event type.
    remarks: >-
      **Requirement set**:
      [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)
    name: 'removeHandlerAsync(eventType, handler, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, callback?: (result:
        AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: >-
            Specifies the type of event to remove. For a CustomXmlPart object, the eventType parameter can be specified
            as `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and
            `Office.EventType.NodeReplaced`<!-- -->.
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: The name of the handler to remove.
          type:
            - '(result: any) => void'
        - id: callback
          description: >-
            Optional. A function that is invoked when the callback returns, whose only parameter is of type
            [Office.AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
          type:
            - '(result: AsyncResult<void>) => void'
