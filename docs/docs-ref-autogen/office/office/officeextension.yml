### YamlMime:UniversalReference
items:
  - uid: 'office!OfficeExtension:namespace'
    name: OfficeExtension
    fullName: OfficeExtension
    langs:
      - typeScript
    type: namespace
    package: office!
    children:
      - 'office!OfficeExtension.ClientObject:class'
      - 'office!OfficeExtension.ClientRequestContext:class'
      - 'office!OfficeExtension.ClientResult:class'
      - 'office!OfficeExtension.config:var'
      - 'office!OfficeExtension.DebugInfo:interface'
      - 'office!OfficeExtension.EmbeddedOptions:interface'
      - 'office!OfficeExtension.EmbeddedSession:class'
      - 'office!OfficeExtension.Error:class'
      - 'office!OfficeExtension.ErrorCodes:class'
      - 'office!OfficeExtension.EventHandlerResult:class'
      - 'office!OfficeExtension.EventHandlers:class'
      - 'office!OfficeExtension.EventInfo:interface'
      - 'office!OfficeExtension.IPromise:type'
      - 'office!OfficeExtension.LoadOption:interface'
      - 'office!OfficeExtension.Promise:var'
      - 'office!OfficeExtension.RequestContextDebugInfo:interface'
      - 'office!OfficeExtension.RequestUrlAndHeaderInfo:interface'
      - 'office!OfficeExtension.RunOptions:interface'
      - 'office!OfficeExtension.TrackedObjects:class'
      - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'office!OfficeExtension.config:var'
    summary: Configuration
    name: config
    fullName: OfficeExtension.config
    langs:
      - typeScript
    namespace: 'office!OfficeExtension:namespace'
    type: variable
    syntax:
      content: |-
        config: {
                extendedErrorLogging: boolean;
            }
      return:
        type:
          - |-
            {
                    extendedErrorLogging: boolean;
                }
  - uid: 'office!OfficeExtension.IPromise:type'
    name: IPromise
    fullName: OfficeExtension.IPromise
    langs:
      - typeScript
    namespace: 'office!OfficeExtension:namespace'
    type: typealias
    syntax:
      content: type IPromise<T> = Promise<T>;
      typeParameters:
        - id: T
      return:
        type:
          - 'office!OfficeExtension.IPromise~0:complex'
  - uid: 'office!OfficeExtension.Promise:var'
    summary: >-
      A Promise object that represents a deferred interaction with the host Office application. The publicly-consumable
      OfficeExtension.Promise is available starting in ExcelAPI 1.2 and WordApi 1.2. Promises can be chained via
      ".then", and errors can be caught via ".catch". Remember to always use a ".catch" on the outer promise, and to
      return intermediary promises so as not to break the promise chain. When a browser-provided native Promise
      implementation is available, OfficeExtension.Promise will switch to use the native Promise instead.
    name: Promise
    fullName: OfficeExtension.Promise
    langs:
      - typeScript
    namespace: 'office!OfficeExtension:namespace'
    type: variable
    syntax:
      content: 'Promise: Office.IPromiseConstructor'
      return:
        type:
          - 'office!Office.IPromiseConstructor:interface'
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: ClientObject
    fullName: OfficeExtension.ClientObject
  - uid: 'office!OfficeExtension.ClientRequestContext:class'
    name: ClientRequestContext
    fullName: OfficeExtension.ClientRequestContext
  - uid: 'office!OfficeExtension.ClientResult:class'
    name: ClientResult
    fullName: OfficeExtension.ClientResult
  - uid: 'office!OfficeExtension.DebugInfo:interface'
    name: DebugInfo
    fullName: OfficeExtension.DebugInfo
  - uid: 'office!OfficeExtension.EmbeddedOptions:interface'
    name: EmbeddedOptions
    fullName: OfficeExtension.EmbeddedOptions
  - uid: 'office!OfficeExtension.EmbeddedSession:class'
    name: EmbeddedSession
    fullName: OfficeExtension.EmbeddedSession
  - uid: 'office!OfficeExtension.Error:class'
    name: Error
    fullName: OfficeExtension.Error
  - uid: 'office!OfficeExtension.ErrorCodes:class'
    name: ErrorCodes
    fullName: OfficeExtension.ErrorCodes
  - uid: 'office!OfficeExtension.EventHandlerResult:class'
    name: EventHandlerResult
    fullName: OfficeExtension.EventHandlerResult
  - uid: 'office!OfficeExtension.EventHandlers:class'
    name: EventHandlers
    fullName: OfficeExtension.EventHandlers
  - uid: 'office!OfficeExtension.EventInfo:interface'
    name: EventInfo
    fullName: OfficeExtension.EventInfo
  - uid: 'office!OfficeExtension.IPromise~0:complex'
    name: Promise<T>
    fullName: Promise<T>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: LoadOption
    fullName: OfficeExtension.LoadOption
  - uid: 'office!Office.IPromiseConstructor:interface'
    name: IPromiseConstructor
    fullName: Office.IPromiseConstructor
  - uid: 'office!OfficeExtension.RequestContextDebugInfo:interface'
    name: RequestContextDebugInfo
    fullName: OfficeExtension.RequestContextDebugInfo
  - uid: 'office!OfficeExtension.RequestUrlAndHeaderInfo:interface'
    name: RequestUrlAndHeaderInfo
    fullName: OfficeExtension.RequestUrlAndHeaderInfo
  - uid: 'office!OfficeExtension.RunOptions:interface'
    name: RunOptions
    fullName: OfficeExtension.RunOptions
  - uid: 'office!OfficeExtension.TrackedObjects:class'
    name: TrackedObjects
    fullName: OfficeExtension.TrackedObjects
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: UpdateOptions
    fullName: OfficeExtension.UpdateOptions
