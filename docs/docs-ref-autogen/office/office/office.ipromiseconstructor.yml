### YamlMime:UniversalReference
items:
  - uid: 'office!Office.IPromiseConstructor:interface'
    name: Office.IPromiseConstructor
    fullName: Office.IPromiseConstructor
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.IPromiseConstructor#all:member(1)'
      - 'office!Office.IPromiseConstructor#all:member(10)'
      - 'office!Office.IPromiseConstructor#all:member(2)'
      - 'office!Office.IPromiseConstructor#all:member(3)'
      - 'office!Office.IPromiseConstructor#all:member(4)'
      - 'office!Office.IPromiseConstructor#all:member(5)'
      - 'office!Office.IPromiseConstructor#all:member(6)'
      - 'office!Office.IPromiseConstructor#all:member(7)'
      - 'office!Office.IPromiseConstructor#all:member(8)'
      - 'office!Office.IPromiseConstructor#all:member(9)'
      - 'office!Office.IPromiseConstructor#prototype:member'
      - 'office!Office.IPromiseConstructor#race:member(1)'
      - 'office!Office.IPromiseConstructor#race:member(10)'
      - 'office!Office.IPromiseConstructor#race:member(2)'
      - 'office!Office.IPromiseConstructor#race:member(3)'
      - 'office!Office.IPromiseConstructor#race:member(4)'
      - 'office!Office.IPromiseConstructor#race:member(5)'
      - 'office!Office.IPromiseConstructor#race:member(6)'
      - 'office!Office.IPromiseConstructor#race:member(7)'
      - 'office!Office.IPromiseConstructor#race:member(8)'
      - 'office!Office.IPromiseConstructor#race:member(9)'
      - 'office!Office.IPromiseConstructor#reject:member(1)'
      - 'office!Office.IPromiseConstructor#reject:member(2)'
      - 'office!Office.IPromiseConstructor#resolve:member(1)'
      - 'office!Office.IPromiseConstructor#resolve:member(2)'
  - uid: 'office!Office.IPromiseConstructor#all:member(1)'
    summary: >-
      Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected
      when any Promise is rejected.
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 |
        PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 |
        PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9,
        T10]>;
      return:
        type:
          - 'Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>'
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - >-
              [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 |
              PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>,
              T10 | PromiseLike<T10>]
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
        - id: T8
        - id: T9
        - id: T10
  - uid: 'office!Office.IPromiseConstructor#all:member(10)'
    summary: >-
      Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected
      when any Promise is rejected.
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'all<T>(values: (T | PromiseLike<T>)[]): Promise<T[]>;'
      return:
        type:
          - 'Promise<T[]>'
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - '(T | PromiseLike<T>)[]'
      typeParameters:
        - id: T
  - uid: 'office!Office.IPromiseConstructor#all:member(2)'
    summary: >-
      Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected
      when any Promise is rejected.
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        all<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 |
        PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 |
        PromiseLike<T8>, T9 | PromiseLike<T9>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;
      return:
        type:
          - 'Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>'
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - >-
              [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 |
              PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
        - id: T8
        - id: T9
  - uid: 'office!Office.IPromiseConstructor#all:member(3)'
    summary: >-
      Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected
      when any Promise is rejected.
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        all<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>,
        T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]):
        Promise<[T1, T2, T3, T4, T5, T6, T7, T8]>;
      return:
        type:
          - 'Promise<[T1, T2, T3, T4, T5, T6, T7, T8]>'
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - >-
              [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 |
              PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
        - id: T8
  - uid: 'office!Office.IPromiseConstructor#all:member(4)'
    summary: >-
      Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected
      when any Promise is rejected.
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        all<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 |
        PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]): Promise<[T1, T2, T3, T4,
        T5, T6, T7]>;
      return:
        type:
          - 'Promise<[T1, T2, T3, T4, T5, T6, T7]>'
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - >-
              [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 |
              PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
  - uid: 'office!Office.IPromiseConstructor#all:member(5)'
    summary: >-
      Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected
      when any Promise is rejected.
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        all<T1, T2, T3, T4, T5, T6>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 |
        PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]): Promise<[T1, T2, T3, T4, T5, T6]>;
      return:
        type:
          - 'Promise<[T1, T2, T3, T4, T5, T6]>'
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - >-
              [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 |
              PromiseLike<T5>, T6 | PromiseLike<T6>]
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
  - uid: 'office!Office.IPromiseConstructor#all:member(6)'
    summary: >-
      Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected
      when any Promise is rejected.
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        all<T1, T2, T3, T4, T5>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 |
        PromiseLike<T4>, T5 | PromiseLike<T5>]): Promise<[T1, T2, T3, T4, T5]>;
      return:
        type:
          - 'Promise<[T1, T2, T3, T4, T5]>'
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - >-
              [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 |
              PromiseLike<T5>]
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
  - uid: 'office!Office.IPromiseConstructor#all:member(7)'
    summary: >-
      Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected
      when any Promise is rejected.
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        all<T1, T2, T3, T4>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 |
        PromiseLike<T4>]): Promise<[T1, T2, T3, T4]>;
      return:
        type:
          - 'Promise<[T1, T2, T3, T4]>'
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
  - uid: 'office!Office.IPromiseConstructor#all:member(8)'
    summary: >-
      Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected
      when any Promise is rejected.
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        all<T1, T2, T3>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]): Promise<[T1, T2,
        T3]>;
      return:
        type:
          - 'Promise<[T1, T2, T3]>'
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
  - uid: 'office!Office.IPromiseConstructor#all:member(9)'
    summary: >-
      Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected
      when any Promise is rejected.
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'all<T1, T2>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): Promise<[T1, T2]>;'
      return:
        type:
          - 'Promise<[T1, T2]>'
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]'
      typeParameters:
        - id: T1
        - id: T2
  - uid: 'office!Office.IPromiseConstructor#prototype:member'
    summary: A reference to the prototype.
    name: prototype
    fullName: prototype
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly prototype: Promise<any>;'
      return:
        type:
          - Promise<any>
  - uid: 'office!Office.IPromiseConstructor#race:member(1)'
    summary: Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        race<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 |
        PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 |
        PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 |
        T9 | T10>;
      return:
        type:
          - Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10>
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - >-
              [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 |
              PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>,
              T10 | PromiseLike<T10>]
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
        - id: T8
        - id: T9
        - id: T10
  - uid: 'office!Office.IPromiseConstructor#race:member(10)'
    summary: Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'race<T>(values: (T | PromiseLike<T>)[]): Promise<T>;'
      return:
        type:
          - Promise<T>
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - '(T | PromiseLike<T>)[]'
      typeParameters:
        - id: T
  - uid: 'office!Office.IPromiseConstructor#race:member(2)'
    summary: Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        race<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 |
        PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 |
        PromiseLike<T8>, T9 | PromiseLike<T9>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;
      return:
        type:
          - Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - >-
              [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 |
              PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
        - id: T8
        - id: T9
  - uid: 'office!Office.IPromiseConstructor#race:member(3)'
    summary: Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        race<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>,
        T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]):
        Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8>;
      return:
        type:
          - Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8>
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - >-
              [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 |
              PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
        - id: T8
  - uid: 'office!Office.IPromiseConstructor#race:member(4)'
    summary: Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        race<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 |
        PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]): Promise<T1 | T2 | T3 | T4 |
        T5 | T6 | T7>;
      return:
        type:
          - Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7>
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - >-
              [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 |
              PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
  - uid: 'office!Office.IPromiseConstructor#race:member(5)'
    summary: Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        race<T1, T2, T3, T4, T5, T6>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 |
        PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]): Promise<T1 | T2 | T3 | T4 | T5 | T6>;
      return:
        type:
          - Promise<T1 | T2 | T3 | T4 | T5 | T6>
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - >-
              [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 |
              PromiseLike<T5>, T6 | PromiseLike<T6>]
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
  - uid: 'office!Office.IPromiseConstructor#race:member(6)'
    summary: Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        race<T1, T2, T3, T4, T5>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 |
        PromiseLike<T4>, T5 | PromiseLike<T5>]): Promise<T1 | T2 | T3 | T4 | T5>;
      return:
        type:
          - Promise<T1 | T2 | T3 | T4 | T5>
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - >-
              [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 |
              PromiseLike<T5>]
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
  - uid: 'office!Office.IPromiseConstructor#race:member(7)'
    summary: Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        race<T1, T2, T3, T4>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 |
        PromiseLike<T4>]): Promise<T1 | T2 | T3 | T4>;
      return:
        type:
          - Promise<T1 | T2 | T3 | T4>
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
  - uid: 'office!Office.IPromiseConstructor#race:member(8)'
    summary: Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        race<T1, T2, T3>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]): Promise<T1 | T2 |
        T3>;
      return:
        type:
          - Promise<T1 | T2 | T3>
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
  - uid: 'office!Office.IPromiseConstructor#race:member(9)'
    summary: Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'race<T1, T2>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): Promise<T1 | T2>;'
      return:
        type:
          - Promise<T1 | T2>
        description: A new Promise.
      parameters:
        - id: values
          description: An array of Promises.
          type:
            - '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]'
      typeParameters:
        - id: T1
        - id: T2
  - uid: 'office!Office.IPromiseConstructor#reject:member(1)'
    summary: Creates a new rejected promise for the provided reason.
    name: reject(reason)
    fullName: reject(reason)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reject(reason: any): Promise<never>;'
      return:
        type:
          - Promise<never>
        description: A new rejected Promise.
      parameters:
        - id: reason
          description: The reason the promise was rejected.
          type:
            - any
  - uid: 'office!Office.IPromiseConstructor#reject:member(2)'
    summary: Creates a new rejected promise for the provided reason.
    name: reject(reason)
    fullName: reject(reason)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reject<T>(reason: any): Promise<T>;'
      return:
        type:
          - Promise<T>
        description: A new rejected Promise.
      parameters:
        - id: reason
          description: The reason the promise was rejected.
          type:
            - any
      typeParameters:
        - id: T
  - uid: 'office!Office.IPromiseConstructor#resolve:member(1)'
    summary: Creates a new resolved promise for the provided value.
    name: resolve(value)
    fullName: resolve(value)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'resolve<T>(value: T | PromiseLike<T>): Promise<T>;'
      return:
        type:
          - Promise<T>
        description: A promise whose internal state matches the provided promise.
      parameters:
        - id: value
          description: A promise.
          type:
            - T | PromiseLike<T>
      typeParameters:
        - id: T
  - uid: 'office!Office.IPromiseConstructor#resolve:member(2)'
    summary: Creates a new resolved promise.
    name: resolve()
    fullName: resolve()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'resolve(): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: A resolved promise.
