### YamlMime:UniversalReference
items:
  - uid: office.Office.AsyncResult
    summary: >-
      An object which encapsulates the result of an asynchronous request, including status and error information if the
      request failed.
    remarks: >-
      <table><tr><td>Hosts</td><td>Access, Excel, Outlook, PowerPoint, Project, Word</td></tr></table>


      When the function you pass to the `callback` parameter of an "Async" method executes, it receives an AsyncResult
      object that you can access from the `callback` function's only parameter.

      #### Examples


      ```javascript

      // The following is an example applicable to content and task pane add-ins.

      // The example shows a call to the getSelectedDataAsync method of the Document object.

      Office.context.document.getSelectedDataAsync("text", {
              valueFormat: "unformatted",
              filterType: "all"
          },
          function (result) {
              if (result.status === "success") {
                  var dataValue = result.value; // Get selected data.
                  console.log('Selected data is ' + dataValue);
              } else {
                  var err = result.error;
                  console.log(err.name + ": " + err.message);
              }
          });
      // The anonymous function passed as the callback argument ( function (result){...}) has a single parameter named
      result

      // that provides access to an AsyncResult object when the function executes. When the call to the
      getSelectedDataAsync method

      // completes, the callback function executes, and the following line of code accesses the value property of the
      AsyncResult

      // object to return the data selected in the document:

      var dataValue = result.value;

      // Note that other lines of code in the function use the result parameter of the callback function to access the
      status and

      // error properties of the AsyncResult object.

      ```
    name: Office.AsyncResult
    fullName: office.Office.AsyncResult
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.AsyncResult.asyncContext
      - office.Office.AsyncResult.error
      - office.Office.AsyncResult.status
      - office.Office.AsyncResult.value
  - uid: office.Office.AsyncResult.asyncContext
    summary: >-
      Gets the user-defined item passed to the optional `asyncContext` parameter of the invoked method in the same state
      as it was passed in. This returns the user-defined item (which can be of any JavaScript type: String, Number,
      Boolean, Object, Array, Null, or Undefined) passed to the optional `asyncContext` parameter of the invoked method.
      Returns Undefined, if you didn't pass anything to the asyncContext parameter.
    remarks: >-
      **Support details**


      A capital Y in the following matrix indicates that this property is supported in the corresponding Office host
      application. An empty cell indicates that the Office host application doesn't support this enumeration.


      For more information about Office host application and server requirements, see [Requirements for running Office
      Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


      *Supported hosts, by platform* <table> <tr><th> </th><th> Office for Windows desktop </th><th> Office Online (in
      browser) </th><th> Office for iPad </th><th> OWA for Devices </th><th> Office for Mac </th></tr> <tr><th> Access
      </th><td> Y </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><th> Excel </th><td> Y </td><td> Y </td><td> Y
      </td><td> </td><td> </td></tr> <tr><th> Outlook </th><td> Y </td><td> Y </td><td> </td><td> Y </td><td> Y
      </td></tr> <tr><th> PowerPoint </th><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><th> Project
      </th><td> </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><th> Word </th><td> Y </td><td> Y </td><td> Y
      </td><td> </td><td> </td></tr> </table>

      #### Examples


      ```javascript

      function getDataWithContext() {
          var format = "Your data: ";
          Office.context.document.getSelectedDataAsync(Office.CoercionType.Text, { asyncContext: format }, showDataWithContext);
      }


      function showDataWithContext(asyncResult) {
          write(asyncResult.asyncContext + asyncResult.value);
      }

      // Function that writes to a div with id='message' on the page.

      function write(message){
          document.getElementById('message').innerText += message; 
      }

      ```
    name: asyncContext
    fullName: office.Office.AsyncResult.asyncContext
    langs:
      - typeScript
    type: property
    syntax:
      content: 'asyncContext: any;'
      return:
        type:
          - any
  - uid: office.Office.AsyncResult.error
    summary: >-
      Gets an [Office.Error](xref:office.Office.Error) object that provides a description of the error, if any error
      occurred.
    remarks: >-
      **Support details**


      A capital Y in the following matrix indicates that this property is supported in the corresponding Office host
      application. An empty cell indicates that the Office host application doesn't support this enumeration.


      For more information about Office host application and server requirements, see [Requirements for running Office
      Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


      *Supported hosts, by platform* <table> <tr><th> </th><th> Office for Windows desktop </th><th> Office Online (in
      browser) </th><th> Office for iPad </th><th> OWA for Devices </th><th> Office for Mac </th></tr> <tr><th> Access
      </th><td> </td><td> Y </td><td> </td><td> </td><td> </td></tr> <tr><th> Excel </th><td> Y </td><td> Y </td><td> Y
      </td><td> </td><td> </td></tr> <tr><th> Outlook </th><td> Y </td><td> Y </td><td> </td><td> Y </td><td> Y
      </td></tr> <tr><th> PowerPoint </th><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><th> Project
      </th><td> Y </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><th> Word </th><td> Y </td><td> Y </td><td> Y
      </td><td> </td><td> </td></tr> </table>

      #### Examples


      ```javascript

      function getData() {
          Office.context.document.getSelectedDataAsync(Office.CoercionType.Table, function(asyncResult) {
              if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                  write(asyncResult.error.message);
              }
              else {
                  write(asyncResult.value);
              }
          });
      }

      // Function that writes to a div with id='message' on the page.

      function write(message){
          document.getElementById('message').innerText += message; 
      }

      ```
    name: error
    fullName: office.Office.AsyncResult.error
    langs:
      - typeScript
    type: property
    syntax:
      content: 'error: Office.Error;'
      return:
        type:
          - office.Office.Error
  - uid: office.Office.AsyncResult.status
    summary: 'Gets the [Office.AsyncResultStatus](xref:office.Office.AsyncResultStatus) of the asynchronous operation.'
    remarks: >-
      **Support details**


      A capital Y in the following matrix indicates that this property is supported in the corresponding Office host
      application. An empty cell indicates that the Office host application doesn't support this enumeration.


      For more information about Office host application and server requirements, see [Requirements for running Office
      Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


      *Supported hosts, by platform* <table> <tr><th> </th><th> Office for Windows desktop </th><th> Office Online (in
      browser) </th><th> Office for iPad </th><th> OWA for Devices </th><th> Office for Mac </th></tr> <tr><th> Access
      </th><td> </td><td> Y </td><td> </td><td> </td><td> </td></tr> <tr><th> Excel </th><td> Y </td><td> Y </td><td> Y
      </td><td> </td><td> </td></tr> <tr><th> Outlook </th><td> Y </td><td> Y </td><td> </td><td> Y </td><td> Y
      </td></tr> <tr><th> PowerPoint </th><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><th> Project
      </th><td> Y </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><th> Word </th><td> Y </td><td> Y </td><td> Y
      </td><td> </td><td> </td></tr> </table>

      #### Examples


      ```javascript

      function getData() {
          Office.context.document.getSelectedDataAsync(Office.CoercionType.Table, function(asyncResult) {
              if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                  write(asyncResult.error.message);
              }
              else {
                  write(asyncResult.value);
              }
          });
      }

      // Function that writes to a div with id='message' on the page.

      function write(message){
          document.getElementById('message').innerText += message; 
      }

      ```
    name: status
    fullName: office.Office.AsyncResult.status
    langs:
      - typeScript
    type: property
    syntax:
      content: 'status: AsyncResultStatus;'
      return:
        type:
          - office.Office.AsyncResultStatus
  - uid: office.Office.AsyncResult.value
    summary: 'Gets the payload or content of this asynchronous operation, if any.'
    remarks: >-
      You access the AsyncResult object in the function passed as the argument to the callback parameter of an "Async"
      method, such as the `getSelectedDataAsync` and `setSelectedDataAsync` methods of the
      [Document](xref:office.Office.Document) object.


      Note: What the value property returns for a particular "Async" method varies depending on the purpose and context
      of that method. To determine what is returned by the value property for an "Async" method, refer to the "Callback
      value" section of the method's topic.


      **Support details**


      A capital Y in the following matrix indicates that this property is supported in the corresponding Office host
      application. An empty cell indicates that the Office host application doesn't support this enumeration.


      For more information about Office host application and server requirements, see [Requirements for running Office
      Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


      *Supported hosts, by platform* <table> <tr><th> </th><th> Office for Windows desktop </th><th> Office Online (in
      browser) </th><th> Office for iPad </th><th> OWA for Devices </th><th> Office for Mac </th></tr> <tr><th> Access
      </th><td> </td><td> Y </td><td> </td><td> </td><td> </td></tr> <tr><th> Excel </th><td> Y </td><td> Y </td><td> Y
      </td><td> </td><td> </td></tr> <tr><th> Outlook </th><td> Y </td><td> Y </td><td> </td><td> Y </td><td> Y
      </td></tr> <tr><th> PowerPoint </th><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><th> Project
      </th><td> Y </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><th> Word </th><td> Y </td><td> Y </td><td> Y
      </td><td> </td><td> </td></tr> </table>

      #### Examples


      ```javascript

      function getData() {
          Office.context.document.getSelectedDataAsync(Office.CoercionType.Table, function(asyncResult) {
              if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                  write(asyncResult.error.message);
              }
              else {
                  write(asyncResult.value);
              }
          });
      }

      // Function that writes to a div with id='message' on the page.

      function write(message){
          document.getElementById('message').innerText += message; 
      }

      ```
    name: value
    fullName: office.Office.AsyncResult.value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value: any;'
      return:
        type:
          - any
