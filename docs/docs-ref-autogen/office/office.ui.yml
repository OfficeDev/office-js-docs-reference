### YamlMime:UniversalReference
items:
  - uid: office.Office.UI
    summary: >-
      Provides objects and methods that you can use to create and manipulate UI components, such as dialog boxes, in
      your Office Add-ins.


      Visit "[Use the Dialog API in your Office
      Add-ins](https://docs.microsoft.com/office/dev/add-ins/develop/dialog-api-in-office-add-ins)<!-- -->" for more
      information.
    name: Office.UI
    fullName: office.Office.UI
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.UI.closeContainer
      - office.Office.UI.displayDialogAsync
      - office.Office.UI.messageParent
      - office.Office.UI.openBrowserWindow
  - uid: office.Office.UI.closeContainer
    summary: Closes the UI container where the JavaScript is executing.
    remarks: >-
      <table><tr><td>Hosts</td><td>Excel, Word, PowerPoint, Outlook (Minimum requirement set: Mailbox
      1.5)</td></tr></table>


      The behavior of this method is specified by the following:


      - Called from a UI-less command button: No effect. Any dialog opened by displayDialogAsync will remain open.


      - Called from a taskpane: The taskpane will close. Any dialog opened by displayDialogAsync will also close. If the
      taskpane supports pinning and was pinned by the user, it will be un-pinned.


      - Called from a module extension: No effect.
    name: closeContainer()
    fullName: office.Office.UI.closeContainer
    langs:
      - typeScript
    type: method
    syntax:
      content: 'closeContainer(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office.Office.UI.displayDialogAsync
    summary: Displays a dialog to show or collect information from the user or to facilitate Web navigation.
    remarks: >-
      <table><tr><td>Hosts</td><td>Word, Excel, Outlook, PowerPoint</td></tr>


      <tr><td>Requirement sets</td><td>DialogAPI, Mailbox 1.4</td></tr></table>


      This method is available in the DialogApi requirement set for Word, Excel, or PowerPoint add-ins, and in the
      Mailbox requirement set 1.4 for Outlook. For more on how to specify a requirement set in your manifest, see
      [Specify Office hosts and API
      requirements](https://docs.microsoft.com/en-us/office/dev/add-ins/develop/specify-office-hosts-and-api-requirements)<!--
      -->.


      The initial page must be on the same domain as the parent page (the startAddress parameter). After the initial
      page loads, you can go to other domains.


      Any page calling `office.context.ui.messageParent` must also be on the same domain as the parent page.


      **Design considerations**:


      The following design considerations apply to dialog boxes:


      - An Office Add-in task pane can have only one dialog box open at any time. Multiple dialogs can be open at the
      same time from Add-in Commands (custom ribbon buttons or menu items).


      - Every dialog box can be moved and resized by the user.


      - Every dialog box is centered on the screen when opened.


      - Dialog boxes appear on top of the host application and in the order in which they were created.


      Use a dialog box to:


      - Display authentication pages to collect user credentials.


      - Display an error/progress/input screen from a ShowTaspane or ExecuteAction command.


      - Temporarily increase the surface area that a user has available to complete a task.


      Do not use a dialog box to interact with a document. Use a task pane instead.


      For a design pattern that you can use to create a dialog box, see [Client
      Dialog](https://github.com/OfficeDev/Office-Add-in-UX-Design-Patterns/blob/master/Patterns/Client_Dialog.md) in
      the Office Add-in UX Design Patterns repository on GitHub.


      **displayDialogAsync Errors**:


      <table> <tr> <th>Code number</th> <th>Meaning</th> </tr> <tr> <td>12004</td> <td>The domain of the URL passed to
      displayDialogAsync is not trusted. The domain must be either the same domain as the host page (including protocol
      and port number), or it must be registered in the <AppDomains> section of the add-in manifest.</td> </tr> <tr>
      <td>12005</td> <td>The URL passed to displayDialogAsync uses the HTTP protocol. HTTPS is required. (In some
      versions of Office, the error message returned with 12005 is the same one returned for 12004.)</td> </tr> <tr>
      <td>12007</td> <td>A dialog box is already opened from the task pane. A task pane add-in can only have one dialog
      box open at a time.</td> </tr> </table>


      In the callback function passed to the displayDialogAsync method, you can use the properties of the AsyncResult
      object to return the following information.


      <table> <tr> <th>Property</th> <th>Use to</th> </tr> <tr> <td>AsyncResult.value</td> <td>Access the Dialog
      object.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determine the success or failure of the operation.</td>
      </tr> <tr> <td>AsyncResult.error</td> <td>Access an Error object that provides error information if the operation
      failed.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Access your user-defined object or value, if you
      passed one as the asyncContext parameter.</td> </tr> </table>
    name: 'displayDialogAsync(startAddress, options, callback)'
    fullName: office.Office.UI.displayDialogAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        displayDialogAsync(startAddress: string, options?: DialogOptions, callback?: (result: AsyncResult) => void):
        void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: startAddress
          description: Accepts the initial HTTPS URL that opens in the dialog.
          type:
            - string
        - id: options
          description: >-
            Optional. Accepts an[Office.DialogOptions](xref:office.Office.DialogOptions) object to define dialog
            display.
          type:
            - office.Office.DialogOptions
        - id: callback
          description: >-
            Optional. Accepts a callback method to handle the dialog creation attempt. If successful, the
            AsyncResult.value is a Dialog object.
          type:
            - '(result: AsyncResult) => void'
  - uid: office.Office.UI.messageParent
    summary: >-
      Delivers a message from the dialog box to its parent/opener page. The page calling this API must be on the same
      domain as the parent.
    name: messageParent(messageObject)
    fullName: office.Office.UI.messageParent
    langs:
      - typeScript
    type: method
    syntax:
      content: 'messageParent(messageObject: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: messageObject
          description: Accepts a message from the dialog to deliver to the add-in.
          type:
            - any
  - uid: office.Office.UI.openBrowserWindow
    summary: Opens a browser window and loads the specified URL.
    name: openBrowserWindow(url)
    fullName: office.Office.UI.openBrowserWindow
    langs:
      - typeScript
    type: method
    syntax:
      content: 'openBrowserWindow(url: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: url
          description: 'The full URL to be opened including protocol (e.g., https), and port number, if any.'
          type:
            - string
