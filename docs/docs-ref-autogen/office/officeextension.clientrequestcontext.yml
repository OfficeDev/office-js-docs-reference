### YamlMime:UniversalReference
items:
  - uid: office.OfficeExtension.ClientRequestContext
    summary: >-
      An abstract RequestContext object that facilitates requests to the host Office application. The `Excel.run` and
      `Word.run` methods provide a request context.
    name: OfficeExtension.ClientRequestContext
    fullName: office.OfficeExtension.ClientRequestContext
    langs:
      - typeScript
    type: class
    package: office
    children:
      - office.OfficeExtension.ClientRequestContext.constructor
      - office.OfficeExtension.ClientRequestContext.debugInfo
      - office.OfficeExtension.ClientRequestContext.load
      - office.OfficeExtension.ClientRequestContext.loadRecursive
      - office.OfficeExtension.ClientRequestContext.requestHeaders
      - office.OfficeExtension.ClientRequestContext.sync
      - office.OfficeExtension.ClientRequestContext.trace
      - office.OfficeExtension.ClientRequestContext.trackedObjects
  - uid: office.OfficeExtension.ClientRequestContext.constructor
    summary: 'Constructs a new instance of the [ClientRequestContext](xref:office.OfficeExtension.ClientRequestContext) class'
    name: constructor(url)
    fullName: office.OfficeExtension.ClientRequestContext.constructor
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(url?: string);'
      parameters:
        - id: url
          description: ''
          type:
            - string
  - uid: office.OfficeExtension.ClientRequestContext.debugInfo
    summary: Debug information
    name: debugInfo
    fullName: office.OfficeExtension.ClientRequestContext.debugInfo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly debugInfo: RequestContextDebugInfo;'
      return:
        type:
          - office.OfficeExtension.RequestContextDebugInfo
  - uid: office.OfficeExtension.ClientRequestContext.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: 'load(object, option)'
    fullName: office.OfficeExtension.ClientRequestContext.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: The object whose properties are loaded.
          type:
            - office.OfficeExtension.ClientObject
        - id: option
          description: >-
            A comma-delimited string, or array of strings, that specifies the properties/relationships to load, or
            an[OfficeExtension.LoadOption](xref:office.OfficeExtension.LoadOption) object.
          type:
            - 'string | string[] | LoadOption'
  - uid: office.OfficeExtension.ClientRequestContext.loadRecursive
    summary: |-
      Queues up a command to recursively load the specified properties of the object and its navigation properties.

      You must call `context.sync()` before reading the properties.
    name: 'loadRecursive(object, options, maxDepth)'
    fullName: office.OfficeExtension.ClientRequestContext.loadRecursive
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?:
        number): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: The object to be loaded.
          type:
            - office.OfficeExtension.ClientObject
        - id: options
          description: >-
            The key-value pairing of load options for the types, such as `{ "Workbook": "worksheets,tables",
            "Worksheet": "tables", "Tables": "name" }`
          type:
            - '{ [typeName: string]: string | string[] | LoadOption }'
        - id: maxDepth
          description: The maximum recursive depth.
          type:
            - number
  - uid: office.OfficeExtension.ClientRequestContext.requestHeaders
    summary: Request headers
    name: requestHeaders
    fullName: office.OfficeExtension.ClientRequestContext.requestHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'requestHeaders:'
      return:
        type:
          - '{ [name: string]: string }'
  - uid: office.OfficeExtension.ClientRequestContext.sync
    summary: >-
      Synchronizes the state between JavaScript proxy objects and the Office document, by executing instructions queued
      on the request context and retrieving properties of loaded Office objects for use in your code. This method
      returns a promise, which is resolved when the synchronization is complete.
    name: sync(passThroughValue)
    fullName: office.OfficeExtension.ClientRequestContext.sync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sync<T>(passThroughValue?: T): Promise<T>;'
      return:
        type:
          - Promise<T>
        description: ''
      parameters:
        - id: passThroughValue
          description: ''
          type:
            - T
  - uid: office.OfficeExtension.ClientRequestContext.trace
    summary: >-
      Adds a trace message to the queue. If the promise returned by `context.sync()` is rejected due to an error, this
      adds a ".traceMessages" array to the OfficeExtension.Error object, containing all trace messages that were
      executed. These messages can help you monitor the program execution sequence and detect the cause of the error.
    name: trace(message)
    fullName: office.OfficeExtension.ClientRequestContext.trace
    langs:
      - typeScript
    type: method
    syntax:
      content: 'trace(message: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: message
          description: ''
          type:
            - string
  - uid: office.OfficeExtension.ClientRequestContext.trackedObjects
    summary: Collection of objects that are tracked for automatic adjustments based on surrounding changes in the document.
    name: trackedObjects
    fullName: office.OfficeExtension.ClientRequestContext.trackedObjects
    langs:
      - typeScript
    type: property
    syntax:
      content: 'trackedObjects: TrackedObjects;'
      return:
        type:
          - office.OfficeExtension.TrackedObjects
