### YamlMime:UniversalReference
items:
  - uid: office.Office.Settings
    summary: >-
      Represents custom settings for a task pane or content add-in that are stored in the host document as name/value
      pairs.
    remarks: >-
      The settings created by using the methods of the Settings object are saved per add-in and per document. That is,
      they are available only to the add-in that created them, and only from the document in which they are saved.


      The name of a setting is a string, while the value can be a string, number, boolean, null, object, or array.


      The Settings object is automatically loaded as part of the Document object, and is available by calling the
      settings property of that object when the add-in is activated. The developer is responsible for calling the
      saveAsync method after adding or deleting settings to save the settings in the document.


      Hosts: Access, Excel, PowerPoint, Word


      Available in Requirement set: Settings
    name: Office.Settings
    fullName: office.Office.Settings
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.Settings.addHandlerAsync
      - office.Office.Settings.get
      - office.Office.Settings.refreshAsync
      - office.Office.Settings.remove
      - office.Office.Settings.removeHandlerAsync
      - office.Office.Settings.saveAsync
      - office.Office.Settings.set
  - uid: office.Office.Settings.addHandlerAsync
    summary: >-
      Adds an event handler for the settingsChanged event.


      Important: Your add-in's code can register a handler for the settingsChanged event when the add-in is running with
      any Excel client, but the event will fire only when the add-in is loaded with a spreadsheet that is opened in
      Excel Online, and more than one user is editing the spreadsheet (co-authoring). Therefore, effectively the
      settingsChanged event is supported only in Excel Online in co-authoring scenarios.
    remarks: >-
      When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can
      access from the callback function's only parameter. In the callback function passed to the addHandlerAsync method,
      you can use the properties of the AsyncResult object to return the following information. \|Property \|Use to...\|
      \|\-\-\-\-\-\-\-\-\-\|\-\-\-\-\-\-\-\-\-\| \|AsyncResult.value\|Always returns undefined because there is no data
      or object to retrieve when adding an event handler.\| \|AsyncResult.status\|Determine the success or failure of
      the operation.\| \|AsyncResult.error\|Access an Error object that provides error information if the operation
      failed.\| \|AsyncResult.asyncContext\|A user-defined item of any type that is returned in the AsyncResult object
      without being altered.\|
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: office.Office.Settings.addHandlerAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addHandlerAsync(eventType: EventType, handler: any, options?: any, callback?: (result: AsyncResult) => void):
        void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: Specifies the type of event to add. Required.
          type:
            - EventType
        - id: handler
          description: The event handler function to add. Required.
          type:
            - any
        - id: options
          description: >-
            Specifies any of the following optional parameters. asyncContext: A user-defined item of any type that is
            returned in the AsyncResult object without being altered.
          type:
            - any
        - id: callback
          description: 'Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult.'
          type:
            - '(result: AsyncResult) => void'
  - uid: office.Office.Settings.get
    summary: Retrieves the specified setting.
    remarks: |-
      Hosts: Access, Excel, PowerPoint, Word

      Available in Requirement set: Settings
    name: get(name)
    fullName: office.Office.Settings.get
    langs:
      - typeScript
    type: method
    syntax:
      content: 'get(name: string): any;'
      return:
        type:
          - any
        description: An object that has property names mapped to JSON serialized values.
      parameters:
        - id: name
          description: ''
          type:
            - string
  - uid: office.Office.Settings.refreshAsync
    summary: >-
      Reads all settings persisted in the document and refreshes the content or task pane add-in's copy of those
      settings held in memory.
    remarks: >-
      When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can
      access from the callback function's only parameter. In the callback function passed to the refreshAsync method,
      you can use the properties of the AsyncResult object to return the following information. \|Property \|Use to...\|
      \|\-\-\-\-\-\-\-\-\-\|\-\-\-\-\-\-\-\-\-\| \|AsyncResult.value\|Access a Settings object with the refreshed
      values.\| \|AsyncResult.status\|Determine the success or failure of the operation.\| \|AsyncResult.error\|Access
      an Error object that provides error information if the operation failed.\| \|AsyncResult.asyncContext\|A
      user-defined item of any type that is returned in the AsyncResult object without being altered.\|
    name: refreshAsync(callback)
    fullName: office.Office.Settings.refreshAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refreshAsync(callback?: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult.'
          type:
            - '(result: AsyncResult) => void'
  - uid: office.Office.Settings.remove
    summary: >-
      Removes the specified setting.


      Important: Be aware that the Settings.remove method affects only the in-memory copy of the settings property bag.
      To persist the removal of the specified setting in the document, at some point after calling the Settings.remove
      method and before the add-in is closed, you must call the Settings.saveAsync method.
    remarks: >-
      null is a valid value for a setting. Therefore, assigning null to the setting will not remove it from the settings
      property bag.


      Hosts: Access, Excel, PowerPoint, Word


      Available in Requirement set: Settings
    name: remove(name)
    fullName: office.Office.Settings.remove
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(name: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
  - uid: office.Office.Settings.removeHandlerAsync
    summary: Removes an event handler for the settingsChanged event.
    remarks: >-
      When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can
      access from the callback function's only parameter. In the callback function passed to the removeHandlerAsync
      method, you can use the properties of the AsyncResult object to return the following information.
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: office.Office.Settings.removeHandlerAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: EventType, options?: any, callback?: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: Specifies the type of event to remove. Required.
          type:
            - EventType
        - id: options
          description: Specifies any of the following optional parameters.
          type:
            - any
        - id: callback
          description: 'Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult.'
          type:
            - '(result: AsyncResult) => void'
  - uid: office.Office.Settings.saveAsync
    summary: Persists the in-memory copy of the settings property bag in the document.
    remarks: >-
      When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can
      access from the callback function's only parameter. In the callback function passed to the saveAsync method, you
      can use the properties of the AsyncResult object to return the following information. \|Property \|Use to...\|
      \|\-\-\-\-\-\-\-\-\-\|\-\-\-\-\-\-\-\-\-\| \|AsyncResult.value\|Always returns undefined because there is no
      object or data to retrieve.\| \|AsyncResult.status\|Determine the success or failure of the operation.\|
      \|AsyncResult.error\|Access an Error object that provides error information if the operation failed.\|
      \|AsyncResult.asyncContext\|A user-defined item of any type that is returned in the AsyncResult object without
      being altered.\|
    name: saveAsync(callback)
    fullName: office.Office.Settings.saveAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(callback?: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: >-
            Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult.
            Optional.
          type:
            - '(result: AsyncResult) => void'
  - uid: office.Office.Settings.set
    summary: >-
      Sets or creates the specified setting.


      Important: Be aware that the Settings.set method affects only the in-memory copy of the settings property bag. To
      make sure that additions or changes to settings will be available to your add-in the next time the document is
      opened, at some point after calling the Settings.set method and before the add-in is closed, you must call the
      Settings.saveAsync method to persist settings in the document.
    remarks: >-
      The set method creates a new setting of the specified name if it does not already exist, or sets an existing
      setting of the specified name in the in-memory copy of the settings property bag. After you call the
      Settings.saveAsync method, the value is stored in the document as the serialized JSON representation of its data
      type. A maximum of 2MB is available for the settings of each add-in.


      Hosts: Access, Excel, PowerPoint, Word


      Available in Requirement set: Settings
    name: 'set(name, value)'
    fullName: office.Office.Settings.set
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(name: string, value: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
        - id: value
          description: Specifies the value to be stored.
          type:
            - any
