### YamlMime:UniversalReference
items:
  - uid: office.Office.CustomXmlPart
    summary: Represents a single CustomXMLPart in a CustomXMLParts collection.
    remarks: |-
      Hosts: Word

      Available in Requirement set: CustomXmlParts
    name: Office.CustomXmlPart
    fullName: office.Office.CustomXmlPart
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.CustomXmlPart.addHandlerAsync
      - office.Office.CustomXmlPart.builtIn
      - office.Office.CustomXmlPart.deleteAsync
      - office.Office.CustomXmlPart.getNodesAsync
      - office.Office.CustomXmlPart.getXmlAsync
      - office.Office.CustomXmlPart.id
      - office.Office.CustomXmlPart.namespaceManager
      - office.Office.CustomXmlPart.removeHandlerAsync
  - uid: office.Office.CustomXmlPart.addHandlerAsync
    summary: Adds an event handler to the object using the specified event type.
    remarks: >-
      Hosts: Word


      You can add multiple event handlers for the specified eventType as long as the name of each event handler function
      is unique.
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: office.Office.CustomXmlPart.addHandlerAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addHandlerAsync(eventType: EventType, handler: (result: any) => void, options?: AsyncContextOptions, callback?:
        (result: AsyncResult) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: >-
            Specifies the type of event to add. Required. For a CustomXmlPart object event, the eventType parameter can
            be specified as Office.EventType.DataNodeDeleted, Office.EventType.DataNodeInserted,
            Office.EventType.DataNodeReplaced, or the corresponding text values of these enumerations.
          type:
            - EventType
        - id: handler
          description: >-
            The event handler function to add, whose only parameter is of type NodeDeletedEventArgs,
            NodeInsertedEventArgs, or NodeReplaceEventArgs. Required.
          type:
            - '(result: any) => void'
        - id: options
          description: 'Provides an option for preserving context data of any type, unchanged, for use in a callback..'
          type:
            - AsyncContextOptions
        - id: callback
          description: 'Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult.'
          type:
            - '(result: AsyncResult) => void'
  - uid: office.Office.CustomXmlPart.builtIn
    summary: 'True, if the custom XML part is built in; otherwise false.'
    remarks: |-
      Hosts: Word

      Available in Requirement set: CustomXmlParts
    name: builtIn
    fullName: office.Office.CustomXmlPart.builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'builtIn: boolean;'
      return:
        type:
          - boolean
  - uid: office.Office.CustomXmlPart.deleteAsync
    summary: Deletes the Custom XML Part.
    remarks: |-
      Hosts: Word

      Available in Requirement set: CustomXmlParts
    name: 'deleteAsync(options, callback)'
    fullName: office.Office.CustomXmlPart.deleteAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Provides an option for preserving context data of any type, unchanged, for use in a callback.'
          type:
            - AsyncContextOptions
        - id: callback
          description: 'Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult.'
          type:
            - '(result: AsyncResult) => void'
  - uid: office.Office.CustomXmlPart.getNodesAsync
    summary: Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.
    remarks: |-
      Hosts: Word

      Available in Requirement set: CustomXmlParts
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: office.Office.CustomXmlPart.getNodesAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: An XPath expression that specifies the nodes you want returned. Required.
          type:
            - string
        - id: options
          description: 'Provides an option for preserving context data of any type, unchanged, for use in a callback.'
          type:
            - AsyncContextOptions
        - id: callback
          description: 'Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult.'
          type:
            - '(result: AsyncResult) => void'
  - uid: office.Office.CustomXmlPart.getXmlAsync
    summary: Asynchronously gets the XML inside this custom XML part.
    remarks: |-
      Hosts: Word

      Available in Requirement set: CustomXmlParts
    name: 'getXmlAsync(options, callback)'
    fullName: office.Office.CustomXmlPart.getXmlAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: AsyncContextOptions, callback?: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Provides an option for preserving context data of any type, unchanged, for use in a callback.'
          type:
            - AsyncContextOptions
        - id: callback
          description: 'Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult.'
          type:
            - '(result: AsyncResult) => void'
  - uid: office.Office.CustomXmlPart.id
    summary: Gets the GUID of the CustomXMLPart.
    remarks: |-
      Hosts: Word

      Available in Requirement set: CustomXmlParts
    name: id
    fullName: office.Office.CustomXmlPart.id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
  - uid: office.Office.CustomXmlPart.namespaceManager
    summary: Gets the set of namespace prefix mappings (CustomXMLPrefixMappings) used against the current CustomXMLPart.
    remarks: |-
      Hosts: Word

      Available in Requirement set: CustomXmlParts
    name: namespaceManager
    fullName: office.Office.CustomXmlPart.namespaceManager
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceManager: CustomXmlPrefixMappings;'
      return:
        type:
          - CustomXmlPrefixMappings
  - uid: office.Office.CustomXmlPart.removeHandlerAsync
    summary: Removes an event handler for the specified event type.
    remarks: |-
      Hosts: Word

      Available in Requirement set: CustomXmlParts
    name: 'removeHandlerAsync(eventType, handler, options, callback)'
    fullName: office.Office.CustomXmlPart.removeHandlerAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        removeHandlerAsync(eventType: EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions,
        callback?: (result: AsyncResult) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: >-
            Specifies the type of event to remove. Required.For a CustomXmlPart object event, the eventType parameter
            can be specified as Office.EventType.DataNodeDeleted, Office.EventType.DataNodeInserted,
            Office.EventType.DataNodeReplaced, or the corresponding text values of these enumerations.
          type:
            - EventType
        - id: handler
          description: ''
          type:
            - '(result: any) => void'
        - id: options
          description: Provides options to determine which event handler or handlers are removed.
          type:
            - RemoveHandlerOptions
        - id: callback
          description: 'Optional. A function that is invoked when the callback returns, whose only parameter is of type AsyncResult.'
          type:
            - '(result: AsyncResult) => void'
