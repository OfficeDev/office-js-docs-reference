### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.RangeView
    summary: |-
      RangeView represents a set of visible cells of the parent range.

      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.RangeView
    fullName: Excel.RangeView
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.RangeView.cellAddresses
      - excel_release.Excel.RangeView.columnCount
      - excel_release.Excel.RangeView.context
      - excel_release.Excel.RangeView.formulas
      - excel_release.Excel.RangeView.formulasLocal
      - excel_release.Excel.RangeView.formulasR1C1
      - excel_release.Excel.RangeView.getRange
      - excel_release.Excel.RangeView.index
      - excel_release.Excel.RangeView.load
      - excel_release.Excel.RangeView.load_1
      - excel_release.Excel.RangeView.load_2
      - excel_release.Excel.RangeView.numberFormat
      - excel_release.Excel.RangeView.rowCount
      - excel_release.Excel.RangeView.rows
      - excel_release.Excel.RangeView.set
      - excel_release.Excel.RangeView.set_1
      - excel_release.Excel.RangeView.text
      - excel_release.Excel.RangeView.toJSON
      - excel_release.Excel.RangeView.values
      - excel_release.Excel.RangeView.valueTypes
  - uid: excel_release.Excel.RangeView.cellAddresses
    summary: |-
      Represents the cell addresses of the RangeView. Read-only.

      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: cellAddresses
    fullName: cellAddresses
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellAddresses: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: excel_release.Excel.RangeView.columnCount
    summary: |-
      Returns the number of visible columns. Read-only.

      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnCount: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.RangeView.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.RangeView.formulas
    summary: |-
      Represents the formula in A1-style notation.

      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: formulas
    fullName: formulas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulas: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: excel_release.Excel.RangeView.formulasLocal
    summary: >-
      Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the
      English "=SUM(A1, 1.5)" formula would become "=SUMME(A1; 1,5)" in German.


      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: formulasLocal
    fullName: formulasLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulasLocal: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: excel_release.Excel.RangeView.formulasR1C1
    summary: |-
      Represents the formula in R1C1-style notation.

      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: formulasR1C1
    fullName: formulasR1C1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulasR1C1: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: excel_release.Excel.RangeView.getRange
    summary: |-
      Gets the parent range associated with the current RangeView.

      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.RangeView.index
    summary: |-
      Returns a value that represents the index of the RangeView. Read-only.

      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.RangeView.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Excel.RangeView` - Where option is a comma-delimited string or an array of
      strings that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): Excel.RangeView` - Where option.select is a comma-delimited
      string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the
      navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeView` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeViewLoadOptions): Excel.RangeView;'
      return:
        type:
          - excel.Excel.RangeView
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.RangeViewLoadOptions
  - uid: excel_release.Excel.RangeView.load_1
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeView;'
      return:
        type:
          - excel.Excel.RangeView
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.RangeView.load_2
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeView;'
      return:
        type:
          - excel.Excel.RangeView
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and
            propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.RangeView.numberFormat
    summary: |-
      Represents Excel's number format code for the given cell.

      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: numberFormat
    fullName: numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormat: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: excel_release.Excel.RangeView.rowCount
    summary: |-
      Returns the number of visible rows. Read-only.

      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowCount: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.RangeView.rows
    summary: |-
      Represents a collection of range views associated with the range. Read-only.

      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: Excel.RangeViewCollection;'
      return:
        type:
          - excel.Excel.RangeViewCollection
  - uid: excel_release.Excel.RangeView.set
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.RangeView): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeViewUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type:
            - Interfaces.RangeViewUpdateData
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.RangeView.set_1
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.RangeView): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.RangeView
  - uid: excel_release.Excel.RangeView.text
    summary: >-
      Text values of the specified range. The Text value will not depend on the cell width. The \# sign substitution
      that happens in Excel UI will not affect the text value returned by the API. Read-only.


      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string[][];'
      return:
        type:
          - 'string[][]'
  - uid: excel_release.Excel.RangeView.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.RangeView object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.RangeViewData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeViewData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeViewData
        description: ''
  - uid: excel_release.Excel.RangeView.values
    summary: >-
      Represents the raw values of the specified range view. The data returned could be of type string, number, or a
      boolean. Cells that contain an error will return the error string.


      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: excel_release.Excel.RangeView.valueTypes
    summary: |-
      Represents the type of data of each cell. Read-only.

      \[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: valueTypes
    fullName: valueTypes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly valueTypes: Excel.RangeValueType[][];'
      return:
        type:
          - 'Excel.RangeValueType[][]'
