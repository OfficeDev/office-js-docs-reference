### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.ColorScaleConditionalFormat
    summary: |-
      Represents an IconSet criteria for conditional formatting.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.ColorScaleConditionalFormat
    fullName: Excel.ColorScaleConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.ColorScaleConditionalFormat.context
      - excel_release.Excel.ColorScaleConditionalFormat.criteria
      - excel_release.Excel.ColorScaleConditionalFormat.load
      - excel_release.Excel.ColorScaleConditionalFormat.load_1
      - excel_release.Excel.ColorScaleConditionalFormat.load_2
      - excel_release.Excel.ColorScaleConditionalFormat.set
      - excel_release.Excel.ColorScaleConditionalFormat.set_1
      - excel_release.Excel.ColorScaleConditionalFormat.threeColorScale
      - excel_release.Excel.ColorScaleConditionalFormat.toJSON
  - uid: excel_release.Excel.ColorScaleConditionalFormat.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.ColorScaleConditionalFormat.criteria
    summary: |-
      The criteria of the color scale. Midpoint is optional when using a two point color scale.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'criteria: Excel.ConditionalColorScaleCriteria;'
      return:
        type:
          - excel.Excel.ConditionalColorScaleCriteria
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:M5");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.colorScale);
              const criteria = {
                  minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: "blue" },
                  midpoint: { formula: "50", type: Excel.ConditionalFormatColorCriterionType.percent, color: "yellow" },
                  maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: "red" }
              };
              conditionalFormat.colorScale.criteria = criteria;

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ColorScaleConditionalFormat.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Excel.ColorScaleConditionalFormat` - Where option is a comma-delimited string
      or an array of strings that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat` - Where option.select is
      a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string
      that specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }):
      Excel.ColorScaleConditionalFormat` - Only available on collection types. It is similar to the preceding signature.
      Option.top specifies the maximum number of collection items that can be included in the result. Option.skip
      specifies the number of items that are to be skipped and not included in the result. If option.top is specified,
      the result set will start after skipping the specified number of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ColorScaleConditionalFormatLoadOptions): Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - excel.Excel.ColorScaleConditionalFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ColorScaleConditionalFormatLoadOptions
  - uid: excel_release.Excel.ColorScaleConditionalFormat.load_1
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - excel.Excel.ColorScaleConditionalFormat
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.ColorScaleConditionalFormat.load_2
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - excel.Excel.ColorScaleConditionalFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and
            propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.ColorScaleConditionalFormat.set
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.ColorScaleConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        set(properties: Interfaces.ColorScaleConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions):
        void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type:
            - Interfaces.ColorScaleConditionalFormatUpdateData
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.ColorScaleConditionalFormat.set_1
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ColorScaleConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ColorScaleConditionalFormat
  - uid: excel_release.Excel.ColorScaleConditionalFormat.threeColorScale
    summary: >-
      If true the color scale will have three points (minimum, midpoint, maximum), otherwise it will have two (minimum,
      maximum).


      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: threeColorScale
    fullName: threeColorScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly threeColorScale: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ColorScaleConditionalFormat.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.ColorScaleConditionalFormat object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `Excel.Interfaces.ColorScaleConditionalFormatData`<!-- -->) that
      contains shallow copies of any loaded child properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ColorScaleConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.ColorScaleConditionalFormatData
        description: ''
