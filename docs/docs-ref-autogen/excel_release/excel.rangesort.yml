### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.RangeSort
    summary: |-
      Manages sorting operations on Range objects.

      \[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.RangeSort
    fullName: Excel.RangeSort
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.RangeSort.apply
      - excel_release.Excel.RangeSort.apply_1
      - excel_release.Excel.RangeSort.context
      - excel_release.Excel.RangeSort.toJSON
  - uid: excel_release.Excel.RangeSort.apply
    summary: |-
      Perform a sort operation.

      \[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'apply(fields, matchCase, hasHeaders, orientation, method)'
    fullName: 'apply(fields, matchCase, hasHeaders, orientation, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientation?: Excel.SortOrientation,
        method?: Excel.SortMethod): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: The list of conditions to sort on.
          type:
            - 'Excel.SortField[]'
        - id: matchCase
          description: Optional. Whether to have the casing impact string ordering.
          type:
            - boolean
        - id: hasHeaders
          description: Optional. Whether the range has a header.
          type:
            - boolean
        - id: orientation
          description: Optional. Whether the operation is sorting rows or columns.
          type:
            - excel.Excel.SortOrientation
        - id: method
          description: Optional. The ordering method used for Chinese characters.
          type:
            - excel.Excel.SortMethod
  - uid: excel_release.Excel.RangeSort.apply_1
    summary: |-
      Perform a sort operation.

      \[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'apply(fields, matchCase, hasHeaders, orientationString, method)'
    fullName: 'apply(fields, matchCase, hasHeaders, orientationString, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientationString?: "Rows" |
        "Columns", method?: "PinYin" | "StrokeCount"): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: The list of conditions to sort on.
          type:
            - 'Excel.SortField[]'
        - id: matchCase
          description: Optional. Whether to have the casing impact string ordering.
          type:
            - boolean
        - id: hasHeaders
          description: Optional. Whether the range has a header.
          type:
            - boolean
        - id: orientationString
          description: Optional. Whether the operation is sorting rows or columns.
          type:
            - '"Rows" | "Columns"'
        - id: method
          description: Optional. The ordering method used for Chinese characters.
          type:
            - '"PinYin" | "StrokeCount"'
  - uid: excel_release.Excel.RangeSort.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.RangeSort.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.RangeSort object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.RangeSortData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: "toJSON(): {\r\n            [key: string]: string;\r\n        };"
      return:
        type:
          - "{\r\n            [key: string]: string;\r\n        }"
        description: ''
