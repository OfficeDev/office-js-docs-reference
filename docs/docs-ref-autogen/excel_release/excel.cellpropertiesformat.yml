### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.CellPropertiesFormat
    summary: Represents the returned format properties of getCellProperties or format input parameter of setCellProperties.
    name: Excel.CellPropertiesFormat
    fullName: Excel.CellPropertiesFormat
    langs:
      - typeScript
    type: interface
    package: excel_release
    children:
      - excel_release.Excel.CellPropertiesFormat.autoIndent
      - excel_release.Excel.CellPropertiesFormat.horizontalAlignment
      - excel_release.Excel.CellPropertiesFormat.indentLevel
      - excel_release.Excel.CellPropertiesFormat.readingOrder
      - excel_release.Excel.CellPropertiesFormat.shrinkToFit
      - excel_release.Excel.CellPropertiesFormat.textOrientation
      - excel_release.Excel.CellPropertiesFormat.useStandardHeight
      - excel_release.Excel.CellPropertiesFormat.useStandardWidth
      - excel_release.Excel.CellPropertiesFormat.verticalAlignment
      - excel_release.Excel.CellPropertiesFormat.wrapText
  - uid: excel_release.Excel.CellPropertiesFormat.autoIndent
    name: autoIndent
    fullName: autoIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoIndent?: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.CellPropertiesFormat.horizontalAlignment
    name: horizontalAlignment
    fullName: horizontalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        horizontalAlignment?: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" |
        "CenterAcrossSelection" | "Distributed";
      return:
        type:
          - >-
            Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" |
            "CenterAcrossSelection" | "Distributed"
  - uid: excel_release.Excel.CellPropertiesFormat.indentLevel
    name: indentLevel
    fullName: indentLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'indentLevel?: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.CellPropertiesFormat.readingOrder
    name: readingOrder
    fullName: readingOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readingOrder?: Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft";'
      return:
        type:
          - Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft"
  - uid: excel_release.Excel.CellPropertiesFormat.shrinkToFit
    name: shrinkToFit
    fullName: shrinkToFit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shrinkToFit?: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.CellPropertiesFormat.textOrientation
    name: textOrientation
    fullName: textOrientation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textOrientation?: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.CellPropertiesFormat.useStandardHeight
    name: useStandardHeight
    fullName: useStandardHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'useStandardHeight?: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.CellPropertiesFormat.useStandardWidth
    name: useStandardWidth
    fullName: useStandardWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'useStandardWidth?: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.CellPropertiesFormat.verticalAlignment
    name: verticalAlignment
    fullName: verticalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'verticalAlignment?: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed";'
      return:
        type:
          - Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
  - uid: excel_release.Excel.CellPropertiesFormat.wrapText
    name: wrapText
    fullName: wrapText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wrapText?: boolean;'
      return:
        type:
          - boolean
