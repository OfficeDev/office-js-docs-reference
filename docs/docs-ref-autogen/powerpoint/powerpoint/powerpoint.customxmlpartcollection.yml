### YamlMime:TSType
name: PowerPoint.CustomXmlPartCollection
uid: 'powerpoint!PowerPoint.CustomXmlPartCollection:class'
package: powerpoint!
fullName: PowerPoint.CustomXmlPartCollection
summary: A collection of custom XML parts.
remarks: '\[ [API set: PowerPointApi 1.7](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'powerpoint!PowerPoint.CustomXmlPartCollection#context:member'
    package: powerpoint!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="powerpoint!PowerPoint.RequestContext:class" />'
  - name: items
    uid: 'powerpoint!PowerPoint.CustomXmlPartCollection#items:member'
    package: powerpoint!
    fullName: items
    summary: Gets the loaded child items in this collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly items: PowerPoint.CustomXmlPart[];'
      return:
        type: '<xref uid="powerpoint!PowerPoint.CustomXmlPart:class" />[]'
methods:
  - name: add(xml)
    uid: 'powerpoint!PowerPoint.CustomXmlPartCollection#add:member(1)'
    package: powerpoint!
    fullName: add(xml)
    summary: Adds a new `CustomXmlPart` to the collection.
    remarks: '\[ [API set: PowerPointApi 1.7](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'add(xml: string): PowerPoint.CustomXmlPart;'
      parameters:
        - id: xml
          description: >-
            XML content. Must be a valid XML fragment. If the XML fragment is invalid, then this method returns the
            `GeneralException` error.
          type: string
      return:
        type: '<xref uid="powerpoint!PowerPoint.CustomXmlPart:class" />'
        description: ''
  - name: getByNamespace(namespaceUri)
    uid: 'powerpoint!PowerPoint.CustomXmlPartCollection#getByNamespace:member(1)'
    package: powerpoint!
    fullName: getByNamespace(namespaceUri)
    summary: Gets a new scoped collection of custom XML parts whose namespaces match the given namespace.
    remarks: '\[ [API set: PowerPointApi 1.7](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getByNamespace(namespaceUri: string): PowerPoint.CustomXmlPartScopedCollection;'
      parameters:
        - id: namespaceUri
          description: 'This must be a fully qualified schema URI, such as "http://schemas.contoso.com/review/1.0".'
          type: string
      return:
        type: '<xref uid="powerpoint!PowerPoint.CustomXmlPartScopedCollection:class" />'
        description: ''
  - name: getCount()
    uid: 'powerpoint!PowerPoint.CustomXmlPartCollection#getCount:member(1)'
    package: powerpoint!
    fullName: getCount()
    summary: Gets the number of custom XML parts in the collection.
    remarks: '\[ [API set: PowerPointApi 1.7](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;'
        description: The number of custom XML parts in the collection.
  - name: getItem(id)
    uid: 'powerpoint!PowerPoint.CustomXmlPartCollection#getItem:member(1)'
    package: powerpoint!
    fullName: getItem(id)
    summary: Gets a `CustomXmlPart` based on its ID.
    remarks: '\[ [API set: PowerPointApi 1.7](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItem(id: string): PowerPoint.CustomXmlPart;'
      parameters:
        - id: id
          description: ID of the object to be retrieved.
          type: string
      return:
        type: '<xref uid="powerpoint!PowerPoint.CustomXmlPart:class" />'
        description: ''
  - name: getItemOrNullObject(id)
    uid: 'powerpoint!PowerPoint.CustomXmlPartCollection#getItemOrNullObject:member(1)'
    package: powerpoint!
    fullName: getItemOrNullObject(id)
    summary: >-
      Gets a `CustomXmlPart` based on its ID. If the `CustomXmlPart` doesn't exist, then this method returns an object
      with its `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject methods and
      properties](https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: PowerPointApi 1.7](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItemOrNullObject(id: string): PowerPoint.CustomXmlPart;'
      parameters:
        - id: id
          description: ID of the object to be retrieved.
          type: string
      return:
        type: '<xref uid="powerpoint!PowerPoint.CustomXmlPart:class" />'
        description: ''
  - name: load(options)
    uid: 'powerpoint!PowerPoint.CustomXmlPartCollection#load:member(1)'
    package: powerpoint!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: PowerPoint.Interfaces.CustomXmlPartCollectionLoadOptions &
        PowerPoint.Interfaces.CollectionLoadOptions): PowerPoint.CustomXmlPartCollection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="powerpoint!PowerPoint.Interfaces.CustomXmlPartCollectionLoadOptions:interface" /> & <xref
            uid="powerpoint!PowerPoint.Interfaces.CollectionLoadOptions:interface" />
      return:
        type: '<xref uid="powerpoint!PowerPoint.CustomXmlPartCollection:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'powerpoint!PowerPoint.CustomXmlPartCollection#load:member(2)'
    package: powerpoint!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): PowerPoint.CustomXmlPartCollection;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="powerpoint!PowerPoint.CustomXmlPartCollection:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'powerpoint!PowerPoint.CustomXmlPartCollection#load:member(3)'
    package: powerpoint!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): PowerPoint.CustomXmlPartCollection;'
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: '<xref uid="office!OfficeExtension.LoadOption:interface" />'
      return:
        type: '<xref uid="powerpoint!PowerPoint.CustomXmlPartCollection:class" />'
        description: ''
  - name: toJSON()
    uid: 'powerpoint!PowerPoint.CustomXmlPartCollection#toJSON:member(1)'
    package: powerpoint!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that's
      passed to it.) Whereas the original `PowerPoint.CustomXmlPartCollection` object is an API object, the `toJSON`
      method returns a plain JavaScript object (typed as `PowerPoint.Interfaces.CustomXmlPartCollectionData`<!-- -->)
      that contains an "items" array with shallow copies of any loaded properties from the collection's items.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): PowerPoint.Interfaces.CustomXmlPartCollectionData;'
      return:
        type: '<xref uid="powerpoint!PowerPoint.Interfaces.CustomXmlPartCollectionData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
