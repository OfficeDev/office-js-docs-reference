### YamlMime:TSType
name: PowerPoint.Table
uid: powerpoint!PowerPoint.Table:class
package: powerpoint!
fullName: PowerPoint.Table
summary: Represents a table.
remarks: >-
  \[ [API set: PowerPointApi
  1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
  \]


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/powerpoint/shapes/add-modify-tables.yaml


  // Updates a table's values.

  await PowerPoint.run(async (context) => {
    const shapes = context.presentation.getSelectedSlides().getItemAt(0).shapes;

    // Add a table (which is a type of Shape).
    const shape = shapes.addTable(4, 3);
    let table = shape.getTable();
    table.load();
    await context.sync();

    // Update values in the table.
    for (let rowIndex = 0; rowIndex < table.rowCount; rowIndex++) {
      for (let columnIndex = 0; columnIndex < table.columnCount; columnIndex++) {
        const cell = table.getCellOrNullObject(rowIndex, columnIndex);
        cell.text = generateRandomString();
      }
    }

    await context.sync();
  });

  ```

isPreview: false
isDeprecated: false
type: class
properties:
  - name: columnCount
    uid: powerpoint!PowerPoint.Table#columnCount:member
    package: powerpoint!
    fullName: columnCount
    summary: Gets the number of columns in the table.
    remarks: >-
      \[ [API set: PowerPointApi
      1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly columnCount: number;'
      return:
        type: number
  - name: columns
    uid: powerpoint!PowerPoint.Table#columns:member
    package: powerpoint!
    fullName: columns
    summary: Gets the collection of columns in the table.
    remarks: >-
      \[ [API set: PowerPointApi
      1.9](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly columns: PowerPoint.TableColumnCollection;'
      return:
        type: <xref uid="powerpoint!PowerPoint.TableColumnCollection:class" />
  - name: context
    uid: powerpoint!PowerPoint.Table#context:member
    package: powerpoint!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: <xref uid="powerpoint!PowerPoint.RequestContext:class" />
  - name: rowCount
    uid: powerpoint!PowerPoint.Table#rowCount:member
    package: powerpoint!
    fullName: rowCount
    summary: Gets the number of rows in the table.
    remarks: >-
      \[ [API set: PowerPointApi
      1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly rowCount: number;'
      return:
        type: number
  - name: rows
    uid: powerpoint!PowerPoint.Table#rows:member
    package: powerpoint!
    fullName: rows
    summary: Gets the collection of rows in the table.
    remarks: >-
      \[ [API set: PowerPointApi
      1.9](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly rows: PowerPoint.TableRowCollection;'
      return:
        type: <xref uid="powerpoint!PowerPoint.TableRowCollection:class" />
  - name: styleOptions
    uid: powerpoint!PowerPoint.Table#styleOptions:member
    package: powerpoint!
    fullName: styleOptions
    summary: Gets the table style options.
    remarks: >-
      \[ [API set: PowerPointApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'readonly styleOptions: PowerPoint.TableStyleOptions;'
      return:
        type: <xref uid="powerpoint!PowerPoint.TableStyleOptions:class" />
  - name: values
    uid: powerpoint!PowerPoint.Table#values:member
    package: powerpoint!
    fullName: values
    summary: Gets all of the values in the table.
    remarks: >-
      \[ [API set: PowerPointApi
      1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly values: string[][];'
      return:
        type: string[][]
methods:
  - name: clear(options)
    uid: powerpoint!PowerPoint.Table#clear:member(1)
    package: powerpoint!
    fullName: clear(options)
    summary: Clears table values and formatting.
    remarks: >-
      \[ [API set: PowerPointApi
      1.9](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clear(options?: PowerPoint.TableClearOptions): void;'
      parameters:
        - id: options
          description: Provides options for clearing the table.
          type: <xref uid="powerpoint!PowerPoint.TableClearOptions:interface" />
      return:
        type: void
        description: ''
  - name: getCellOrNullObject(rowIndex, columnIndex)
    uid: powerpoint!PowerPoint.Table#getCellOrNullObject:member(1)
    package: powerpoint!
    fullName: getCellOrNullObject(rowIndex, columnIndex)
    summary: Gets the cell at the specified `rowIndex` and `columnIndex`<!-- -->.
    remarks: >-
      \[ [API set: PowerPointApi
      1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/powerpoint/shapes/add-modify-tables.yaml


      // Updates a table's values.

      await PowerPoint.run(async (context) => {
        const shapes = context.presentation.getSelectedSlides().getItemAt(0).shapes;

        // Add a table (which is a type of Shape).
        const shape = shapes.addTable(4, 3);
        let table = shape.getTable();
        table.load();
        await context.sync();

        // Update values in the table.
        for (let rowIndex = 0; rowIndex < table.rowCount; rowIndex++) {
          for (let columnIndex = 0; columnIndex < table.columnCount; columnIndex++) {
            const cell = table.getCellOrNullObject(rowIndex, columnIndex);
            cell.text = generateRandomString();
          }
        }

        await context.sync();
      });

      ```

    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getCellOrNullObject(rowIndex: number, columnIndex: number):
        PowerPoint.TableCell;
      parameters:
        - id: rowIndex
          description: The zero-based row index of the cell.
          type: number
        - id: columnIndex
          description: The zero-based column index of the cell.
          type: number
      return:
        type: <xref uid="powerpoint!PowerPoint.TableCell:class" />
        description: >-
          The cell at the specified row and column. If the cell is part of a
          merged area and not the top left cell of the merged area, an object
          with the `isNullObject` property set to `true` is returned. For
          further information, see [*OrNullObject methods and
          properties](https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
          -->.
  - name: getMergedAreas()
    uid: powerpoint!PowerPoint.Table#getMergedAreas:member(1)
    package: powerpoint!
    fullName: getMergedAreas()
    summary: Gets a collection of cells that represent the merged areas of the table.
    remarks: >-
      \[ [API set: PowerPointApi
      1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getMergedAreas(): PowerPoint.TableCellCollection;'
      return:
        type: <xref uid="powerpoint!PowerPoint.TableCellCollection:class" />
        description: >-
          a `TableCellCollection` with cells that represent the merged areas of
          the table.
  - name: getShape()
    uid: powerpoint!PowerPoint.Table#getShape:member(1)
    package: powerpoint!
    fullName: getShape()
    summary: Gets the shape object for the table.
    remarks: >-
      \[ [API set: PowerPointApi
      1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getShape(): PowerPoint.Shape;'
      return:
        type: <xref uid="powerpoint!PowerPoint.Shape:class" />
        description: ''
  - name: load(options)
    uid: powerpoint!PowerPoint.Table#load:member(1)
    package: powerpoint!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: PowerPoint.Interfaces.TableLoadOptions):
        PowerPoint.Table;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref
            uid="powerpoint!PowerPoint.Interfaces.TableLoadOptions:interface" />
      return:
        type: <xref uid="powerpoint!PowerPoint.Table:class" />
        description: ''
  - name: load(propertyNames)
    uid: powerpoint!PowerPoint.Table#load:member(2)
    package: powerpoint!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): PowerPoint.Table;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: string | string[]
      return:
        type: <xref uid="powerpoint!PowerPoint.Table:class" />
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: powerpoint!PowerPoint.Table#load:member(3)
    package: powerpoint!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): PowerPoint.Table;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: <xref uid="powerpoint!PowerPoint.Table:class" />
        description: ''
  - name: mergeCells(rowIndex, columnIndex, rowCount, columnCount)
    uid: powerpoint!PowerPoint.Table#mergeCells:member(1)
    package: powerpoint!
    fullName: mergeCells(rowIndex, columnIndex, rowCount, columnCount)
    summary: >-
      Creates a merged area starting at the cell specified by rowIndex and
      columnIndex. The merged area spans across a specified number of rows and
      columns.
    remarks: >-
      \[ [API set: PowerPointApi
      1.9](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        mergeCells(rowIndex: number, columnIndex: number, rowCount: number,
        columnCount: number): void;
      parameters:
        - id: rowIndex
          description: The zero-based row index of the cell to start the merged area.
          type: number
        - id: columnIndex
          description: The zero-based column index of the cell to start the merged area.
          type: number
        - id: rowCount
          description: >-
            The number of rows to merge with the starting cell. Must be greater
            than 0.
          type: number
        - id: columnCount
          description: >-
            The number of columns to merge with the starting cell. Must be
            greater than 0.
          type: number
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: powerpoint!PowerPoint.Table#toJSON:member(1)
    package: powerpoint!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that's passed to it.) Whereas the original `PowerPoint.Table`
      object is an API object, the `toJSON` method returns a plain JavaScript
      object (typed as `PowerPoint.Interfaces.TableData`<!-- -->) that contains
      shallow copies of any loaded child properties from the original object.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): PowerPoint.Interfaces.TableData;'
      return:
        type: <xref uid="powerpoint!PowerPoint.Interfaces.TableData:interface" />
        description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
