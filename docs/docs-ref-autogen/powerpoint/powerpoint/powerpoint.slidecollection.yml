### YamlMime:TSType
name: PowerPoint.SlideCollection
uid: 'powerpoint!PowerPoint.SlideCollection:class'
package: powerpoint!
fullName: PowerPoint.SlideCollection
summary: >-
  Represents the collection of slides in the presentation.


  \[ [API set: PowerPointApi BETA (PREVIEW
  ONLY)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)
  \]
remarks: ''
isPreview: true
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'powerpoint!PowerPoint.SlideCollection#context:member'
    package: powerpoint!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="powerpoint!PowerPoint.RequestContext:class" />'
  - name: items
    uid: 'powerpoint!PowerPoint.SlideCollection#items:member'
    package: powerpoint!
    fullName: items
    summary: Gets the loaded child items in this collection.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'readonly items: PowerPoint.Slide[];'
      return:
        type: '<xref uid="powerpoint!PowerPoint.Slide:class" />[]'
methods:
  - name: getCount()
    uid: 'powerpoint!PowerPoint.SlideCollection#getCount:member(1)'
    package: powerpoint!
    fullName: getCount()
    summary: >-
      Gets the number of slides in the collection.


      \[ [API set: PowerPointApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)
      \]
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type: >-
          <xref uid="powerpoint!OfficeExtension.ClientResult:class"
          />&lt;number&gt;
        description: The number of slides in the collection.
  - name: getItem(key)
    uid: 'powerpoint!PowerPoint.SlideCollection#getItem:member(1)'
    package: powerpoint!
    fullName: getItem(key)
    summary: >-
      Gets a slide using its unique ID. An exception is thrown if the slide does
      not exist.


      \[ [API set: PowerPointApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)
      \]
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getItem(key: string): PowerPoint.Slide;'
      parameters:
        - id: key
          description: The ID of the slide.
          type: string
      return:
        type: '<xref uid="powerpoint!PowerPoint.Slide:class" />'
        description: >-
          The slide with the unique ID. If such a slide does not exist, an
          exception is thrown.
  - name: getItemAt(index)
    uid: 'powerpoint!PowerPoint.SlideCollection#getItemAt:member(1)'
    package: powerpoint!
    fullName: getItemAt(index)
    summary: >-
      Gets a slide using its zero-based index in the collection. Slides are
      stored in the same order as they are shown in the presentation. An
      exception is thrown if index is out of range.


      \[ [API set: PowerPointApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)
      \]
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getItemAt(index: number): PowerPoint.Slide;'
      parameters:
        - id: index
          description: The index of the slide in the collection.
          type: number
      return:
        type: '<xref uid="powerpoint!PowerPoint.Slide:class" />'
        description: >-
          The slide at the given index. An exception is thrown if index is out
          of range.
  - name: getItemOrNullObject(id)
    uid: 'powerpoint!PowerPoint.SlideCollection#getItemOrNullObject:member(1)'
    package: powerpoint!
    fullName: getItemOrNullObject(id)
    summary: >-
      Gets a slide using its unique ID. Returns an object whose `isNullObject`
      property is set to `true` if the slide does not exist.


      \[ [API set: PowerPointApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)
      \]
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getItemOrNullObject(id: string): PowerPoint.Slide;'
      parameters:
        - id: id
          description: The ID of the slide.
          type: string
      return:
        type: '<xref uid="powerpoint!PowerPoint.Slide:class" />'
        description: >-
          The slide with the unique ID. If such a slide does not exist, an
          object whose `isNullObject` property is set to `true` is returned.
  - name: load(options)
    uid: 'powerpoint!PowerPoint.SlideCollection#load:member(1)'
    package: powerpoint!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        load(options?: PowerPoint.Interfaces.SlideCollectionLoadOptions &
        PowerPoint.Interfaces.CollectionLoadOptions):
        PowerPoint.SlideCollection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref
            uid="powerpoint!PowerPoint.Interfaces.SlideCollectionLoadOptions:interface"
            /> & <xref
            uid="powerpoint!PowerPoint.Interfaces.CollectionLoadOptions:interface"
            />
      return:
        type: '<xref uid="powerpoint!PowerPoint.SlideCollection:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'powerpoint!PowerPoint.SlideCollection#load:member(2)'
    package: powerpoint!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): PowerPoint.SlideCollection;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="powerpoint!PowerPoint.SlideCollection:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'powerpoint!PowerPoint.SlideCollection#load:member(3)'
    package: powerpoint!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption):
        PowerPoint.SlideCollection;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: '<xref uid="powerpoint!OfficeExtension.LoadOption:interface" />'
      return:
        type: '<xref uid="powerpoint!PowerPoint.SlideCollection:class" />'
        description: ''
  - name: toJSON()
    uid: 'powerpoint!PowerPoint.SlideCollection#toJSON:member(1)'
    package: powerpoint!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original
      `PowerPoint.SlideCollection` object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as
      `PowerPoint.Interfaces.SlideCollectionData`<!-- -->) that contains an
      "items" array with shallow copies of any loaded properties from the
      collection's items.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'toJSON(): PowerPoint.Interfaces.SlideCollectionData;'
      return:
        type: >-
          <xref
          uid="powerpoint!PowerPoint.Interfaces.SlideCollectionData:interface"
          />
        description: ''
extends: '<xref uid="powerpoint!OfficeExtension.ClientObject:class" />'
