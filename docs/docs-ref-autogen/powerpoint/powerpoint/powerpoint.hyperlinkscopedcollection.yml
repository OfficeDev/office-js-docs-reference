### YamlMime:TSType
name: PowerPoint.HyperlinkScopedCollection
uid: powerpoint!PowerPoint.HyperlinkScopedCollection:class
package: powerpoint!
fullName: PowerPoint.HyperlinkScopedCollection
summary: Represents a scoped collection of hyperlinks.
remarks: >-
  \[ [API set: PowerPointApi BETA (PREVIEW
  ONLY)](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
  \]

isPreview: true
isDeprecated: false
type: class
properties:
  - name: context
    uid: powerpoint!PowerPoint.HyperlinkScopedCollection#context:member
    package: powerpoint!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: <xref uid="powerpoint!PowerPoint.RequestContext:class" />
  - name: items
    uid: powerpoint!PowerPoint.HyperlinkScopedCollection#items:member
    package: powerpoint!
    fullName: items
    summary: Gets the loaded child items in this collection.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'readonly items: PowerPoint.Hyperlink[];'
      return:
        type: <xref uid="powerpoint!PowerPoint.Hyperlink:class" />[]
methods:
  - name: getCount()
    uid: powerpoint!PowerPoint.HyperlinkScopedCollection#getCount:member(1)
    package: powerpoint!
    fullName: getCount()
    summary: Gets the number of hyperlinks in the collection.
    remarks: >-
      \[ [API set: PowerPointApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
        description: The number of hyperlinks in the collection.
  - name: getItemAt(index)
    uid: powerpoint!PowerPoint.HyperlinkScopedCollection#getItemAt:member(1)
    package: powerpoint!
    fullName: getItemAt(index)
    summary: >-
      Gets a hyperlink using its zero-based index in the collection. Throws an
      `InvalidArgument` exception when the index is out of range.
    remarks: >-
      \[ [API set: PowerPointApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getItemAt(index: number): PowerPoint.Hyperlink;'
      parameters:
        - id: index
          description: The index of the hyperlink in the collection.
          type: number
      return:
        type: <xref uid="powerpoint!PowerPoint.Hyperlink:class" />
        description: The hyperlink at the given index.
  - name: load(options)
    uid: powerpoint!PowerPoint.HyperlinkScopedCollection#load:member(1)
    package: powerpoint!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        load(options?:
        PowerPoint.Interfaces.HyperlinkScopedCollectionLoadOptions &
        PowerPoint.Interfaces.CollectionLoadOptions):
        PowerPoint.HyperlinkScopedCollection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref
            uid="powerpoint!PowerPoint.Interfaces.HyperlinkScopedCollectionLoadOptions:interface"
            /> & <xref
            uid="powerpoint!PowerPoint.Interfaces.CollectionLoadOptions:interface"
            />
      return:
        type: <xref uid="powerpoint!PowerPoint.HyperlinkScopedCollection:class" />
        description: ''
  - name: load(propertyNames)
    uid: powerpoint!PowerPoint.HyperlinkScopedCollection#load:member(2)
    package: powerpoint!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        load(propertyNames?: string | string[]):
        PowerPoint.HyperlinkScopedCollection;
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: string | string[]
      return:
        type: <xref uid="powerpoint!PowerPoint.HyperlinkScopedCollection:class" />
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: powerpoint!PowerPoint.HyperlinkScopedCollection#load:member(3)
    package: powerpoint!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption):
        PowerPoint.HyperlinkScopedCollection;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: <xref uid="office!OfficeExtension.LoadOption:interface" />
      return:
        type: <xref uid="powerpoint!PowerPoint.HyperlinkScopedCollection:class" />
        description: ''
  - name: toJSON()
    uid: powerpoint!PowerPoint.HyperlinkScopedCollection#toJSON:member(1)
    package: powerpoint!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that's passed to it.) Whereas the original
      `PowerPoint.HyperlinkScopedCollection` object is an API object, the
      `toJSON` method returns a plain JavaScript object (typed as
      `PowerPoint.Interfaces.HyperlinkScopedCollectionData`<!-- -->) that
      contains an "items" array with shallow copies of any loaded properties
      from the collection's items.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'toJSON(): PowerPoint.Interfaces.HyperlinkScopedCollectionData;'
      return:
        type: >-
          <xref
          uid="powerpoint!PowerPoint.Interfaces.HyperlinkScopedCollectionData:interface"
          />
        description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
