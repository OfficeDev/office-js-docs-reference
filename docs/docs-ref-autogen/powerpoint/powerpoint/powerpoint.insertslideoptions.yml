### YamlMime:TSType
name: PowerPoint.InsertSlideOptions
uid: 'powerpoint!PowerPoint.InsertSlideOptions:interface'
package: powerpoint!
fullName: PowerPoint.InsertSlideOptions
summary: Represents the available options when inserting slides.
remarks: >-
  \[ [API set: PowerPointApi 1.2](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/powerpoint/slide-management/insert-slides.yaml


  await PowerPoint.run(async function(context) {
      // Get the ID of the first selected slide.
      const presentation: PowerPoint.Presentation = context.presentation;
      const selected: PowerPoint.Slide = presentation.getSelectedSlides().getItemAt(0);
      selected.load("id");
      await context.sync();

      // Insert the other presentation after the selected slide.
      const insertOptions: PowerPoint.InsertSlideOptions = {
          formatting: PowerPoint.InsertSlideFormatting.useDestinationTheme,
          targetSlideId: selected.id
      };
      presentation.insertSlidesFromBase64(chosenFileBase64, insertOptions);
      await context.sync();
  });

  ```
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: formatting
    uid: 'powerpoint!PowerPoint.InsertSlideOptions#formatting:member'
    package: powerpoint!
    fullName: formatting
    summary: Specifies which formatting to use during slide insertion. The default option is to use "KeepSourceFormatting".
    remarks: '\[ [API set: PowerPointApi 1.2](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formatting?: PowerPoint.InsertSlideFormatting | "KeepSourceFormatting" | "UseDestinationTheme";'
      return:
        type: >-
          <xref uid="powerpoint!PowerPoint.InsertSlideFormatting:enum" /> | "KeepSourceFormatting" |
          "UseDestinationTheme"
  - name: sourceSlideIds
    uid: 'powerpoint!PowerPoint.InsertSlideOptions#sourceSlideIds:member'
    package: powerpoint!
    fullName: sourceSlideIds
    summary: >-
      Specifies the slides from the source presentation that will be inserted into the current presentation. These
      slides are represented by their IDs which can be retrieved from a `Slide` object. The order of these slides is
      preserved during the insertion. If any of the source slides are not found, or if the IDs are invalid, the
      operation throws a `SlideNotFound` exception and no slides will be inserted. All of the source slides will be
      inserted when `sourceSlideIds` is not provided (this is the default behavior).
    remarks: '\[ [API set: PowerPointApi 1.2](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sourceSlideIds?: string[];'
      return:
        type: 'string[]'
  - name: targetSlideId
    uid: 'powerpoint!PowerPoint.InsertSlideOptions#targetSlideId:member'
    package: powerpoint!
    fullName: targetSlideId
    summary: >-
      Specifies where in the presentation the new slides will be inserted. The new slides will be inserted after the
      slide with the given slide ID. If `targetSlideId` is not provided, the slides will be inserted at the beginning of
      the presentation. If `targetSlideId` is invalid or if it is pointing to a non-existing slide, the operation throws
      a `SlideNotFound` exception and no slides will be inserted.
    remarks: '\[ [API set: PowerPointApi 1.2](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'targetSlideId?: string;'
      return:
        type: string
