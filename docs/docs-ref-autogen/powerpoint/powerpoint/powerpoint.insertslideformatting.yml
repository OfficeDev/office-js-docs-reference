### YamlMime:TSEnum
name: PowerPoint.InsertSlideFormatting
uid: 'powerpoint!PowerPoint.InsertSlideFormatting:enum'
package: powerpoint!
fullName: PowerPoint.InsertSlideFormatting
summary: Specifies the formatting options for when slides are inserted.
remarks: >-
  \[ [API set: PowerPointApi 1.2](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/powerpoint/slide-management/insert-slides.yaml


  await PowerPoint.run(async function(context) {
      // Get the ID of the first selected slide.
      const presentation: PowerPoint.Presentation = context.presentation;
      const selected: PowerPoint.Slide = presentation.getSelectedSlides().getItemAt(0);
      selected.load("id");
      await context.sync();

      // Insert the other presentation after the selected slide.
      const insertOptions: PowerPoint.InsertSlideOptions = {
          formatting: PowerPoint.InsertSlideFormatting.useDestinationTheme,
          targetSlideId: selected.id
      };
      presentation.insertSlidesFromBase64(chosenFileBase64, insertOptions);
      await context.sync();
  });

  ```
isPreview: false
isDeprecated: false
fields:
  - name: keepSourceFormatting
    uid: 'powerpoint!PowerPoint.InsertSlideFormatting.keepSourceFormatting:member'
    package: powerpoint!
    summary: |-
      Copy the source theme into the target presentation and use that theme.

      * \[ [API set: PowerPointApi 1.2](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]
    value: '"KeepSourceFormatting"'
  - name: useDestinationTheme
    uid: 'powerpoint!PowerPoint.InsertSlideFormatting.useDestinationTheme:member'
    package: powerpoint!
    summary: |-
      Use the existing theme in the target presentation.

      * \[ [API set: PowerPointApi 1.2](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]
    value: '"UseDestinationTheme"'
