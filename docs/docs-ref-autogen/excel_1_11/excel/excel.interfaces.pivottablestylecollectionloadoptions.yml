### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Interfaces.PivotTableStyleCollectionLoadOptions:interface'
    summary: |-
      Represents a collection of PivotTable styles.

      \[ [API set: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.Interfaces.PivotTableStyleCollectionLoadOptions
    fullName: Excel.Interfaces.PivotTableStyleCollectionLoadOptions
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.Interfaces.PivotTableStyleCollectionLoadOptions#$all:member'
      - 'excel!Excel.Interfaces.PivotTableStyleCollectionLoadOptions#name:member'
      - 'excel!Excel.Interfaces.PivotTableStyleCollectionLoadOptions#readOnly:member'
  - uid: 'excel!Excel.Interfaces.PivotTableStyleCollectionLoadOptions#$all:member'
    summary: >-
      Specifying `$all` for the LoadOptions loads all the scalar properties (e.g.: `Range.address`<!-- -->) but not the
      navigational properties (e.g.: `Range.format.fill.color`<!-- -->).
    name: $all
    fullName: $all
    langs:
      - typeScript
    type: property
    syntax:
      content: '$all?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Interfaces.PivotTableStyleCollectionLoadOptions#name:member'
    summary: |-
      For EACH ITEM in the collection: Gets the name of the PivotTableStyle.

      \[ [API set: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Interfaces.PivotTableStyleCollectionLoadOptions#readOnly:member'
    summary: |-
      For EACH ITEM in the collection: Specifies if this PivotTableStyle object is read-only.

      \[ [API set: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: readOnly
    fullName: readOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readOnly?: boolean;'
      return:
        type:
          - boolean
