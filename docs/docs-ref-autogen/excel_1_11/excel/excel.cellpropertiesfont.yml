### YamlMime:TSType
name: Excel.CellPropertiesFont
uid: 'excel!Excel.CellPropertiesFont:interface'
package: excel!
fullName: Excel.CellPropertiesFont
summary: >-
  Represents the `format.font` properties of `getCellProperties`<!-- -->,
  `getRowProperties`<!-- -->, and `getColumnProperties` or the `format.font`
  input parameter of `setCellProperties`<!-- -->, `setRowProperties`<!-- -->,
  and `setColumnProperties`<!-- -->.


  \[ [API set: ExcelApi
  1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: bold
    uid: 'excel!Excel.CellPropertiesFont#bold:member'
    package: excel!
    fullName: bold
    summary: >-
      Represents the `format.font.bold` property.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'bold?: boolean;'
      return:
        type: boolean
  - name: color
    uid: 'excel!Excel.CellPropertiesFont#color:member'
    package: excel!
    fullName: color
    summary: >-
      Represents the `format.font.color` property.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'color?: string;'
      return:
        type: string
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/cell-properties.yaml

          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();

              // Creating the SettableCellProperties objects to use for the range.
              // In your add-in, these should be created once, outside the function.
              const topHeaderProps: Excel.SettableCellProperties = {
                  // The style property takes a string matching the name of an Excel style.
                  // Built-in style names are listed in the `BuiltInStyle` enum.
                  // Note that a style will overwrite any formatting,
                  // so do not use the format property with the style property.
                  style: "Heading1"
              };

              const headerProps: Excel.SettableCellProperties = {
                  // Any subproperties of format that are not set will not be changed when these cell properties are set.
                  format: {
                      fill: {
                          color: "Blue"
                      },
                      font: {
                          color: "White",
                          bold: true
                      }
                  }
              };

              const nonApplicableProps: Excel.SettableCellProperties = {
                  format: {
                      fill: {
                          pattern: Excel.FillPattern.gray25
                      },
                      font: {
                          color: "Gray",
                          italic: true
                      }
                  }
              };

              const matchupScoreProps: Excel.SettableCellProperties = {
                  format: {
                      borders: {
                          bottom: {
                              style: Excel.BorderLineStyle.continuous
                          },
                          left: {
                              style: Excel.BorderLineStyle.continuous
                          },
                          right: {
                              style: Excel.BorderLineStyle.continuous
                          },
                          top: {
                              style: Excel.BorderLineStyle.continuous
                          }
                      }
                  }
              };

              const range = sheet.getRange("A1:E5");

              // You can use empty JSON objects to avoid changing a cell's properties.
              range.setCellProperties([
                  [topHeaderProps, {}, {}, {}, {}],
                  [{}, {}, headerProps, headerProps, headerProps],
                  [{}, headerProps, nonApplicableProps, matchupScoreProps, matchupScoreProps],
                  [{}, headerProps, matchupScoreProps, nonApplicableProps, matchupScoreProps],
                  [{}, headerProps, matchupScoreProps, matchupScoreProps, nonApplicableProps]
              ]);

              sheet.getUsedRange().format.autofitColumns();
              await context.sync();
          });

          ```
  - name: italic
    uid: 'excel!Excel.CellPropertiesFont#italic:member'
    package: excel!
    fullName: italic
    summary: >-
      Represents the `format.font.italic` property.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'italic?: boolean;'
      return:
        type: boolean
  - name: name
    uid: 'excel!Excel.CellPropertiesFont#name:member'
    package: excel!
    fullName: name
    summary: >-
      Represents the `format.font.name` property.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name?: string;'
      return:
        type: string
  - name: size
    uid: 'excel!Excel.CellPropertiesFont#size:member'
    package: excel!
    fullName: size
    summary: >-
      Represents the `format.font.size` property.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'size?: number;'
      return:
        type: number
  - name: strikethrough
    uid: 'excel!Excel.CellPropertiesFont#strikethrough:member'
    package: excel!
    fullName: strikethrough
    summary: >-
      Represents the `format.font.strikethrough` property.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'strikethrough?: boolean;'
      return:
        type: boolean
  - name: subscript
    uid: 'excel!Excel.CellPropertiesFont#subscript:member'
    package: excel!
    fullName: subscript
    summary: >-
      Represents the `format.font.subscript` property.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subscript?: boolean;'
      return:
        type: boolean
  - name: superscript
    uid: 'excel!Excel.CellPropertiesFont#superscript:member'
    package: excel!
    fullName: superscript
    summary: >-
      Represents the `format.font.superscript` property.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'superscript?: boolean;'
      return:
        type: boolean
  - name: tintAndShade
    uid: 'excel!Excel.CellPropertiesFont#tintAndShade:member'
    package: excel!
    fullName: tintAndShade
    summary: >-
      Represents the `format.font.tintAndShade` property.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tintAndShade?: number;'
      return:
        type: number
  - name: underline
    uid: 'excel!Excel.CellPropertiesFont#underline:member'
    package: excel!
    fullName: underline
    summary: >-
      Represents the `format.font.underline` property.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        underline?: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" |
        "SingleAccountant" | "DoubleAccountant";
      return:
        type: >-
          <xref uid="excel!Excel.RangeUnderlineStyle:enum" /> | "None" |
          "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"
