### YamlMime:TSType
name: Excel.RangeBorder
uid: 'excel!Excel.RangeBorder:class'
package: excel!
fullName: Excel.RangeBorder
summary: >-
  Represents the border of an object.


  \[ [API set: ExcelApi
  1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: color
    uid: 'excel!Excel.RangeBorder#color:member'
    package: excel!
    fullName: color
    summary: >-
      HTML color code representing the color of the border line, of the form
      \#RRGGBB (e.g., "FFA500") or as a named HTML color (e.g., "orange").


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'color: string;'
      return:
        type: string
  - name: context
    uid: 'excel!Excel.RangeBorder#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: sideIndex
    uid: 'excel!Excel.RangeBorder#sideIndex:member'
    package: excel!
    fullName: sideIndex
    summary: >-
      Constant value that indicates the specific side of the border. See
      Excel.BorderIndex for details.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        readonly sideIndex: Excel.BorderIndex | "EdgeTop" | "EdgeBottom" |
        "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" |
        "DiagonalDown" | "DiagonalUp";
      return:
        type: >-
          <xref uid="excel!Excel.BorderIndex:enum" /> | "EdgeTop" | "EdgeBottom"
          | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" |
          "DiagonalDown" | "DiagonalUp"
  - name: style
    uid: 'excel!Excel.RangeBorder#style:member'
    package: excel!
    fullName: style
    summary: >-
      One of the constants of line style specifying the line style for the
      border. See Excel.BorderLineStyle for details.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        style: Excel.BorderLineStyle | "None" | "Continuous" | "Dash" |
        "DashDot" | "DashDotDot" | "Dot" | "Double" | "SlantDashDot";
      return:
        type: >-
          <xref uid="excel!Excel.BorderLineStyle:enum" /> | "None" |
          "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot" | "Double" |
          "SlantDashDot"
        description: |-


          #### Examples

          ```javascript
          // The example below adds grid border around the range.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.borders.getItem('InsideHorizontal').style = 'Continuous';
              range.format.borders.getItem('InsideVertical').style = 'Continuous';
              range.format.borders.getItem('EdgeBottom').style = 'Continuous';
              range.format.borders.getItem('EdgeLeft').style = 'Continuous';
              range.format.borders.getItem('EdgeRight').style = 'Continuous';
              range.format.borders.getItem('EdgeTop').style = 'Continuous';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - name: tintAndShade
    uid: 'excel!Excel.RangeBorder#tintAndShade:member'
    package: excel!
    fullName: tintAndShade
    summary: >-
      Specifies a double that lightens or darkens a color for Range Border, the
      value is between -1 (darkest) and 1 (brightest), with 0 for the original
      color. A null value indicates that the border doesn't have uniform
      tintAndShade setting.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tintAndShade: number;'
      return:
        type: number
  - name: weight
    uid: 'excel!Excel.RangeBorder#weight:member'
    package: excel!
    fullName: weight
    summary: >-
      Specifies the weight of the border around a range. See Excel.BorderWeight
      for details.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'weight: Excel.BorderWeight | "Hairline" | "Thin" | "Medium" | "Thick";'
      return:
        type: >-
          <xref uid="excel!Excel.BorderWeight:enum" /> | "Hairline" | "Thin" |
          "Medium" | "Thick"
methods:
  - name: load(options)
    uid: 'excel!Excel.RangeBorder#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.RangeBorderLoadOptions):
        Excel.RangeBorder;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="excel!Excel.Interfaces.RangeBorderLoadOptions:interface"
            />
      return:
        type: '<xref uid="excel!Excel.RangeBorder:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.RangeBorder#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeBorder;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.RangeBorder:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.RangeBorder#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.RangeBorder;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.RangeBorder:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'excel!Excel.RangeBorder#set:member(1)'
    package: excel!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.RangeBorder): void`
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.RangeBorderUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: >-
            <xref uid="excel!Excel.Interfaces.RangeBorderUpdateData:interface"
            />
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'excel!Excel.RangeBorder#set:member(2)'
    package: excel!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.RangeBorder): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="excel!Excel.RangeBorder:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.RangeBorder#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Excel.RangeBorder
      object is an API object, the `toJSON` method returns a plain JavaScript
      object (typed as `Excel.Interfaces.RangeBorderData`<!-- -->) that contains
      shallow copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeBorderData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.RangeBorderData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
