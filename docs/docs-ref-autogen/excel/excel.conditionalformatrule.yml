### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ConditionalFormatRule
    summary: |-
      Represents a rule, for all traditional rule/format pairings.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.ConditionalFormatRule
    fullName: excel.Excel.ConditionalFormatRule
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.ConditionalFormatRule.formula
      - excel.Excel.ConditionalFormatRule.formulaLocal
      - excel.Excel.ConditionalFormatRule.formulaR1C1
      - excel.Excel.ConditionalFormatRule.load
      - excel.Excel.ConditionalFormatRule.toJSON
  - uid: excel.Excel.ConditionalFormatRule.formula
    summary: |-
      The formula, if required, to evaluate the conditional format rule on.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: formula
    fullName: excel.Excel.ConditionalFormatRule.formula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula: string;'
      return:
        type:
          - string
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT("RC[-1]",0),TRUE)';
              conditionalFormat.custom.format.font.color = "green";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ConditionalFormatRule.formulaLocal
    summary: |-
      The formula, if required, to evaluate the conditional format rule on in the user's language.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: formulaLocal
    fullName: excel.Excel.ConditionalFormatRule.formulaLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaLocal: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ConditionalFormatRule.formulaR1C1
    summary: |-
      The formula, if required, to evaluate the conditional format rule on in R1C1-style notation.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: formulaR1C1
    fullName: excel.Excel.ConditionalFormatRule.formulaR1C1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaR1C1: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ConditionalFormatRule.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormatRule` -
      Only available on collection types. It is similar to the preceding signature. Option.top specifies the maximum
      number of collection items that can be included in the result. Option.skip specifies the number of items that are
      to be skipped and not included in the result. If option.top is specified, the result set will start after skipping
      the specified number of items.
    name: load(option)
    fullName: excel.Excel.ConditionalFormatRule.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): Excel.ConditionalFormatRule;'
      return:
        type:
          - excel.Excel.ConditionalFormatRule
        description: ''
      parameters:
        - id: option
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel.Excel.ConditionalFormatRule.toJSON
    name: toJSON()
    fullName: excel.Excel.ConditionalFormatRule.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalFormatRuleData;'
      return:
        type:
          - excel.Excel.Interfaces.ConditionalFormatRuleData
        description: ''
