### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableColumnCollection
    summary: |-
      Represents a collection of all the columns that are part of the table.

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: Excel.TableColumnCollection
    fullName: excel.Excel.TableColumnCollection
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.TableColumnCollection.add
      - excel.Excel.TableColumnCollection.count
      - excel.Excel.TableColumnCollection.getCount
      - excel.Excel.TableColumnCollection.getItem
      - excel.Excel.TableColumnCollection.getItemAt
      - excel.Excel.TableColumnCollection.getItemOrNullObject
      - excel.Excel.TableColumnCollection.items
      - excel.Excel.TableColumnCollection.load
      - excel.Excel.TableColumnCollection.toJSON
  - uid: excel.Excel.TableColumnCollection.add
    summary: >-
      Adds a new column to the table.


      \[ [API set: ExcelApi 1.1 requires an index smaller than the total column count; 1.4 allows index to be optional
      (null or -1) and will append a column at the end; 1.4 allows name parameter at creation
      time.](http://bing.com?type=excel) \]
    name: 'add(index, values, name)'
    fullName: excel.Excel.TableColumnCollection.add
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number, name?:
        string): Excel.TableColumn;
      return:
        type:
          - Excel.TableColumn
        description: ''
      parameters:
        - id: index
          description: >-
            Specifies the relative position of the new column. If null or -1, the addition happens at the end. Columns
            with a higher index will be shifted to the side. Zero-indexed.
          type:
            - number
        - id: values
          description: A 2-dimensional array of unformatted values of the table column.
          type:
            - Array<Array<boolean | string | number>> | boolean | string | number
        - id: name
          description: 'Specifies the name of the new column. If null, the default name will be used.'
          type:
            - string
    remarks: |


      #### Examples

      ```javascript
      Excel.run(function (ctx) { 
          var tables = ctx.workbook.tables;
          var values = [["Sample"], ["Values"], ["For"], ["New"], ["Column"]];
          var column = tables.getItem("Table1").columns.add(null, values);
          column.load('name');
          return ctx.sync().then(function() {
              console.log(column.name);
          });
      }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
      });
      ```
  - uid: excel.Excel.TableColumnCollection.count
    summary: |-
      Returns the number of columns in the table. Read-only.

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: count
    fullName: excel.Excel.TableColumnCollection.count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.TableColumnCollection.getCount
    summary: |-
      Gets the number of columns in the table.

      \[ [API set: ExcelApi 1.4](http://bing.com?type=excel) \]
    name: getCount()
    fullName: excel.Excel.TableColumnCollection.getCount
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.TableColumnCollection.getItem
    summary: |-
      Gets a column object by Name or ID.

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: getItem(key)
    fullName: excel.Excel.TableColumnCollection.getItem
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: number | string): Excel.TableColumn;'
      return:
        type:
          - Excel.TableColumn
        description: ''
      parameters:
        - id: key
          description: Column Name or ID.
          type:
            - number | string
    remarks: |


      #### Examples

      ```javascript
      Excel.run(function (ctx) { 
          var tablecolumn = ctx.workbook.tables.getItem('Table1').columns.getItem(0);
          tablecolumn.load('name');
          return ctx.sync().then(function() {
                  console.log(tablecolumn.name);
          });
      }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
      });
      ```

      ```javascript
      Excel.run(function (ctx) { 
          var tablecolumn = ctx.workbook.tables.getItem['Table1'].columns.getItemAt(0);
          tablecolumn.load('name');
          return ctx.sync().then(function() {
                  console.log(tablecolumn.name);
          });
      }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
      });
      ```
  - uid: excel.Excel.TableColumnCollection.getItemAt
    summary: |-
      Gets a column based on its position in the collection.

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: getItemAt(index)
    fullName: excel.Excel.TableColumnCollection.getItemAt
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.TableColumn;'
      return:
        type:
          - Excel.TableColumn
        description: ''
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type:
            - number
    remarks: |


      #### Examples

      ```javascript
      Excel.run(function (ctx) { 
          var tablecolumn = ctx.workbook.tables.getItem['Table1'].columns.getItemAt(0);
          tablecolumn.load('name');
          return ctx.sync().then(function() {
                  console.log(tablecolumn.name);
          });
      }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
      });
      ```
  - uid: excel.Excel.TableColumnCollection.getItemOrNullObject
    summary: |-
      Gets a column object by Name or ID. If the column does not exist, will return a null object.

      \[ [API set: ExcelApi 1.4](http://bing.com?type=excel) \]
    name: getItemOrNullObject(key)
    fullName: excel.Excel.TableColumnCollection.getItemOrNullObject
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: number | string): Excel.TableColumn;'
      return:
        type:
          - Excel.TableColumn
        description: ''
      parameters:
        - id: key
          description: Column Name or ID.
          type:
            - number | string
  - uid: excel.Excel.TableColumnCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: excel.Excel.TableColumnCollection.items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.TableColumn[];'
      return:
        type:
          - 'Excel.TableColumn[]'
  - uid: excel.Excel.TableColumnCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: excel.Excel.TableColumnCollection.load
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        load(option?: Excel.Interfaces.TableColumnCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions):
        Excel.TableColumnCollection;
      return:
        type:
          - Excel.TableColumnCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.TableColumnCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.TableColumnCollection.toJSON
    name: toJSON()
    fullName: excel.Excel.TableColumnCollection.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableColumnCollectionData;'
      return:
        type:
          - Excel.Interfaces.TableColumnCollectionData
        description: ''
