### YamlMime:UniversalReference
items:
  - uid: excel.Excel.PivotField
    summary: |-
      Represents a single pivot field within a PivotHierarchy.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.PivotField
    fullName: Excel.PivotField
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.PivotField.context
      - excel.Excel.PivotField.id
      - excel.Excel.PivotField.items
      - excel.Excel.PivotField.load
      - excel.Excel.PivotField.load_1
      - excel.Excel.PivotField.load_2
      - excel.Excel.PivotField.name
      - excel.Excel.PivotField.set
      - excel.Excel.PivotField.set_1
      - excel.Excel.PivotField.showAllItems
      - excel.Excel.PivotField.sortByLabels
      - excel.Excel.PivotField.sortByValues
      - excel.Excel.PivotField.sortByValues_1
      - excel.Excel.PivotField.subtotals
      - excel.Excel.PivotField.toJSON
  - uid: excel.Excel.PivotField.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.PivotField.id
    summary: |-
      Id of the PivotField.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.PivotField.items
    summary: |-
      Returns the PivotItems that comprise the PivotField.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotItemCollection;'
      return:
        type:
          - excel.Excel.PivotItemCollection
  - uid: excel.Excel.PivotField.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Excel.PivotField` - Where option is a comma-delimited string or an array of
      strings that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): Excel.PivotField` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotField` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotFieldLoadOptions): Excel.PivotField;'
      return:
        type:
          - excel.Excel.PivotField
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PivotFieldLoadOptions
  - uid: excel.Excel.PivotField.load_1
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotField;'
      return:
        type:
          - excel.Excel.PivotField
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel.Excel.PivotField.load_2
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotField;'
      return:
        type:
          - excel.Excel.PivotField
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and
            propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.PivotField.name
    summary: |-
      Name of the PivotField.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.PivotField.set
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.PivotField): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotFieldUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type:
            - Interfaces.PivotFieldUpdateData
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.PivotField.set_1
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotField): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.PivotField
  - uid: excel.Excel.PivotField.showAllItems
    summary: |-
      Determines whether to show all items of the PivotField.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: showAllItems
    fullName: showAllItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showAllItems: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotField.sortByLabels
    summary: >-
      Sorts the PivotField. If a DataPivotHierarchy is specified, then sort will be applied based on it, if not sort
      will be based on the PivotField itself.


      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: sortByLabels(sortBy)
    fullName: sortByLabels(sortBy)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sortByLabels(sortBy: SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortBy
          description: Represents whether the sorting is done in an ascending or descending order.
          type:
            - SortBy
  - uid: excel.Excel.PivotField.sortByValues
    summary: >-
      Sorts the PivotField by specified values in a given scope. The scope defines which specific values will be used to
      sort when there are multiple values from the same DataPivotHierarchy.


      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    fullName: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        sortByValues(sortBy: Excel.SortBy, valuesHierarchy: Excel.DataPivotHierarchy, pivotItemScope?: Array<PivotItem |
        string>): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortBy
          description: Represents whether the sorting is done in an ascending or descending order.
          type:
            - excel.Excel.SortBy
        - id: valuesHierarchy
          description: Specifies the values hierarchy on the data axis to be used for sorting.
          type:
            - excel.Excel.DataPivotHierarchy
        - id: pivotItemScope
          description: >-
            The items that should be used for the scope of the sorting. These will be the items that make up the row or
            column that you want to sort on. If a string is used instead of a PivotItem, the string represents the ID of
            the PivotItem. If there are no items other than data hierarchy on the axis you want to sort on, this can be
            empty.
          type:
            - Array<PivotItem | string>
  - uid: excel.Excel.PivotField.sortByValues_1
    summary: >-
      Sorts the PivotField by specified values in a given scope. The scope defines which specific values will be used to
      sort when there are multiple values from the same DataPivotHierarchy.


      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'sortByValues(sortByString, valuesHierarchy, pivotItemScope)'
    fullName: 'sortByValues(sortByString, valuesHierarchy, pivotItemScope)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        sortByValues(sortByString: "Ascending" | "Descending", valuesHierarchy: Excel.DataPivotHierarchy,
        pivotItemScope?: Array<PivotItem | string>): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortByString
          description: Represents whether the sorting is done in an ascending or descending order.
          type:
            - '"Ascending" | "Descending"'
        - id: valuesHierarchy
          description: Specifies the values hierarchy on the data axis to be used for sorting.
          type:
            - excel.Excel.DataPivotHierarchy
        - id: pivotItemScope
          description: >-
            The items that should be used for the scope of the sorting. These will be the items that make up the row or
            column that you want to sort on. If a string is used instead of a PivotItem, the string represents the ID of
            the PivotItem. If there are no items other than data hierarchy on the axis you want to sort on, this can be
            empty.
          type:
            - Array<PivotItem | string>
  - uid: excel.Excel.PivotField.subtotals
    summary: |-
      Subtotals of the PivotField.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: subtotals
    fullName: subtotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotals: Excel.Subtotals;'
      return:
        type:
          - excel.Excel.Subtotals
  - uid: excel.Excel.PivotField.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.PivotField object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.PivotFieldData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotFieldData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotFieldData
        description: ''
