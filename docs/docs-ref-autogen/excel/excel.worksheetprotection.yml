### YamlMime:UniversalReference
items:
  - uid: excel.Excel.WorksheetProtection
    summary: |-
      Represents the protection of a sheet object.

      \[ [API set: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.WorksheetProtection
    fullName: excel.Excel.WorksheetProtection
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.WorksheetProtection.load
      - excel.Excel.WorksheetProtection.options
      - excel.Excel.WorksheetProtection.protect
      - excel.Excel.WorksheetProtection.protected
      - excel.Excel.WorksheetProtection.toJSON
      - excel.Excel.WorksheetProtection.unprotect
  - uid: excel.Excel.WorksheetProtection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: excel.Excel.WorksheetProtection.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorksheetProtectionLoadOptions): Excel.WorksheetProtection;'
      return:
        type:
          - Excel.WorksheetProtection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.WorksheetProtectionLoadOptions
  - uid: excel.Excel.WorksheetProtection.options
    summary: |-
      Sheet protection options.

      \[ [API set: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: options
    fullName: excel.Excel.WorksheetProtection.options
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly options: Excel.WorksheetProtectionOptions;'
      return:
        type:
          - Excel.WorksheetProtectionOptions
  - uid: excel.Excel.WorksheetProtection.protect
    summary: >-
      Protects a worksheet. Fails if the worksheet has already been protected.


      \[ [API set: ExcelApi 1.2 for options; 1.7 for
      password](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: 'protect(options, password)'
    fullName: excel.Excel.WorksheetProtection.protect
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protect(options?: Excel.WorksheetProtectionOptions, password?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: sheet protection options.
          type:
            - Excel.WorksheetProtectionOptions
        - id: password
          description: sheet protection password.
          type:
            - string
    remarks: |


      #### Examples

      ```javascript
      Excel.run(function(ctx) {
        // get a reference to Sheet1
        var sheet = ctx.workbook.worksheets.getItem("Sheet1");

        // Protect inserting or deleting rows in Sheet1
        sheet.protection.protect({
          allowInsertRows: false,
          allowDeleteRows: false
        });

        return ctx.sync();
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
  - uid: excel.Excel.WorksheetProtection.protected
    summary: |-
      Indicates if the worksheet is protected. Read-Only.

      \[ [API set: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: protected
    fullName: excel.Excel.WorksheetProtection.protected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.WorksheetProtection.toJSON
    name: toJSON()
    fullName: excel.Excel.WorksheetProtection.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
      return:
        type:
          - Excel.Interfaces.WorksheetProtectionData
        description: ''
  - uid: excel.Excel.WorksheetProtection.unprotect
    summary: |-
      Unprotects a worksheet.

      \[ [API set: ExcelApi 1.7 for password](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: unprotect(password)
    fullName: excel.Excel.WorksheetProtection.unprotect
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unprotect(password?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: password
          description: sheet protection password.
          type:
            - string
    remarks: |


      #### Examples

      ```javascript
      Excel.run(function(ctx) {
        // get a reference to Sheet1
        var sheet = ctx.workbook.worksheets.getItem("Sheet1");

        // Remove all protects applied to Sheet1
        sheet.protection.unprotect();

        return ctx.sync();
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```

      ```javascript
      Excel.run(function(ctx) {
        var sheet = ctx.workbook.worksheets.getItem("Sheet1");
        sheet.protection.protect({
          allowInsertRows: false, // Protect row insertion
          allowDeleteRows: true // Unprotect row deletion
        });
      });
      ```
