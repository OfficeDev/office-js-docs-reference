### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Setting
    summary: >-
      Setting represents a key-value pair of a setting persisted to the document (per file per add-in). These custom
      key-value pair can be used to store state or lifecycle information needed by the content or task-pane add-in. Note
      that settings are persisted in the document and hence it is not a place to store any sensitive or protected
      information such as user information and password.


      \[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.Setting
    fullName: excel.Excel.Setting
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.Setting.delete
      - excel.Excel.Setting.key
      - excel.Excel.Setting.load
      - excel.Excel.Setting.set
      - excel.Excel.Setting.toJSON
      - excel.Excel.Setting.value
  - uid: excel.Excel.Setting.delete
    summary: |-
      Deletes the setting.

      \[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: delete()
    fullName: excel.Excel.Setting.delete
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |


          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  OfficeHelpers.UI.notify("The setting has been deleted");
              } else {
                  OfficeHelpers.UI.notify("The setting was not deleted");
              }

              await context.sync();
          });
          ```
  - uid: excel.Excel.Setting.key
    summary: |-
      Returns the key that represents the id of the Setting. Read-only.

      \[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: key
    fullName: excel.Excel.Setting.key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly key: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Setting.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Excel.Setting` - Where option is a comma-delimited string or an array of
      strings that specify the properties/relationships to load.


      `load(option?: { select?: string; expand?: string; }): Excel.Setting` - Where option.select is a comma-delimited
      string that specifies the properties/relationships to load, and options.expand is a comma-delimited string that
      specifies the relationships to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Setting` - Only available
      on collection types. It is similar to the preceding signature. Option.top specifies the maximum number of
      collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.
    name: load(option)
    fullName: excel.Excel.Setting.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SettingLoadOptions): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.SettingLoadOptions
  - uid: excel.Excel.Setting.set
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.Setting): void`
    name: 'set(properties, options)'
    fullName: excel.Excel.Setting.set
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SettingUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type:
            - Interfaces.SettingUpdateData
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.Setting.toJSON
    name: toJSON()
    fullName: excel.Excel.Setting.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SettingData;'
      return:
        type:
          - excel.Excel.Interfaces.SettingData
        description: ''
  - uid: excel.Excel.Setting.value
    summary: |-
      Represents the value stored for this setting.

      \[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: value
    fullName: excel.Excel.Setting.value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value: any;'
      return:
        type:
          - any
