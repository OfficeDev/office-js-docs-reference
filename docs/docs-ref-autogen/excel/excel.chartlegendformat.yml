### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartLegendFormat
    summary: |-
      Encapsulates the format properties of a chart legend.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.ChartLegendFormat
    fullName: excel.Excel.ChartLegendFormat
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.ChartLegendFormat.fill
      - excel.Excel.ChartLegendFormat.font
      - excel.Excel.ChartLegendFormat.load
      - excel.Excel.ChartLegendFormat.set
      - excel.Excel.ChartLegendFormat.toJSON
  - uid: excel.Excel.ChartLegendFormat.fill
    summary: |-
      Represents the fill format of an object, which includes background formating information.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: fill
    fullName: excel.Excel.ChartLegendFormat.fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.ChartFill;'
      return:
        type:
          - Excel.ChartFill
  - uid: excel.Excel.ChartLegendFormat.font
    summary: |-
      Represents the font attributes such as font name, font size, color, etc. of a chart legend.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: font
    fullName: excel.Excel.ChartLegendFormat.font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Excel.ChartFont;'
      return:
        type:
          - Excel.ChartFont
    remarks: |


      #### Examples

      ```typescript
      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Sample");

          let chart = sheet.charts.getItemAt(0);
          chart.legend.visible = true;

          // Format the legend font.
          let font = chart.legend.format.font;
          font.bold = true;
          font.color = "red";
          font.italic = true;
          font.size = 15;
          font.name = "Calibri";
          font.underline = "Single";

          await context.sync();
      });
      ```
  - uid: excel.Excel.ChartLegendFormat.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: excel.Excel.ChartLegendFormat.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartLegendFormatLoadOptions): Excel.ChartLegendFormat;'
      return:
        type:
          - Excel.ChartLegendFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ChartLegendFormatLoadOptions
  - uid: excel.Excel.ChartLegendFormat.set
    summary: 'Sets multiple properties on the object at the same time, based on JSON input.'
    name: 'set(properties, options)'
    fullName: excel.Excel.ChartLegendFormat.set
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartLegendFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Interfaces.ChartLegendFormatUpdateData
        - id: options
          description: ''
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ChartLegendFormat.toJSON
    name: toJSON()
    fullName: excel.Excel.ChartLegendFormat.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartLegendFormatData;'
      return:
        type:
          - Excel.Interfaces.ChartLegendFormatData
        description: ''
