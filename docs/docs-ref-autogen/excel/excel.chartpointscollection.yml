### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartPointsCollection
    summary: |-
      A collection of all the chart points within a series inside a chart.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.ChartPointsCollection
    fullName: excel.Excel.ChartPointsCollection
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.ChartPointsCollection.count
      - excel.Excel.ChartPointsCollection.getCount
      - excel.Excel.ChartPointsCollection.getItemAt
      - excel.Excel.ChartPointsCollection.items
      - excel.Excel.ChartPointsCollection.load
      - excel.Excel.ChartPointsCollection.toJSON
  - uid: excel.Excel.ChartPointsCollection.count
    summary: |-
      Returns the number of chart points in the series. Read-only.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: count
    fullName: excel.Excel.ChartPointsCollection.count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartPointsCollection.getCount
    summary: |-
      Returns the number of chart points in the series.

      \[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: getCount()
    fullName: excel.Excel.ChartPointsCollection.getCount
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.ChartPointsCollection.getItemAt
    summary: |-
      Retrieve a point based on its position within the series.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: getItemAt(index)
    fullName: excel.Excel.ChartPointsCollection.getItemAt
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ChartPoint;'
      return:
        type:
          - excel.Excel.ChartPoint
        description: |-

          #### Examples

          ```javascript
          // Set the border color for the first points in the points collection
          Excel.run(function (ctx) { 
              var points = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              points.getItemAt(0).format.fill.setSolidColor("8FBC8F");
              return ctx.sync().then(function() {
                  console.log("Point Border Color Changed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type:
            - number
  - uid: excel.Excel.ChartPointsCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: excel.Excel.ChartPointsCollection.items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartPoint[];'
      return:
        type:
          - 'Excel.ChartPoint[]'
  - uid: excel.Excel.ChartPointsCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection` -
      Only available on collection types. It is similar to the preceding signature. Option.top specifies the maximum
      number of collection items that can be included in the result. Option.skip specifies the number of items that are
      to be skipped and not included in the result. If option.top is specified, the result set will start after skipping
      the specified number of items.

      #### Examples


      ```javascript

      // Get the names of points in the points collection

      Excel.run(function (ctx) { 
          var pointsCollection = 
              ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
          pointsCollection.load('items');
          return ctx.sync().then(function() {
              console.log("Points Collection loaded");
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });

      ```

      ```javascript

      // Get the number of points

      Excel.run(function (ctx) { 
          var pointsCollection = 
              ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
          pointsCollection.load('count');
          return ctx.sync().then(function() {
              console.log("points: Count= " + pointsCollection.count);
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });

      ```
    name: load(option)
    fullName: excel.Excel.ChartPointsCollection.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
        description: ''
      parameters:
        - id: option
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartPointsCollection.toJSON
    name: toJSON()
    fullName: excel.Excel.ChartPointsCollection.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartPointsCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartPointsCollectionData
        description: ''
