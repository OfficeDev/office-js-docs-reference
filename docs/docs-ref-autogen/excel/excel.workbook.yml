### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Workbook
    summary: |-
      Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc.

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: Excel.Workbook
    fullName: excel.Excel.Workbook
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.Workbook.application
      - excel.Excel.Workbook.bindings
      - excel.Excel.Workbook.customXmlParts
      - excel.Excel.Workbook.dataConnections
      - excel.Excel.Workbook.functions
      - excel.Excel.Workbook.getActiveCell
      - excel.Excel.Workbook.getSelectedRange
      - excel.Excel.Workbook.load
      - excel.Excel.Workbook.name
      - excel.Excel.Workbook.names
      - excel.Excel.Workbook.onSelectionChanged
      - excel.Excel.Workbook.pivotTables
      - excel.Excel.Workbook.properties
      - excel.Excel.Workbook.protection
      - excel.Excel.Workbook.set
      - excel.Excel.Workbook.settings
      - excel.Excel.Workbook.styles
      - excel.Excel.Workbook.tables
      - excel.Excel.Workbook.toJSON
      - excel.Excel.Workbook.worksheets
  - uid: excel.Excel.Workbook.application
    summary: |-
      Represents the Excel application instance that contains this workbook.

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: application
    fullName: excel.Excel.Workbook.application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Excel.Application;'
      return:
        type:
          - Excel.Application
  - uid: excel.Excel.Workbook.bindings
    summary: |-
      Represents a collection of bindings that are part of the workbook.

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: bindings
    fullName: excel.Excel.Workbook.bindings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly bindings: Excel.BindingCollection;'
      return:
        type:
          - Excel.BindingCollection
  - uid: excel.Excel.Workbook.customXmlParts
    summary: |-
      Represents the collection of custom XML parts contained by this workbook.

      \[ [API set: ExcelApi 1.5](http://bing.com?type=excel) \]
    name: customXmlParts
    fullName: excel.Excel.Workbook.customXmlParts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
      return:
        type:
          - Excel.CustomXmlPartCollection
  - uid: excel.Excel.Workbook.dataConnections
    summary: |-
      Represents all data connections in the workbook.

      \[ [API set: ExcelApi 1.7](http://bing.com?type=excel) \]
    name: dataConnections
    fullName: excel.Excel.Workbook.dataConnections
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataConnections: Excel.DataConnectionCollection;'
      return:
        type:
          - Excel.DataConnectionCollection
  - uid: excel.Excel.Workbook.functions
    summary: |-
      Represents a collection of worksheet functions that can be used for computation.

      \[ [API set: ExcelApi 1.2](http://bing.com?type=excel) \]
    name: functions
    fullName: excel.Excel.Workbook.functions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly functions: Excel.Functions;'
      return:
        type:
          - Excel.Functions
  - uid: excel.Excel.Workbook.getActiveCell
    summary: |-
      Gets the currently active cell from the workbook.

      \[ [API set: ExcelApi 1.7](http://bing.com?type=excel) \]
    name: getActiveCell()
    fullName: excel.Excel.Workbook.getActiveCell
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveCell(): Excel.Range;'
      return:
        type:
          - Excel.Range
        description: ''
    remarks: |


      #### Examples

      ```typescript
      await Excel.run(async (context) => {

          let myWorkbook = context.workbook;
          let activeCell = myWorkbook.getActiveCell();
          activeCell.load("address");

          await context.sync();
          
          console.log("The active cell is " + activeCell.address);
      });
      ```
  - uid: excel.Excel.Workbook.getSelectedRange
    summary: |-
      Gets the currently selected range from the workbook.

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: getSelectedRange()
    fullName: excel.Excel.Workbook.getSelectedRange
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRange(): Excel.Range;'
      return:
        type:
          - Excel.Range
        description: ''
    remarks: |


      #### Examples

      ```javascript
      Excel.run(function (ctx) { 
          var selectedRange = ctx.workbook.getSelectedRange();
          selectedRange.load('address');
          return ctx.sync().then(function() {
                  console.log(selectedRange.address);
          });
      }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
      });
      ```
  - uid: excel.Excel.Workbook.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: excel.Excel.Workbook.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
      return:
        type:
          - Excel.Workbook
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.WorkbookLoadOptions
  - uid: excel.Excel.Workbook.name
    summary: |-
      Gets the workbook name.

      \[ [API set: ExcelApi 1.7](http://bing.com?type=excel) \]
    name: name
    fullName: excel.Excel.Workbook.name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Workbook.names
    summary: |-
      Represents a collection of workbook scoped named items (named ranges and constants).

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: names
    fullName: excel.Excel.Workbook.names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type:
          - Excel.NamedItemCollection
  - uid: excel.Excel.Workbook.onSelectionChanged
    summary: |-
      Occurs when the selection in the document is changed.

      \[ [API set: ExcelApi 1.2](http://bing.com?type=excel) \]
    name: onSelectionChanged
    fullName: excel.Excel.Workbook.onSelectionChanged
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
  - uid: excel.Excel.Workbook.pivotTables
    summary: |-
      Represents a collection of PivotTables associated with the workbook.

      \[ [API set: ExcelApi 1.3](http://bing.com?type=excel) \]
    name: pivotTables
    fullName: excel.Excel.Workbook.pivotTables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTables: Excel.PivotTableCollection;'
      return:
        type:
          - Excel.PivotTableCollection
  - uid: excel.Excel.Workbook.properties
    summary: |-
      Gets the workbook properties.

      \[ [API set: ExcelApi 1.7](http://bing.com?type=excel) \]
    name: properties
    fullName: excel.Excel.Workbook.properties
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly properties: Excel.DocumentProperties;'
      return:
        type:
          - Excel.DocumentProperties
  - uid: excel.Excel.Workbook.protection
    summary: |-
      Returns workbook protection object for a workbook.

      \[ [API set: ExcelApi 1.7](http://bing.com?type=excel) \]
    name: protection
    fullName: excel.Excel.Workbook.protection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protection: Excel.WorkbookProtection;'
      return:
        type:
          - Excel.WorkbookProtection
  - uid: excel.Excel.Workbook.set
    summary: 'Sets multiple properties on the object at the same time, based on JSON input.'
    name: 'set(properties, options)'
    fullName: excel.Excel.Workbook.set
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Interfaces.WorkbookUpdateData
        - id: options
          description: ''
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Workbook.settings
    summary: |-
      Represents a collection of Settings associated with the workbook.

      \[ [API set: ExcelApi 1.4](http://bing.com?type=excel) \]
    name: settings
    fullName: excel.Excel.Workbook.settings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly settings: Excel.SettingCollection;'
      return:
        type:
          - Excel.SettingCollection
  - uid: excel.Excel.Workbook.styles
    summary: |-
      Represents a collection of styles associated with the workbook.

      \[ [API set: ExcelApi 1.7](http://bing.com?type=excel) \]
    name: styles
    fullName: excel.Excel.Workbook.styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly styles: Excel.StyleCollection;'
      return:
        type:
          - Excel.StyleCollection
  - uid: excel.Excel.Workbook.tables
    summary: |-
      Represents a collection of tables associated with the workbook.

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: tables
    fullName: excel.Excel.Workbook.tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - Excel.TableCollection
  - uid: excel.Excel.Workbook.toJSON
    name: toJSON()
    fullName: excel.Excel.Workbook.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookData;'
      return:
        type:
          - Excel.Interfaces.WorkbookData
        description: ''
  - uid: excel.Excel.Workbook.worksheets
    summary: |-
      Represents a collection of worksheets associated with the workbook.

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: worksheets
    fullName: excel.Excel.Workbook.worksheets
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheets: Excel.WorksheetCollection;'
      return:
        type:
          - Excel.WorksheetCollection
