### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Application
    summary: |-
      Represents the Excel application that manages the workbook.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.Application
    fullName: excel.Excel.Application
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.Application.calculate
      - excel.Excel.Application.calculationMode
      - excel.Excel.Application.load
      - excel.Excel.Application.set
      - excel.Excel.Application.suspendApiCalculationUntilNextSync
      - excel.Excel.Application.toJSON
  - uid: excel.Excel.Application.calculate
    summary: |-
      Recalculate all currently opened workbooks in Excel.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: calculate(calculationType)
    fullName: excel.Excel.Application.calculate
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(calculationType: Excel.CalculationType): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: calculationType
          description: Specifies the calculation type to use. See Excel.CalculationType for details.
          type:
            - Excel.CalculationType
    remarks: |


      #### Examples

      ```javascript
      Excel.run(function (ctx) {
          ctx.workbook.application.calculate('Full');
          return ctx.sync();
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
  - uid: excel.Excel.Application.calculationMode
    summary: |-
      Returns the calculation mode used in the workbook. See Excel.CalculationMode for details.

      \[ [API set: ExcelApi 1.1 for get, 1.8 for set](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: calculationMode
    fullName: excel.Excel.Application.calculationMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
      return:
        type:
          - Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
  - uid: excel.Excel.Application.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: excel.Excel.Application.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ApplicationLoadOptions): Excel.Application;'
      return:
        type:
          - Excel.Application
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ApplicationLoadOptions
    remarks: |


      #### Examples

      ```javascript
      Excel.run(function (ctx) {
          var application = ctx.workbook.application;
          application.load('calculationMode');
          return ctx.sync().then(function() {
              console.log(application.calculationMode);
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
  - uid: excel.Excel.Application.set
    summary: 'Sets multiple properties on the object at the same time, based on JSON input.'
    name: 'set(properties, options)'
    fullName: excel.Excel.Application.set
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Interfaces.ApplicationUpdateData
        - id: options
          description: ''
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Application.suspendApiCalculationUntilNextSync
    summary: >-
      Suspends calculation until the next "context.sync()" is called. Once set, it is the developer's responsibility to
      re-calc the workbook, to ensure that any dependencies are propagated.


      \[ [API set: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: suspendApiCalculationUntilNextSync()
    fullName: excel.Excel.Application.suspendApiCalculationUntilNextSync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'suspendApiCalculationUntilNextSync(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.Application.toJSON
    name: toJSON()
    fullName: excel.Excel.Application.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ApplicationData;'
      return:
        type:
          - Excel.Interfaces.ApplicationData
        description: ''
