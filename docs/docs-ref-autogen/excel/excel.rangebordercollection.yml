### YamlMime:UniversalReference
items:
  - uid: excel.Excel.RangeBorderCollection
    summary: |-
      Represents the border objects that make up the range border.

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: Excel.RangeBorderCollection
    fullName: excel.Excel.RangeBorderCollection
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.RangeBorderCollection.count
      - excel.Excel.RangeBorderCollection.getItem
      - excel.Excel.RangeBorderCollection.getItemAt
      - excel.Excel.RangeBorderCollection.items
      - excel.Excel.RangeBorderCollection.load
      - excel.Excel.RangeBorderCollection.toJSON
  - uid: excel.Excel.RangeBorderCollection.count
    summary: |-
      Number of border objects in the collection. Read-only.

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: count
    fullName: excel.Excel.RangeBorderCollection.count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.RangeBorderCollection.getItem
    summary: |-
      Gets a border object using its name

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: getItem(index)
    fullName: excel.Excel.RangeBorderCollection.getItem
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: string): Excel.RangeBorder;'
      return:
        type:
          - Excel.RangeBorder
        description: ''
      parameters:
        - id: index
          description: Index value of the border object to be retrieved. See Excel.BorderIndex for details.
          type:
            - string
    remarks: |


      #### Examples

      ```javascript
      Excel.run(function (ctx) { 
          var sheetName = "Sheet1";
          var rangeAddress = "A1:F8";
          var worksheet = ctx.workbook.worksheets.getItem(sheetName);
          var range = worksheet.getRange(rangeAddress);
          var borderName = 'EdgeTop';
          var border = range.format.borders.getItem(borderName);
          border.load('style');
          return ctx.sync().then(function() {
                  console.log(border.style);
          });
      }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
      });
      ```

      ```javascript

      Excel.run(function (ctx) { 
          var sheetName = "Sheet1";
          var rangeAddress = "A1:F8";
          var worksheet = ctx.workbook.worksheets.getItem(sheetName);
          var range = worksheet.getRange(rangeAddress);
          var border = range.format.borders.getItemAt(0);
          border.load('sideIndex');
          return ctx.sync().then(function() {
                  console.log(border.sideIndex);
          });
      }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
      });
      ```
  - uid: excel.Excel.RangeBorderCollection.getItemAt
    summary: |-
      Gets a border object using its index

      \[ [API set: ExcelApi 1.1](http://bing.com?type=excel) \]
    name: getItemAt(index)
    fullName: excel.Excel.RangeBorderCollection.getItemAt
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.RangeBorder;'
      return:
        type:
          - Excel.RangeBorder
        description: ''
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type:
            - number
    remarks: |


      #### Examples

      ```javascript

      Excel.run(function (ctx) { 
          var sheetName = "Sheet1";
          var rangeAddress = "A1:F8";
          var worksheet = ctx.workbook.worksheets.getItem(sheetName);
          var range = worksheet.getRange(rangeAddress);
          var border = range.format.borders.getItemAt(0);
          border.load('sideIndex');
          return ctx.sync().then(function() {
                  console.log(border.sideIndex);
          });
      }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
      });
      ```
  - uid: excel.Excel.RangeBorderCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: excel.Excel.RangeBorderCollection.items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Array<Excel.RangeBorder>;'
      return:
        type:
          - Array<Excel.RangeBorder>
  - uid: excel.Excel.RangeBorderCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: excel.Excel.RangeBorderCollection.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[] | OfficeExtension.LoadOption): Excel.RangeBorderCollection;'
      return:
        type:
          - Excel.RangeBorderCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'string | string[] | OfficeExtension.LoadOption'
  - uid: excel.Excel.RangeBorderCollection.toJSON
    name: toJSON()
    fullName: excel.Excel.RangeBorderCollection.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON:'
      return:
        type:
          - |-
            {
                        "count": number;
                    }
        description: ''
