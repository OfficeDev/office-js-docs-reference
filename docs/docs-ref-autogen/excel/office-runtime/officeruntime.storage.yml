### YamlMime:UniversalReference
items:
  - uid: office-runtime.OfficeRuntime.Storage
    summary: 'Asynchronous, global, and persistent key-value storage.'
    remarks: 'Storage limit is 10 MB per domain, which may be shared by multiple add-ins.'
    name: OfficeRuntime.Storage
    fullName: OfficeRuntime.Storage
    langs:
      - typeScript
    type: interface
    package: office-runtime
    children:
      - office-runtime.OfficeRuntime.Storage.getItem
      - office-runtime.OfficeRuntime.Storage.getItems
      - office-runtime.OfficeRuntime.Storage.getKeys
      - office-runtime.OfficeRuntime.Storage.removeItem
      - office-runtime.OfficeRuntime.Storage.removeItems
      - office-runtime.OfficeRuntime.Storage.setItem
      - office-runtime.OfficeRuntime.Storage.setItems
  - uid: office-runtime.OfficeRuntime.Storage.getItem
    summary: >-
      Retrieves an item from storage based on its key. Returns a Promise. In the event the Promise does not resolve,
      returns null.
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Promise<string | null>;'
      return:
        type:
          - Promise<string | null>
        description: ''
      parameters:
        - id: key
          description: Key of item to be retrieved. Must be a string.
          type:
            - string
  - uid: office-runtime.OfficeRuntime.Storage.getItems
    summary: >-
      Retrieves multiple items from storage based on their key. Returns a Promise. In the event the Promise does not
      resolve, returns null.
    name: getItems(keys)
    fullName: getItems(keys)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItems(keys: string[]): Promise<{ [key: string]: string | null }>;'
      return:
        type:
          - 'Promise<{ [key: string]: string | null }>'
        description: ''
      parameters:
        - id: keys
          description: Keys of items to be removed. Must be an array of strings.
          type:
            - 'string[]'
  - uid: office-runtime.OfficeRuntime.Storage.getKeys
    summary: Retrieves an array of all keys from storage. Returns a Promise.
    name: getKeys()
    fullName: getKeys()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getKeys(): Promise<string[]>;'
      return:
        type:
          - 'Promise<string[]>'
        description: ''
  - uid: office-runtime.OfficeRuntime.Storage.removeItem
    summary: Removes an item from storage based on its key. Returns a Promise.
    name: removeItem(key)
    fullName: removeItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: Key of item to be removed. Must be a string.
          type:
            - string
  - uid: office-runtime.OfficeRuntime.Storage.removeItems
    summary: Removes multiple items from storage. Returns a Promise.
    name: removeItems(keys)
    fullName: removeItems(keys)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItems(keys: string[]): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keys
          description: Keys of items to be removed. Must be an array of strings.
          type:
            - 'string[]'
  - uid: office-runtime.OfficeRuntime.Storage.setItem
    summary: Sets a key-value pair into storage or updates an existing key-value pair. Returns a Promise.
    name: 'setItem(key, value)'
    fullName: 'setItem(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: Key of item to be set. Must be a string.
          type:
            - string
        - id: value
          description: Must be a string.
          type:
            - string
  - uid: office-runtime.OfficeRuntime.Storage.setItems
    summary: Sets multiple items into storage or updates multiple items within storage. Returns a Promise.
    name: setItems(keyValues)
    fullName: setItems(keyValues)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItems(keyValues: { [key: string]: string }): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keyValues
          description: Key-value pairs to be set. Must be strings.
          type:
            - '{ [key: string]: string }'
