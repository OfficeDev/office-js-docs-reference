### YamlMime:UniversalReference
items:
  - uid: excel.Excel.RangeBorder
    summary: |-
      Represents the border of an object.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.RangeBorder
    fullName: Excel.RangeBorder
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.RangeBorder.color
      - excel.Excel.RangeBorder.context
      - excel.Excel.RangeBorder.load
      - excel.Excel.RangeBorder.sideIndex
      - excel.Excel.RangeBorder.style
      - excel.Excel.RangeBorder.tintAndShade
      - excel.Excel.RangeBorder.toJSON
      - excel.Excel.RangeBorder.weight
  - uid: excel.Excel.RangeBorder.color
    summary: >-
      HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML
      color (e.g. "orange").


      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeBorder.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.RangeBorder.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: { select?: string; expand?: string; }): Excel.RangeBorder` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorder` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.

      #### Examples


      ```javascript

      Excel.run(function (ctx) { 
          var sheetName = "Sheet1";
          var rangeAddress = "A1:F8";
          var worksheet = ctx.workbook.worksheets.getItem(sheetName);
          var range = worksheet.getRange(rangeAddress);
          var borders = range.format.borders;
          borders.load('items');
          return ctx.sync().then(function() {
              console.log(borders.count);
              for (var i = 0; i < borders.items.length; i++)
              {
                  console.log(borders.items[i].sideIndex);
              }
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });

      ```

      ```javascript

      // The example below adds grid border around the range.

      Excel.run(function (ctx) { 
          var sheetName = "Sheet1";
          var rangeAddress = "A1:F8";
          var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
          range.format.borders.getItem('InsideHorizontal').style = 'Continuous';
          range.format.borders.getItem('InsideVertical').style = 'Continuous';
          range.format.borders.getItem('EdgeBottom').style = 'Continuous';
          range.format.borders.getItem('EdgeLeft').style = 'Continuous';
          range.format.borders.getItem('EdgeRight').style = 'Continuous';
          range.format.borders.getItem('EdgeTop').style = 'Continuous';
          return ctx.sync(); 
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });

      ```
    name: load(option)
    fullName: load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): Excel.RangeBorder;'
      return:
        type:
          - excel.Excel.RangeBorder
        description: ''
      parameters:
        - id: option
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel.Excel.RangeBorder.sideIndex
    summary: |-
      Constant value that indicates the specific side of the border. See Excel.BorderIndex for details. Read-only.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: sideIndex
    fullName: sideIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        readonly sideIndex: Excel.BorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" |
        "InsideHorizontal" | "DiagonalDown" | "DiagonalUp";
      return:
        type:
          - >-
            Excel.BorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" |
            "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"
  - uid: excel.Excel.RangeBorder.style
    summary: >-
      One of the constants of line style specifying the line style for the border. See Excel.BorderLineStyle for
      details.


      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        style: Excel.BorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot" | "Double" |
        "SlantDashDot";
      return:
        type:
          - >-
            Excel.BorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot" | "Double" |
            "SlantDashDot"
  - uid: excel.Excel.RangeBorder.tintAndShade
    summary: >-
      Returns or sets a double that lightens or darkens a color for Range Border, the value is between -1 (darkest) and
      1 (brightest), with 0 for the original color. A null value indicates that the border doesn't have uniform
      tintAndShade setting.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: tintAndShade
    fullName: tintAndShade
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tintAndShade: number;'
      return:
        type:
          - number
  - uid: excel.Excel.RangeBorder.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.RangeBorder object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.RangeBorderData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    name: toJSON()
    fullName: toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeBorderData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeBorderData
        description: ''
  - uid: excel.Excel.RangeBorder.weight
    summary: |-
      Specifies the weight of the border around a range. See Excel.BorderWeight for details.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: weight
    fullName: weight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'weight: Excel.BorderWeight | "Hairline" | "Thin" | "Medium" | "Thick";'
      return:
        type:
          - Excel.BorderWeight | "Hairline" | "Thin" | "Medium" | "Thick"
