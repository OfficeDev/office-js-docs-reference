### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Shape
    summary: >-
      Represents a generic shape object in the worksheet.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: Excel.Shape
    fullName: Excel.Shape
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.Shape.altTextDescription
      - excel.Excel.Shape.altTextTitle
      - excel.Excel.Shape.connectionSiteCount
      - excel.Excel.Shape.context
      - excel.Excel.Shape.delete
      - excel.Excel.Shape.fill
      - excel.Excel.Shape.geometricShape
      - excel.Excel.Shape.geometricShapeType
      - excel.Excel.Shape.group
      - excel.Excel.Shape.height
      - excel.Excel.Shape.id
      - excel.Excel.Shape.image
      - excel.Excel.Shape.incrementLeft
      - excel.Excel.Shape.incrementRotation
      - excel.Excel.Shape.incrementTop
      - excel.Excel.Shape.left
      - excel.Excel.Shape.level
      - excel.Excel.Shape.line
      - excel.Excel.Shape.lineFormat
      - excel.Excel.Shape.load
      - excel.Excel.Shape.load_1
      - excel.Excel.Shape.load_2
      - excel.Excel.Shape.lockAspectRatio
      - excel.Excel.Shape.name
      - excel.Excel.Shape.onActivated
      - excel.Excel.Shape.onDeactivated
      - excel.Excel.Shape.parentGroup
      - excel.Excel.Shape.placement
      - excel.Excel.Shape.rotation
      - excel.Excel.Shape.saveAsPicture
      - excel.Excel.Shape.saveAsPicture_1
      - excel.Excel.Shape.scaleHeight
      - excel.Excel.Shape.scaleHeight_1
      - excel.Excel.Shape.scaleWidth
      - excel.Excel.Shape.scaleWidth_1
      - excel.Excel.Shape.set
      - excel.Excel.Shape.set_1
      - excel.Excel.Shape.setZOrder
      - excel.Excel.Shape.setZOrder_1
      - excel.Excel.Shape.textFrame
      - excel.Excel.Shape.toJSON
      - excel.Excel.Shape.top
      - excel.Excel.Shape.type
      - excel.Excel.Shape.visible
      - excel.Excel.Shape.width
      - excel.Excel.Shape.zorderPosition
  - uid: excel.Excel.Shape.altTextDescription
    summary: >-
      Returns or sets the alternative descriptive text string for a Shape object when the object is saved to a Web page.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: altTextDescription
    fullName: altTextDescription
    langs:
      - typeScript
    type: property
    syntax:
      content: 'altTextDescription: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Shape.altTextTitle
    summary: >-
      Returns or sets the alternative title text string for a Shape object when the object is saved to a Web page.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: altTextTitle
    fullName: altTextTitle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'altTextTitle: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Shape.connectionSiteCount
    summary: >-
      Returns the number of connection sites on the specified shape. Read-only.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: connectionSiteCount
    fullName: connectionSiteCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly connectionSiteCount: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Shape.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.Shape.delete
    summary: >-
      Deletes the Shape


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shapes = sheet.shapes;

              // load all the shapes in the collection without loading their properties
              shapes.load("items/$none");
              await context.sync();

              shapes.items.forEach((shape) => shape.delete());
              await context.sync();
          });
          ```
  - uid: excel.Excel.Shape.fill
    summary: >-
      Returns the fill formatting of the shape object. Read-only.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.ShapeFill;'
      return:
        type:
          - excel.Excel.ShapeFill
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.smileyFace);
              shape.left = 300;
              shape.top = 100;
              shape.height = 100;
              shape.width = 100;
              shape.fill.foreColor = "yellow"
              await context.sync();
          });
          ```
  - uid: excel.Excel.Shape.geometricShape
    summary: >-
      Returns the geometric shape for the shape object. Error will be thrown, if the shape object is other shape type
      (Like, Image, SmartArt, etc.) rather than GeometricShape.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: geometricShape
    fullName: geometricShape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly geometricShape: Excel.GeometricShape;'
      return:
        type:
          - excel.Excel.GeometricShape
  - uid: excel.Excel.Shape.geometricShapeType
    summary: >-
      Represents the geometric shape type of the specified shape. See Excel.GeometricShapeType for detail. Returns null
      if the shape is not geometric, for example, get GeometricShapeType of a line or a chart will return null.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: geometricShapeType
    fullName: geometricShapeType
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        geometricShapeType: Excel.GeometricShapeType | "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" |
        "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" |
        "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" |
        "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" |
        "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" |
        "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" |
        "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow"
        | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" |
        "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" |
        "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" |
        "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" |
        "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" |
        "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" |
        "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" |
        "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" |
        "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" |
        "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" |
        "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" |
        "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess"
        | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" |
        "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" |
        "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" |
        "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" |
        "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" |
        "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" |
        "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" |
        "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" |
        "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" |
        "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" |
        "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" |
        "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus";
      return:
        type:
          - >-
            Excel.GeometricShapeType | "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" |
            "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" |
            "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" |
            "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" |
            "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" |
            "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie"
            | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" |
            "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow"
            | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" |
            "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" |
            "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" |
            "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" |
            "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" |
            "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" |
            "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" |
            "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" |
            "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" |
            "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" |
            "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" |
            "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" |
            "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" |
            "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" |
            "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" |
            "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" |
            "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" |
            "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" |
            "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" |
            "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" |
            "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" |
            "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" |
            "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" |
            "ChartStar" | "ChartPlus"
  - uid: excel.Excel.Shape.group
    summary: >-
      Returns the shape group for the shape object. Error will be thrown, if the shape object is other shape type (Like,
      Image, SmartArt, etc.) rather than GroupShape.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: group
    fullName: group
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly group: Excel.ShapeGroup;'
      return:
        type:
          - excel.Excel.ShapeGroup
  - uid: excel.Excel.Shape.height
    summary: >-
      Represents the height, in points, of the shape. Throws an invalid argument exception when set with negative value
      or zero as input.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Shape.id
    summary: >-
      Represents the shape identifier. Read-only.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Shape.image
    summary: >-
      Returns the image for the shape object. Error will be thrown, if the shape object is other shape type (Like,
      GeometricShape, SmartArt, etc.) rather than Image.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: image
    fullName: image
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly image: Excel.Image;'
      return:
        type:
          - excel.Excel.Image
  - uid: excel.Excel.Shape.incrementLeft
    summary: >-
      Moves the shape horizontally by the specified number of points.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: incrementLeft(increment)
    fullName: incrementLeft(increment)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'incrementLeft(increment: number): void;'
      return:
        type:
          - void
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.getItem("Square")
              shape.incrementLeft(-25);
              await context.sync();
          });
          ```
      parameters:
        - id: increment
          description: >-
            Specifies how far the shape is to be moved horizontally, in points. A positive value moves the shape to the
            right; a negative value moves it to the left. If the sheet is RTL, IncrementLeft with a positive value
            should move the shape to the left instead of right.
          type:
            - number
  - uid: excel.Excel.Shape.incrementRotation
    summary: >-
      Changes the rotation of the shape around the z-axis by the specified number of degrees. Use the Rotation property
      to set the absolute rotation of the shape.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: incrementRotation(increment)
    fullName: incrementRotation(increment)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'incrementRotation(increment: number): void;'
      return:
        type:
          - void
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.getItem("Image");
              shape.incrementRotation(180);
              await context.sync();
          });
          ```
      parameters:
        - id: increment
          description: >-
            Specifies how far the shape is to be rotated horizontally, in degrees. A positive value rotates the shape
            clockwise; a negative value rotates it counterclockwise.
          type:
            - number
  - uid: excel.Excel.Shape.incrementTop
    summary: >-
      Moves the shape vertically by the specified number of points.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: incrementTop(increment)
    fullName: incrementTop(increment)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'incrementTop(increment: number): void;'
      return:
        type:
          - void
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.getItem("Pentagon")
              shape.incrementTop(25);
              await context.sync();
          });
          ```
      parameters:
        - id: increment
          description: >-
            Specifies how far the shape is to be moved vertically, in points. A positive value moves the shape down; a
            negative value moves it up.
          type:
            - number
  - uid: excel.Excel.Shape.left
    summary: >-
      The distance, in points, from the left side of the shape to the left of the worksheet. Throws an invalid argument
      exception when set with negative value as input.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Shape.level
    summary: >-
      Represents the level of the specified shape. Level 0 means the shape is not part of any group, level 1 means the
      shape is part of a top-level group, etc.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: level
    fullName: level
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly level: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Shape.line
    summary: >-
      Returns the line object for the shape object. Error will be thrown, if the shape object is other shape type (Like,
      GeometricShape, SmartArt, etc.) rather than Image.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: line
    fullName: line
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly line: Excel.Line;'
      return:
        type:
          - excel.Excel.Line
  - uid: excel.Excel.Shape.lineFormat
    summary: >-
      Returns the line formatting of the shape object. Read-only.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: lineFormat
    fullName: lineFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly lineFormat: Excel.ShapeLineFormat;'
      return:
        type:
          - excel.Excel.ShapeLineFormat
  - uid: excel.Excel.Shape.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Excel.Shape` - Where option is a comma-delimited string or an array of strings
      that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): Excel.Shape` - Where option.select is a comma-delimited
      string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the
      navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Shape` - Only available
      on collection types. It is similar to the preceding signature. Option.top specifies the maximum number of
      collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ShapeLoadOptions): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ShapeLoadOptions
  - uid: excel.Excel.Shape.load_1
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel.Excel.Shape.load_2
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and
            propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Shape.lockAspectRatio
    summary: >-
      Represents if the aspect ratio locked, in boolean, of the shape.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: lockAspectRatio
    fullName: lockAspectRatio
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lockAspectRatio: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Shape.name
    summary: >-
      Represents the name of the shape.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Shape.onActivated
    summary: >-
      Occurs when the shape is activated.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ShapeActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ShapeActivatedEventArgs>
  - uid: excel.Excel.Shape.onDeactivated
    summary: >-
      Occurs when the shape is activated.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ShapeDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ShapeDeactivatedEventArgs>
  - uid: excel.Excel.Shape.parentGroup
    summary: >-
      Represents the parent group of the specified shape.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: parentGroup
    fullName: parentGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentGroup: Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
  - uid: excel.Excel.Shape.placement
    summary: >-
      Represents the placment, value that represents the way the object is attached to the cells below it.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: placement
    fullName: placement
    langs:
      - typeScript
    type: property
    syntax:
      content: 'placement: Excel.Placement | "TwoCell" | "OneCell" | "Absolute";'
      return:
        type:
          - Excel.Placement | "TwoCell" | "OneCell" | "Absolute"
  - uid: excel.Excel.Shape.rotation
    summary: >-
      Represents the rotation, in degrees, of the shape.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: rotation
    fullName: rotation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rotation: number;'
      return:
        type:
          - number
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.triangle);
              shape.left = 100;
              shape.top = 300;
              shape.height = 150;
              shape.width = 200;
              shape.rotation = 45;
              shape.fill.clear();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Shape.saveAsPicture
    summary: >-
      Saves the shape as a picture and returns the picture in the form of base64 encoded string, using the DPI sets to
      96. Only support saves as to Excel.PictureFormat.BMP, Excel.PictureFormat.PNG, Excel.PictureFormat.JPEG and
      Excel.PictureFormat.GIF.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: saveAsPicture(format)
    fullName: saveAsPicture(format)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsPicture(format: Excel.PictureFormat): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: ''
      parameters:
        - id: format
          description: ''
          type:
            - excel.Excel.PictureFormat
  - uid: excel.Excel.Shape.saveAsPicture_1
    summary: >-
      Saves the shape as a picture and returns the picture in the form of base64 encoded string, using the DPI sets to
      96. Only support saves as to Excel.PictureFormat.BMP, Excel.PictureFormat.PNG, Excel.PictureFormat.JPEG and
      Excel.PictureFormat.GIF.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: saveAsPicture(formatString)
    fullName: saveAsPicture(formatString)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        saveAsPicture(formatString: "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"):
        OfficeExtension.ClientResult<string>;
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: ''
      parameters:
        - id: formatString
          description: ''
          type:
            - '"UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"'
  - uid: excel.Excel.Shape.scaleHeight
    summary: >-
      Scales the height of the shape by a specified factor. For pictures, you can indicate whether you want to scale the
      shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their
      current height.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: 'scaleHeight(scaleFactor, scaleType, scaleFrom)'
    fullName: 'scaleHeight(scaleFactor, scaleType, scaleFrom)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'scaleHeight(scaleFactor: number, scaleType: Excel.ShapeScaleType, scaleFrom?: Excel.ShapeScaleFrom): void;'
      return:
        type:
          - void
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.getItem("Octagon")
              shape.scaleHeight(1.25, Excel.ShapeScaleType.currentSize);
              shape.scaleWidth(1.25, Excel.ShapeScaleType.currentSize);
              await context.sync();
          });
          ```
      parameters:
        - id: scaleFactor
          description: Specifies the ratio between the height of the shape after you resize it and the current or original height.
          type:
            - number
        - id: scaleType
          description: >-
            OriginalSize to scale the shape relative to its original size. CurrentSize to scale it relative to its
            current size. You can specify OriginalSize for this argument only if the specified shape is a picture.
          type:
            - excel.Excel.ShapeScaleType
        - id: scaleFrom
          description: >-
            Optional. One of the constants of ShapeScaleFrom which specifies which part of the shape retains its
            position when the shape is scaled. If omitted, it represents the shape's upper left corner retains its
            position.
          type:
            - excel.Excel.ShapeScaleFrom
  - uid: excel.Excel.Shape.scaleHeight_1
    summary: >-
      Scales the height of the shape by a specified factor. For pictures, you can indicate whether you want to scale the
      shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their
      current height.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: 'scaleHeight(scaleFactor, scaleTypeString, scaleFrom)'
    fullName: 'scaleHeight(scaleFactor, scaleTypeString, scaleFrom)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        scaleHeight(scaleFactor: number, scaleTypeString: "CurrentSize" | "OriginalSize", scaleFrom?: "ScaleFromTopLeft"
        | "ScaleFromMiddle" | "ScaleFromBottomRight"): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: scaleFactor
          description: Specifies the ratio between the height of the shape after you resize it and the current or original height.
          type:
            - number
        - id: scaleTypeString
          description: >-
            OriginalSize to scale the shape relative to its original size. CurrentSize to scale it relative to its
            current size. You can specify OriginalSize for this argument only if the specified shape is a picture.
          type:
            - '"CurrentSize" | "OriginalSize"'
        - id: scaleFrom
          description: >-
            Optional. One of the constants of ShapeScaleFrom which specifies which part of the shape retains its
            position when the shape is scaled. If omitted, it represents the shape's upper left corner retains its
            position.
          type:
            - '"ScaleFromTopLeft" | "ScaleFromMiddle" | "ScaleFromBottomRight"'
  - uid: excel.Excel.Shape.scaleWidth
    summary: >-
      Scales the width of the shape by a specified factor. For pictures, you can indicate whether you want to scale the
      shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their
      current width.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: 'scaleWidth(scaleFactor, scaleType, scaleFrom)'
    fullName: 'scaleWidth(scaleFactor, scaleType, scaleFrom)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'scaleWidth(scaleFactor: number, scaleType: Excel.ShapeScaleType, scaleFrom?: Excel.ShapeScaleFrom): void;'
      return:
        type:
          - void
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.getItem("Octagon")
              shape.scaleHeight(1.25, Excel.ShapeScaleType.currentSize);
              shape.scaleWidth(1.25, Excel.ShapeScaleType.currentSize);
              await context.sync();
          });
          ```
      parameters:
        - id: scaleFactor
          description: Specifies the ratio between the width of the shape after you resize it and the current or original width.
          type:
            - number
        - id: scaleType
          description: >-
            OriginalSize to scale the shape relative to its original size. CurrentSize to scale it relative to its
            current size. You can specify OriginalSize for this argument only if the specified shape is a picture.
          type:
            - excel.Excel.ShapeScaleType
        - id: scaleFrom
          description: >-
            Optional. One of the constants of ShapeScaleFrom which specifies which part of the shape retains its
            position when the shape is scaled. If omitted, it represents the shape's upper left corner retains its
            position.
          type:
            - excel.Excel.ShapeScaleFrom
  - uid: excel.Excel.Shape.scaleWidth_1
    summary: >-
      Scales the width of the shape by a specified factor. For pictures, you can indicate whether you want to scale the
      shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their
      current width.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: 'scaleWidth(scaleFactor, scaleTypeString, scaleFrom)'
    fullName: 'scaleWidth(scaleFactor, scaleTypeString, scaleFrom)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        scaleWidth(scaleFactor: number, scaleTypeString: "CurrentSize" | "OriginalSize", scaleFrom?: "ScaleFromTopLeft"
        | "ScaleFromMiddle" | "ScaleFromBottomRight"): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: scaleFactor
          description: Specifies the ratio between the width of the shape after you resize it and the current or original width.
          type:
            - number
        - id: scaleTypeString
          description: >-
            OriginalSize to scale the shape relative to its original size. CurrentSize to scale it relative to its
            current size. You can specify OriginalSize for this argument only if the specified shape is a picture.
          type:
            - '"CurrentSize" | "OriginalSize"'
        - id: scaleFrom
          description: >-
            Optional. One of the constants of ShapeScaleFrom which specifies which part of the shape retains its
            position when the shape is scaled. If omitted, it represents the shape's upper left corner retains its
            position.
          type:
            - '"ScaleFromTopLeft" | "ScaleFromMiddle" | "ScaleFromBottomRight"'
  - uid: excel.Excel.Shape.set
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.Shape): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type:
            - Interfaces.ShapeUpdateData
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.Shape.set_1
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Shape): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Shape
  - uid: excel.Excel.Shape.setZOrder
    summary: >-
      Moves the specified shape in front of or behind other shapes in the collection (that is, changes the shape's
      position in the z-order).


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: setZOrder(value)
    fullName: setZOrder(value)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setZOrder(value: Excel.ShapeZOrder): void;'
      return:
        type:
          - void
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.getItem("Octagon")
              shape.setZOrder(Excel.ShapeZOrder.sendBackward);
              await context.sync();
          });
          ```
      parameters:
        - id: value
          description: where to move the specified shape relative to the other shapes. See Excel.ShapeZOrder for detail.
          type:
            - excel.Excel.ShapeZOrder
  - uid: excel.Excel.Shape.setZOrder_1
    summary: >-
      Moves the specified shape in front of or behind other shapes in the collection (that is, changes the shape's
      position in the z-order).


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: setZOrder(valueString)
    fullName: setZOrder(valueString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setZOrder(valueString: "BringToFront" | "BringForward" | "SendToBack" | "SendBackward"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: valueString
          description: where to move the specified shape relative to the other shapes. See Excel.ShapeZOrder for detail.
          type:
            - '"BringToFront" | "BringForward" | "SendToBack" | "SendBackward"'
  - uid: excel.Excel.Shape.textFrame
    summary: >-
      Returns the textFrame object of a shape. Read only.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: textFrame
    fullName: textFrame
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly textFrame: Excel.TextFrame;'
      return:
        type:
          - excel.Excel.TextFrame
  - uid: excel.Excel.Shape.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.Shape object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.ShapeData`<!-- -->) that contains shallow copies of any loaded child
      properties from the original object.
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ShapeData;'
      return:
        type:
          - excel.Excel.Interfaces.ShapeData
        description: ''
  - uid: excel.Excel.Shape.top
    summary: >-
      The distance, in points, from the top edge of the shape to the top of the worksheet. Throws an invalid argument
      exception when set with negative value as input.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Shape.type
    summary: >-
      Returns the type of the specified shape. Read-only. See Excel.ShapeType for detail.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.ShapeType | "Unknown" | "Image" | "GeometricShape" | "Group" | "Line";'
      return:
        type:
          - Excel.ShapeType | "Unknown" | "Image" | "GeometricShape" | "Group" | "Line"
  - uid: excel.Excel.Shape.visible
    summary: >-
      Represents the visibility, in boolean, of the specified shape.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Shape.width
    summary: >-
      Represents the width, in points, of the shape. Throws an invalid argument exception when set with negative value
      or zero as input.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Shape.zorderPosition
    summary: >-
      Returns the position of the specified shape in the z-order, the very bottom shape's z-order value is 0. Read-only.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: zorderPosition
    fullName: zorderPosition
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly zorderPosition: number;'
      return:
        type:
          - number
