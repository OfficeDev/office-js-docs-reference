### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartLineFormat
    summary: |-
      Encapsulates the formatting options for line elements.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.ChartLineFormat
    fullName: excel.Excel.ChartLineFormat
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.ChartLineFormat.clear
      - excel.Excel.ChartLineFormat.color
      - excel.Excel.ChartLineFormat.lineStyle
      - excel.Excel.ChartLineFormat.load
      - excel.Excel.ChartLineFormat.set
      - excel.Excel.ChartLineFormat.toJSON
      - excel.Excel.ChartLineFormat.weight
  - uid: excel.Excel.ChartLineFormat.clear
    summary: |-
      Clear the line format of a chart element.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: clear()
    fullName: excel.Excel.ChartLineFormat.clear
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |


          #### Examples

          ```javascript
          // Set to show legend of Chart1 and make it on top of the chart.
          Excel.run(function (ctx) { 
              var gridlines = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").axes.valueAxis.majorGridlines;    
              gridlines.format.line.clear();
              return ctx.sync().then(function() {
                      console.log("Chart Major Gridlines Format Cleared");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.ChartLineFormat.color
    summary: |-
      HTML color code representing the color of lines in the chart.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: color
    fullName: excel.Excel.ChartLineFormat.color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ChartLineFormat.lineStyle
    summary: |-
      Represents the line style. See Excel.ChartLineStyle for details.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: lineStyle
    fullName: excel.Excel.ChartLineFormat.lineStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        lineStyle: Excel.ChartLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot" | "Grey25" |
        "Grey50" | "Grey75" | "Automatic" | "RoundDot";
      return:
        type:
          - >-
            Excel.ChartLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot" | "Grey25" |
            "Grey50" | "Grey75" | "Automatic" | "RoundDot"
  - uid: excel.Excel.ChartLineFormat.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >
      In addition to this signature, this method has the following signatures:


      `load(option?: { select?: string; expand?: string; }): Excel.ChartLineFormat` - Where option.select is a
      comma-delimited string that specifies the properties/relationships to load, and options.expand is a
      comma-delimited string that specifies the relationships to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartLineFormat` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.


      #### Examples


      ```javascript

      // Set chart major gridlines on value axis to be red.

      Excel.run(function (ctx) {
          var gridlines = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").axes.valueAxis.majorGridlines;
          gridlines.format.line.color = "#FF0000";
          return ctx.sync().then(function () {
              console.log("Chart Gridlines Color Updated");
          });
      }).catch(function (error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });

      ```
    name: load(option)
    fullName: excel.Excel.ChartLineFormat.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): Excel.ChartLineFormat;'
      return:
        type:
          - excel.Excel.ChartLineFormat
        description: ''
      parameters:
        - id: option
          description: A comma-delimited string or an array of strings that specify the properties/relationships to load.
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartLineFormat.set
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.ChartLineFormat): void`
    name: 'set(properties, options)'
    fullName: excel.Excel.ChartLineFormat.set
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartLineFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type:
            - Interfaces.ChartLineFormatUpdateData
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.ChartLineFormat.toJSON
    name: toJSON()
    fullName: excel.Excel.ChartLineFormat.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartLineFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartLineFormatData
        description: ''
  - uid: excel.Excel.ChartLineFormat.weight
    summary: |-
      Represents weight of the line, in points.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: weight
    fullName: excel.Excel.ChartLineFormat.weight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'weight: number;'
      return:
        type:
          - number
