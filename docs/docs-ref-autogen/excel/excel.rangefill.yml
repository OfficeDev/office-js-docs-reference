### YamlMime:UniversalReference
items:
  - uid: excel.Excel.RangeFill
    summary: |-
      Represents the background of a range object.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.RangeFill
    fullName: Excel.RangeFill
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.RangeFill.clear
      - excel.Excel.RangeFill.color
      - excel.Excel.RangeFill.context
      - excel.Excel.RangeFill.load
      - excel.Excel.RangeFill.pattern
      - excel.Excel.RangeFill.patternColor
      - excel.Excel.RangeFill.patternTintAndShade
      - excel.Excel.RangeFill.tintAndShade
      - excel.Excel.RangeFill.toJSON
  - uid: excel.Excel.RangeFill.clear
    summary: |-
      Resets the range background.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: clear()
    fullName: clear
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-

          #### Examples

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var rangeFill = range.format.fill;
              rangeFill.clear();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.RangeFill.color
    summary: >-
      HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML
      color (e.g. "orange")


      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeFill.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.RangeFill.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: { select?: string; expand?: string; }): Excel.RangeFill` - Where option.select is a comma-delimited
      string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the
      navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFill` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.

      #### Examples


      ```javascript

      Excel.run(function (ctx) { 
          var sheetName = "Sheet1";
          var rangeAddress = "F:G";
          var worksheet = ctx.workbook.worksheets.getItem(sheetName);
          var range = worksheet.getRange(rangeAddress);
          var rangeFill = range.format.fill;
          rangeFill.load('color');
          return ctx.sync().then(function() {
              console.log(rangeFill.color);
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });

      ```

      ```javascript

      // The example below sets fill color. 

      Excel.run(function (ctx) { 
          var sheetName = "Sheet1";
          var rangeAddress = "F:G";
          var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
          range.format.fill.color = '0000FF';
          return ctx.sync(); 
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });

      ```
    name: load(option)
    fullName: load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): Excel.RangeFill;'
      return:
        type:
          - excel.Excel.RangeFill
        description: ''
      parameters:
        - id: option
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel.Excel.RangeFill.pattern
    summary: >-
      Gets or sets the pattern of a Range. See Excel.FillPattern for details. LinearGradient and RectangularGradient are
      not supported. A null value indicates that the entire range doesn't have uniform pattern setting.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: pattern
    fullName: pattern
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        pattern: Excel.FillPattern | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" |
        "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" |
        "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient";
      return:
        type:
          - >-
            Excel.FillPattern | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" |
            "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" |
            "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient"
  - uid: excel.Excel.RangeFill.patternColor
    summary: >-
      Sets HTML color code representing the color of the Range pattern, of the form \#RRGGBB (e.g. "FFA500") or as a
      named HTML color (e.g. "orange"). Gets HTML color code representing the color of the Range pattern, of the form
      \#RRGGBB (e.g. "FFA500").


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: patternColor
    fullName: patternColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'patternColor: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeFill.patternTintAndShade
    summary: >-
      Returns or sets a double that lightens or darkens a pattern color for Range Fill, the value is between -1
      (darkest) and 1 (brightest), with 0 for the original color. If the pattern tintAndShades are not uniform, null
      will be returned.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: patternTintAndShade
    fullName: patternTintAndShade
    langs:
      - typeScript
    type: property
    syntax:
      content: 'patternTintAndShade: number;'
      return:
        type:
          - number
  - uid: excel.Excel.RangeFill.tintAndShade
    summary: >-
      Returns or sets a double that lightens or darkens a color for Range Fill, the value is between -1 (darkest) and 1
      (brightest), with 0 for the original color. If the tintAndShades are not uniform, null will be returned.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: tintAndShade
    fullName: tintAndShade
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tintAndShade: number;'
      return:
        type:
          - number
  - uid: excel.Excel.RangeFill.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.RangeFill object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.RangeFillData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    name: toJSON()
    fullName: toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeFillData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeFillData
        description: ''
