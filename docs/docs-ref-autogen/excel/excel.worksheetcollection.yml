### YamlMime:UniversalReference
items:
  - uid: excel.Excel.WorksheetCollection
    summary: |-
      Represents a collection of worksheet objects that are part of the workbook.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.WorksheetCollection
    fullName: excel.Excel.WorksheetCollection
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.WorksheetCollection.add
      - excel.Excel.WorksheetCollection.getActiveWorksheet
      - excel.Excel.WorksheetCollection.getCount
      - excel.Excel.WorksheetCollection.getFirst
      - excel.Excel.WorksheetCollection.getItem
      - excel.Excel.WorksheetCollection.getItemOrNullObject
      - excel.Excel.WorksheetCollection.getLast
      - excel.Excel.WorksheetCollection.items
      - excel.Excel.WorksheetCollection.load
      - excel.Excel.WorksheetCollection.onActivated
      - excel.Excel.WorksheetCollection.onAdded
      - excel.Excel.WorksheetCollection.onDeactivated
      - excel.Excel.WorksheetCollection.onDeleted
      - excel.Excel.WorksheetCollection.toJSON
  - uid: excel.Excel.WorksheetCollection.add
    summary: >-
      Adds a new worksheet to the workbook. The worksheet will be added at the end of existing worksheets. If you wish
      to activate the newly added worksheet, call ".activate() on it.


      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: add(name)
    fullName: excel.Excel.WorksheetCollection.add
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name?: string): Excel.Worksheet;'
      return:
        type:
          - Excel.Worksheet
        description: ''
      parameters:
        - id: name
          description: >-
            The name of the worksheet to be added. If specified, name should be unqiue. If not specified, Excel
            determines the name of the new worksheet.
          type:
            - string
    remarks: |


      #### Examples

      ```javascript
      Excel.run(function (ctx) { 
          var wSheetName = 'Sample Name';
          var worksheet = ctx.workbook.worksheets.add(wSheetName);
          worksheet.load('name');
          return ctx.sync().then(function() {
              console.log(worksheet.name);
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
  - uid: excel.Excel.WorksheetCollection.getActiveWorksheet
    summary: |-
      Gets the currently active worksheet in the workbook.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: getActiveWorksheet()
    fullName: excel.Excel.WorksheetCollection.getActiveWorksheet
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveWorksheet(): Excel.Worksheet;'
      return:
        type:
          - Excel.Worksheet
        description: ''
    remarks: |


      #### Examples

      ```javascript
      Excel.run(function (ctx) {  
          var activeWorksheet = ctx.workbook.worksheets.getActiveWorksheet();
          activeWorksheet.load('name');
          return ctx.sync().then(function() {
                  console.log(activeWorksheet.name);
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
  - uid: excel.Excel.WorksheetCollection.getCount
    summary: |-
      Gets the number of worksheets in the collection.

      \[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: getCount(visibleOnly)
    fullName: excel.Excel.WorksheetCollection.getCount
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(visibleOnly?: boolean): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
      parameters:
        - id: visibleOnly
          description: ''
          type:
            - boolean
  - uid: excel.Excel.WorksheetCollection.getFirst
    summary: >-
      Gets the first worksheet in the collection. If true, considers only visible worksheets, skipping over any hidden
      ones.


      \[ [API set: ExcelApi 1.5](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: getFirst(visibleOnly)
    fullName: excel.Excel.WorksheetCollection.getFirst
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - Excel.Worksheet
        description: ''
      parameters:
        - id: visibleOnly
          description: ''
          type:
            - boolean
  - uid: excel.Excel.WorksheetCollection.getItem
    summary: |-
      Gets a worksheet object using its Name or ID.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: getItem(key)
    fullName: excel.Excel.WorksheetCollection.getItem
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Worksheet;'
      return:
        type:
          - Excel.Worksheet
        description: ''
      parameters:
        - id: key
          description: The Name or ID of the worksheet.
          type:
            - string
  - uid: excel.Excel.WorksheetCollection.getItemOrNullObject
    summary: |-
      Gets a worksheet object using its Name or ID. If the worksheet does not exist, will return a null object.

      \[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: getItemOrNullObject(key)
    fullName: excel.Excel.WorksheetCollection.getItemOrNullObject
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Worksheet;'
      return:
        type:
          - Excel.Worksheet
        description: ''
      parameters:
        - id: key
          description: The Name or ID of the worksheet.
          type:
            - string
  - uid: excel.Excel.WorksheetCollection.getLast
    summary: >-
      Gets the last worksheet in the collection. If true, considers only visible worksheets, skipping over any hidden
      ones.


      \[ [API set: ExcelApi 1.5](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: getLast(visibleOnly)
    fullName: excel.Excel.WorksheetCollection.getLast
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLast(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - Excel.Worksheet
        description: ''
      parameters:
        - id: visibleOnly
          description: ''
          type:
            - boolean
  - uid: excel.Excel.WorksheetCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: excel.Excel.WorksheetCollection.items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Worksheet[];'
      return:
        type:
          - 'Excel.Worksheet[]'
  - uid: excel.Excel.WorksheetCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: excel.Excel.WorksheetCollection.load
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        load(option?: Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions):
        Excel.WorksheetCollection;
      return:
        type:
          - Excel.WorksheetCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    remarks: |


      #### Examples

      ```javascript
      Excel.run(function (ctx) { 
          var worksheets = ctx.workbook.worksheets;
          worksheets.load('items');
          return ctx.sync().then(function() {
              for (var i = 0; i < worksheets.items.length; i++)
              {
                  console.log(worksheets.items[i].name);
                  console.log(worksheets.items[i].index);
              }
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
  - uid: excel.Excel.WorksheetCollection.onActivated
    summary: |-
      Occurs when any worksheet in the workbook is activated.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: onActivated
    fullName: excel.Excel.WorksheetCollection.onActivated
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onAdded
    summary: |-
      Occurs when a new worksheet is added to the workbook.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: onAdded
    fullName: excel.Excel.WorksheetCollection.onAdded
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onDeactivated
    summary: |-
      Occurs when any worksheet in the workbook is deactivated.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: onDeactivated
    fullName: excel.Excel.WorksheetCollection.onDeactivated
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onDeleted
    summary: |-
      Occurs when a worksheet is deleted from the workbook.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: onDeleted
    fullName: excel.Excel.WorksheetCollection.onDeleted
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>
  - uid: excel.Excel.WorksheetCollection.toJSON
    name: toJSON()
    fullName: excel.Excel.WorksheetCollection.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetCollectionData;'
      return:
        type:
          - Excel.Interfaces.WorksheetCollectionData
        description: ''
