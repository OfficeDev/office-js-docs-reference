### YamlMime:UniversalReference
items:
  - uid: excel.Excel.StyleCollection
    summary: >-
      Represents a collection of all the styles. WARNING: The StyleCollection items array has a known issue when loading
      items from the collection. Do not use `StyleCollection.items`<!-- -->, any `load()` method, and the `toJSON()`
      method.


      \[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.StyleCollection
    fullName: Excel.StyleCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.StyleCollection.add
      - excel.Excel.StyleCollection.context
      - excel.Excel.StyleCollection.getItem
      - excel.Excel.StyleCollection.items
      - excel.Excel.StyleCollection.load
      - excel.Excel.StyleCollection.toJSON
  - uid: excel.Excel.StyleCollection.add
    summary: |-
      Adds a new style to the collection.

      \[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: add(name)
    fullName: add
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string): void;'
      return:
        type:
          - void
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });
          ```
      parameters:
        - id: name
          description: Name of the style to be added.
          type:
            - string
  - uid: excel.Excel.StyleCollection.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.StyleCollection.getItem
    summary: |-
      Gets a style by name.

      \[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getItem(name)
    fullName: getItem
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Style;'
      return:
        type:
          - excel.Excel.Style
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });
          ```
      parameters:
        - id: name
          description: Name of the style to be retrieved.
          type:
            - string
  - uid: excel.Excel.StyleCollection.items
    summary: >-
      WARNING: The StyleCollection items array has a known issue when loading items from the collection. Do not use
      `StyleCollection.items`<!-- -->, any `load()` method, and the `toJSON()` method.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Style[];'
      return:
        type:
          - 'Excel.Style[]'
  - uid: excel.Excel.StyleCollection.load
    summary: >-
      WARNING: The StyleCollection items array has a known issue when loading items from the collection. Do not use
      `StyleCollection.items`<!-- -->, any `load()` method, and the `toJSON()` method.
    name: load(option)
    fullName: load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): Excel.StyleCollection;'
      return:
        type:
          - excel.Excel.StyleCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'string | string[]'
  - uid: excel.Excel.StyleCollection.toJSON
    summary: >-
      WARNING: The StyleCollection items array has a known issue when loading items from the collection. Do not use
      `StyleCollection.items`<!-- -->, any `load()` method, and the `toJSON()` method.
    name: toJSON()
    fullName: toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.StyleCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.StyleCollectionData
        description: ''
