### YamlMime:UniversalReference
items:
  - uid: excel.Excel.StyleCollection
    summary: |-
      Represents a collection of all the styles.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.StyleCollection
    fullName: excel.Excel.StyleCollection
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.StyleCollection.add
      - excel.Excel.StyleCollection.getItem
      - excel.Excel.StyleCollection.items
      - excel.Excel.StyleCollection.load
      - excel.Excel.StyleCollection.toJSON
  - uid: excel.Excel.StyleCollection.add
    summary: |-
      Adds a new style to the collection.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: add(name)
    fullName: excel.Excel.StyleCollection.add
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: Name of the style to be added.
          type:
            - string
    remarks: |


      #### Examples

      ```typescript
      await Excel.run(async (context) => {
          let styles = context.workbook.styles;

          // Add a new style to the style collection.
          // Styles is in the Home tab ribbon.
          styles.add("Diagonal Orientation Style");
                
          let newStyle = styles.getItem("Diagonal Orientation Style");
          
          // The "Diagonal Orientation Style" properties.
          newStyle.textOrientation = 38;
          newStyle.autoIndent = true;
          newStyle.includeProtection = true;
          newStyle.shrinkToFit = true;
          newStyle.locked = false;
          
          await context.sync();

          OfficeHelpers.UI.notify("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
      });
      ```
  - uid: excel.Excel.StyleCollection.getItem
    summary: |-
      Gets a style by name.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: getItem(name)
    fullName: excel.Excel.StyleCollection.getItem
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Style;'
      return:
        type:
          - Excel.Style
        description: ''
      parameters:
        - id: name
          description: Name of the style to be retrieved.
          type:
            - string
    remarks: |


      #### Examples

      ```typescript
      await Excel.run(async (context) => {
          let styles = context.workbook.styles;

          // Add a new style to the style collection.
          // Styles is in the Home tab ribbon.
          styles.add("Diagonal Orientation Style");
                
          let newStyle = styles.getItem("Diagonal Orientation Style");
          
          // The "Diagonal Orientation Style" properties.
          newStyle.textOrientation = 38;
          newStyle.autoIndent = true;
          newStyle.includeProtection = true;
          newStyle.shrinkToFit = true;
          newStyle.locked = false;
          
          await context.sync();

          OfficeHelpers.UI.notify("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
      });
      ```
  - uid: excel.Excel.StyleCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: excel.Excel.StyleCollection.items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Style[];'
      return:
        type:
          - 'Excel.Style[]'
  - uid: excel.Excel.StyleCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      \`load(option?: string \| string\[\]): Excel.StyleCollection\` - Where option is a comma-delimited string or an
      array of strings that specify the properties/relationships to load.


      \`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection\` - Where option.select is a
      comma-delimited string that specifies the properties/relationships to load, and options.expand is a
      comma-delimited string that specifies the relationships to load.


      \`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection\` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.
    name: load(option)
    fullName: excel.Excel.StyleCollection.load
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        load(option?: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions):
        Excel.StyleCollection;
      return:
        type:
          - Excel.StyleCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.StyleCollection.toJSON
    name: toJSON()
    fullName: excel.Excel.StyleCollection.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.StyleCollectionData;'
      return:
        type:
          - Excel.Interfaces.StyleCollectionData
        description: ''
