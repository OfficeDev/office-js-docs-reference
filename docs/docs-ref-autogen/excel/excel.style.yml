### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Style
    summary: |-
      An object encapsulating a style's format and other properties.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.Style
    fullName: excel.Excel.Style
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.Style.autoIndent
      - excel.Excel.Style.borders
      - excel.Excel.Style.builtIn
      - excel.Excel.Style.delete
      - excel.Excel.Style.fill
      - excel.Excel.Style.font
      - excel.Excel.Style.formulaHidden
      - excel.Excel.Style.horizontalAlignment
      - excel.Excel.Style.includeAlignment
      - excel.Excel.Style.includeBorder
      - excel.Excel.Style.includeFont
      - excel.Excel.Style.includeNumber
      - excel.Excel.Style.includePatterns
      - excel.Excel.Style.includeProtection
      - excel.Excel.Style.indentLevel
      - excel.Excel.Style.load
      - excel.Excel.Style.locked
      - excel.Excel.Style.name
      - excel.Excel.Style.numberFormat
      - excel.Excel.Style.numberFormatLocal
      - excel.Excel.Style.readingOrder
      - excel.Excel.Style.shrinkToFit
      - excel.Excel.Style.textOrientation
      - excel.Excel.Style.toJSON
      - excel.Excel.Style.verticalAlignment
      - excel.Excel.Style.wrapText
  - uid: excel.Excel.Style.autoIndent
    summary: |-
      Indicates if text is automatically indented when the text alignment in a cell is set to equal distribution.

      \[ [API set: ExcelApi 1.8](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: autoIndent
    fullName: excel.Excel.Style.autoIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoIndent: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.borders
    summary: |-
      A Border collection of four Border objects that represent the style of the four borders.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: borders
    fullName: excel.Excel.Style.borders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly borders: Excel.RangeBorderCollection;'
      return:
        type:
          - excel.Excel.RangeBorderCollection
  - uid: excel.Excel.Style.builtIn
    summary: |-
      Indicates if the style is a built-in style.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: builtIn
    fullName: excel.Excel.Style.builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly builtIn: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.delete
    summary: |-
      Deletes this style.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: delete()
    fullName: excel.Excel.Style.delete
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              let style = context.workbook.styles.getItem("Diagonal Orientation Style");

              // Delete the diagonal orientation style from the style collection.
              // Styles are in the Home tab ribbon.
              style.delete();

              await context.sync();

              OfficeHelpers.UI.notify("Successfully deleted the diagonal orientation style from the Home tab ribbon.");
          });
          ```
  - uid: excel.Excel.Style.fill
    summary: |-
      The Fill of the style.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: fill
    fullName: excel.Excel.Style.fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.RangeFill;'
      return:
        type:
          - excel.Excel.RangeFill
  - uid: excel.Excel.Style.font
    summary: |-
      A Font object that represents the font of the style.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: font
    fullName: excel.Excel.Style.font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Excel.RangeFont;'
      return:
        type:
          - excel.Excel.RangeFont
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              let style = context.workbook.styles.getItem("Normal");
              style.font.load("bold, color, italic, name, size");
              style.fill.load("color");

              await context.sync();

              console.log("Bold: " + style.font.bold);
              console.log("Font color: " + style.font.color);
              console.log("Italic: " + style.font.italic);
              console.log("Name: " + style.font.name);
              console.log("Size: " + style.font.size);
              console.log("Fill color: " + style.fill.color);
          });
          ```
  - uid: excel.Excel.Style.formulaHidden
    summary: |-
      Indicates if the formula will be hidden when the worksheet is protected.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: formulaHidden
    fullName: excel.Excel.Style.formulaHidden
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaHidden: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.horizontalAlignment
    summary: |-
      Represents the horizontal alignment for the style. See Excel.HorizontalAlignment for details.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: horizontalAlignment
    fullName: excel.Excel.Style.horizontalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        horizontalAlignment: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" |
        "CenterAcrossSelection" | "Distributed";
      return:
        type:
          - >-
            Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" |
            "CenterAcrossSelection" | "Distributed"
        description: |-

          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              let worksheet = context.workbook.worksheets.getItem("Sample");
              let range = worksheet.getRange("A1:E1");

              // Apply built-in style. 
              // Styles are in the Home tab ribbon.
              range.style = Excel.BuiltInStyle.neutral;
              range.format.horizontalAlignment = "Right";

              await context.sync();
          });
          ```
  - uid: excel.Excel.Style.includeAlignment
    summary: >-
      Indicates if the style includes the AutoIndent, HorizontalAlignment, VerticalAlignment, WrapText, IndentLevel, and
      TextOrientation properties.


      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: includeAlignment
    fullName: excel.Excel.Style.includeAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeAlignment: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.includeBorder
    summary: |-
      Indicates if the style includes the Color, ColorIndex, LineStyle, and Weight border properties.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: includeBorder
    fullName: excel.Excel.Style.includeBorder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeBorder: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.includeFont
    summary: >-
      Indicates if the style includes the Background, Bold, Color, ColorIndex, FontStyle, Italic, Name, Size,
      Strikethrough, Subscript, Superscript, and Underline font properties.


      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: includeFont
    fullName: excel.Excel.Style.includeFont
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeFont: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.includeNumber
    summary: |-
      Indicates if the style includes the NumberFormat property.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: includeNumber
    fullName: excel.Excel.Style.includeNumber
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeNumber: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.includePatterns
    summary: >-
      Indicates if the style includes the Color, ColorIndex, InvertIfNegative, Pattern, PatternColor, and
      PatternColorIndex interior properties.


      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: includePatterns
    fullName: excel.Excel.Style.includePatterns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includePatterns: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.includeProtection
    summary: |-
      Indicates if the style includes the FormulaHidden and Locked protection properties.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: includeProtection
    fullName: excel.Excel.Style.includeProtection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeProtection: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.indentLevel
    summary: |-
      An integer from 0 to 250 that indicates the indent level for the style.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: indentLevel
    fullName: excel.Excel.Style.indentLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'indentLevel: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Style.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: { select?: string; expand?: string; }): Excel.Style` - Where option.select is a comma-delimited
      string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the
      navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Style` - Only available
      on collection types. It is similar to the preceding signature. Option.top specifies the maximum number of
      collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.

      #### Examples


      ```typescript

      await Excel.run(async (context) => {
          let style = context.workbook.styles.getItem("Diagonal Orientation Style");            
          style.load("textOrientation, horizontalAlignment, autoIndent, readingOrder, wrapText, includeProtection, shrinkToFit, locked");

          await context.sync();

          console.log("Orientation: " + style.textOrientation);
          console.log("Horizontal alignment: " + style.horizontalAlignment);
          console.log("Add indent: " + style.autoIndent);
          console.log("Reading order: " + style.readingOrder);
          console.log("Wrap text: " + style.wrapText);
          console.log("Include protection: " + style.includeProtection);
          console.log("Shrink to fit: " + style.shrinkToFit);
          console.log("Style locked: " + style.locked);
      });

      ```
    name: load(option)
    fullName: excel.Excel.Style.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): Excel.Style;'
      return:
        type:
          - excel.Excel.Style
        description: ''
      parameters:
        - id: option
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel.Excel.Style.locked
    summary: |-
      Indicates if the object is locked when the worksheet is protected.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: locked
    fullName: excel.Excel.Style.locked
    langs:
      - typeScript
    type: property
    syntax:
      content: 'locked: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.name
    summary: |-
      The name of the style.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: name
    fullName: excel.Excel.Style.name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Style.numberFormat
    summary: |-
      The format code of the number format for the style.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: numberFormat
    fullName: excel.Excel.Style.numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormat: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Style.numberFormatLocal
    summary: |-
      The localized format code of the number format for the style.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: numberFormatLocal
    fullName: excel.Excel.Style.numberFormatLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormatLocal: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Style.readingOrder
    summary: |-
      The reading order for the style.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: readingOrder
    fullName: excel.Excel.Style.readingOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readingOrder: Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft";'
      return:
        type:
          - Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft"
  - uid: excel.Excel.Style.shrinkToFit
    summary: |-
      Indicates if text automatically shrinks to fit in the available column width.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: shrinkToFit
    fullName: excel.Excel.Style.shrinkToFit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shrinkToFit: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.textOrientation
    summary: |-
      The text orientation for the style.

      \[ [API set: ExcelApi 1.8](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: textOrientation
    fullName: excel.Excel.Style.textOrientation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textOrientation: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Style.toJSON
    name: toJSON()
    fullName: excel.Excel.Style.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.StyleData;'
      return:
        type:
          - excel.Excel.Interfaces.StyleData
        description: ''
  - uid: excel.Excel.Style.verticalAlignment
    summary: |-
      Represents the vertical alignment for the style. See Excel.VerticalAlignment for details.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: verticalAlignment
    fullName: excel.Excel.Style.verticalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'verticalAlignment: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed";'
      return:
        type:
          - Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
  - uid: excel.Excel.Style.wrapText
    summary: |-
      Indicates if Microsoft Excel wraps the text in the object.

      \[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: wrapText
    fullName: excel.Excel.Style.wrapText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wrapText: boolean;'
      return:
        type:
          - boolean
