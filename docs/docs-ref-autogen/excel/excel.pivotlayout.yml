### YamlMime:UniversalReference
items:
  - uid: excel.Excel.PivotLayout
    summary: |-
      Represents the visual layout of the PivotTable.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.PivotLayout
    fullName: Excel.PivotLayout
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.PivotLayout.autoFormat
      - excel.Excel.PivotLayout.context
      - excel.Excel.PivotLayout.enableFieldList
      - excel.Excel.PivotLayout.getCell
      - excel.Excel.PivotLayout.getColumnLabelRange
      - excel.Excel.PivotLayout.getDataBodyRange
      - excel.Excel.PivotLayout.getDataHierarchy
      - excel.Excel.PivotLayout.getFilterAxisRange
      - excel.Excel.PivotLayout.getPivotItems
      - excel.Excel.PivotLayout.getPivotItems_1
      - excel.Excel.PivotLayout.getRange
      - excel.Excel.PivotLayout.getRowLabelRange
      - excel.Excel.PivotLayout.layoutType
      - excel.Excel.PivotLayout.load
      - excel.Excel.PivotLayout.load_1
      - excel.Excel.PivotLayout.load_2
      - excel.Excel.PivotLayout.preserveFormatting
      - excel.Excel.PivotLayout.set
      - excel.Excel.PivotLayout.set_1
      - excel.Excel.PivotLayout.setAutoSortOnCell
      - excel.Excel.PivotLayout.setAutoSortOnCell_1
      - excel.Excel.PivotLayout.showColumnGrandTotals
      - excel.Excel.PivotLayout.showRowGrandTotals
      - excel.Excel.PivotLayout.subtotalLocation
      - excel.Excel.PivotLayout.toJSON
  - uid: excel.Excel.PivotLayout.autoFormat
    summary: |-
      Specifies whether formatting will be automatically formatted when itâ€™s refreshed or when fields are moved

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: autoFormat
    fullName: autoFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoFormat: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.PivotLayout.enableFieldList
    summary: >-
      Specifies whether the field list can be shown in the UI.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: enableFieldList
    fullName: enableFieldList
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableFieldList: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.getCell
    summary: >-
      Gets a unique cell in the PivotTable based on a data hierarchy and the row and column items of their respective
      hierarchies. The returned cell is the intersection of the given row and column that contains the data from the
      given hierarchy. This method is the inverse of calling getPivotItems and getDataHierarchy on a particular cell.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: 'getCell(dataHierarchy, rowItems, columnItems)'
    fullName: 'getCell(dataHierarchy, rowItems, columnItems)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getCell(dataHierarchy: DataPivotHierarchy | string, rowItems: Array<PivotItem | string>, columnItems:
        Array<PivotItem | string>): Excel.Range;
      return:
        type:
          - excel.Excel.Range
        description: A range specifying a single cell that contains the value specified.
      parameters:
        - id: dataHierarchy
          description: The dataHierarchy that provides the data item to find.
          type:
            - DataPivotHierarchy | string
        - id: rowItems
          description: The PivotItems from the row axis that make up the value to find.
          type:
            - Array<PivotItem | string>
        - id: columnItems
          description: The PivotItems from the column axis that make up the value to find.
          type:
            - Array<PivotItem | string>
  - uid: excel.Excel.PivotLayout.getColumnLabelRange
    summary: |-
      Returns the range where the PivotTable's column labels reside.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getColumnLabelRange()
    fullName: getColumnLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnLabelRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PivotLayout.getDataBodyRange
    summary: |-
      Returns the range where the PivotTable's data values reside.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

              // the layout controls the ranges used by the PivotTable
              const range = pivotTable.layout.getDataBodyRange();

              // get all the data hierarchy totals
              const grandTotalRange = range.getLastRow();
              grandTotalRange.load("address");
              await context.sync();
              
              // use the wholesale and farm sale totals to make a final sum
              const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange("B27:C27");
              masterTotalRange.formulas = [["All Crates", "=SUM(" + grandTotalRange.address + ")"]];
              await context.sync();
          });
          ```
  - uid: excel.Excel.PivotLayout.getDataHierarchy
    summary: |-
      Gets the DataHierarchy that is used to calculate the value in a specified range within the PivotTable.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getDataHierarchy(cell)
    fullName: getDataHierarchy(cell)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataHierarchy(cell: Range | string): Excel.DataPivotHierarchy;'
      return:
        type:
          - excel.Excel.DataPivotHierarchy
        description: The DataPivotHierarchy object used to calculate the value in the specified cell.
      parameters:
        - id: cell
          description: A single cell within the PivotTable data body.
          type:
            - Range | string
  - uid: excel.Excel.PivotLayout.getFilterAxisRange
    summary: |-
      Returns the range of the PivotTable's filter area.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getFilterAxisRange()
    fullName: getFilterAxisRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilterAxisRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PivotLayout.getPivotItems
    summary: |-
      Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'getPivotItems(axis, cell)'
    fullName: 'getPivotItems(axis, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axis: Excel.PivotAxis, cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
        description: A collection of PivotItems that are used to calculate the values in the specified row.
      parameters:
        - id: axis
          description: The axis from which to get the PivotItems. Must be either "row" or "column."
          type:
            - excel.Excel.PivotAxis
        - id: cell
          description: A single cell within the PivotTable's data body.
          type:
            - Range | string
  - uid: excel.Excel.PivotLayout.getPivotItems_1
    summary: |-
      Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'getPivotItems(axisString, cell)'
    fullName: 'getPivotItems(axisString, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getPivotItems(axisString: "Unknown" | "Row" | "Column" | "Data" | "Filter", cell: Range | string):
        OfficeExtension.ClientResult<Excel.PivotItem[]>;
      return:
        type:
          - 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
        description: A collection of PivotItems that are used to calculate the values in the specified row.
      parameters:
        - id: axisString
          description: The axis from which to get the PivotItems. Must be either "row" or "column."
          type:
            - '"Unknown" | "Row" | "Column" | "Data" | "Filter"'
        - id: cell
          description: A single cell within the PivotTable's data body.
          type:
            - Range | string
  - uid: excel.Excel.PivotLayout.getRange
    summary: |-
      Returns the range the PivotTable exists on, excluding the filter area.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PivotLayout.getRowLabelRange
    summary: |-
      Returns the range where the PivotTable's row labels reside.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getRowLabelRange()
    fullName: getRowLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowLabelRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PivotLayout.layoutType
    summary: >-
      This property indicates the PivotLayoutType of all fields on the PivotTable. If fields have different states, this
      will be null.


      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: layoutType
    fullName: layoutType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
      return:
        type:
          - Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
  - uid: excel.Excel.PivotLayout.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Excel.PivotLayout` - Where option is a comma-delimited string or an array of
      strings that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): Excel.PivotLayout` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotLayoutLoadOptions): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PivotLayoutLoadOptions
  - uid: excel.Excel.PivotLayout.load_1
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel.Excel.PivotLayout.load_2
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and
            propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.PivotLayout.preserveFormatting
    summary: >-
      Specifies whether formatting is preserved when the report is refreshed or recalculated by operations such as
      pivoting, sorting, or changing page field items.


      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: preserveFormatting
    fullName: preserveFormatting
    langs:
      - typeScript
    type: property
    syntax:
      content: 'preserveFormatting: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.set
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.PivotLayout): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type:
            - Interfaces.PivotLayoutUpdateData
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.PivotLayout.set_1
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotLayout): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.PivotLayout
  - uid: excel.Excel.PivotLayout.setAutoSortOnCell
    summary: >-
      Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria
      and context. This behaves identically to applying an autosort from the UI.


      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'setAutoSortOnCell(cell, sortBy)'
    fullName: 'setAutoSortOnCell(cell, sortBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortBy: Excel.SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: A single cell to use get the criteria from for applying the autosort.
          type:
            - Range | string
        - id: sortBy
          description: The direction of the sort.
          type:
            - excel.Excel.SortBy
  - uid: excel.Excel.PivotLayout.setAutoSortOnCell_1
    summary: >-
      Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria
      and context. This behaves identically to applying an autosort from the UI.


      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'setAutoSortOnCell(cell, sortByString)'
    fullName: 'setAutoSortOnCell(cell, sortByString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortByString: "Ascending" | "Descending"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: A single cell to use get the criteria from for applying the autosort.
          type:
            - Range | string
        - id: sortByString
          description: The direction of the sort.
          type:
            - '"Ascending" | "Descending"'
  - uid: excel.Excel.PivotLayout.showColumnGrandTotals
    summary: |-
      Specifies whether the PivotTable report shows grand totals for columns.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: showColumnGrandTotals
    fullName: showColumnGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showColumnGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.showRowGrandTotals
    summary: |-
      Specifies whether the PivotTable report shows grand totals for rows.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: showRowGrandTotals
    fullName: showRowGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showRowGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.subtotalLocation
    summary: >-
      This property indicates the SubtotalLocationType of all fields on the PivotTable. If fields have different states,
      this will be null.


      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: subtotalLocation
    fullName: subtotalLocation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
      return:
        type:
          - Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
  - uid: excel.Excel.PivotLayout.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.PivotLayout object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.PivotLayoutData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotLayoutData
        description: ''
