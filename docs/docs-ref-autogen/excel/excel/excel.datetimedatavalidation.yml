### YamlMime:TSType
name: Excel.DateTimeDataValidation
uid: 'excel!Excel.DateTimeDataValidation:interface'
package: excel!
fullName: Excel.DateTimeDataValidation
summary: >-
  Represents the Date data validation criteria.


  \[ [API set: ExcelApi
  1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: formula1
    uid: 'excel!Excel.DateTimeDataValidation#formula1:member'
    package: excel!
    fullName: formula1
    summary: >-
      Specifies the right-hand operand when the operator property is set to a
      binary operator such as GreaterThan (the left-hand operand is the value
      the user tries to enter in the cell). With the ternary operators Between
      and NotBetween, specifies the lower bound operand. When setting the value,
      it can be passed in as a Date, a Range object, or a string formula (where
      the string is either a stringified date/time in ISO8601 format, a cell
      reference like "=A1", or a formula like "=MIN(A1, B1)"). When retrieving
      the value, it will always be returned as a string formula, for example:
      "=10", "=A1", "=SUM(A1:B5)", etc.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formula1: string | Date | Range;'
      return:
        type: 'string | Date | <xref uid="excel!Excel.Range:class" />'
  - name: formula2
    uid: 'excel!Excel.DateTimeDataValidation#formula2:member'
    package: excel!
    fullName: formula2
    summary: >-
      With the ternary operators Between and NotBetween, specifies the upper
      bound operand. Is not used with the binary operators, such as GreaterThan.
      When setting the value, it can be passed in as a Date, a Range object, or
      a string (where the string is either a stringified date/time in ISO8601
      format, a cell reference like "=A1", or a formula like "=MIN(A1, B1)").
      When retrieving the value, it will always be returned as a string formula,
      for example: "=10", "=A1", "=SUM(A1:B5)", etc.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formula2?: string | Date | Range;'
      return:
        type: 'string | Date | <xref uid="excel!Excel.Range:class" />'
  - name: operator
    uid: 'excel!Excel.DateTimeDataValidation#operator:member'
    package: excel!
    fullName: operator
    summary: >-
      The operator to use for validating the data.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        operator: Excel.DataValidationOperator | "Between" | "NotBetween" |
        "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" |
        "GreaterThanOrEqualTo" | "LessThanOrEqualTo";
      return:
        type: >-
          <xref uid="excel!Excel.DataValidationOperator:enum" /> | "Between" |
          "NotBetween" | "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" |
          "GreaterThanOrEqualTo" | "LessThanOrEqualTo"
