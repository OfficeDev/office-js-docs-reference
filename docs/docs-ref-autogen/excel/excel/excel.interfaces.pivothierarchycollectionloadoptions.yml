### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Interfaces.PivotHierarchyCollectionLoadOptions:interface'
    summary: |-
      Represents a collection of all the PivotHierarchies that are part of the PivotTable.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.Interfaces.PivotHierarchyCollectionLoadOptions
    fullName: Excel.Interfaces.PivotHierarchyCollectionLoadOptions
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.Interfaces.PivotHierarchyCollectionLoadOptions#$all:member'
      - 'excel!Excel.Interfaces.PivotHierarchyCollectionLoadOptions#id:member'
      - 'excel!Excel.Interfaces.PivotHierarchyCollectionLoadOptions#name:member'
  - uid: 'excel!Excel.Interfaces.PivotHierarchyCollectionLoadOptions#$all:member'
    summary: >-
      Specifying `$all` for the LoadOptions loads all the scalar properties (e.g.: `Range.address`<!-- -->) but not the
      navigational properties (e.g.: `Range.format.fill.color`<!-- -->).
    name: $all
    fullName: $all
    langs:
      - typeScript
    type: property
    syntax:
      content: '$all?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Interfaces.PivotHierarchyCollectionLoadOptions#id:member'
    summary: |-
      For EACH ITEM in the collection: Id of the PivotHierarchy.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Interfaces.PivotHierarchyCollectionLoadOptions#name:member'
    summary: |-
      For EACH ITEM in the collection: Name of the PivotHierarchy.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name?: boolean;'
      return:
        type:
          - boolean
