### YamlMime:TSType
name: Excel.PivotTable
uid: 'excel!Excel.PivotTable:class'
package: excel!
fullName: Excel.PivotTable
summary: >-
  Represents an Excel PivotTable. To learn more about the PivotTable object
  model, read [Work with PivotTables using the Excel JavaScript
  API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables)<!--
  -->.


  \[ [API set: ExcelApi
  1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: allowMultipleFiltersPerField
    uid: 'excel!Excel.PivotTable#allowMultipleFiltersPerField:member'
    package: excel!
    fullName: allowMultipleFiltersPerField
    summary: >-
      Specifies if the PivotTable allows the application of multiple
      PivotFilters on a given PivotField in the table.


      \[ [API set: ExcelApi
      1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allowMultipleFiltersPerField: boolean;'
      return:
        type: boolean
  - name: columnHierarchies
    uid: 'excel!Excel.PivotTable#columnHierarchies:member'
    package: excel!
    fullName: columnHierarchies
    summary: >-
      The Column Pivot Hierarchies of the PivotTable.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type: '<xref uid="excel!Excel.RowColumnPivotHierarchyCollection:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-create-and-modify.yaml

          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");       

              // check if the PivotTable already has a column
              const column = pivotTable.columnHierarchies.getItemOrNullObject("Farm");
              column.load("id");
              await context.sync();

              if (column.isNullObject) {
                  // ading the farm column to the column hierarchy automatically removes it from the row hierarchy
                  pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem("Farm"));
              } else {
                  pivotTable.columnHierarchies.remove(column);
              }

              await context.sync();
          });

          ```
  - name: context
    uid: 'excel!Excel.PivotTable#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: dataHierarchies
    uid: 'excel!Excel.PivotTable#dataHierarchies:member'
    package: excel!
    fullName: dataHierarchies
    summary: >-
      The Data Pivot Hierarchies of the PivotTable.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
      return:
        type: '<xref uid="excel!Excel.DataPivotHierarchyCollection:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-create-and-modify.yaml

          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold at Farm"));
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold Wholesale"));

              await context.sync();
          });

          ```
  - name: enableDataValueEditing
    uid: 'excel!Excel.PivotTable#enableDataValueEditing:member'
    package: excel!
    fullName: enableDataValueEditing
    summary: >-
      Specifies if the PivotTable allows values in the data body to be edited by
      the user.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enableDataValueEditing: boolean;'
      return:
        type: boolean
  - name: filterHierarchies
    uid: 'excel!Excel.PivotTable#filterHierarchies:member'
    package: excel!
    fullName: filterHierarchies
    summary: >-
      The Filter Pivot Hierarchies of the PivotTable.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
      return:
        type: '<xref uid="excel!Excel.FilterPivotHierarchyCollection:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-filters-and-summaries.yaml

          async function filter(functionType: Excel.AggregationFunction) {
              await Excel.run(async (context) => {
                  const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
                  const filters = pivotTable.filterHierarchies;
                  const filter = filters.getItemOrNullObject("Classification");
                  filter.load();
                  await context.sync();

                  // add the Classification hierarchy to the filter, if it's not already there
                  if (filter.isNullObject) {
                      filters.add(pivotTable.hierarchies.getItem("Classification"));
                      await context.sync();
                  }
              });
          }

          ```
  - name: hierarchies
    uid: 'excel!Excel.PivotTable#hierarchies:member'
    package: excel!
    fullName: hierarchies
    summary: >-
      The Pivot Hierarchies of the PivotTable.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
      return:
        type: '<xref uid="excel!Excel.PivotHierarchyCollection:class" />'
  - name: id
    uid: 'excel!Excel.PivotTable#id:member'
    package: excel!
    fullName: id
    summary: >-
      Id of the PivotTable.


      \[ [API set: ExcelApi
      1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: string;'
      return:
        type: string
  - name: layout
    uid: 'excel!Excel.PivotTable#layout:member'
    package: excel!
    fullName: layout
    summary: >-
      The PivotLayout describing the layout and visual structure of the
      PivotTable.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly layout: Excel.PivotLayout;'
      return:
        type: '<xref uid="excel!Excel.PivotLayout:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-create-and-modify.yaml

          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.layout.load("layoutType");
              await context.sync();

              // cycle between the three layout types
              if (pivotTable.layout.layoutType === "Compact") {
                  pivotTable.layout.layoutType = "Outline";
              } else if (pivotTable.layout.layoutType === "Outline") {
                  pivotTable.layout.layoutType = "Tabular";
              } else {
                  pivotTable.layout.layoutType = "Compact";
              }
              await context.sync();
              console.log("Pivot layout is now " + pivotTable.layout.layoutType);
          });

          ```
  - name: name
    uid: 'excel!Excel.PivotTable#name:member'
    package: excel!
    fullName: name
    summary: >-
      Name of the PivotTable.


      \[ [API set: ExcelApi
      1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name: string;'
      return:
        type: string
  - name: refreshOnOpen
    uid: 'excel!Excel.PivotTable#refreshOnOpen:member'
    package: excel!
    fullName: refreshOnOpen
    summary: >-
      Specifies whether the PivotTable refreshes when the workbook opens.
      Corresponds to "Refresh on load" setting in the UI.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'refreshOnOpen: boolean;'
      return:
        type: boolean
  - name: rowHierarchies
    uid: 'excel!Excel.PivotTable#rowHierarchies:member'
    package: excel!
    fullName: rowHierarchies
    summary: >-
      The Row Pivot Hierarchies of the PivotTable.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type: '<xref uid="excel!Excel.RowColumnPivotHierarchyCollection:class" />'
  - name: useCustomSortLists
    uid: 'excel!Excel.PivotTable#useCustomSortLists:member'
    package: excel!
    fullName: useCustomSortLists
    summary: >-
      Specifies if the PivotTable uses custom lists when sorting.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useCustomSortLists: boolean;'
      return:
        type: boolean
  - name: worksheet
    uid: 'excel!Excel.PivotTable#worksheet:member'
    package: excel!
    fullName: worksheet
    summary: >-
      The worksheet containing the current PivotTable.


      \[ [API set: ExcelApi
      1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type: '<xref uid="excel!Excel.Worksheet:class" />'
methods:
  - name: delete()
    uid: 'excel!Excel.PivotTable#delete:member(1)'
    package: excel!
    fullName: delete()
    summary: >-
      Deletes the PivotTable.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-create-and-modify.yaml

          await Excel.run(async (context) => {
              context.workbook.worksheets.getItem("Pivot").pivotTables.getItem("Farm Sales").delete();

              await context.sync();
          });

          ```
  - name: load(options)
    uid: 'excel!Excel.PivotTable#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.PivotTableLoadOptions):
        Excel.PivotTable;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="excel!Excel.Interfaces.PivotTableLoadOptions:interface"
            />
      return:
        type: '<xref uid="excel!Excel.PivotTable:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.PivotTable#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTable;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.PivotTable:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.PivotTable#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PivotTable;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.PivotTable:class" />'
        description: ''
  - name: refresh()
    uid: 'excel!Excel.PivotTable#refresh:member(1)'
    package: excel!
    fullName: refresh()
    summary: >-
      Refreshes the PivotTable.


      \[ [API set: ExcelApi
      1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'refresh(): void;'
      return:
        type: void
        description: ''
  - name: 'set(properties, options)'
    uid: 'excel!Excel.PivotTable#set:member(1)'
    package: excel!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.PivotTable): void`
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.PivotTableUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: '<xref uid="excel!Excel.Interfaces.PivotTableUpdateData:interface" />'
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'excel!Excel.PivotTable#set:member(2)'
    package: excel!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.PivotTable): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="excel!Excel.PivotTable:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.PivotTable#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Excel.PivotTable object
      is an API object, the `toJSON` method returns a plain JavaScript object
      (typed as `Excel.Interfaces.PivotTableData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.PivotTableData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
