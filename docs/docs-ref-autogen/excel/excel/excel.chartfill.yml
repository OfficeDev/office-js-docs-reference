### YamlMime:TSType
name: Excel.ChartFill
uid: 'excel!Excel.ChartFill:class'
package: excel!
fullName: Excel.ChartFill
summary: Represents the fill formatting for a chart element.
remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'excel!Excel.ChartFill#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: solidColor
    uid: 'excel!Excel.ChartFill#solidColor:member'
    package: excel!
    fullName: solidColor
    summary: Sets and gets the uniform color fill formatting of a chart element.
    remarks: '\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'solidColor: string;'
      return:
        type: string
methods:
  - name: clear()
    uid: 'excel!Excel.ChartFill#clear:member(1)'
    package: excel!
    fullName: clear()
    summary: Clears the fill color of a chart element.
    remarks: |-
      \[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

      #### Examples

      ```typescript
      // Clear the line format of the major gridlines on the value axis of the chart named "Chart1".
      await Excel.run(async (context) => { 
          var gridlines = context.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").axes.valueAxis.majorGridlines;
          gridlines.format.line.clear();
          await context.sync();
          
          console.log("Chart Major Gridlines Format Cleared");
      });
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clear(): void;'
      return:
        type: void
        description: ''
  - name: load(options)
    uid: 'excel!Excel.ChartFill#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartFillLoadOptions): Excel.ChartFill;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="excel!Excel.Interfaces.ChartFillLoadOptions:interface" />'
      return:
        type: '<xref uid="excel!Excel.ChartFill:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.ChartFill#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartFill;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.ChartFill:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.ChartFill#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ChartFill;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.ChartFill:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'excel!Excel.ChartFill#set:member(1)'
    package: excel!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.ChartFillUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="excel!Excel.Interfaces.ChartFillUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'excel!Excel.ChartFill#set:member(2)'
    package: excel!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.ChartFill): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="excel!Excel.ChartFill:class" />'
      return:
        type: void
        description: ''
  - name: setSolidColor(color)
    uid: 'excel!Excel.ChartFill#setSolidColor:member(1)'
    package: excel!
    fullName: setSolidColor(color)
    summary: Sets the fill formatting of a chart element to a uniform color.
    remarks: >-
      \[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/10-chart/chart-point.yaml

      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Sample");

          let pointsCollection = sheet.charts.getItemAt(0).series.getItemAt(0).points;
          let point = pointsCollection.getItemAt(2);

          // Set color for chart point.
          point.format.fill.setSolidColor('red');

          await context.sync();        
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setSolidColor(color: string): void;'
      parameters:
        - id: color
          description: >-
            HTML color code representing the color of the background, in the form \#RRGGBB (e.g., "FFA500") or as a
            named HTML color (e.g., "orange").
          type: string
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.ChartFill#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.ChartFill object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.ChartFillData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartFillData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.ChartFillData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
