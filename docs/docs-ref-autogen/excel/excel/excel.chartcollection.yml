### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartCollection:class'
    summary: |-
      A collection of all the chart objects on a worksheet.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.ChartCollection
    fullName: Excel.ChartCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel!
    children:
      - 'excel!Excel.ChartCollection#add:member(1)'
      - 'excel!Excel.ChartCollection#add:member(2)'
      - 'excel!Excel.ChartCollection#context:member'
      - 'excel!Excel.ChartCollection#count:member'
      - 'excel!Excel.ChartCollection#getCount:member(1)'
      - 'excel!Excel.ChartCollection#getItem:member(1)'
      - 'excel!Excel.ChartCollection#getItemAt:member(1)'
      - 'excel!Excel.ChartCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.ChartCollection#items:member'
      - 'excel!Excel.ChartCollection#load:member(1)'
      - 'excel!Excel.ChartCollection#load:member(2)'
      - 'excel!Excel.ChartCollection#load:member(3)'
      - 'excel!Excel.ChartCollection#onActivated:member'
      - 'excel!Excel.ChartCollection#onAdded:member'
      - 'excel!Excel.ChartCollection#onDeactivated:member'
      - 'excel!Excel.ChartCollection#onDeleted:member'
      - 'excel!Excel.ChartCollection#toJSON:member(1)'
  - uid: 'excel!Excel.ChartCollection#add:member(1)'
    summary: |-
      Creates a new chart.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'add(type, sourceData, seriesBy)'
    fullName: 'add(type, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(type: Excel.ChartType, sourceData: Range, seriesBy?: Excel.ChartSeriesBy): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: type
          description: Represents the type of a chart. See Excel.ChartType for details.
          type:
            - 'excel!Excel.ChartType:enum'
        - id: sourceData
          description: The Range object corresponding to the source data.
          type:
            - 'excel!Excel.Range:class'
        - id: seriesBy
          description: >-
            Optional. Specifies the way columns or rows are used as data series on the chart. See Excel.ChartSeriesBy
            for details.
          type:
            - 'excel!Excel.ChartSeriesBy:enum'
  - uid: 'excel!Excel.ChartCollection#add:member(2)'
    summary: |-
      Creates a new chart.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'add(typeString, sourceData, seriesBy)'
    fullName: 'add(typeString, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        add(typeString: "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" |
        "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" |
        "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" |
        "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" |
        "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" |
        "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" |
        "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" |
        "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" |
        "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" |
        "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" |
        "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" |
        "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" |
        "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" |
        "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel",
        sourceData: Range, seriesBy?: "Auto" | "Columns" | "Rows"): Excel.Chart;
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: typeString
          description: Represents the type of a chart. See Excel.ChartType for details.
          type:
            - >-
              "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" |
              "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" |
              "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" |
              "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie"
              | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" |
              "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" |
              "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" |
              "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" |
              "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" |
              "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" |
              "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" |
              "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" |
              "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line"
              | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" |
              "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
        - id: sourceData
          description: The Range object corresponding to the source data.
          type:
            - 'excel!Excel.Range:class'
        - id: seriesBy
          description: >-
            Optional. Specifies the way columns or rows are used as data series on the chart. See Excel.ChartSeriesBy
            for details.
          type:
            - '"Auto" | "Columns" | "Rows"'
  - uid: 'excel!Excel.ChartCollection#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartCollection#count:member'
    summary: |-
      Returns the number of charts in the worksheet. Read-only.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartCollection#getCount:member(1)'
    summary: |-
      Returns the number of charts in the worksheet.

      \[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: 'excel!Excel.ChartCollection#getItem:member(1)'
    summary: |-
      Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: name
          description: Name of the chart to be retrieved.
          type:
            - string
  - uid: 'excel!Excel.ChartCollection#getItemAt:member(1)'
    summary: |-
      Gets a chart based on its position in the collection.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type:
            - number
  - uid: 'excel!Excel.ChartCollection#getItemOrNullObject:member(1)'
    summary: >-
      Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned. If
      the chart does not exist, will return a null object.


      \[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: name
          description: Name of the chart to be retrieved.
          type:
            - string
  - uid: 'excel!Excel.ChartCollection#items:member'
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Chart[];'
      return:
        type:
          - 'Excel.Chart[]'
  - uid: 'excel!Excel.ChartCollection#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Excel.ChartCollection` - Where option is a comma-delimited string or an array
      of strings that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): Excel.ChartCollection` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        load(option?: Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions):
        Excel.ChartCollection;
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!Excel.ChartCollection#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartCollection;'
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartCollection;'
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: 'excel!Excel.ChartCollection#onActivated:member'
    summary: |-
      Occurs when a chart is activated.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>
  - uid: 'excel!Excel.ChartCollection#onAdded:member'
    summary: |-
      Occurs when a new chart is added to the worksheet.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: onAdded
    fullName: onAdded
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>
  - uid: 'excel!Excel.ChartCollection#onDeactivated:member'
    summary: |-
      Occurs when a chart is deactivated.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>
  - uid: 'excel!Excel.ChartCollection#onDeleted:member'
    summary: |-
      Occurs when a chart is deleted.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: onDeleted
    fullName: onDeleted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>
  - uid: 'excel!Excel.ChartCollection#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original `Excel.ChartCollection` object is an API object, the `toJSON` method returns a
      plain JavaScript object (typed as `Excel.Interfaces.ChartCollectionData`<!-- -->) that contains an "items" array
      with shallow copies of any loaded properties from the collection's items.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartCollectionData:interface'
        description: ''
