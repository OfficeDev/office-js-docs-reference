### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorksheetCollection:class'
    summary: |-
      Represents a collection of worksheet objects that are part of the workbook.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.WorksheetCollection
    fullName: Excel.WorksheetCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel!
    children:
      - 'excel!Excel.WorksheetCollection#add:member(1)'
      - 'excel!Excel.WorksheetCollection#addFromBase64:member(1)'
      - 'excel!Excel.WorksheetCollection#addFromBase64:member(2)'
      - 'excel!Excel.WorksheetCollection#context:member'
      - 'excel!Excel.WorksheetCollection#getActiveWorksheet:member(1)'
      - 'excel!Excel.WorksheetCollection#getCount:member(1)'
      - 'excel!Excel.WorksheetCollection#getFirst:member(1)'
      - 'excel!Excel.WorksheetCollection#getItem:member(1)'
      - 'excel!Excel.WorksheetCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.WorksheetCollection#getLast:member(1)'
      - 'excel!Excel.WorksheetCollection#items:member'
      - 'excel!Excel.WorksheetCollection#load:member(1)'
      - 'excel!Excel.WorksheetCollection#load:member(2)'
      - 'excel!Excel.WorksheetCollection#load:member(3)'
      - 'excel!Excel.WorksheetCollection#onActivated:member'
      - 'excel!Excel.WorksheetCollection#onAdded:member'
      - 'excel!Excel.WorksheetCollection#onCalculated:member'
      - 'excel!Excel.WorksheetCollection#onChanged:member'
      - 'excel!Excel.WorksheetCollection#onColumnSorted:member'
      - 'excel!Excel.WorksheetCollection#onDeactivated:member'
      - 'excel!Excel.WorksheetCollection#onDeleted:member'
      - 'excel!Excel.WorksheetCollection#onFiltered:member'
      - 'excel!Excel.WorksheetCollection#onFormatChanged:member'
      - 'excel!Excel.WorksheetCollection#onRowHiddenChanged:member'
      - 'excel!Excel.WorksheetCollection#onRowSorted:member'
      - 'excel!Excel.WorksheetCollection#onSelectionChanged:member'
      - 'excel!Excel.WorksheetCollection#onSingleClicked:member'
      - 'excel!Excel.WorksheetCollection#toJSON:member(1)'
  - uid: 'excel!Excel.WorksheetCollection#add:member(1)'
    summary: >-
      Adds a new worksheet to the workbook. The worksheet will be added at the end of existing worksheets. If you wish
      to activate the newly added worksheet, call ".activate() on it.


      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: add(name)
    fullName: add(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name?: string): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: ''
      parameters:
        - id: name
          description: >-
            Optional. The name of the worksheet to be added. If specified, name should be unqiue. If not specified,
            Excel determines the name of the new worksheet.
          type:
            - string
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64:member(1)'
    summary: >-
      Inserts the specified worksheets of a workbook into the current workbook.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    fullName: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addFromBase64(base64File: string, sheetNamesToInsert?: string[], positionType?: Excel.WorksheetPositionType,
        relativeTo?: Worksheet | string): OfficeExtension.ClientResult<string[]>;
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: An array of ids corresponding to each newly inserted worksheet.
      parameters:
        - id: base64File
          description: Required. The base64-encoded string representing the source workbook file.
          type:
            - string
        - id: sheetNamesToInsert
          description: >-
            Optional. The names of individual worksheets to insert. By default, all the worksheets from the source
            workbook are inserted.
          type:
            - 'string[]'
        - id: positionType
          description: >-
            Optional. Where in the current workbook the new worksheets will be inserted. See Excel.WorksheetPositionType
            for details. Default is "Start".
          type:
            - 'excel!Excel.WorksheetPositionType:enum'
        - id: relativeTo
          description: >-
            Optional. The worksheet in the current workbook that is referenced for the positionType parameter. Default
            is null and, based on positionType, it will insert worksheets at the start or end of the current workbook.
          type:
            - Worksheet | string
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64:member(2)'
    summary: >-
      Inserts the specified worksheets of a workbook into the current workbook.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    fullName: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addFromBase64(base64File: string, sheetNamesToInsert?: string[], positionType?: "None" | "Before" | "After" |
        "Beginning" | "End", relativeTo?: Worksheet | string): OfficeExtension.ClientResult<string[]>;
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: An array of ids corresponding to each newly inserted worksheet.
      parameters:
        - id: base64File
          description: Required. The base64-encoded string representing the source workbook file.
          type:
            - string
        - id: sheetNamesToInsert
          description: >-
            Optional. The names of individual worksheets to insert. By default, all the worksheets from the source
            workbook are inserted.
          type:
            - 'string[]'
        - id: positionType
          description: >-
            Optional. Where in the current workbook the new worksheets will be inserted. See Excel.WorksheetPositionType
            for details. Default is "Start".
          type:
            - '"None" | "Before" | "After" | "Beginning" | "End"'
        - id: relativeTo
          description: >-
            Optional. The worksheet in the current workbook that is referenced for the positionType parameter. Default
            is null and, based on positionType, it will insert worksheets at the start or end of the current workbook.
          type:
            - Worksheet | string
  - uid: 'excel!Excel.WorksheetCollection#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.WorksheetCollection#getActiveWorksheet:member(1)'
    summary: |-
      Gets the currently active worksheet in the workbook.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getActiveWorksheet()
    fullName: getActiveWorksheet()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveWorksheet(): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: ''
  - uid: 'excel!Excel.WorksheetCollection#getCount:member(1)'
    summary: |-
      Gets the number of worksheets in the collection.

      \[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getCount(visibleOnly)
    fullName: getCount(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(visibleOnly?: boolean): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
      parameters:
        - id: visibleOnly
          description: 'Optional. If true, considers only visible worksheets, skipping over any hidden ones.'
          type:
            - boolean
  - uid: 'excel!Excel.WorksheetCollection#getFirst:member(1)'
    summary: |-
      Gets the first worksheet in the collection.

      \[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getFirst(visibleOnly)
    fullName: getFirst(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: ''
      parameters:
        - id: visibleOnly
          description: 'Optional. If true, considers only visible worksheets, skipping over any hidden ones.'
          type:
            - boolean
  - uid: 'excel!Excel.WorksheetCollection#getItem:member(1)'
    summary: |-
      Gets a worksheet object using its Name or ID.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: ''
      parameters:
        - id: key
          description: The Name or ID of the worksheet.
          type:
            - string
  - uid: 'excel!Excel.WorksheetCollection#getItemOrNullObject:member(1)'
    summary: |-
      Gets a worksheet object using its Name or ID. If the worksheet does not exist, will return a null object.

      \[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: ''
      parameters:
        - id: key
          description: The Name or ID of the worksheet.
          type:
            - string
  - uid: 'excel!Excel.WorksheetCollection#getLast:member(1)'
    summary: |-
      Gets the last worksheet in the collection.

      \[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getLast(visibleOnly)
    fullName: getLast(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLast(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: ''
      parameters:
        - id: visibleOnly
          description: 'Optional. If true, considers only visible worksheets, skipping over any hidden ones.'
          type:
            - boolean
  - uid: 'excel!Excel.WorksheetCollection#items:member'
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Worksheet[];'
      return:
        type:
          - 'Excel.Worksheet[]'
  - uid: 'excel!Excel.WorksheetCollection#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Excel.WorksheetCollection` - Where option is a comma-delimited string or an
      array of strings that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): Excel.WorksheetCollection` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetCollection` -
      Only available on collection types. It is similar to the preceding signature. Option.top specifies the maximum
      number of collection items that can be included in the result. Option.skip specifies the number of items that are
      to be skipped and not included in the result. If option.top is specified, the result set will start after skipping
      the specified number of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        load(option?: Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions):
        Excel.WorksheetCollection;
      return:
        type:
          - 'excel!Excel.WorksheetCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!Excel.WorksheetCollection#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetCollection;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorksheetCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.WorksheetCollection;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: 'excel!Excel.WorksheetCollection#onActivated:member'
    summary: |-
      Occurs when any worksheet in the workbook is activated.

      \[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
  - uid: 'excel!Excel.WorksheetCollection#onAdded:member'
    summary: |-
      Occurs when a new worksheet is added to the workbook.

      \[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: onAdded
    fullName: onAdded
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>
  - uid: 'excel!Excel.WorksheetCollection#onCalculated:member'
    summary: |-
      Occurs when any worksheet in the workbook is calculated.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: onCalculated
    fullName: onCalculated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onCalculated: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>
  - uid: 'excel!Excel.WorksheetCollection#onChanged:member'
    summary: |-
      Occurs when any worksheet in the workbook is changed.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>
  - uid: 'excel!Excel.WorksheetCollection#onColumnSorted:member'
    summary: >-
      Occurs when sorting on columns.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: onColumnSorted
    fullName: onColumnSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onColumnSorted: OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>
  - uid: 'excel!Excel.WorksheetCollection#onDeactivated:member'
    summary: |-
      Occurs when any worksheet in the workbook is deactivated.

      \[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
  - uid: 'excel!Excel.WorksheetCollection#onDeleted:member'
    summary: |-
      Occurs when a worksheet is deleted from the workbook.

      \[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: onDeleted
    fullName: onDeleted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>
  - uid: 'excel!Excel.WorksheetCollection#onFiltered:member'
    summary: >-
      Occurs when any worksheet's filter is applied in the workbook.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: onFiltered
    fullName: onFiltered
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFiltered: OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>
  - uid: 'excel!Excel.WorksheetCollection#onFormatChanged:member'
    summary: |-
      Occurs when any worksheet in the workbook has format changed.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: onFormatChanged
    fullName: onFormatChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFormatChanged: OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>
  - uid: 'excel!Excel.WorksheetCollection#onRowHiddenChanged:member'
    summary: >-
      Occurs when any worksheet in the workbook has row hidden state changed.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: onRowHiddenChanged
    fullName: onRowHiddenChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onRowHiddenChanged: OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>
  - uid: 'excel!Excel.WorksheetCollection#onRowSorted:member'
    summary: >-
      Occurs when sorting on rows.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: onRowSorted
    fullName: onRowSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onRowSorted: OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>
  - uid: 'excel!Excel.WorksheetCollection#onSelectionChanged:member'
    summary: |-
      Occurs when the selection changes on any worksheet.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>
  - uid: 'excel!Excel.WorksheetCollection#onSingleClicked:member'
    summary: >-
      Occurs when left-clicked/tapped operation happens in the worksheet collection. This event will not be fired when
      clicking in the following cases: - The user drags the mouse for multi-selection. - The user selects a cell in the
      mode when cell arguments are selected for formula references.


      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    name: onSingleClicked
    fullName: onSingleClicked
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSingleClicked: OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>
  - uid: 'excel!Excel.WorksheetCollection#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original `Excel.WorksheetCollection` object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetCollectionData`<!-- -->) that contains an
      "items" array with shallow copies of any loaded properties from the collection's items.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorksheetCollectionData:interface'
        description: ''
