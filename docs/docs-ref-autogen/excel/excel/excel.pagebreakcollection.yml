### YamlMime:UniversalReference
items:
  - uid: excel.Excel.PageBreakCollection
    summary: '\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    name: Excel.PageBreakCollection
    fullName: Excel.PageBreakCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.PageBreakCollection.add
      - excel.Excel.PageBreakCollection.context
      - excel.Excel.PageBreakCollection.getCount
      - excel.Excel.PageBreakCollection.getItem
      - excel.Excel.PageBreakCollection.items
      - excel.Excel.PageBreakCollection.load
      - excel.Excel.PageBreakCollection.load_1
      - excel.Excel.PageBreakCollection.load_2
      - excel.Excel.PageBreakCollection.removePageBreaks
      - excel.Excel.PageBreakCollection.toJSON
  - uid: excel.Excel.PageBreakCollection.add
    summary: |-
      Adds a page break before the top-left cell of the range specified.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: add(pageBreakRange)
    fullName: add(pageBreakRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(pageBreakRange: Range | string): Excel.PageBreak;'
      return:
        type:
          - excel.Excel.PageBreak
        description: |-


          #### Examples

          ```typescript
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.horizontalPageBreaks.add("A21:E21");
              await context.sync();
          });
          ```
      parameters:
        - id: pageBreakRange
          description: The range immediately after the page break to be added.
          type:
            - Range | string
  - uid: excel.Excel.PageBreakCollection.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.PageBreakCollection.getCount
    summary: |-
      Gets the number of page breaks in the collection.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.PageBreakCollection.getItem
    summary: |-
      Gets a page break object via the index.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number): Excel.PageBreak;'
      return:
        type:
          - excel.Excel.PageBreak
        description: ''
      parameters:
        - id: index
          description: Index of the page break.
          type:
            - number
  - uid: excel.Excel.PageBreakCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PageBreak[];'
      return:
        type:
          - 'Excel.PageBreak[]'
  - uid: excel.Excel.PageBreakCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Excel.PageBreakCollection` - Where option is a comma-delimited string or an
      array of strings that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): Excel.PageBreakCollection` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PageBreakCollection` -
      Only available on collection types. It is similar to the preceding signature. Option.top specifies the maximum
      number of collection items that can be included in the result. Option.skip specifies the number of items that are
      to be skipped and not included in the result. If option.top is specified, the result set will start after skipping
      the specified number of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        load(option?: Excel.Interfaces.PageBreakCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions):
        Excel.PageBreakCollection;
      return:
        type:
          - excel.Excel.PageBreakCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.PageBreakCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.PageBreakCollection.load_1
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PageBreakCollection;'
      return:
        type:
          - excel.Excel.PageBreakCollection
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel.Excel.PageBreakCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.PageBreakCollection;'
      return:
        type:
          - excel.Excel.PageBreakCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.PageBreakCollection.removePageBreaks
    summary: |-
      Resets all manual page breaks in the collection.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: removePageBreaks()
    fullName: removePageBreaks()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removePageBreaks(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.PageBreakCollection.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original `Excel.PageBreakCollection` object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `Excel.Interfaces.PageBreakCollectionData`<!-- -->) that contains an
      "items" array with shallow copies of any loaded properties from the collection's items.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PageBreakCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.PageBreakCollectionData
        description: ''
