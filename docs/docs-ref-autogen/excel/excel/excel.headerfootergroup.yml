### YamlMime:UniversalReference
items:
  - uid: excel.Excel.HeaderFooterGroup
    summary: '\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    name: Excel.HeaderFooterGroup
    fullName: Excel.HeaderFooterGroup
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.HeaderFooterGroup.context
      - excel.Excel.HeaderFooterGroup.defaultForAllPages
      - excel.Excel.HeaderFooterGroup.evenPages
      - excel.Excel.HeaderFooterGroup.firstPage
      - excel.Excel.HeaderFooterGroup.load
      - excel.Excel.HeaderFooterGroup.load_1
      - excel.Excel.HeaderFooterGroup.load_2
      - excel.Excel.HeaderFooterGroup.oddPages
      - excel.Excel.HeaderFooterGroup.set
      - excel.Excel.HeaderFooterGroup.set_1
      - excel.Excel.HeaderFooterGroup.state
      - excel.Excel.HeaderFooterGroup.toJSON
      - excel.Excel.HeaderFooterGroup.useSheetMargins
      - excel.Excel.HeaderFooterGroup.useSheetScale
  - uid: excel.Excel.HeaderFooterGroup.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.HeaderFooterGroup.defaultForAllPages
    summary: |-
      The general header/footer, used for all pages unless even/odd or first page is specified.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: defaultForAllPages
    fullName: defaultForAllPages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly defaultForAllPages: Excel.HeaderFooter;'
      return:
        type:
          - excel.Excel.HeaderFooter
  - uid: excel.Excel.HeaderFooterGroup.evenPages
    summary: |-
      The header/footer to use for even pages, odd header/footer needs to be specified for odd pages.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: evenPages
    fullName: evenPages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly evenPages: Excel.HeaderFooter;'
      return:
        type:
          - excel.Excel.HeaderFooter
  - uid: excel.Excel.HeaderFooterGroup.firstPage
    summary: |-
      The first page header/footer, for all other pages general or even/odd is used.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: firstPage
    fullName: firstPage
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly firstPage: Excel.HeaderFooter;'
      return:
        type:
          - excel.Excel.HeaderFooter
  - uid: excel.Excel.HeaderFooterGroup.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Excel.HeaderFooterGroup` - Where option is a comma-delimited string or an array
      of strings that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): Excel.HeaderFooterGroup` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.HeaderFooterGroup` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.HeaderFooterGroupLoadOptions): Excel.HeaderFooterGroup;'
      return:
        type:
          - excel.Excel.HeaderFooterGroup
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.HeaderFooterGroupLoadOptions
  - uid: excel.Excel.HeaderFooterGroup.load_1
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.HeaderFooterGroup;'
      return:
        type:
          - excel.Excel.HeaderFooterGroup
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel.Excel.HeaderFooterGroup.load_2
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.HeaderFooterGroup;'
      return:
        type:
          - excel.Excel.HeaderFooterGroup
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and
            propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.HeaderFooterGroup.oddPages
    summary: |-
      The header/footer to use for odd pages, even header/footer needs to be specified for even pages.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: oddPages
    fullName: oddPages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly oddPages: Excel.HeaderFooter;'
      return:
        type:
          - excel.Excel.HeaderFooter
  - uid: excel.Excel.HeaderFooterGroup.set
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.HeaderFooterGroup): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.HeaderFooterGroupUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type:
            - Interfaces.HeaderFooterGroupUpdateData
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.HeaderFooterGroup.set_1
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.HeaderFooterGroup): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.HeaderFooterGroup
  - uid: excel.Excel.HeaderFooterGroup.state
    summary: |-
      Gets or sets the state of which headers/footers are set. See Excel.HeaderFooterState for details.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: state
    fullName: state
    langs:
      - typeScript
    type: property
    syntax:
      content: 'state: Excel.HeaderFooterState | "Default" | "FirstAndDefault" | "OddAndEven" | "FirstOddAndEven";'
      return:
        type:
          - Excel.HeaderFooterState | "Default" | "FirstAndDefault" | "OddAndEven" | "FirstOddAndEven"
  - uid: excel.Excel.HeaderFooterGroup.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.HeaderFooterGroup object is an API object, the `toJSON` method returns a
      plain JavaScript object (typed as `Excel.Interfaces.HeaderFooterGroupData`<!-- -->) that contains shallow copies
      of any loaded child properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.HeaderFooterGroupData;'
      return:
        type:
          - excel.Excel.Interfaces.HeaderFooterGroupData
        description: ''
  - uid: excel.Excel.HeaderFooterGroup.useSheetMargins
    summary: >-
      Gets or sets a flag indicating if headers/footers are aligned with the page margins set in the page layout options
      for the worksheet.


      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: useSheetMargins
    fullName: useSheetMargins
    langs:
      - typeScript
    type: property
    syntax:
      content: 'useSheetMargins: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.HeaderFooterGroup.useSheetScale
    summary: >-
      Gets or sets a flag indicating if headers/footers should be scaled by the page percentage scale set in the page
      layout options for the worksheet.


      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: useSheetScale
    fullName: useSheetScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'useSheetScale: boolean;'
      return:
        type:
          - boolean
