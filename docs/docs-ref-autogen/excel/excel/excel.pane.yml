### YamlMime:TSType
name: Excel.Pane
uid: excel!Excel.Pane:class
package: excel!
fullName: Excel.Pane
summary: Represents a pane, such as a frozen or split pane, in an Excel window.
remarks: >-
  \[ [API set: ExcelApi BETA (PREVIEW
  ONLY)](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

isPreview: true
isDeprecated: false
type: class
properties:
  - name: context
    uid: excel!Excel.Pane#context:member
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: <xref uid="excel!Excel.RequestContext:class" />
  - name: index
    uid: excel!Excel.Pane#index:member
    package: excel!
    fullName: index
    summary: Returns index of the pane.
    remarks: >-
      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/excel/excel-api-requirement-sets)
      \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'readonly index: number;'
      return:
        type: number
methods:
  - name: load(options)
    uid: excel!Excel.Pane#load:member(1)
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.PaneLoadOptions): Excel.Pane;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: <xref uid="excel!Excel.Interfaces.PaneLoadOptions:interface" />
      return:
        type: <xref uid="excel!Excel.Pane:class" />
        description: ''
  - name: load(propertyNames)
    uid: excel!Excel.Pane#load:member(2)
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Pane;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: string | string[]
      return:
        type: <xref uid="excel!Excel.Pane:class" />
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: excel!Excel.Pane#load:member(3)
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Pane;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: <xref uid="excel!Excel.Pane:class" />
        description: ''
  - name: toJSON()
    uid: excel!Excel.Pane#toJSON:member(1)
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that's passed to it.) Whereas the original `Excel.Pane` object is
      an API object, the `toJSON` method returns a plain JavaScript object
      (typed as `Excel.Interfaces.PaneData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.PaneData;'
      return:
        type: <xref uid="excel!Excel.Interfaces.PaneData:interface" />
        description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
