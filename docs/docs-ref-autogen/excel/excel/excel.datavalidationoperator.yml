### YamlMime:TSEnum
name: Excel.DataValidationOperator
uid: 'excel!Excel.DataValidationOperator:enum'
package: excel!
fullName: Excel.DataValidationOperator
summary: Represents the data validation operator enum.
remarks: >-
  \[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


  #### Examples


  ```typescript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/22-data-validation/data-validation.yaml

  await Excel.run(async (context) => {
      const sheet = context.workbook.worksheets.getItem("Decision");
      const rankingRange = sheet.tables.getItem("NameOptionsTable").columns.getItem("Ranking").getDataBodyRange();

      // When you are developing, it is a good practice to
      // clear the dataValidation object with each run of your code.
      rankingRange.dataValidation.clear();

      let greaterThanZeroRule = {
          wholeNumber: {
              formula1: 0,
              operator: Excel.DataValidationOperator.greaterThan
          }
      };
      rankingRange.dataValidation.rule = greaterThanZeroRule;

      rankingRange.dataValidation.prompt = {
          message: "Please enter a positive number.",
          showPrompt: true,
          title: "Positive numbers only."
      };

      rankingRange.dataValidation.errorAlert = {
          message: "Sorry, only positive numbers are allowed",
          showAlert: true,
          style: "Stop",
          title: "Negative Number Entered"
      };

      await context.sync();
  });

  ```
isPreview: false
isDeprecated: false
fields:
  - name: between
    uid: 'excel!Excel.DataValidationOperator.between:member'
    package: excel!
    summary: '* \[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    value: '"Between"'
  - name: equalTo
    uid: 'excel!Excel.DataValidationOperator.equalTo:member'
    package: excel!
    summary: '* \[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    value: '"EqualTo"'
  - name: greaterThan
    uid: 'excel!Excel.DataValidationOperator.greaterThan:member'
    package: excel!
    summary: '* \[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    value: '"GreaterThan"'
  - name: greaterThanOrEqualTo
    uid: 'excel!Excel.DataValidationOperator.greaterThanOrEqualTo:member'
    package: excel!
    summary: '* \[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    value: '"GreaterThanOrEqualTo"'
  - name: lessThan
    uid: 'excel!Excel.DataValidationOperator.lessThan:member'
    package: excel!
    summary: '* \[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    value: '"LessThan"'
  - name: lessThanOrEqualTo
    uid: 'excel!Excel.DataValidationOperator.lessThanOrEqualTo:member'
    package: excel!
    summary: '* \[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    value: '"LessThanOrEqualTo"'
  - name: notBetween
    uid: 'excel!Excel.DataValidationOperator.notBetween:member'
    package: excel!
    summary: '* \[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    value: '"NotBetween"'
  - name: notEqualTo
    uid: 'excel!Excel.DataValidationOperator.notEqualTo:member'
    package: excel!
    summary: '* \[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    value: '"NotEqualTo"'
