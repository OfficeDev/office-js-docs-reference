### YamlMime:TSType
name: Excel.LinkedEntityCellValue
uid: 'excel!Excel.LinkedEntityCellValue:interface'
package: excel!
fullName: Excel.LinkedEntityCellValue
summary: Represents a value whose properties derive from a service.
remarks: >-
  \[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
isPreview: true
isDeprecated: false
type: interface
properties:
  - name: basicType
    uid: 'excel!Excel.LinkedEntityCellValue#basicType:member'
    package: excel!
    fullName: basicType
    summary: Represents the value that would be returned by `Range.valueTypes` for a cell with this value.
    remarks: >-
      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'basicType?: RangeValueType.error | "Error";'
      return:
        type: '<xref uid="excel!Excel.RangeValueType.error:member" /> | "Error"'
  - name: basicValue
    uid: 'excel!Excel.LinkedEntityCellValue#basicValue:member'
    package: excel!
    fullName: basicValue
    summary: Represents the value that would be returned by `Range.values` for a cell with this value.
    remarks: >-
      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'basicValue?: "#VALUE!";'
      return:
        type: '"#VALUE!"'
  - name: id
    uid: 'excel!Excel.LinkedEntityCellValue#id:member'
    package: excel!
    fullName: id
    summary: Represents the service source that provided the information in this value.
    remarks: >-
      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'id: LinkedEntityId;'
      return:
        type: '<xref uid="excel!Excel.LinkedEntityId:interface" />'
  - name: properties
    uid: 'excel!Excel.LinkedEntityCellValue#properties:member'
    package: excel!
    fullName: properties
    summary: Represents the properties of this entity and their metadata.
    remarks: >-
      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    isDeprecated: false
    syntax:
      content: |-
        properties?: {
                    [key: string]: ArrayCellValue | BooleanCellValue | DoubleCellValue | EntityCellValue | EmptyCellValue | BlockedErrorCellValue | BusyErrorCellValue | CalcErrorCellValue | ConnectErrorCellValue | Div0ErrorCellValue | FieldErrorCellValue | GettingDataErrorCellValue | NotAvailableErrorCellValue | NameErrorCellValue | NullErrorCellValue | NumErrorCellValue | RefErrorCellValue | SpillErrorCellValue | ValueErrorCellValue | FormattedNumberCellValue | LinkedEntityCellValue | StringCellValue | ValueTypeNotAvailableCellValue | WebImageCellValue & {
                    writable?: boolean;
                    writableNote?: string;
                } & {
                        propertyMetadata?: CellValuePropertyMetadata;
                    };
                };
      return:
        type: |-
          {
                      [key: string]: <xref uid="excel!Excel.ArrayCellValue:interface" /> | <xref uid="excel!Excel.BooleanCellValue:interface" /> | <xref uid="excel!Excel.DoubleCellValue:interface" /> | <xref uid="excel!Excel.EntityCellValue:interface" /> | <xref uid="excel!Excel.EmptyCellValue:interface" /> | <xref uid="excel!Excel.BlockedErrorCellValue:interface" /> | <xref uid="excel!Excel.BusyErrorCellValue:interface" /> | <xref uid="excel!Excel.CalcErrorCellValue:interface" /> | <xref uid="excel!Excel.ConnectErrorCellValue:interface" /> | <xref uid="excel!Excel.Div0ErrorCellValue:interface" /> | <xref uid="excel!Excel.FieldErrorCellValue:interface" /> | <xref uid="excel!Excel.GettingDataErrorCellValue:interface" /> | <xref uid="excel!Excel.NotAvailableErrorCellValue:interface" /> | <xref uid="excel!Excel.NameErrorCellValue:interface" /> | <xref uid="excel!Excel.NullErrorCellValue:interface" /> | <xref uid="excel!Excel.NumErrorCellValue:interface" /> | <xref uid="excel!Excel.RefErrorCellValue:interface" /> | <xref uid="excel!Excel.SpillErrorCellValue:interface" /> | <xref uid="excel!Excel.ValueErrorCellValue:interface" /> | <xref uid="excel!Excel.FormattedNumberCellValue:interface" /> | <xref uid="excel!Excel.LinkedEntityCellValue:interface" /> | <xref uid="excel!Excel.StringCellValue:interface" /> | <xref uid="excel!Excel.ValueTypeNotAvailableCellValue:interface" /> | <xref uid="excel!Excel.WebImageCellValue:interface" /> & {
                      writable?: boolean;
                      writableNote?: string;
                  } & {
                          propertyMetadata?: <xref uid="excel!Excel.CellValuePropertyMetadata:interface" />;
                      };
                  }
  - name: provider
    uid: 'excel!Excel.LinkedEntityCellValue#provider:member'
    package: excel!
    fullName: provider
    summary: >-
      Represents information that describes the service which provided the image. This information can be used for
      branding in entity cards.
    remarks: >-
      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'provider?: CellValueProviderAttributes;'
      return:
        type: '<xref uid="excel!Excel.CellValueProviderAttributes:interface" />'
  - name: text
    uid: 'excel!Excel.LinkedEntityCellValue#text:member'
    package: excel!
    fullName: text
    summary: Represents the text shown when a cell with this value is rendered.
    remarks: >-
      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'text?: string;'
      return:
        type: string
  - name: type
    uid: 'excel!Excel.LinkedEntityCellValue#type:member'
    package: excel!
    fullName: type
    summary: Represents the type of this cell value.
    remarks: >-
      \[ [API set: ExcelApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'type: CellValueType.linkedEntity | "LinkedEntity";'
      return:
        type: '<xref uid="excel!Excel.CellValueType.linkedEntity:member" /> | "LinkedEntity"'
