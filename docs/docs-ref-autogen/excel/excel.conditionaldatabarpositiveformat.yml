### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ConditionalDataBarPositiveFormat
    summary: |-
      Represents a conditional format DataBar Format for the positive side of the data bar.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.ConditionalDataBarPositiveFormat
    fullName: Excel.ConditionalDataBarPositiveFormat
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.ConditionalDataBarPositiveFormat.borderColor
      - excel.Excel.ConditionalDataBarPositiveFormat.context
      - excel.Excel.ConditionalDataBarPositiveFormat.fillColor
      - excel.Excel.ConditionalDataBarPositiveFormat.gradientFill
      - excel.Excel.ConditionalDataBarPositiveFormat.load
      - excel.Excel.ConditionalDataBarPositiveFormat.toJSON
  - uid: excel.Excel.ConditionalDataBarPositiveFormat.borderColor
    summary: >-
      HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML
      color (e.g. "orange"). "" (empty string) if no border is present or set.


      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: borderColor
    fullName: borderColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderColor: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ConditionalDataBarPositiveFormat.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.ConditionalDataBarPositiveFormat.fillColor
    summary: >-
      HTML color code representing the fill color, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g.
      "orange").


      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: fillColor
    fullName: fillColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'fillColor: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ConditionalDataBarPositiveFormat.gradientFill
    summary: |-
      Boolean representation of whether or not the DataBar has a gradient.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: gradientFill
    fullName: gradientFill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientFill: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ConditionalDataBarPositiveFormat.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: { select?: string; expand?: string; }): Excel.ConditionalDataBarPositiveFormat` - Where
      option.select is a comma-delimited string that specifies the properties to load, and options.expand is a
      comma-delimited string that specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }):
      Excel.ConditionalDataBarPositiveFormat` - Only available on collection types. It is similar to the preceding
      signature. Option.top specifies the maximum number of collection items that can be included in the result.
      Option.skip specifies the number of items that are to be skipped and not included in the result. If option.top is
      specified, the result set will start after skipping the specified number of items.
    name: load(option)
    fullName: load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): Excel.ConditionalDataBarPositiveFormat;'
      return:
        type:
          - excel.Excel.ConditionalDataBarPositiveFormat
        description: ''
      parameters:
        - id: option
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel.Excel.ConditionalDataBarPositiveFormat.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.ConditionalDataBarPositiveFormat object is an API object, the `toJSON`
      method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalDataBarPositiveFormatData`<!--
      -->) that contains shallow copies of any loaded child properties from the original object.
    name: toJSON()
    fullName: toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalDataBarPositiveFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.ConditionalDataBarPositiveFormatData
        description: ''
