### YamlMime:UniversalReference
items:
  - uid: excel.Excel.RangeFont
    summary: |-
      This object represents the font attributes (font name, font size, color, etc.) for an object.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.RangeFont
    fullName: excel.Excel.RangeFont
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.RangeFont.bold
      - excel.Excel.RangeFont.color
      - excel.Excel.RangeFont.italic
      - excel.Excel.RangeFont.load
      - excel.Excel.RangeFont.name
      - excel.Excel.RangeFont.set
      - excel.Excel.RangeFont.size
      - excel.Excel.RangeFont.toJSON
      - excel.Excel.RangeFont.underline
  - uid: excel.Excel.RangeFont.bold
    summary: |-
      Represents the bold status of font.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: bold
    fullName: excel.Excel.RangeFont.bold
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bold: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.RangeFont.color
    summary: |-
      HTML color code representation of the text color. E.g. \#FF0000 represents Red.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: color
    fullName: excel.Excel.RangeFont.color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeFont.italic
    summary: |-
      Represents the italic status of the font.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: italic
    fullName: excel.Excel.RangeFont.italic
    langs:
      - typeScript
    type: property
    syntax:
      content: 'italic: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.RangeFont.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: excel.Excel.RangeFont.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeFontLoadOptions): Excel.RangeFont;'
      return:
        type:
          - Excel.RangeFont
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.RangeFontLoadOptions
    remarks: |


      #### Examples

      ```javascript
      Excel.run(function (ctx) { 
          var sheetName = "Sheet1";
          var rangeAddress = "F:G";
          var worksheet = ctx.workbook.worksheets.getItem(sheetName);
          var range = worksheet.getRange(rangeAddress);
          var rangeFont = range.format.font;
          rangeFont.load('name');
          return ctx.sync().then(function() {
              console.log(rangeFont.name);
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```

      ```javascript
      // The example below sets font name. 
      Excel.run(function (ctx) { 
          var sheetName = "Sheet1";
          var rangeAddress = "F:G";
          var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
          range.format.font.name = 'Times New Roman';
          return ctx.sync(); 
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
  - uid: excel.Excel.RangeFont.name
    summary: |-
      Font name (e.g. "Calibri")

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: name
    fullName: excel.Excel.RangeFont.name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeFont.set
    summary: 'Sets multiple properties on the object at the same time, based on JSON input.'
    name: 'set(properties, options)'
    fullName: excel.Excel.RangeFont.set
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeFontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Interfaces.RangeFontUpdateData
        - id: options
          description: ''
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.RangeFont.size
    summary: |-
      Font size.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: size
    fullName: excel.Excel.RangeFont.size
    langs:
      - typeScript
    type: property
    syntax:
      content: 'size: number;'
      return:
        type:
          - number
  - uid: excel.Excel.RangeFont.toJSON
    name: toJSON()
    fullName: excel.Excel.RangeFont.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeFontData;'
      return:
        type:
          - Excel.Interfaces.RangeFontData
        description: ''
  - uid: excel.Excel.RangeFont.underline
    summary: |-
      Type of underline applied to the font. See Excel.RangeUnderlineStyle for details.

      \[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]
    name: underline
    fullName: excel.Excel.RangeFont.underline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'underline: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant";'
      return:
        type:
          - Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"
