### YamlMime:UniversalReference
items:
  - uid: 'word!Word.SectionCollection:class'
    summary: |-
      Contains the collection of the document's [Word.Section](xref:word!Word.Section:class) objects.

      \[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: Word.SectionCollection
    fullName: Word.SectionCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.SectionCollection#context:member'
      - 'word!Word.SectionCollection#items:member'
      - 'word!Word.SectionCollection#load:member(1)'
      - 'word!Word.SectionCollection#load:member(2)'
      - 'word!Word.SectionCollection#load:member(3)'
      - 'word!Word.SectionCollection#toJSON:member(1)'
      - 'word!Word.SectionCollection#track:member(1)'
      - 'word!Word.SectionCollection#untrack:member(1)'
  - uid: 'word!Word.SectionCollection#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.SectionCollection#items:member'
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Word.Section[];'
      return:
        type:
          - 'word!Word.SectionCollection#items~0:complex'
  - uid: 'word!Word.SectionCollection#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        load(options?: Word.Interfaces.SectionCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions):
        Word.SectionCollection;
      return:
        type:
          - 'word!Word.SectionCollection:class'
        description: ''
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type:
            - 'word!Word.SectionCollection#load~0:complex'
  - uid: 'word!Word.SectionCollection#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.SectionCollection;'
      return:
        type:
          - 'word!Word.SectionCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'word!Word.SectionCollection#load:member(3)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.SectionCollection;'
      return:
        type:
          - 'word!Word.SectionCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'word!Word.SectionCollection#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original `Word.SectionCollection` object is an API object, the `toJSON` method returns
      a plain JavaScript object (typed as `Word.Interfaces.SectionCollectionData`<!-- -->) that contains an "items"
      array with shallow copies of any loaded properties from the collection's items.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.SectionCollectionData;'
      return:
        type:
          - 'word!Word.Interfaces.SectionCollectionData:interface'
        description: ''
  - uid: 'word!Word.SectionCollection#track:member(1)'
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for `context.trackedObjects.add(thisObject)`<!-- -->. If you are using this object across `.sync` calls and
      outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property
      or invoking a method on the object, you needed to have added the object to the tracked object collection when the
      object was first created.
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.SectionCollection;'
      return:
        type:
          - 'word!Word.SectionCollection:class'
        description: ''
  - uid: 'word!Word.SectionCollection#untrack:member(1)'
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      `context.trackedObjects.remove(thisObject)`<!-- -->. Having many tracked objects slows down the host application,
      so please remember to free any objects you add, once you're done using them. You will need to call
      `context.sync()` before the memory release takes effect.
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.SectionCollection;'
      return:
        type:
          - 'word!Word.SectionCollection:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.SectionCollection#items~0:complex'
    name: 'Word.Section[]'
    fullName: 'Word.Section[]'
    spec.typeScript:
      - uid: 'word!Word.Section:class'
        name: Word.Section
        fullName: Word.Section
      - name: '[]'
        fullName: '[]'
  - uid: 'word!Word.SectionCollection:class'
    name: Word.SectionCollection
  - uid: 'word!Word.SectionCollection#load~0:complex'
    name: Word.Interfaces.SectionCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
    fullName: Word.Interfaces.SectionCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'word!Word.Interfaces.SectionCollectionLoadOptions:interface'
        name: Word.Interfaces.SectionCollectionLoadOptions
        fullName: Word.Interfaces.SectionCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'word!Word.Interfaces.CollectionLoadOptions:interface'
        name: Word.Interfaces.CollectionLoadOptions
        fullName: Word.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'word!Word.Interfaces.SectionCollectionData:interface'
    name: Word.Interfaces.SectionCollectionData
