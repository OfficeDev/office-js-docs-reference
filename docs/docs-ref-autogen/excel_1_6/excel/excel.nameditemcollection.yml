### YamlMime:TSType
name: Excel.NamedItemCollection
uid: 'excel!Excel.NamedItemCollection:class'
package: excel!
fullName: Excel.NamedItemCollection
summary: >-
  A collection of all the NamedItem objects that are part of the workbook or
  worksheet, depending on how it was reached.


  \[ [API set: ExcelApi
  1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'excel!Excel.NamedItemCollection#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: items
    uid: 'excel!Excel.NamedItemCollection#items:member'
    package: excel!
    fullName: items
    summary: Gets the loaded child items in this collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly items: Excel.NamedItem[];'
      return:
        type: '<xref uid="excel!Excel.NamedItem:class" />[]'
methods:
  - name: 'add(name, reference, comment)'
    uid: 'excel!Excel.NamedItemCollection#add:member(1)'
    package: excel!
    fullName: 'add(name, reference, comment)'
    summary: >-
      Adds a new name to the collection of the given scope.


      \[ [API set: ExcelApi
      1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        add(name: string, reference: Range | string, comment?: string):
        Excel.NamedItem;
      parameters:
        - id: name
          description: The name of the named item.
          type: string
        - id: reference
          description: The formula or the range that the name will refer to.
          type: '<xref uid="excel!Excel.Range:class" /> | string'
        - id: comment
          description: Optional. The comment associated with the named item.
          type: string
      return:
        type: '<xref uid="excel!Excel.NamedItem:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/34-named-item/create-and-remove-named-item.yaml

          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const headerRange = sheet.getRange("A1:D1");

              sheet.names.add("ExpensesHeader", headerRange);
              const namedItems = sheet.names.load("name, type");

              await context.sync();
          });

          ```
  - name: 'addFormulaLocal(name, formula, comment)'
    uid: 'excel!Excel.NamedItemCollection#addFormulaLocal:member(1)'
    package: excel!
    fullName: 'addFormulaLocal(name, formula, comment)'
    summary: >-
      Adds a new name to the collection of the given scope using the user's
      locale for the formula.


      \[ [API set: ExcelApi
      1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        addFormulaLocal(name: string, formula: string, comment?: string):
        Excel.NamedItem;
      parameters:
        - id: name
          description: The "name" of the named item.
          type: string
        - id: formula
          description: The formula in the user's locale that the name will refer to.
          type: string
        - id: comment
          description: Optional. The comment associated with the named item.
          type: string
      return:
        type: '<xref uid="excel!Excel.NamedItem:class" />'
        description: ''
  - name: getCount()
    uid: 'excel!Excel.NamedItemCollection#getCount:member(1)'
    package: excel!
    fullName: getCount()
    summary: >-
      Gets the number of named items in the collection.


      \[ [API set: ExcelApi
      1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;'
        description: ''
  - name: getItem(name)
    uid: 'excel!Excel.NamedItemCollection#getItem:member(1)'
    package: excel!
    fullName: getItem(name)
    summary: >-
      Gets a NamedItem object using its name.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItem(name: string): Excel.NamedItem;'
      parameters:
        - id: name
          description: Nameditem name.
          type: string
      return:
        type: '<xref uid="excel!Excel.NamedItem:class" />'
        description: |-


          #### Examples

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = 'Sheet1';
              var nameditem = ctx.workbook.names.getItem(sheetName);
              nameditem.load('type');
              return ctx.sync().then(function() {
                      console.log(nameditem.type);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - name: getItemOrNullObject(name)
    uid: 'excel!Excel.NamedItemCollection#getItemOrNullObject:member(1)'
    package: excel!
    fullName: getItemOrNullObject(name)
    summary: >-
      Gets a NamedItem object using its name. If the nameditem object does not
      exist, will return a null object.


      \[ [API set: ExcelApi
      1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.NamedItem;'
      parameters:
        - id: name
          description: Nameditem name.
          type: string
      return:
        type: '<xref uid="excel!Excel.NamedItem:class" />'
        description: ''
  - name: load(options)
    uid: 'excel!Excel.NamedItemCollection#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.NamedItemCollectionLoadOptions &
        Excel.Interfaces.CollectionLoadOptions): Excel.NamedItemCollection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref
            uid="excel!Excel.Interfaces.NamedItemCollectionLoadOptions:interface"
            /> & <xref
            uid="excel!Excel.Interfaces.CollectionLoadOptions:interface" />
      return:
        type: '<xref uid="excel!Excel.NamedItemCollection:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.NamedItemCollection#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItemCollection;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.NamedItemCollection:class" />'
        description: |-


          #### Examples

          ```javascript
          Excel.run(function (ctx) { 
              var nameditems = ctx.workbook.names;
              nameditems.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < nameditems.items.length; i++)
                  {
                      console.log(nameditems.items[i].name);
                      console.log(nameditems.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.NamedItemCollection#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption):
        Excel.NamedItemCollection;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: '<xref uid="office!OfficeExtension.LoadOption:interface" />'
      return:
        type: '<xref uid="excel!Excel.NamedItemCollection:class" />'
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.NamedItemCollection#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original
      `Excel.NamedItemCollection` object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as
      `Excel.Interfaces.NamedItemCollectionData`<!-- -->) that contains an
      "items" array with shallow copies of any loaded properties from the
      collection's items.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemCollectionData;'
      return:
        type: >-
          <xref uid="excel!Excel.Interfaces.NamedItemCollectionData:interface"
          />
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
