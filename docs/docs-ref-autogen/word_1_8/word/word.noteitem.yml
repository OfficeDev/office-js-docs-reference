### YamlMime:TSType
name: Word.NoteItem
uid: 'word!Word.NoteItem:class'
package: word!
fullName: Word.NoteItem
summary: Represents a footnote or endnote.
remarks: >-
  \[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-footnotes.yaml


  // Gets the text of the referenced footnote.

  await Word.run(async (context) => {
    const footnotes: Word.NoteItemCollection = context.document.body.footnotes;
    footnotes.load("items/body");
    await context.sync();

    const referenceNumber = $("#input-reference").val();
    const mark = (referenceNumber as number) - 1;
    const footnoteBody: Word.Range = footnotes.items[mark].body.getRange();
    footnoteBody.load("text");
    await context.sync();

    console.log(`Text of footnote ${referenceNumber}: ${footnoteBody.text}`);
  });

  ```
isPreview: false
isDeprecated: false
type: class
properties:
  - name: body
    uid: 'word!Word.NoteItem#body:member'
    package: word!
    fullName: body
    summary: Represents the body object of the note item. It's the portion of the text within the footnote or endnote.
    remarks: >-
      \[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-footnotes.yaml


      // Gets the text of the referenced footnote.

      await Word.run(async (context) => {
        const footnotes: Word.NoteItemCollection = context.document.body.footnotes;
        footnotes.load("items/body");
        await context.sync();

        const referenceNumber = $("#input-reference").val();
        const mark = (referenceNumber as number) - 1;
        const footnoteBody: Word.Range = footnotes.items[mark].body.getRange();
        footnoteBody.load("text");
        await context.sync();

        console.log(`Text of footnote ${referenceNumber}: ${footnoteBody.text}`);
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly body: Word.Body;'
      return:
        type: '<xref uid="word!Word.Body:class" />'
  - name: context
    uid: 'word!Word.NoteItem#context:member'
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="word!Word.RequestContext:class" />'
  - name: reference
    uid: 'word!Word.NoteItem#reference:member'
    package: word!
    fullName: reference
    summary: Represents a footnote or endnote reference in the main document.
    remarks: >-
      \[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-footnotes.yaml


      // Selects the footnote's reference mark in the document body.

      await Word.run(async (context) => {
        const footnotes: Word.NoteItemCollection = context.document.body.footnotes;
        footnotes.load("items/reference");
        await context.sync();

        const referenceNumber = $("#input-reference").val();
        const mark = (referenceNumber as number) - 1;
        const item: Word.NoteItem = footnotes.items[mark];
        const reference: Word.Range = item.reference;
        reference.select();
        await context.sync();

        console.log(`Reference ${referenceNumber} is selected.`);
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly reference: Word.Range;'
      return:
        type: '<xref uid="word!Word.Range:class" />'
  - name: type
    uid: 'word!Word.NoteItem#type:member'
    package: word!
    fullName: type
    summary: 'Represents the note item type: footnote or endnote.'
    remarks: >-
      \[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-footnotes.yaml


      // Gets the referenced note's item type and body type, which are both "Footnote".

      await Word.run(async (context) => {
        const footnotes: Word.NoteItemCollection = context.document.body.footnotes;
        footnotes.load("items");
        await context.sync();

        const referenceNumber = $("#input-reference").val();
        const mark = (referenceNumber as number) - 1;
        const item: Word.NoteItem = footnotes.items[mark];
        console.log(`Note type of footnote ${referenceNumber}: ${item.type}`);

        item.body.load("type");
        await context.sync();

        console.log(`Body type of note: ${item.body.type}`);
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly type: Word.NoteItemType | "Footnote" | "Endnote";'
      return:
        type: '<xref uid="word!Word.NoteItemType:enum" /> | "Footnote" | "Endnote"'
methods:
  - name: delete()
    uid: 'word!Word.NoteItem#delete:member(1)'
    package: word!
    fullName: delete()
    summary: Deletes the note item.
    remarks: >-
      \[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-footnotes.yaml


      // Deletes this referenced footnote.

      await Word.run(async (context) => {
        const footnotes: Word.NoteItemCollection = context.document.body.footnotes;
        footnotes.load("items");
        await context.sync();

        const referenceNumber = $("#input-reference").val();
        const mark = (referenceNumber as number) - 1;
        footnotes.items[mark].delete();
        await context.sync();

        console.log("Footnote deleted.");
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: ''
  - name: getNext()
    uid: 'word!Word.NoteItem#getNext:member(1)'
    package: word!
    fullName: getNext()
    summary: Gets the next note item of the same type. Throws an `ItemNotFound` error if this note item is the last one.
    remarks: >-
      \[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-footnotes.yaml


      // Selects the next footnote in the document body.

      await Word.run(async (context) => {
        const footnotes: Word.NoteItemCollection = context.document.body.footnotes;
        footnotes.load("items/reference");
        await context.sync();

        const referenceNumber = $("#input-reference").val();
        const mark = (referenceNumber as number) - 1;
        const reference: Word.Range = footnotes.items[mark].getNext().reference;
        reference.select();
        console.log("Selected is the next footnote: " + (mark + 2));
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getNext(): Word.NoteItem;'
      return:
        type: '<xref uid="word!Word.NoteItem:class" />'
        description: ''
  - name: getNextOrNullObject()
    uid: 'word!Word.NoteItem#getNextOrNullObject:member(1)'
    package: word!
    fullName: getNextOrNullObject()
    summary: >-
      Gets the next note item of the same type. If this note item is the last one, then this method will return an
      object with its `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject
      methods and
      properties](https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getNextOrNullObject(): Word.NoteItem;'
      return:
        type: '<xref uid="word!Word.NoteItem:class" />'
        description: ''
  - name: load(options)
    uid: 'word!Word.NoteItem#load:member(1)'
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Word.Interfaces.NoteItemLoadOptions): Word.NoteItem;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="word!Word.Interfaces.NoteItemLoadOptions:interface" />'
      return:
        type: '<xref uid="word!Word.NoteItem:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'word!Word.NoteItem#load:member(2)'
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.NoteItem;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="word!Word.NoteItem:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'word!Word.NoteItem#load:member(3)'
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.NoteItem;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="word!Word.NoteItem:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'word!Word.NoteItem#set:member(1)'
    package: word!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.NoteItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="word!Word.Interfaces.NoteItemUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'word!Word.NoteItem#set:member(2)'
    package: word!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Word.NoteItem): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="word!Word.NoteItem:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'word!Word.NoteItem#toJSON:member(1)'
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that's
      passed to it.) Whereas the original `Word.NoteItem` object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Word.Interfaces.NoteItemData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.NoteItemData;'
      return:
        type: '<xref uid="word!Word.Interfaces.NoteItemData:interface" />'
        description: ''
  - name: track()
    uid: 'word!Word.NoteItem#track:member(1)'
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for
      [context.trackedObjects.add(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and
      get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the
      object to the tracked object collection when the object was first created. If this object is part of a collection,
      you should also track the parent collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.NoteItem;'
      return:
        type: '<xref uid="word!Word.NoteItem:class" />'
        description: ''
  - name: untrack()
    uid: 'word!Word.NoteItem#untrack:member(1)'
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so please remember to free any objects you add,
      once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.NoteItem;'
      return:
        type: '<xref uid="word!Word.NoteItem:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
