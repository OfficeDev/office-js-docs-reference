### YamlMime:UniversalReference
items:
  - uid: outlook.Office.NotificationMessages
    summary: |-
      The NotificationMessages object is returned as the notificationMessages property of an item.

      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or
      Read
    name: Office.NotificationMessages
    fullName: Office.NotificationMessages
    langs:
      - typeScript
    type: interface
    package: outlook
    children:
      - outlook.Office.NotificationMessages.addAsync
      - outlook.Office.NotificationMessages.addAsync_1
      - outlook.Office.NotificationMessages.getAllAsync
      - outlook.Office.NotificationMessages.getAllAsync_1
      - outlook.Office.NotificationMessages.removeAsync
      - outlook.Office.NotificationMessages.removeAsync_1
      - outlook.Office.NotificationMessages.replaceAsync
      - outlook.Office.NotificationMessages.replaceAsync_1
  - uid: outlook.Office.NotificationMessages.addAsync
    summary: >-
      Adds a notification to an item.


      There are a maximum of 5 notifications per message. Setting more will return a
      NumberOfNotificationMessagesExceeded error.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or
      Read
    name: 'addAsync(key, JSONmessage, options, callback)'
    fullName: 'addAsync(key, JSONmessage, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addAsync(key: string, JSONmessage: NotificationMessageDetails, options?: Office.AsyncContextOptions,
        callback?: (asyncResult: Office.AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: >-
            A developer-specified key used to reference this notification message. Developers can use it to modify this
            message later. It can't be longer than 32 characters.
          type:
            - string
        - id: JSONmessage
          description: >-
            A JSON object that contains the notification message to be added to the item. It contains a
            NotificationMessageDetails object.
          type:
            - outlook.Office.NotificationMessageDetails
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type Office.AsyncResult.


            \[Api set: Mailbox 1.3\]
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.NotificationMessages.addAsync_1
    summary: >-
      Adds a notification to an item.


      There are a maximum of 5 notifications per message. Setting more will return a
      NumberOfNotificationMessagesExceeded error.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or
      Read


      #### Examples


      ```javascript

      // Create three notifications, each with a different key.

      Office.context.mailbox.item.notificationMessages.addAsync("progress", {
          type: "progressIndicator",
          message : "An add-in is processing this message."
      });

      Office.context.mailbox.item.notificationMessages.addAsync("information", {
          type: "informationalMessage",
          message : "The add-in processed this message.",
          icon : "iconid",
          persistent: false
      });

      Office.context.mailbox.item.notificationMessages.addAsync("error", {
          type: "errorMessage",
          message : "The add-in failed to process this message."
      });

      ```
    name: 'addAsync(key, JSONmessage, callback)'
    fullName: 'addAsync(key, JSONmessage, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addAsync(key: string, JSONmessage: NotificationMessageDetails, callback?: (asyncResult:
        Office.AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: >-
            A developer-specified key used to reference this notification message. Developers can use it to modify this
            message later. It can't be longer than 32 characters.
          type:
            - string
        - id: JSONmessage
          description: >-
            A JSON object that contains the notification message to be added to the item. It contains a
            NotificationMessageDetails object.
          type:
            - outlook.Office.NotificationMessageDetails
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type Office.AsyncResult.


            \[Api set: Mailbox 1.3\]
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.NotificationMessages.getAllAsync
    summary: |-
      Returns all keys and messages for an item.

      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or
      Read
    name: 'getAllAsync(options, callback)'
    fullName: 'getAllAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getAllAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult:
        Office.AsyncResult<NotificationMessageDetails[]>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type Office.AsyncResult. The `value` property of the result is an array of
            NotificationMessageDetails objects.
          type:
            - '(asyncResult: Office.AsyncResult<NotificationMessageDetails[]>) => void'
  - uid: outlook.Office.NotificationMessages.getAllAsync_1
    summary: |-
      Returns all keys and messages for an item.

      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or
      Read


      #### Examples


      ```javascript

      // Get all notifications.

      Office.context.mailbox.item.notificationMessages.getAllAsync(function (asyncResult) {
          if (asyncResult.status != "failed") {
              Office.context.mailbox.item.notificationMessages.replaceAsync( "notifications", {
                  type: "informationalMessage",
                  message : "Found " + asyncResult.value.length + " notifications.",
                  icon : "iconid",
                  persistent: false
              });
          }
      });

      ```
    name: getAllAsync(callback)
    fullName: getAllAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllAsync(callback?: (asyncResult: Office.AsyncResult<NotificationMessageDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type Office.AsyncResult. The `value` property of the result is an array of
            NotificationMessageDetails objects.
          type:
            - '(asyncResult: Office.AsyncResult<NotificationMessageDetails[]>) => void'
  - uid: outlook.Office.NotificationMessages.removeAsync
    summary: |-
      Removes a notification message for an item.

      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or
      Read
    name: 'removeAsync(key, options, callback)'
    fullName: 'removeAsync(key, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        removeAsync(key: string, options?: Office.AsyncContextOptions, callback?: (asyncResult:
        Office.AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: The key for the notification message to remove.
          type:
            - string
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type Office.AsyncResult.
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.NotificationMessages.removeAsync_1
    summary: |-
      Removes a notification message for an item.

      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or
      Read


      #### Examples


      ```javascript

      // Remove a notification.

      Office.context.mailbox.item.notificationMessages.removeAsync("progress");

      ```
    name: 'removeAsync(key, callback)'
    fullName: 'removeAsync(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(key: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: The key for the notification message to remove.
          type:
            - string
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type Office.AsyncResult.
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.NotificationMessages.replaceAsync
    summary: |-
      Replaces a notification message that has a given key with another message.

      If a notification message with the specified key doesn't exist, replaceAsync will add the notification.

      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or
      Read
    name: 'replaceAsync(key, JSONmessage, options, callback)'
    fullName: 'replaceAsync(key, JSONmessage, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        replaceAsync(key: string, JSONmessage: NotificationMessageDetails, options?: Office.AsyncContextOptions,
        callback?: (asyncResult: Office.AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: The key for the notification message to replace. It can't be longer than 32 characters.
          type:
            - string
        - id: JSONmessage
          description: >-
            A JSON object that contains the new notification message to replace the existing message. It contains a
            NotificationMessageDetails object.
          type:
            - outlook.Office.NotificationMessageDetails
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type Office.AsyncResult.
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.NotificationMessages.replaceAsync_1
    summary: |-
      Replaces a notification message that has a given key with another message.

      If a notification message with the specified key doesn't exist, replaceAsync will add the notification.

      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or
      Read


      #### Examples


      ```javascript

      // Replace a notification with an informational notification.

      Office.context.mailbox.item.notificationMessages.replaceAsync("progress", {
          type: "informationalMessage",
          message : "The message was processed successfully.",
          icon : "iconid",
          persistent: false
      });

      ```
    name: 'replaceAsync(key, JSONmessage, callback)'
    fullName: 'replaceAsync(key, JSONmessage, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        replaceAsync(key: string, JSONmessage: NotificationMessageDetails, callback?: (asyncResult:
        Office.AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: The key for the notification message to replace. It can't be longer than 32 characters.
          type:
            - string
        - id: JSONmessage
          description: >-
            A JSON object that contains the new notification message to replace the existing message. It contains a
            NotificationMessageDetails object.
          type:
            - outlook.Office.NotificationMessageDetails
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type Office.AsyncResult.
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
