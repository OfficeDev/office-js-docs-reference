### YamlMime:TSEnum
name: PowerPoint.ShapeZOrder
uid: powerpoint!PowerPoint.ShapeZOrder:enum
package: powerpoint!
fullName: PowerPoint.ShapeZOrder
summary: >-
  Use with `setZOrder` to move the specified shape up or down the collection's
  z-order, which shifts it in front of or behind other shapes.
remarks: >-
  \[ [API set: PowerPointApi
  1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
  \]


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/powerpoint/shapes/binding-to-shapes.yaml


  // Sends the shape to the back.

  changeZOrder(PowerPoint.ShapeZOrder.sendToBack);


  ...


  async function changeZOrder(operation: PowerPoint.ShapeZOrder) {
    // Changes the z-order position of the selected shapes.
    return PowerPoint.run(async (context) => {
      const selectedShapes = context.presentation.getSelectedShapes();
      selectedShapes.load();
      await context.sync();

      if (selectedShapes.items.length === 0) {
        console.log("No shapes are selected.");
      } else {
        let direction = 1; // Start with bottom-most (lowest number).

        // Start with top-most when sending to back or bringing forward.

        switch (operation) {
          case PowerPoint.ShapeZOrder.bringForward:

          case PowerPoint.ShapeZOrder.sendToBack:
            direction = -1; // Reverse direction.

            break;
        }

        // Change the z-order position for each of the selected shapes,

        // starting with the bottom-most when bringing to front or sending backward,

        // or top-most when sending to back or bringing forward,

        // so the selected shapes retain their relative z-order positions after they're changed.

        selectedShapes.items
          .sort((a, b) => (a.zOrderPosition - b.zOrderPosition) * direction)
          .forEach((shape) => {
            try {
              const originalZOrderPosition = shape.zOrderPosition;
              shape.setZOrder(operation);

              console.log(`Changed z-order of shape ${shape.id}.`);
            } catch (err) {
              console.log(`Unable to change z-order of shape ${shape.id}. ${err.message}`);
            }
          });

        await context.sync();
      }
    });
  }

  ```

isPreview: false
isDeprecated: false
fields:
  - name: bringForward
    uid: powerpoint!PowerPoint.ShapeZOrder.bringForward:member
    package: powerpoint!
    summary: >-
      Brings the shape forward one spot in the z-order.


      * \[ [API set: PowerPointApi
      1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]
    value: '"BringForward"'
  - name: bringToFront
    uid: powerpoint!PowerPoint.ShapeZOrder.bringToFront:member
    package: powerpoint!
    summary: >-
      Brings the shape to the front of the z-order.


      * \[ [API set: PowerPointApi
      1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]
    value: '"BringToFront"'
  - name: sendBackward
    uid: powerpoint!PowerPoint.ShapeZOrder.sendBackward:member
    package: powerpoint!
    summary: >-
      Sends the shape backward one spot in the z-order.


      * \[ [API set: PowerPointApi
      1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]
    value: '"SendBackward"'
  - name: sendToBack
    uid: powerpoint!PowerPoint.ShapeZOrder.sendToBack:member
    package: powerpoint!
    summary: >-
      Sends the shape to the back of the z-order.


      * \[ [API set: PowerPointApi
      1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets)
      \]
    value: '"SendToBack"'
