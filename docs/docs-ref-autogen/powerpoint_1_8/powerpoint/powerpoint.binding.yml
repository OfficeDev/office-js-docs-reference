### YamlMime:TSType
name: PowerPoint.Binding
uid: 'powerpoint!PowerPoint.Binding:class'
package: powerpoint!
fullName: PowerPoint.Binding
summary: Represents an Office.js binding that is defined in the presentation.
remarks: '\[ [API set: PowerPointApi 1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'powerpoint!PowerPoint.Binding#context:member'
    package: powerpoint!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="powerpoint!PowerPoint.RequestContext:class" />'
  - name: id
    uid: 'powerpoint!PowerPoint.Binding#id:member'
    package: powerpoint!
    fullName: id
    summary: Represents the binding identifier.
    remarks: '\[ [API set: PowerPointApi 1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: string;'
      return:
        type: string
  - name: type
    uid: 'powerpoint!PowerPoint.Binding#type:member'
    package: powerpoint!
    fullName: type
    summary: Returns the type of the binding. See `BindingType` for details.
    remarks: '\[ [API set: PowerPointApi 1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly type: PowerPoint.BindingType | "Shape";'
      return:
        type: '<xref uid="powerpoint!PowerPoint.BindingType:enum" /> | "Shape"'
methods:
  - name: delete()
    uid: 'powerpoint!PowerPoint.Binding#delete:member(1)'
    package: powerpoint!
    fullName: delete()
    summary: Deletes the binding.
    remarks: '\[ [API set: PowerPointApi 1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: ''
  - name: getShape()
    uid: 'powerpoint!PowerPoint.Binding#getShape:member(1)'
    package: powerpoint!
    fullName: getShape()
    summary: Returns the shape represented by the binding. Will throw an error if the binding is not of the correct type.
    remarks: '\[ [API set: PowerPointApi 1.8](/javascript/api/requirement-sets/powerpoint/powerpoint-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getShape(): PowerPoint.Shape;'
      return:
        type: '<xref uid="powerpoint!PowerPoint.Shape:class" />'
        description: ''
  - name: load(options)
    uid: 'powerpoint!PowerPoint.Binding#load:member(1)'
    package: powerpoint!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: PowerPoint.Interfaces.BindingLoadOptions): PowerPoint.Binding;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="powerpoint!PowerPoint.Interfaces.BindingLoadOptions:interface" />'
      return:
        type: '<xref uid="powerpoint!PowerPoint.Binding:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'powerpoint!PowerPoint.Binding#load:member(2)'
    package: powerpoint!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): PowerPoint.Binding;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="powerpoint!PowerPoint.Binding:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'powerpoint!PowerPoint.Binding#load:member(3)'
    package: powerpoint!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): PowerPoint.Binding;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="powerpoint!PowerPoint.Binding:class" />'
        description: ''
  - name: toJSON()
    uid: 'powerpoint!PowerPoint.Binding#toJSON:member(1)'
    package: powerpoint!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that's
      passed to it.) Whereas the original `PowerPoint.Binding` object is an API object, the `toJSON` method returns a
      plain JavaScript object (typed as `PowerPoint.Interfaces.BindingData`<!-- -->) that contains shallow copies of any
      loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): PowerPoint.Interfaces.BindingData;'
      return:
        type: '<xref uid="powerpoint!PowerPoint.Interfaces.BindingData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
