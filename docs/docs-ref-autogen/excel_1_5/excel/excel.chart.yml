### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Chart:class'
    summary: >-
      Represents a chart object in a workbook. To learn more about the Chart object model, see [Work with charts using
      the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-charts)<!-- -->.


      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.Chart
    fullName: Excel.Chart
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Chart#axes:member'
      - 'excel!Excel.Chart#context:member'
      - 'excel!Excel.Chart#dataLabels:member'
      - 'excel!Excel.Chart#delete:member(1)'
      - 'excel!Excel.Chart#format:member'
      - 'excel!Excel.Chart#getImage:member(1)'
      - 'excel!Excel.Chart#getImage:member(2)'
      - 'excel!Excel.Chart#height:member'
      - 'excel!Excel.Chart#left:member'
      - 'excel!Excel.Chart#legend:member'
      - 'excel!Excel.Chart#load:member(1)'
      - 'excel!Excel.Chart#load:member(2)'
      - 'excel!Excel.Chart#load:member(3)'
      - 'excel!Excel.Chart#name:member'
      - 'excel!Excel.Chart#series:member'
      - 'excel!Excel.Chart#set:member(1)'
      - 'excel!Excel.Chart#set:member(2)'
      - 'excel!Excel.Chart#setData:member(1)'
      - 'excel!Excel.Chart#setData:member(2)'
      - 'excel!Excel.Chart#setPosition:member(1)'
      - 'excel!Excel.Chart#title:member'
      - 'excel!Excel.Chart#toJSON:member(1)'
      - 'excel!Excel.Chart#top:member'
      - 'excel!Excel.Chart#width:member'
      - 'excel!Excel.Chart#worksheet:member'
  - uid: 'excel!Excel.Chart#axes:member'
    summary: |-
      Represents chart axes. Read-only.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: axes
    fullName: axes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly axes: Excel.ChartAxes;'
      return:
        type:
          - 'excel!Excel.ChartAxes:class'
  - uid: 'excel!Excel.Chart#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Chart#dataLabels:member'
    summary: |-
      Represents the datalabels on the chart. Read-only.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: dataLabels
    fullName: dataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataLabels: Excel.ChartDataLabels;'
      return:
        type:
          - 'excel!Excel.ChartDataLabels:class'
  - uid: 'excel!Excel.Chart#delete:member(1)'
    summary: |-
      Deletes the chart object.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### Examples

          ```javascript
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Chart#format:member'
    summary: |-
      Encapsulates the format properties for the chart area. Read-only.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartAreaFormat;'
      return:
        type:
          - 'excel!Excel.ChartAreaFormat:class'
  - uid: 'excel!Excel.Chart#getImage:member(1)'
    summary: >-
      Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions. The aspect ratio
      is preserved as part of the resizing.


      \[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'getImage(width, height, fittingMode)'
    fullName: 'getImage(width, height, fittingMode)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getImage(width?: number, height?: number, fittingMode?: Excel.ImageFittingMode):
        OfficeExtension.ClientResult<string>;
      return:
        type:
          - 'excel!Excel.Chart#getImage~0:complex'
        description: |-


          #### Examples

          ```javascript
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              var image = chart.getImage();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: width
          description: (Optional) The desired width of the resulting image.
          type:
            - number
        - id: height
          description: (Optional) The desired height of the resulting image.
          type:
            - number
        - id: fittingMode
          description: >-
            (Optional) The method used to scale the chart to the specified to the specified dimensions (if both height
            and width are set).
          type:
            - 'excel!Excel.ImageFittingMode:enum'
  - uid: 'excel!Excel.Chart#getImage:member(2)'
    summary: >-
      Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions. The aspect ratio
      is preserved as part of the resizing.


      \[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'getImage(width, height, fittingModeString)'
    fullName: 'getImage(width, height, fittingModeString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getImage(width?: number, height?: number, fittingModeString?: "Fit" | "FitAndCenter" | "Fill"):
        OfficeExtension.ClientResult<string>;
      return:
        type:
          - 'excel!Excel.Chart#getImage~1:complex'
        description: ''
      parameters:
        - id: width
          description: (Optional) The desired width of the resulting image.
          type:
            - number
        - id: height
          description: (Optional) The desired height of the resulting image.
          type:
            - number
        - id: fittingModeString
          description: >-
            (Optional) The method used to scale the chart to the specified to the specified dimensions (if both height
            and width are set).
          type:
            - '"Fit" | "FitAndCenter" | "Fill"'
  - uid: 'excel!Excel.Chart#height:member'
    summary: |-
      Represents the height, in points, of the chart object.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Chart#left:member'
    summary: |-
      The distance, in points, from the left side of the chart to the worksheet origin.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Chart#legend:member'
    summary: |-
      Represents the legend for the chart. Read-only.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: legend
    fullName: legend
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly legend: Excel.ChartLegend;'
      return:
        type:
          - 'excel!Excel.ChartLegend:class'
        description: |-


          #### Examples

          ```javascript
          // Set to show legend of Chart1 and make it on top of the chart.
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.legend.visible = true;
              chart.legend.position = "top"; 
              chart.legend.overlay = false; 
              return ctx.sync().then(function() {
                      console.log("Legend Shown ");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Chart#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartLoadOptions): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type:
            - 'excel!Excel.Interfaces.ChartLoadOptions:interface'
  - uid: 'excel!Excel.Chart#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: |-


          #### Examples

          ```javascript
          // Get a chart named "Chart1"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.load('name');
              return ctx.sync().then(function() {
                      console.log(chart.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Chart#load:member(3)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Chart;
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Chart#name:member'
    summary: |-
      Represents the name of a chart object.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
        description: |-


          #### Examples

          ```javascript
          // Rename the chart to new name, resize the chart to 200 points in both height and weight. 
          // Move Chart1 to 100 points to the top and left. 
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.name = "New Name";
              chart.top = 100;
              chart.left = 100;
              chart.height = 200;
              chart.width = 200;
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Chart#series:member'
    summary: |-
      Represents either a single series or collection of series in the chart. Read-only.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: series
    fullName: series
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly series: Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
  - uid: 'excel!Excel.Chart#set:member(1)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.Chart): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type:
            - 'excel!Excel.Interfaces.ChartUpdateData:interface'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Chart#set:member(2)'
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Chart): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Chart:class'
  - uid: 'excel!Excel.Chart#setData:member(1)'
    summary: |-
      Resets the source data for the chart.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'setData(sourceData, seriesBy)'
    fullName: 'setData(sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setData(sourceData: Range, seriesBy?: Excel.ChartSeriesBy): void;'
      return:
        type:
          - void
        description: |-


          #### Examples

          ```javascript
          // Set the sourceData to be "A1:B4" and seriesBy to be "Columns"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              var sourceData = "A1:B4";
              chart.setData(sourceData, "Columns");
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: sourceData
          description: The range object corresponding to the source data.
          type:
            - 'excel!Excel.Range:class'
        - id: seriesBy
          description: >-
            Specifies the way columns or rows are used as data series on the chart. Can be one of the following: Auto
            (default), Rows, and Columns. See Excel.ChartSeriesBy for details.
          type:
            - 'excel!Excel.ChartSeriesBy:enum'
  - uid: 'excel!Excel.Chart#setData:member(2)'
    summary: |-
      Resets the source data for the chart.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'setData(sourceData, seriesByString)'
    fullName: 'setData(sourceData, seriesByString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setData(sourceData: Range, seriesByString?: "Auto" | "Columns" | "Rows"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: The range object corresponding to the source data.
          type:
            - 'excel!Excel.Range:class'
        - id: seriesByString
          description: >-
            Specifies the way columns or rows are used as data series on the chart. Can be one of the following: Auto
            (default), Rows, and Columns. See Excel.ChartSeriesBy for details.
          type:
            - '"Auto" | "Columns" | "Rows"'
  - uid: 'excel!Excel.Chart#setPosition:member(1)'
    summary: |-
      Positions the chart relative to cells on the worksheet.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'setPosition(startCell, endCell)'
    fullName: 'setPosition(startCell, endCell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPosition(startCell: Range | string, endCell?: Range | string): void;'
      return:
        type:
          - void
        description: |-


          #### Examples

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Charts";
              var rangeSelection = "A1:B4";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeSelection);
              var sourceData = sheetName + "!" + "A1:B4";
              var chart = ctx.workbook.worksheets.getItem(sheetName).charts.add("pie", range, "auto");
              chart.width = 500;
              chart.height = 300;
              chart.setPosition("C2", null);
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: startCell
          description: >-
            The start cell. This is where the chart will be moved to. The start cell is the top-left or top-right cell,
            depending on the user's right-to-left display settings.
          type:
            - 'excel!Excel.Chart#setPosition~0:complex'
        - id: endCell
          description: >-
            (Optional) The end cell. If specified, the chart's width and height will be set to fully cover up this
            cell/range.
          type:
            - 'excel!Excel.Chart#setPosition~1:complex'
  - uid: 'excel!Excel.Chart#title:member'
    summary: >-
      Represents the title of the specified chart, including the text, visibility, position, and formatting of the
      title. Read-only.


      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly title: Excel.ChartTitle;'
      return:
        type:
          - 'excel!Excel.ChartTitle:class'
  - uid: 'excel!Excel.Chart#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.Chart object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.ChartData`<!-- -->) that contains shallow copies of any loaded child
      properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartData:interface'
        description: ''
  - uid: 'excel!Excel.Chart#top:member'
    summary: >-
      Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the
      top of the chart area (on a chart).


      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Chart#width:member'
    summary: |-
      Represents the width, in points, of the chart object.

      \[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Chart#worksheet:member'
    summary: |-
      The worksheet containing the current chart. Read-only.

      \[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.ChartAxes:class'
    name: Excel.ChartAxes
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartDataLabels:class'
    name: Excel.ChartDataLabels
  - uid: 'excel!Excel.ChartAreaFormat:class'
    name: Excel.ChartAreaFormat
  - uid: 'excel!Excel.Chart#getImage~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'excel!Excel.ImageFittingMode:enum'
    name: Excel.ImageFittingMode
  - uid: 'excel!Excel.Chart#getImage~1:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'excel!Excel.ChartLegend:class'
    name: Excel.ChartLegend
  - uid: 'excel!Excel.Chart:class'
    name: Excel.Chart
  - uid: 'excel!Excel.Interfaces.ChartLoadOptions:interface'
    name: Excel.Interfaces.ChartLoadOptions
  - uid: 'excel!Excel.ChartSeriesCollection:class'
    name: Excel.ChartSeriesCollection
  - uid: 'excel!Excel.Interfaces.ChartUpdateData:interface'
    name: Interfaces.ChartUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Range:class'
    name: Range
  - uid: 'excel!Excel.ChartSeriesBy:enum'
    name: Excel.ChartSeriesBy
  - uid: 'excel!Excel.Chart#setPosition~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.Chart#setPosition~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.ChartTitle:class'
    name: Excel.ChartTitle
  - uid: 'excel!Excel.Interfaces.ChartData:interface'
    name: Excel.Interfaces.ChartData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet
