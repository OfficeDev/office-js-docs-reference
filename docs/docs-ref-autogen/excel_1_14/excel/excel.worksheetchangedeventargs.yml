### YamlMime:TSType
name: Excel.WorksheetChangedEventArgs
uid: 'excel!Excel.WorksheetChangedEventArgs:interface'
package: excel!
fullName: Excel.WorksheetChangedEventArgs
summary: Provides information about the worksheet that raised the changed event.
remarks: '\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: address
    uid: 'excel!Excel.WorksheetChangedEventArgs#address:member'
    package: excel!
    fullName: address
    summary: Gets the range address that represents the changed area of a specific worksheet.
    remarks: '\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'address: string;'
      return:
        type: string
  - name: changeDirectionState
    uid: 'excel!Excel.WorksheetChangedEventArgs#changeDirectionState:member'
    package: excel!
    fullName: changeDirectionState
    summary: >-
      Represents a change to the direction that the cells in a worksheet will shift when a cell or cells are deleted or
      inserted. This includes the following two scenarios. 1. The direction (such as down or to the right) that existing
      cells will shift when a new cell or cells are inserted into a worksheet. 2. The direction (such as up or to the
      left) that the remaining cells will shift when a cell or cells are deleted from a worksheet.
    remarks: '\[ [API set: ExcelApi 1.14](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'changeDirectionState: Excel.ChangeDirectionState;'
      return:
        type: '<xref uid="excel!Excel.ChangeDirectionState:interface" />'
  - name: changeType
    uid: 'excel!Excel.WorksheetChangedEventArgs#changeType:member'
    package: excel!
    fullName: changeType
    summary: Gets the change type that represents how the changed event is triggered. See `Excel.DataChangeType` for details.
    remarks: '\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        changeType: Excel.DataChangeType | "Unknown" | "RangeEdited" | "RowInserted" | "RowDeleted" | "ColumnInserted" |
        "ColumnDeleted" | "CellInserted" | "CellDeleted";
      return:
        type: >-
          <xref uid="excel!Excel.DataChangeType:enum" /> | "Unknown" | "RangeEdited" | "RowInserted" | "RowDeleted" |
          "ColumnInserted" | "ColumnDeleted" | "CellInserted" | "CellDeleted"
  - name: details
    uid: 'excel!Excel.WorksheetChangedEventArgs#details:member'
    package: excel!
    fullName: details
    summary: >-
      Represents the information about the change detail. This property can be retrieved when the changed event is
      triggered on a single cell. If the changed event is triggered on multiple cells, this property cannot be
      retrieved.
    remarks: |-
      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]

      #### Examples

      ```javascript
      // This function would be used as an event handler for the Worksheet.onChanged event.
      function onWorksheetChanged(eventArgs) {
          Excel.run(function (context) {
              var details = eventArgs.details;
              var address = eventArgs.address;

              // Print the before and after types and values to the console.
              console.log(`Change at ${address}: was ${details.valueBefore}(${details.valueTypeBefore}),`
                  + ` now is ${details.valueAfter}(${details.valueTypeAfter})`);
              return context.sync();
          });
      }
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'details: Excel.ChangedEventDetail;'
      return:
        type: '<xref uid="excel!Excel.ChangedEventDetail:interface" />'
  - name: source
    uid: 'excel!Excel.WorksheetChangedEventArgs#source:member'
    package: excel!
    fullName: source
    summary: Gets the source of the event. See `Excel.EventSource` for details.
    remarks: '\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'source: Excel.EventSource | "Local" | "Remote";'
      return:
        type: '<xref uid="excel!Excel.EventSource:enum" /> | "Local" | "Remote"'
  - name: triggerSource
    uid: 'excel!Excel.WorksheetChangedEventArgs#triggerSource:member'
    package: excel!
    fullName: triggerSource
    summary: 'Represents the trigger source of the event. For example, identifies whether this local add-in triggers the event.'
    remarks: '\[ [API set: ExcelApi 1.14](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'triggerSource: Excel.EventTriggerSource | "Unknown" | "ThisLocalAddin";'
      return:
        type: '<xref uid="excel!Excel.EventTriggerSource:enum" /> | "Unknown" | "ThisLocalAddin"'
  - name: type
    uid: 'excel!Excel.WorksheetChangedEventArgs#type:member'
    package: excel!
    fullName: type
    summary: Gets the type of the event. See `Excel.EventType` for details.
    remarks: '\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type: "WorksheetChanged";'
      return:
        type: '"WorksheetChanged"'
  - name: worksheetId
    uid: 'excel!Excel.WorksheetChangedEventArgs#worksheetId:member'
    package: excel!
    fullName: worksheetId
    summary: Gets the ID of the worksheet in which the data changed.
    remarks: '\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'worksheetId: string;'
      return:
        type: string
methods:
  - name: getRange(ctx)
    uid: 'excel!Excel.WorksheetChangedEventArgs#getRange:member(1)'
    package: excel!
    fullName: getRange(ctx)
    summary: |-
      Gets the range that represents the changed area of a specific worksheet.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRange(ctx: Excel.RequestContext): Excel.Range;'
      parameters:
        - id: ctx
          description: ''
          type: '<xref uid="excel!Excel.RequestContext:class" />'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: ''
  - name: getRangeOrNullObject(ctx)
    uid: 'excel!Excel.WorksheetChangedEventArgs#getRangeOrNullObject:member(1)'
    package: excel!
    fullName: getRangeOrNullObject(ctx)
    summary: |-
      Gets the range that represents the changed area of a specific worksheet. It might return null object.

      \[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRangeOrNullObject(ctx: Excel.RequestContext): Excel.Range;'
      parameters:
        - id: ctx
          description: ''
          type: '<xref uid="excel!Excel.RequestContext:class" />'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: ''
