### YamlMime:UniversalReference
items:
  - uid: Excel_1_7.Excel.DataBarConditionalFormat
    summary: |-
      Represents an Excel Conditional Data Bar Type.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.DataBarConditionalFormat
    fullName: Excel.DataBarConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: Excel_1_7
    children:
      - Excel_1_7.Excel.DataBarConditionalFormat.axisColor
      - Excel_1_7.Excel.DataBarConditionalFormat.axisFormat
      - Excel_1_7.Excel.DataBarConditionalFormat.barDirection
      - Excel_1_7.Excel.DataBarConditionalFormat.context
      - Excel_1_7.Excel.DataBarConditionalFormat.load
      - Excel_1_7.Excel.DataBarConditionalFormat.lowerBoundRule
      - Excel_1_7.Excel.DataBarConditionalFormat.negativeFormat
      - Excel_1_7.Excel.DataBarConditionalFormat.positiveFormat
      - Excel_1_7.Excel.DataBarConditionalFormat.showDataBarOnly
      - Excel_1_7.Excel.DataBarConditionalFormat.toJSON
      - Excel_1_7.Excel.DataBarConditionalFormat.upperBoundRule
  - uid: Excel_1_7.Excel.DataBarConditionalFormat.axisColor
    summary: >-
      HTML color code representing the color of the Axis line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML
      color (e.g. "orange"). "" (empty string) if no axis is present or set.


      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: axisColor
    fullName: axisColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisColor: string;'
      return:
        type:
          - string
  - uid: Excel_1_7.Excel.DataBarConditionalFormat.axisFormat
    summary: |-
      Representation of how the axis is determined for an Excel data bar.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: axisFormat
    fullName: axisFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisFormat: Excel.ConditionalDataBarAxisFormat | "Automatic" | "None" | "CellMidPoint";'
      return:
        type:
          - Excel.ConditionalDataBarAxisFormat | "Automatic" | "None" | "CellMidPoint"
  - uid: Excel_1_7.Excel.DataBarConditionalFormat.barDirection
    summary: |-
      Represents the direction that the data bar graphic should be based on.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: barDirection
    fullName: barDirection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'barDirection: Excel.ConditionalDataBarDirection | "Context" | "LeftToRight" | "RightToLeft";'
      return:
        type:
          - Excel.ConditionalDataBarDirection | "Context" | "LeftToRight" | "RightToLeft"
  - uid: Excel_1_7.Excel.DataBarConditionalFormat.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: Excel_1_7.Excel.DataBarConditionalFormat.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: { select?: string; expand?: string; }): Excel.DataBarConditionalFormat` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataBarConditionalFormat`
      - Only available on collection types. It is similar to the preceding signature. Option.top specifies the maximum
      number of collection items that can be included in the result. Option.skip specifies the number of items that are
      to be skipped and not included in the result. If option.top is specified, the result set will start after skipping
      the specified number of items.
    name: load(option)
    fullName: load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): Excel.DataBarConditionalFormat;'
      return:
        type:
          - excel.Excel.DataBarConditionalFormat
        description: ''
      parameters:
        - id: option
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: Excel_1_7.Excel.DataBarConditionalFormat.lowerBoundRule
    summary: |-
      The rule for what consistutes the lower bound (and how to calculate it, if applicable) for a data bar.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: lowerBoundRule
    fullName: lowerBoundRule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lowerBoundRule: Excel.ConditionalDataBarRule;'
      return:
        type:
          - excel.Excel.ConditionalDataBarRule
  - uid: Excel_1_7.Excel.DataBarConditionalFormat.negativeFormat
    summary: |-
      Representation of all values to the left of the axis in an Excel data bar. Read-only.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: negativeFormat
    fullName: negativeFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly negativeFormat: Excel.ConditionalDataBarNegativeFormat;'
      return:
        type:
          - excel.Excel.ConditionalDataBarNegativeFormat
  - uid: Excel_1_7.Excel.DataBarConditionalFormat.positiveFormat
    summary: |-
      Representation of all values to the right of the axis in an Excel data bar. Read-only.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: positiveFormat
    fullName: positiveFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly positiveFormat: Excel.ConditionalDataBarPositiveFormat;'
      return:
        type:
          - excel.Excel.ConditionalDataBarPositiveFormat
  - uid: Excel_1_7.Excel.DataBarConditionalFormat.showDataBarOnly
    summary: |-
      If true, hides the values from the cells where the data bar is applied.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: showDataBarOnly
    fullName: showDataBarOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showDataBarOnly: boolean;'
      return:
        type:
          - boolean
  - uid: Excel_1_7.Excel.DataBarConditionalFormat.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.DataBarConditionalFormat object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `Excel.Interfaces.DataBarConditionalFormatData`<!-- -->) that contains
      shallow copies of any loaded child properties from the original object.
    name: toJSON()
    fullName: toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.DataBarConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.DataBarConditionalFormatData
        description: ''
  - uid: Excel_1_7.Excel.DataBarConditionalFormat.upperBoundRule
    summary: |-
      The rule for what constitutes the upper bound (and how to calculate it, if applicable) for a data bar.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: upperBoundRule
    fullName: upperBoundRule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'upperBoundRule: Excel.ConditionalDataBarRule;'
      return:
        type:
          - excel.Excel.ConditionalDataBarRule
