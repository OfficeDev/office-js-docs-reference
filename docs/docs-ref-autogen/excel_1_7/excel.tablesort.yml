### YamlMime:UniversalReference
items:
  - uid: Excel_1_7.Excel.TableSort
    summary: |-
      Manages sorting operations on Table objects.

      \[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.TableSort
    fullName: Excel.TableSort
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: Excel_1_7
    children:
      - Excel_1_7.Excel.TableSort.apply
      - Excel_1_7.Excel.TableSort.clear
      - Excel_1_7.Excel.TableSort.context
      - Excel_1_7.Excel.TableSort.fields
      - Excel_1_7.Excel.TableSort.load
      - Excel_1_7.Excel.TableSort.matchCase
      - Excel_1_7.Excel.TableSort.method
      - Excel_1_7.Excel.TableSort.reapply
      - Excel_1_7.Excel.TableSort.toJSON
  - uid: Excel_1_7.Excel.TableSort.apply
    summary: |-
      Perform a sort operation.

      \[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: 'apply(fields, matchCase, method)'
    fullName: apply
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, method?: Excel.SortMethod): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: The list of conditions to sort on.
          type:
            - 'Excel.SortField[]'
        - id: matchCase
          description: Optional. Whether to have the casing impact string ordering.
          type:
            - boolean
        - id: method
          description: Optional. The ordering method used for Chinese characters.
          type:
            - excel.Excel.SortMethod
  - uid: Excel_1_7.Excel.TableSort.clear
    summary: >-
      Clears the sorting that is currently on the table. While this doesn't modify the table's ordering, it clears the
      state of the header buttons.


      \[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: clear()
    fullName: clear
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: Excel_1_7.Excel.TableSort.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: Excel_1_7.Excel.TableSort.fields
    summary: |-
      Represents the current conditions used to last sort the table. Read-only.

      \[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: fields
    fullName: fields
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fields: Excel.SortField[];'
      return:
        type:
          - 'Excel.SortField[]'
  - uid: Excel_1_7.Excel.TableSort.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: { select?: string; expand?: string; }): Excel.TableSort` - Where option.select is a comma-delimited
      string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the
      navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableSort` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.
    name: load(option)
    fullName: load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): Excel.TableSort;'
      return:
        type:
          - excel.Excel.TableSort
        description: ''
      parameters:
        - id: option
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: Excel_1_7.Excel.TableSort.matchCase
    summary: |-
      Represents whether the casing impacted the last sort of the table. Read-only.

      \[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: matchCase
    fullName: matchCase
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly matchCase: boolean;'
      return:
        type:
          - boolean
  - uid: Excel_1_7.Excel.TableSort.method
    summary: |-
      Represents Chinese character ordering method last used to sort the table. Read-only.

      \[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: method
    fullName: method
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly method: Excel.SortMethod | "PinYin" | "StrokeCount";'
      return:
        type:
          - Excel.SortMethod | "PinYin" | "StrokeCount"
  - uid: Excel_1_7.Excel.TableSort.reapply
    summary: |-
      Reapplies the current sorting parameters to the table.

      \[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: reapply()
    fullName: reapply
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapply(): void;'
      return:
        type:
          - void
        description: ''
  - uid: Excel_1_7.Excel.TableSort.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.TableSort object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.TableSortData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    name: toJSON()
    fullName: toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableSortData;'
      return:
        type:
          - excel.Excel.Interfaces.TableSortData
        description: ''
