### YamlMime:UniversalReference
items:
  - uid: Excel_1_7.Excel.TextConditionalFormat
    summary: |-
      Represents a specific text conditional format.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.TextConditionalFormat
    fullName: Excel.TextConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: Excel_1_7
    children:
      - Excel_1_7.Excel.TextConditionalFormat.context
      - Excel_1_7.Excel.TextConditionalFormat.format
      - Excel_1_7.Excel.TextConditionalFormat.load
      - Excel_1_7.Excel.TextConditionalFormat.rule
      - Excel_1_7.Excel.TextConditionalFormat.toJSON
  - uid: Excel_1_7.Excel.TextConditionalFormat.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: Excel_1_7.Excel.TextConditionalFormat.format
    summary: >-
      Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.
      Read-only.


      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ConditionalRangeFormat;'
      return:
        type:
          - excel.Excel.ConditionalRangeFormat
  - uid: Excel_1_7.Excel.TextConditionalFormat.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: { select?: string; expand?: string; }): Excel.TextConditionalFormat` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextConditionalFormat` -
      Only available on collection types. It is similar to the preceding signature. Option.top specifies the maximum
      number of collection items that can be included in the result. Option.skip specifies the number of items that are
      to be skipped and not included in the result. If option.top is specified, the result set will start after skipping
      the specified number of items.
    name: load(option)
    fullName: load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): Excel.TextConditionalFormat;'
      return:
        type:
          - excel.Excel.TextConditionalFormat
        description: ''
      parameters:
        - id: option
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: Excel_1_7.Excel.TextConditionalFormat.rule
    summary: |-
      The rule of the conditional format.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: rule
    fullName: rule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rule: Excel.ConditionalTextComparisonRule;'
      return:
        type:
          - excel.Excel.ConditionalTextComparisonRule
  - uid: Excel_1_7.Excel.TextConditionalFormat.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.TextConditionalFormat object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `Excel.Interfaces.TextConditionalFormatData`<!-- -->) that contains
      shallow copies of any loaded child properties from the original object.
    name: toJSON()
    fullName: toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TextConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.TextConditionalFormatData
        description: ''
