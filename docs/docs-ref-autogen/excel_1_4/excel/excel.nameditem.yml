### YamlMime:TSType
name: Excel.NamedItem
uid: 'excel!Excel.NamedItem:class'
package: excel!
fullName: Excel.NamedItem
summary: >-
  Represents a defined name for a range of cells or value. Names can be primitive named objects (as seen in the type
  below), range object, or a reference to a range. This object can be used to obtain range object associated with names.
remarks: >-
  \[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/34-named-item/create-and-remove-named-item.yaml


  await Excel.run(async (context) => {
      // Log all the named items in the active worksheet.
      const namedItems = context.workbook.worksheets.getActiveWorksheet().names.load();
      await context.sync();

      console.log("This worksheet contains " + namedItems.items.length + " named items.");

      for (let i = 0; i < namedItems.items.length; i++) {
          const namedItem : Excel.NamedItem = namedItems.items[i];
          console.log(JSON.stringify(namedItem)) + "\n";
      }

      await context.sync();
  });

  ```
isPreview: false
isDeprecated: false
type: class
properties:
  - name: comment
    uid: 'excel!Excel.NamedItem#comment:member'
    package: excel!
    fullName: comment
    summary: Specifies the comment associated with this name.
    remarks: '\[ [API set: ExcelApi 1.4](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'comment: string;'
      return:
        type: string
  - name: context
    uid: 'excel!Excel.NamedItem#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: name
    uid: 'excel!Excel.NamedItem#name:member'
    package: excel!
    fullName: name
    summary: The name of the object.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly name: string;'
      return:
        type: string
  - name: scope
    uid: 'excel!Excel.NamedItem#scope:member'
    package: excel!
    fullName: scope
    summary: >-
      Specifies if the name is scoped to the workbook or to a specific worksheet. Possible values are: Worksheet,
      Workbook.
    remarks: '\[ [API set: ExcelApi 1.4](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
      return:
        type: '<xref uid="excel!Excel.NamedItemScope:enum" /> | "Worksheet" | "Workbook"'
  - name: type
    uid: 'excel!Excel.NamedItem#type:member'
    package: excel!
    fullName: type
    summary: Specifies the type of the value returned by the name's formula. See `Excel.NamedItemType` for details.
    remarks: >-
      \[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for
      Array](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
      return:
        type: >-
          <xref uid="excel!Excel.NamedItemType:enum" /> | "String" | "Integer" | "Double" | "Boolean" | "Range" |
          "Error" | "Array"
  - name: value
    uid: 'excel!Excel.NamedItem#value:member'
    package: excel!
    fullName: value
    summary: >-
      Represents the value computed by the name's formula. For a named range, it will return the range address. This API
      returns the \#VALUE! error in the Excel UI if it refers to a user-defined function.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly value: any;'
      return:
        type: any
  - name: visible
    uid: 'excel!Excel.NamedItem#visible:member'
    package: excel!
    fullName: visible
    summary: Specifies if the object is visible.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'visible: boolean;'
      return:
        type: boolean
  - name: worksheet
    uid: 'excel!Excel.NamedItem#worksheet:member'
    package: excel!
    fullName: worksheet
    summary: >-
      Returns the worksheet on which the named item is scoped to. Throws an error if the item is scoped to the workbook
      instead.
    remarks: '\[ [API set: ExcelApi 1.4](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type: '<xref uid="excel!Excel.Worksheet:class" />'
  - name: worksheetOrNullObject
    uid: 'excel!Excel.NamedItem#worksheetOrNullObject:member'
    package: excel!
    fullName: worksheetOrNullObject
    summary: >-
      Returns the worksheet to which the named item is scoped. If the item is scoped to the workbook instead, then this
      method returns an object with its `isNullObject` property set to `true`<!-- -->. For further information, see
      [*OrNullObject methods and
      properties](https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: ExcelApi 1.4](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
      return:
        type: '<xref uid="excel!Excel.Worksheet:class" />'
methods:
  - name: delete()
    uid: 'excel!Excel.NamedItem#delete:member(1)'
    package: excel!
    fullName: delete()
    summary: Deletes the given name.
    remarks: >-
      \[ [API set: ExcelApi 1.4](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/34-named-item/create-and-remove-named-item.yaml


      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Sample");
          const totalName = sheet.names.getItemOrNullObject("TotalAmount");
          totalName.load();
          await context.sync();

          if (totalName.value) {
              totalName.delete();

              // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.
              sheet.getRange("D11").values = [["=SUM(ExpensesTable[AMOUNT])"]];
          } else {
              console.log("No named item created for the formula.");
          }

          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: ''
  - name: getRange()
    uid: 'excel!Excel.NamedItem#getRange:member(1)'
    package: excel!
    fullName: getRange()
    summary: >-
      Returns the range object that is associated with the name. Throws an error if the named item's type is not a
      range.
    remarks: |-
      \[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

      #### Examples

      ```TypeScript
      // Returns the Range object that is associated with the name.
      // Returns `null` if the name is not of type Range.
      // Note: This API currently supports only the Workbook scoped items.
      await Excel.run(async (context) => { 
          const names = context.workbook.names;
          const range = names.getItem('MyRange').getRange();
          range.load('address');
          await context.sync();

          console.log(range.address);
      });
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: ''
  - name: getRangeOrNullObject()
    uid: 'excel!Excel.NamedItem#getRangeOrNullObject:member(1)'
    package: excel!
    fullName: getRangeOrNullObject()
    summary: >-
      Returns the range object that is associated with the name. If the named item's type is not a range, then this
      method returns an object with its `isNullObject` property set to `true`<!-- -->. For further information, see
      [*OrNullObject methods and
      properties](https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: ExcelApi 1.4](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: ''
  - name: load(options)
    uid: 'excel!Excel.NamedItem#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="excel!Excel.Interfaces.NamedItemLoadOptions:interface" />'
      return:
        type: '<xref uid="excel!Excel.NamedItem:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.NamedItem#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.NamedItem:class" />'
        description: |-


          #### Examples

          ```TypeScript
          await Excel.run(async (context) => { 
              const names = context.workbook.names;
              const namedItem = names.getItem('MyRange');
              namedItem.load('type');
              await context.sync();
              
              console.log(namedItem.type);
          });
          ```
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.NamedItem#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.NamedItem;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.NamedItem:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'excel!Excel.NamedItem#set:member(1)'
    package: excel!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="excel!Excel.Interfaces.NamedItemUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'excel!Excel.NamedItem#set:member(2)'
    package: excel!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.NamedItem): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="excel!Excel.NamedItem:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.NamedItem#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that's
      passed to it.) Whereas the original `Excel.NamedItem` object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.NamedItemData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.NamedItemData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
