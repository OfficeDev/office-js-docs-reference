### YamlMime:TSType
name: Excel.FunctionResult
uid: 'excel!Excel.FunctionResult:class'
package: excel!
fullName: Excel.FunctionResult
summary: >-
  An object containing the result of a function-evaluation operation


  \[ [API set: ExcelApi
  1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'excel!Excel.FunctionResult#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: error
    uid: 'excel!Excel.FunctionResult#error:member'
    package: excel!
    fullName: error
    summary: >-
      Error value (such as "\#DIV/0") representing the error. If the error
      string is not set, then the function succeeded, and its result is written
      to the Value field. The error is always in the English locale.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly error: string;'
      return:
        type: string
  - name: value
    uid: 'excel!Excel.FunctionResult#value:member'
    package: excel!
    fullName: value
    summary: >-
      The value of function evaluation. The value field will be populated only
      if no error has occurred (i.e., the Error property is not set).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly value: T;'
      return:
        type: T
methods:
  - name: load(options)
    uid: 'excel!Excel.FunctionResult#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.FunctionResultLoadOptions):
        FunctionResult<T>;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref
            uid="excel!Excel.Interfaces.FunctionResultLoadOptions:interface" />
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;T&gt;'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.FunctionResult#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): FunctionResult<T>;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;T&gt;'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.FunctionResult#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): FunctionResult<T>;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;T&gt;'
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.FunctionResult#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original FunctionResult<T>
      object is an API object, the `toJSON` method returns a plain JavaScript
      object (typed as `Interfaces.FunctionResultData<T>`<!-- -->) that contains
      shallow copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Interfaces.FunctionResultData<T>;'
      return:
        type: >-
          <xref uid="excel!Excel.Interfaces.FunctionResultData:interface"
          />&lt;T&gt;
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
