### YamlMime:TSType
name: Office.EnhancedLocation
uid: 'outlook!Office.EnhancedLocation:interface'
package: outlook!
fullName: Office.EnhancedLocation
summary: Represents the set of locations on an appointment.
remarks: >-
  \[ [API set: Mailbox 1.8](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


  **[Minimum permission
  level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
  **read item**


  **[Applicable Outlook
  mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
  Compose or Read
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'addAsync(locationIdentifiers, options, callback)'
    uid: 'outlook!Office.EnhancedLocation#addAsync:member(1)'
    package: outlook!
    fullName: 'addAsync(locationIdentifiers, options, callback)'
    summary: Adds to the set of locations associated with the appointment.
    remarks: >-
      \[ [API set: Mailbox 1.8](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose


      **Errors**:


      - `InvalidFormatError`<!-- -->: The format of the specified data object is not valid.


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/90-other-item-apis/get-add-remove-enhancedlocation-appointment.yaml


      const locations = [
        {
          id: "Contoso",
          type: Office.MailboxEnums.LocationType.Custom
        },
        {
          id: "room500@test.com",
          type: Office.MailboxEnums.LocationType.Room
        }
      ];

      Office.context.mailbox.item.enhancedLocation.addAsync(locations, (result) => {
        if (result.status === Office.AsyncResultStatus.Succeeded) {
          console.log(`Successfully added locations ${JSON.stringify(locations)}`);
        } else {
          console.error(`Failed to add locations. Error message: ${result.error.message}`);
        }
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        addAsync(locationIdentifiers: LocationIdentifier[], options: Office.AsyncContextOptions, callback?:
        (asyncResult: Office.AsyncResult<void>) => void): void;
      parameters:
        - id: locationIdentifiers
          description: The locations to be added to the current list of locations.
          type: '<xref uid="outlook!Office.LocationIdentifier:interface" />[]'
        - id: options
          description: >-
            An object literal that contains one or more of the following properties:- `asyncContext`<!-- -->: Developers
            can provide any object they wish to access in the callback function.
          type: '<xref uid="office!Office.AsyncContextOptions:interface" />'
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object. Check the `status` property of
            `asyncResult` to determine if the call succeeded.
          type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
      return:
        type: void
        description: ''
  - name: 'addAsync(locationIdentifiers, callback)'
    uid: 'outlook!Office.EnhancedLocation#addAsync:member(2)'
    package: outlook!
    fullName: 'addAsync(locationIdentifiers, callback)'
    summary: Adds to the set of locations associated with the appointment.
    remarks: >-
      \[ [API set: Mailbox 1.8](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose


      **Errors**:


      - `InvalidFormatError`<!-- -->: The format of the specified data object is not valid.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        addAsync(locationIdentifiers: LocationIdentifier[], callback?: (asyncResult: Office.AsyncResult<void>) =>
        void): void;
      parameters:
        - id: locationIdentifiers
          description: The locations to be added to the current list of locations.
          type: '<xref uid="outlook!Office.LocationIdentifier:interface" />[]'
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object. Check the `status` property of
            `asyncResult` to determine if the call succeeded.
          type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
      return:
        type: void
        description: ''
  - name: 'getAsync(options, callback)'
    uid: 'outlook!Office.EnhancedLocation#getAsync:member(1)'
    package: outlook!
    fullName: 'getAsync(options, callback)'
    summary: >-
      Gets the set of locations associated with the appointment.


      **Note**: [Personal contact groups](https://support.microsoft.com/office/88ff6c60-0a1d-4b54-8c9d-9e1a71bc3023)
      added as appointment locations aren't returned by this method.
    remarks: >-
      \[ [API set: Mailbox 1.8](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose or Read


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/90-other-item-apis/get-add-remove-enhancedlocation-appointment.yaml


      Office.context.mailbox.item.enhancedLocation.getAsync((result) => {
        if (result.status !== Office.AsyncResultStatus.Succeeded) {
          console.error(`Failed to get locations. Error message: ${result.error.message}`);
          return;
        }
        const places = result.value;
        if (places && places.length > 0) {
          result.value.forEach(function(place) {
            console.log(`Location: ${place.displayName} (type: ${place.locationIdentifier.type})`);
            if (place.locationIdentifier.type === Office.MailboxEnums.LocationType.Room) {
              console.log("Email address: " + place.emailAddress);
            }
          });
        } else {
          console.log("There are no locations.");
        }
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getAsync(options: Office.AsyncContextOptions, callback?: (asyncResult:
        Office.AsyncResult<LocationDetails[]>) => void): void;
      parameters:
        - id: options
          description: >-
            An object literal that contains one or more of the following properties:- `asyncContext`<!-- -->: Developers
            can provide any object they wish to access in the callback function.
          type: '<xref uid="office!Office.AsyncContextOptions:interface" />'
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object.
          type: >-
            (asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref
            uid="outlook!Office.LocationDetails:interface" />[]&gt;) =&gt; void
      return:
        type: void
        description: ''
  - name: getAsync(callback)
    uid: 'outlook!Office.EnhancedLocation#getAsync:member(2)'
    package: outlook!
    fullName: getAsync(callback)
    summary: >-
      Gets the set of locations associated with the appointment.


      **Note**: [Personal contact groups](https://support.microsoft.com/office/88ff6c60-0a1d-4b54-8c9d-9e1a71bc3023)
      added as appointment locations aren't returned by this method.
    remarks: >-
      \[ [API set: Mailbox 1.8](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose or Read
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getAsync(callback?: (asyncResult: Office.AsyncResult<LocationDetails[]>) => void): void;'
      parameters:
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object.
          type: >-
            (asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref
            uid="outlook!Office.LocationDetails:interface" />[]&gt;) =&gt; void
      return:
        type: void
        description: ''
  - name: 'removeAsync(locationIdentifiers, options, callback)'
    uid: 'outlook!Office.EnhancedLocation#removeAsync:member(1)'
    package: outlook!
    fullName: 'removeAsync(locationIdentifiers, options, callback)'
    summary: >-
      Removes the set of locations associated with the appointment.


      If there are multiple locations with the same name, all matching locations will be removed even if only one was
      specified in `locationIdentifiers`<!-- -->.
    remarks: >-
      \[ [API set: Mailbox 1.8](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/90-other-item-apis/get-add-remove-enhancedlocation-appointment.yaml


      const locations = [
        {
          id: "Contoso",
          type: Office.MailboxEnums.LocationType.Custom
        },
        {
          id: "room500@test.com",
          type: Office.MailboxEnums.LocationType.Room
        }
      ];

      Office.context.mailbox.item.enhancedLocation.removeAsync(locations, (result) => {
        if (result.status === Office.AsyncResultStatus.Succeeded) {
          console.log(`Successfully removed locations ${JSON.stringify(locations)}`);
        } else {
          console.error(`Failed to remove locations. Error message: ${result.error.message}`);
        }
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        removeAsync(locationIdentifiers: LocationIdentifier[], options: Office.AsyncContextOptions, callback?:
        (asyncResult: Office.AsyncResult<void>) => void): void;
      parameters:
        - id: locationIdentifiers
          description: The locations to be removed from the current list of locations.
          type: '<xref uid="outlook!Office.LocationIdentifier:interface" />[]'
        - id: options
          description: >-
            An object literal that contains one or more of the following properties:- `asyncContext`<!-- -->: Developers
            can provide any object they wish to access in the callback function.
          type: '<xref uid="office!Office.AsyncContextOptions:interface" />'
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object. Check the `status` property of
            `asyncResult` to determine if the call succeeded.
          type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
      return:
        type: void
        description: ''
  - name: 'removeAsync(locationIdentifiers, callback)'
    uid: 'outlook!Office.EnhancedLocation#removeAsync:member(2)'
    package: outlook!
    fullName: 'removeAsync(locationIdentifiers, callback)'
    summary: >-
      Removes the set of locations associated with the appointment.


      If there are multiple locations with the same name, all matching locations will be removed even if only one was
      specified in `locationIdentifiers`<!-- -->.
    remarks: >-
      \[ [API set: Mailbox 1.8](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        removeAsync(locationIdentifiers: LocationIdentifier[], callback?: (asyncResult: Office.AsyncResult<void>) =>
        void): void;
      parameters:
        - id: locationIdentifiers
          description: The locations to be removed from the current list of locations.
          type: '<xref uid="outlook!Office.LocationIdentifier:interface" />[]'
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object. Check the `status` property of
            `asyncResult` to determine if the call succeeded.
          type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
      return:
        type: void
        description: ''
