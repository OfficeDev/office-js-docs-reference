### YamlMime:TSType
name: Office.SpamReportingEventArgs
uid: 'outlook!Office.SpamReportingEventArgs:interface'
package: outlook!
fullName: Office.SpamReportingEventArgs
summary: >-
  Provides information about the `Office.EventType.SpamReporting` event that occurs when an unsolicited message is
  reported.
remarks: |-
  \[ [API set: Mailbox 1.14](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]

  #### Examples

  ```TypeScript
  // This example handles a SpamReporting event to process a reported spam or phishing message.
  function onSpamReport(event) {
      if (event.type === "SpamReporting") {
          const reportedOptions = event.options;
          const additionalInfo = event.freeText;

          // Run additional processing operations here.

          // Signal that the event has completed processing.
          event.completed({
              moveItemTo: Office.MailboxEnums.MoveSpamItemTo.CustomFolder,
              folderName: "Reported Messages",
              onErrorDeleteItem: true,
              showPostProcessingDialog: {
                  title: "Contoso Spam Reporting",
                  description: "Thank you for reporting this message."
              }
          });
      }
  }
  ```
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: freeText
    uid: 'outlook!Office.SpamReportingEventArgs#freeText:member'
    package: outlook!
    fullName: freeText
    summary: The text provided by the user in the preprocessing dialog of a spam-reporting add-in.
    remarks: >-
      \[ [API set: Mailbox 1.14](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      To add an optional text box to the preprocessing dialog of your spam-reporting add-in, you must configure the
      [FreeTextLabel](https://learn.microsoft.com/javascript/api/manifest/preprocessingdialog#child-elements) element in
      the manifest of your add-in.


      To learn more about how to develop a spam-reporting add-in, see [Implement an integrated spam-reporting
      add-in](https://learn.microsoft.com/office/dev/add-ins/outlook/spam-reporting)<!-- -->.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'freeText: string;'
      return:
        type: string
  - name: options
    uid: 'outlook!Office.SpamReportingEventArgs#options:member'
    package: outlook!
    fullName: options
    summary: >-
      Returns `true` for each reporting option selected by the user in the preprocessing dialog of a spam-reporting
      add-in.
    remarks: >-
      \[ [API set: Mailbox 1.14](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      The order of the booleans in the array corresponds to the order of the reporting options specified in the
      [ReportingOptions](https://learn.microsoft.com/javascript/api/manifest/reportingoptions) element of your add-in's
      manifest.


      To learn more about how to develop a spam-reporting add-in, see [Implement an integrated spam-reporting
      add-in](https://learn.microsoft.com/office/dev/add-ins/outlook/spam-reporting)<!-- -->.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'options: boolean[];'
      return:
        type: 'boolean[]'
  - name: type
    uid: 'outlook!Office.SpamReportingEventArgs#type:member'
    package: outlook!
    fullName: type
    summary: >-
      The type of event that was raised. For details, see
      [Office.EventType](https://learn.microsoft.com/javascript/api/office/office.eventtype)<!-- -->.
    remarks: '\[ [API set: Mailbox 1.14](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type: "SpamReporting";'
      return:
        type: '"SpamReporting"'
