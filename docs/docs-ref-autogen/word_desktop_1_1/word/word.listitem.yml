### YamlMime:TSType
name: Word.ListItem
uid: 'word!Word.ListItem:class'
package: word!
fullName: Word.ListItem
summary: Represents the paragraph list item format.
remarks: >-
  \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/20-lists/insert-list.yaml


  // This example starts a new list with the second paragraph.

  await Word.run(async (context) => {
    const paragraphs: Word.ParagraphCollection = context.document.body.paragraphs;
    paragraphs.load("$none");

    await context.sync();

    // Start new list using the second paragraph.
    const list: Word.List = paragraphs.items[1].startNewList();
    list.load("$none");

    await context.sync();

    // To add new items to the list, use Start or End on the insertLocation parameter.
    list.insertParagraph("New list item at the start of the list", "Start");
    const paragraph: Word.Paragraph = list.insertParagraph("New list item at the end of the list (set to list level 5)", "End");

    // Set up list level for the list item.
    paragraph.listItem.level = 4;

    // To add paragraphs outside the list, use Before or After.
    list.insertParagraph("New paragraph goes after (not part of the list)", "After");

    await context.sync();
  });

  ```
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'word!Word.ListItem#context:member'
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="word!Word.RequestContext:class" />'
  - name: level
    uid: 'word!Word.ListItem#level:member'
    package: word!
    fullName: level
    summary: Specifies the level of the item in the list.
    remarks: >-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/20-lists/insert-list.yaml


      // This example starts a new list with the second paragraph.

      await Word.run(async (context) => {
        const paragraphs: Word.ParagraphCollection = context.document.body.paragraphs;
        paragraphs.load("$none");

        await context.sync();

        // Start new list using the second paragraph.
        const list: Word.List = paragraphs.items[1].startNewList();
        list.load("$none");

        await context.sync();

        // To add new items to the list, use Start or End on the insertLocation parameter.
        list.insertParagraph("New list item at the start of the list", "Start");
        const paragraph: Word.Paragraph = list.insertParagraph("New list item at the end of the list (set to list level 5)", "End");

        // Set up list level for the list item.
        paragraph.listItem.level = 4;

        // To add paragraphs outside the list, use Before or After.
        list.insertParagraph("New paragraph goes after (not part of the list)", "After");

        await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'level: number;'
      return:
        type: number
  - name: listString
    uid: 'word!Word.ListItem#listString:member'
    package: word!
    fullName: listString
    summary: 'Gets the list item bullet, number, or picture as a string.'
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly listString: string;'
      return:
        type: string
  - name: siblingIndex
    uid: 'word!Word.ListItem#siblingIndex:member'
    package: word!
    fullName: siblingIndex
    summary: Gets the list item order number in relation to its siblings.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly siblingIndex: number;'
      return:
        type: number
methods:
  - name: getAncestor(parentOnly)
    uid: 'word!Word.ListItem#getAncestor:member(1)'
    package: word!
    fullName: getAncestor(parentOnly)
    summary: >-
      Gets the list item parent, or the closest ancestor if the parent doesn't exist. Throws an `ItemNotFound` error if
      the list item has no ancestor.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getAncestor(parentOnly?: boolean): Word.Paragraph;'
      parameters:
        - id: parentOnly
          description: >-
            Optional. Specifies only the list item's parent will be returned. The default is false that specifies to get
            the lowest ancestor.
          type: boolean
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: getAncestorOrNullObject(parentOnly)
    uid: 'word!Word.ListItem#getAncestorOrNullObject:member(1)'
    package: word!
    fullName: getAncestorOrNullObject(parentOnly)
    summary: >-
      Gets the list item parent, or the closest ancestor if the parent doesn't exist. If the list item has no ancestor,
      then this method will return an object with its `isNullObject` property set to `true`<!-- -->. For further
      information, see [*OrNullObject methods and
      properties](https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getAncestorOrNullObject(parentOnly?: boolean): Word.Paragraph;'
      parameters:
        - id: parentOnly
          description: >-
            Optional. Specifies only the list item's parent will be returned. The default is false that specifies to get
            the lowest ancestor.
          type: boolean
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: getDescendants(directChildrenOnly)
    uid: 'word!Word.ListItem#getDescendants:member(1)'
    package: word!
    fullName: getDescendants(directChildrenOnly)
    summary: Gets all descendant list items of the list item.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getDescendants(directChildrenOnly?: boolean): Word.ParagraphCollection;'
      parameters:
        - id: directChildrenOnly
          description: >-
            Optional. Specifies only the list item's direct children will be returned. The default is false that
            indicates to get all descendant items.
          type: boolean
      return:
        type: '<xref uid="word!Word.ParagraphCollection:class" />'
        description: ''
  - name: load(options)
    uid: 'word!Word.ListItem#load:member(1)'
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Word.Interfaces.ListItemLoadOptions): Word.ListItem;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="word!Word.Interfaces.ListItemLoadOptions:interface" />'
      return:
        type: '<xref uid="word!Word.ListItem:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'word!Word.ListItem#load:member(2)'
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.ListItem;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="word!Word.ListItem:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'word!Word.ListItem#load:member(3)'
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.ListItem;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="word!Word.ListItem:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'word!Word.ListItem#set:member(1)'
    package: word!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.ListItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="word!Word.Interfaces.ListItemUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'word!Word.ListItem#set:member(2)'
    package: word!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Word.ListItem): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="word!Word.ListItem:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'word!Word.ListItem#toJSON:member(1)'
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that's
      passed to it.) Whereas the original `Word.ListItem` object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Word.Interfaces.ListItemData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.ListItemData;'
      return:
        type: '<xref uid="word!Word.Interfaces.ListItemData:interface" />'
        description: ''
  - name: track()
    uid: 'word!Word.ListItem#track:member(1)'
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for
      [context.trackedObjects.add(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and
      get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the
      object to the tracked object collection when the object was first created. If this object is part of a collection,
      you should also track the parent collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.ListItem;'
      return:
        type: '<xref uid="word!Word.ListItem:class" />'
        description: ''
  - name: untrack()
    uid: 'word!Word.ListItem#untrack:member(1)'
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so please remember to free any objects you add,
      once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.ListItem;'
      return:
        type: '<xref uid="word!Word.ListItem:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
