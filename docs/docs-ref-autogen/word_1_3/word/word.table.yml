### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Table:class'
    summary: |-
      Represents a table in a Word document.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: Word.Table
    fullName: Word.Table
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Table#addColumns:member(1)'
      - 'word!Word.Table#addColumns:member(2)'
      - 'word!Word.Table#addRows:member(1)'
      - 'word!Word.Table#addRows:member(2)'
      - 'word!Word.Table#alignment:member'
      - 'word!Word.Table#autoFitWindow:member(1)'
      - 'word!Word.Table#clear:member(1)'
      - 'word!Word.Table#context:member'
      - 'word!Word.Table#delete:member(1)'
      - 'word!Word.Table#deleteColumns:member(1)'
      - 'word!Word.Table#deleteRows:member(1)'
      - 'word!Word.Table#distributeColumns:member(1)'
      - 'word!Word.Table#font:member'
      - 'word!Word.Table#getBorder:member(1)'
      - 'word!Word.Table#getBorder:member(2)'
      - 'word!Word.Table#getCell:member(1)'
      - 'word!Word.Table#getCellOrNullObject:member(1)'
      - 'word!Word.Table#getCellPadding:member(1)'
      - 'word!Word.Table#getCellPadding:member(2)'
      - 'word!Word.Table#getNext:member(1)'
      - 'word!Word.Table#getNextOrNullObject:member(1)'
      - 'word!Word.Table#getParagraphAfter:member(1)'
      - 'word!Word.Table#getParagraphAfterOrNullObject:member(1)'
      - 'word!Word.Table#getParagraphBefore:member(1)'
      - 'word!Word.Table#getParagraphBeforeOrNullObject:member(1)'
      - 'word!Word.Table#getRange:member(1)'
      - 'word!Word.Table#getRange:member(2)'
      - 'word!Word.Table#headerRowCount:member'
      - 'word!Word.Table#horizontalAlignment:member'
      - 'word!Word.Table#insertContentControl:member(1)'
      - 'word!Word.Table#insertParagraph:member(1)'
      - 'word!Word.Table#insertParagraph:member(2)'
      - 'word!Word.Table#insertTable:member(1)'
      - 'word!Word.Table#insertTable:member(2)'
      - 'word!Word.Table#isUniform:member'
      - 'word!Word.Table#load:member(1)'
      - 'word!Word.Table#load:member(2)'
      - 'word!Word.Table#load:member(3)'
      - 'word!Word.Table#nestingLevel:member'
      - 'word!Word.Table#parentBody:member'
      - 'word!Word.Table#parentContentControl:member'
      - 'word!Word.Table#parentContentControlOrNullObject:member'
      - 'word!Word.Table#parentTable:member'
      - 'word!Word.Table#parentTableCell:member'
      - 'word!Word.Table#parentTableCellOrNullObject:member'
      - 'word!Word.Table#parentTableOrNullObject:member'
      - 'word!Word.Table#rowCount:member'
      - 'word!Word.Table#rows:member'
      - 'word!Word.Table#search:member(1)'
      - 'word!Word.Table#select:member(1)'
      - 'word!Word.Table#select:member(2)'
      - 'word!Word.Table#set:member(1)'
      - 'word!Word.Table#set:member(2)'
      - 'word!Word.Table#setCellPadding:member(1)'
      - 'word!Word.Table#setCellPadding:member(2)'
      - 'word!Word.Table#shadingColor:member'
      - 'word!Word.Table#style:member'
      - 'word!Word.Table#styleBandedColumns:member'
      - 'word!Word.Table#styleBandedRows:member'
      - 'word!Word.Table#styleBuiltIn:member'
      - 'word!Word.Table#styleFirstColumn:member'
      - 'word!Word.Table#styleLastColumn:member'
      - 'word!Word.Table#styleTotalRow:member'
      - 'word!Word.Table#tables:member'
      - 'word!Word.Table#toJSON:member(1)'
      - 'word!Word.Table#track:member(1)'
      - 'word!Word.Table#untrack:member(1)'
      - 'word!Word.Table#values:member'
      - 'word!Word.Table#verticalAlignment:member'
      - 'word!Word.Table#width:member'
  - uid: 'word!Word.Table#addColumns:member(1)'
    summary: >-
      Adds columns to the start or end of the table, using the first or last existing column as a template. This is
      applicable to uniform tables. The string values, if specified, are set in the newly inserted rows.


      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'addColumns(insertLocation, columnCount, values)'
    fullName: 'addColumns(insertLocation, columnCount, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addColumns(insertLocation: Word.InsertLocation, columnCount: number, values?: string[][]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: insertLocation
          description: 'Required. It can be ''Start'' or ''End'', corresponding to the appropriate side of the table.'
          type:
            - 'word!Word.InsertLocation:enum'
        - id: columnCount
          description: Required. Number of columns to add.
          type:
            - number
        - id: values
          description: Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
          type:
            - 'string[][]'
  - uid: 'word!Word.Table#addColumns:member(2)'
    summary: >-
      Adds columns to the start or end of the table, using the first or last existing column as a template. This is
      applicable to uniform tables. The string values, if specified, are set in the newly inserted rows.


      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'addColumns(insertLocationString, columnCount, values)'
    fullName: 'addColumns(insertLocationString, columnCount, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addColumns(insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", columnCount: number, values?:
        string[][]): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: insertLocationString
          description: 'Required. It can be ''Start'' or ''End'', corresponding to the appropriate side of the table.'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: columnCount
          description: Required. Number of columns to add.
          type:
            - number
        - id: values
          description: Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
          type:
            - 'string[][]'
  - uid: 'word!Word.Table#addRows:member(1)'
    summary: >-
      Adds rows to the start or end of the table, using the first or last existing row as a template. The string values,
      if specified, are set in the newly inserted rows.


      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'addRows(insertLocation, rowCount, values)'
    fullName: 'addRows(insertLocation, rowCount, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addRows(insertLocation: Word.InsertLocation, rowCount: number, values?: string[][]): Word.TableRowCollection;'
      return:
        type:
          - 'word!Word.TableRowCollection:class'
        description: ''
      parameters:
        - id: insertLocation
          description: Required. It can be 'Start' or 'End'.
          type:
            - 'word!Word.InsertLocation:enum'
        - id: rowCount
          description: Required. Number of rows to add.
          type:
            - number
        - id: values
          description: Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
          type:
            - 'string[][]'
  - uid: 'word!Word.Table#addRows:member(2)'
    summary: >-
      Adds rows to the start or end of the table, using the first or last existing row as a template. The string values,
      if specified, are set in the newly inserted rows.


      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'addRows(insertLocationString, rowCount, values)'
    fullName: 'addRows(insertLocationString, rowCount, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addRows(insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", rowCount: number, values?:
        string[][]): Word.TableRowCollection;
      return:
        type:
          - 'word!Word.TableRowCollection:class'
        description: ''
      parameters:
        - id: insertLocationString
          description: Required. It can be 'Start' or 'End'.
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: rowCount
          description: Required. Number of rows to add.
          type:
            - number
        - id: values
          description: Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
          type:
            - 'string[][]'
  - uid: 'word!Word.Table#alignment:member'
    summary: |-
      Gets or sets the alignment of the table against the page column. The value can be 'Left', 'Centered', or 'Right'.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: alignment
    fullName: alignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type:
          - 'word!Word.Table#alignment~0:complex'
  - uid: 'word!Word.Table#autoFitWindow:member(1)'
    summary: |-
      Autofits the table columns to the width of the window.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: autoFitWindow()
    fullName: autoFitWindow()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'autoFitWindow(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'word!Word.Table#clear:member(1)'
    summary: |-
      Clears the contents of the table.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'word!Word.Table#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Table#delete:member(1)'
    summary: |-
      Deletes the entire table.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'word!Word.Table#deleteColumns:member(1)'
    summary: |-
      Deletes specific columns. This is applicable to uniform tables.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'deleteColumns(columnIndex, columnCount)'
    fullName: 'deleteColumns(columnIndex, columnCount)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteColumns(columnIndex: number, columnCount?: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: columnIndex
          description: Required. The first column to delete.
          type:
            - number
        - id: columnCount
          description: Optional. The number of columns to delete. Default 1.
          type:
            - number
  - uid: 'word!Word.Table#deleteRows:member(1)'
    summary: |-
      Deletes specific rows.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'deleteRows(rowIndex, rowCount)'
    fullName: 'deleteRows(rowIndex, rowCount)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteRows(rowIndex: number, rowCount?: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: rowIndex
          description: Required. The first row to delete.
          type:
            - number
        - id: rowCount
          description: Optional. The number of rows to delete. Default 1.
          type:
            - number
  - uid: 'word!Word.Table#distributeColumns:member(1)'
    summary: |-
      Distributes the column widths evenly. This is applicable to uniform tables.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: distributeColumns()
    fullName: distributeColumns()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'distributeColumns(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'word!Word.Table#font:member'
    summary: |-
      Gets the font. Use this to get and set font name, size, color, and other properties. Read-only.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
  - uid: 'word!Word.Table#getBorder:member(1)'
    summary: |-
      Gets the border style for the specified border.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getBorder(borderLocation)
    fullName: getBorder(borderLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getBorder(borderLocation: Word.BorderLocation): Word.TableBorder;'
      return:
        type:
          - 'word!Word.TableBorder:class'
        description: ''
      parameters:
        - id: borderLocation
          description: Required. The border location.
          type:
            - 'word!Word.BorderLocation:enum'
  - uid: 'word!Word.Table#getBorder:member(2)'
    summary: |-
      Gets the border style for the specified border.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getBorder(borderLocationString)
    fullName: getBorder(borderLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getBorder(borderLocationString: "Top" | "Left" | "Bottom" | "Right" | "InsideHorizontal" | "InsideVertical" |
        "Inside" | "Outside" | "All"): Word.TableBorder;
      return:
        type:
          - 'word!Word.TableBorder:class'
        description: ''
      parameters:
        - id: borderLocationString
          description: Required. The border location.
          type:
            - '"Top" | "Left" | "Bottom" | "Right" | "InsideHorizontal" | "InsideVertical" | "Inside" | "Outside" | "All"'
  - uid: 'word!Word.Table#getCell:member(1)'
    summary: |-
      Gets the table cell at a specified row and column. Throws an error if the specified table cell does not exist.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'getCell(rowIndex, cellIndex)'
    fullName: 'getCell(rowIndex, cellIndex)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(rowIndex: number, cellIndex: number): Word.TableCell;'
      return:
        type:
          - 'word!Word.TableCell:class'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/40-tables/table-cell-access.yaml

          await Word.run(async (context) => {
            let firstCell = context.document.body.tables.getFirst().getCell(0, 0).body;
            firstCell.load("text");

            await context.sync();
            console.log("First cell text is " + firstCell.text);
          });

          ```
      parameters:
        - id: rowIndex
          description: Required. The index of the row.
          type:
            - number
        - id: cellIndex
          description: Required. The index of the cell in the row.
          type:
            - number
  - uid: 'word!Word.Table#getCellOrNullObject:member(1)'
    summary: >-
      Gets the table cell at a specified row and column. Returns a null object if the specified table cell does not
      exist.


      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'getCellOrNullObject(rowIndex, cellIndex)'
    fullName: 'getCellOrNullObject(rowIndex, cellIndex)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCellOrNullObject(rowIndex: number, cellIndex: number): Word.TableCell;'
      return:
        type:
          - 'word!Word.TableCell:class'
        description: ''
      parameters:
        - id: rowIndex
          description: Required. The index of the row.
          type:
            - number
        - id: cellIndex
          description: Required. The index of the cell in the row.
          type:
            - number
  - uid: 'word!Word.Table#getCellPadding:member(1)'
    summary: |-
      Gets cell padding in points.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getCellPadding(cellPaddingLocation)
    fullName: getCellPadding(cellPaddingLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCellPadding(cellPaddingLocation: Word.CellPaddingLocation): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'word!Word.Table#getCellPadding~0:complex'
        description: ''
      parameters:
        - id: cellPaddingLocation
          description: 'Required. The cell padding location can be ''Top'', ''Left'', ''Bottom'', or ''Right''.'
          type:
            - 'word!Word.CellPaddingLocation:enum'
  - uid: 'word!Word.Table#getCellPadding:member(2)'
    summary: |-
      Gets cell padding in points.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getCellPadding(cellPaddingLocationString)
    fullName: getCellPadding(cellPaddingLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getCellPadding(cellPaddingLocationString: "Top" | "Left" | "Bottom" | "Right"):
        OfficeExtension.ClientResult<number>;
      return:
        type:
          - 'word!Word.Table#getCellPadding~1:complex'
        description: ''
      parameters:
        - id: cellPaddingLocationString
          description: 'Required. The cell padding location can be ''Top'', ''Left'', ''Bottom'', or ''Right''.'
          type:
            - '"Top" | "Left" | "Bottom" | "Right"'
  - uid: 'word!Word.Table#getNext:member(1)'
    summary: |-
      Gets the next table. Throws an error if this table is the last one.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getNext()
    fullName: getNext()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNext(): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
  - uid: 'word!Word.Table#getNextOrNullObject:member(1)'
    summary: |-
      Gets the next table. Returns a null object if this table is the last one.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getNextOrNullObject()
    fullName: getNextOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextOrNullObject(): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
  - uid: 'word!Word.Table#getParagraphAfter:member(1)'
    summary: |-
      Gets the paragraph after the table. Throws an error if there isn't a paragraph after the table.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getParagraphAfter()
    fullName: getParagraphAfter()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getParagraphAfter(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Table#getParagraphAfterOrNullObject:member(1)'
    summary: |-
      Gets the paragraph after the table. Returns a null object if there isn't a paragraph after the table.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getParagraphAfterOrNullObject()
    fullName: getParagraphAfterOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getParagraphAfterOrNullObject(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Table#getParagraphBefore:member(1)'
    summary: |-
      Gets the paragraph before the table. Throws an error if there isn't a paragraph before the table.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getParagraphBefore()
    fullName: getParagraphBefore()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getParagraphBefore(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Table#getParagraphBeforeOrNullObject:member(1)'
    summary: |-
      Gets the paragraph before the table. Returns a null object if there isn't a paragraph before the table.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getParagraphBeforeOrNullObject()
    fullName: getParagraphBeforeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getParagraphBeforeOrNullObject(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Table#getRange:member(1)'
    summary: |-
      Gets the range that contains this table, or the range at the start or end of the table.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getRange(rangeLocation)
    fullName: getRange(rangeLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: rangeLocation
          description: 'Optional. The range location can be ''Whole'', ''Start'', ''End'', or ''After''.'
          type:
            - 'word!Word.RangeLocation:enum'
  - uid: 'word!Word.Table#getRange:member(2)'
    summary: |-
      Gets the range that contains this table, or the range at the start or end of the table.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getRange(rangeLocationString)
    fullName: getRange(rangeLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: rangeLocationString
          description: 'Optional. The range location can be ''Whole'', ''Start'', ''End'', or ''After''.'
          type:
            - '"Whole" | "Start" | "End" | "Before" | "After" | "Content"'
  - uid: 'word!Word.Table#headerRowCount:member'
    summary: |-
      Gets and sets the number of header rows.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: headerRowCount
    fullName: headerRowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'headerRowCount: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Table#horizontalAlignment:member'
    summary: >-
      Gets and sets the horizontal alignment of every cell in the table. The value can be 'Left', 'Centered', 'Right',
      or 'Justified'.


      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: horizontalAlignment
    fullName: horizontalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'horizontalAlignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type:
          - 'word!Word.Table#horizontalAlignment~0:complex'
  - uid: 'word!Word.Table#insertContentControl:member(1)'
    summary: |-
      Inserts a content control on the table.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
  - uid: 'word!Word.Table#insertParagraph:member(1)'
    summary: |-
      Inserts a paragraph at the specified location.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: Required. The paragraph text to be inserted.
          type:
            - string
        - id: insertLocation
          description: Required. The value can be 'Before' or 'After'.
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Table#insertParagraph:member(2)'
    summary: |-
      Inserts a paragraph at the specified location.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"):
        Word.Paragraph;
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: Required. The paragraph text to be inserted.
          type:
            - string
        - id: insertLocationString
          description: Required. The value can be 'Before' or 'After'.
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Table#insertTable:member(1)'
    summary: |-
      Inserts a table with the specified number of rows and columns.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]):
        Word.Table;
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
      parameters:
        - id: rowCount
          description: Required. The number of rows in the table.
          type:
            - number
        - id: columnCount
          description: Required. The number of columns in the table.
          type:
            - number
        - id: insertLocation
          description: Required. The value can be 'Before' or 'After'.
          type:
            - 'word!Word.InsertLocation:enum'
        - id: values
          description: Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
          type:
            - 'string[][]'
  - uid: 'word!Word.Table#insertTable:member(2)'
    summary: |-
      Inserts a table with the specified number of rows and columns.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" |
        "Replace", values?: string[][]): Word.Table;
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
      parameters:
        - id: rowCount
          description: Required. The number of rows in the table.
          type:
            - number
        - id: columnCount
          description: Required. The number of columns in the table.
          type:
            - number
        - id: insertLocationString
          description: Required. The value can be 'Before' or 'After'.
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: values
          description: Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
          type:
            - 'string[][]'
  - uid: 'word!Word.Table#isUniform:member'
    summary: |-
      Indicates whether all of the table rows are uniform. Read-only.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: isUniform
    fullName: isUniform
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isUniform: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Table#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Word.Table` - Where option is a comma-delimited string or an array of strings
      that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): Word.Table` - Where option.select is a comma-delimited
      string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the
      navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Table` - Only available on
      collection types. It is similar to the preceding signature. Option.top specifies the maximum number of collection
      items that can be included in the result. Option.skip specifies the number of items that are to be skipped and not
      included in the result. If option.top is specified, the result set will start after skipping the specified number
      of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.TableLoadOptions): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.TableLoadOptions:interface'
  - uid: 'word!Word.Table#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'word!Word.Table#load:member(3)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and
            propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Table#nestingLevel:member'
    summary: |-
      Gets the nesting level of the table. Top-level tables have level 1. Read-only.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: nestingLevel
    fullName: nestingLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly nestingLevel: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Table#parentBody:member'
    summary: |-
      Gets the parent body of the table. Read-only.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: parentBody
    fullName: parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
  - uid: 'word!Word.Table#parentContentControl:member'
    summary: >-
      Gets the content control that contains the table. Throws an error if there isn't a parent content control.
      Read-only.


      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Table#parentContentControlOrNullObject:member'
    summary: >-
      Gets the content control that contains the table. Returns a null object if there isn't a parent content control.
      Read-only.


      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Table#parentTable:member'
    summary: |-
      Gets the table that contains this table. Throws an error if it is not contained in a table. Read-only.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: parentTable
    fullName: parentTable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTable: Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
  - uid: 'word!Word.Table#parentTableCell:member'
    summary: |-
      Gets the table cell that contains this table. Throws an error if it is not contained in a table cell. Read-only.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: parentTableCell
    fullName: parentTableCell
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCell: Word.TableCell;'
      return:
        type:
          - 'word!Word.TableCell:class'
  - uid: 'word!Word.Table#parentTableCellOrNullObject:member'
    summary: >-
      Gets the table cell that contains this table. Returns a null object if it is not contained in a table cell.
      Read-only.


      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: parentTableCellOrNullObject
    fullName: parentTableCellOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
      return:
        type:
          - 'word!Word.TableCell:class'
  - uid: 'word!Word.Table#parentTableOrNullObject:member'
    summary: |-
      Gets the table that contains this table. Returns a null object if it is not contained in a table. Read-only.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: parentTableOrNullObject
    fullName: parentTableOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableOrNullObject: Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
  - uid: 'word!Word.Table#rowCount:member'
    summary: |-
      Gets the number of rows in the table. Read-only.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowCount: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Table#rows:member'
    summary: |-
      Gets all of the table rows. Read-only.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: Word.TableRowCollection;'
      return:
        type:
          - 'word!Word.TableRowCollection:class'
  - uid: 'word!Word.Table#search:member(1)'
    summary: >-
      Performs a search with the specified SearchOptions on the scope of the table object. The search results are a
      collection of range objects.


      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: searchText
          description: Required. The search text.
          type:
            - string
        - id: searchOptions
          description: Optional. Options for the search.
          type:
            - 'word!Word.Table#search~0:complex'
  - uid: 'word!Word.Table#select:member(1)'
    summary: |-
      Selects the table, or the position at the start or end of the table, and navigates the Word UI to it.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionMode
          description: 'Optional. The selection mode can be ''Select'', ''Start'', or ''End''. ''Select'' is the default.'
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Table#select:member(2)'
    summary: |-
      Selects the table, or the position at the start or end of the table, and navigates the Word UI to it.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: 'Optional. The selection mode can be ''Select'', ''Start'', or ''End''. ''Select'' is the default.'
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Table#set:member(1)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Word.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type:
            - 'word!Word.Interfaces.TableUpdateData:interface'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Table#set:member(2)'
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Table:class'
  - uid: 'word!Word.Table#setCellPadding:member(1)'
    summary: |-
      Sets cell padding in points.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'setCellPadding(cellPaddingLocation, cellPadding)'
    fullName: 'setCellPadding(cellPaddingLocation, cellPadding)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setCellPadding(cellPaddingLocation: Word.CellPaddingLocation, cellPadding: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellPaddingLocation
          description: 'Required. The cell padding location can be ''Top'', ''Left'', ''Bottom'', or ''Right''.'
          type:
            - 'word!Word.CellPaddingLocation:enum'
        - id: cellPadding
          description: Required. The cell padding.
          type:
            - number
  - uid: 'word!Word.Table#setCellPadding:member(2)'
    summary: |-
      Sets cell padding in points.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'setCellPadding(cellPaddingLocationString, cellPadding)'
    fullName: 'setCellPadding(cellPaddingLocationString, cellPadding)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setCellPadding(cellPaddingLocationString: "Top" | "Left" | "Bottom" | "Right", cellPadding: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellPaddingLocationString
          description: 'Required. The cell padding location can be ''Top'', ''Left'', ''Bottom'', or ''Right''.'
          type:
            - '"Top" | "Left" | "Bottom" | "Right"'
        - id: cellPadding
          description: Required. The cell padding.
          type:
            - number
  - uid: 'word!Word.Table#shadingColor:member'
    summary: |-
      Gets and sets the shading color. Color is specified in "\#RRGGBB" format or by using the color name.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: shadingColor
    fullName: shadingColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shadingColor: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Table#style:member'
    summary: >-
      Gets or sets the style name for the table. Use this property for custom styles and localized style names. To use
      the built-in styles that are portable between locales, see the "styleBuiltIn" property.


      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Table#styleBandedColumns:member'
    summary: |-
      Gets and sets whether the table has banded columns.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: styleBandedColumns
    fullName: styleBandedColumns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBandedColumns: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Table#styleBandedRows:member'
    summary: |-
      Gets and sets whether the table has banded rows.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: styleBandedRows
    fullName: styleBandedRows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBandedRows: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Table#styleBuiltIn:member'
    summary: >-
      Gets or sets the built-in style name for the table. Use this property for built-in styles that are portable
      between locales. To use custom styles or localized style names, see the "style" property.


      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: styleBuiltIn
    fullName: styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" |
        "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7"
        | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference"
        | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" |
        "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" |
        "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" |
        "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" |
        "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" |
        "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" |
        "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" |
        "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6"
        | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" |
        "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" |
        "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" |
        "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" |
        "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" |
        "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" |
        "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" |
        "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" |
        "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" |
        "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" |
        "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" |
        "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6"
        | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" |
        "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" |
        "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" |
        "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" |
        "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" |
        "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" |
        "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" |
        "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
      return:
        type:
          - 'word!Word.Table#styleBuiltIn~0:complex'
  - uid: 'word!Word.Table#styleFirstColumn:member'
    summary: |-
      Gets and sets whether the table has a first column with a special style.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: styleFirstColumn
    fullName: styleFirstColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleFirstColumn: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Table#styleLastColumn:member'
    summary: |-
      Gets and sets whether the table has a last column with a special style.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: styleLastColumn
    fullName: styleLastColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleLastColumn: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Table#styleTotalRow:member'
    summary: |-
      Gets and sets whether the table has a total (last) row with a special style.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: styleTotalRow
    fullName: styleTotalRow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleTotalRow: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Table#tables:member'
    summary: |-
      Gets the child tables nested one level deeper. Read-only.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Word.TableCollection;'
      return:
        type:
          - 'word!Word.TableCollection:class'
  - uid: 'word!Word.Table#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Word.Table object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Word.Interfaces.TableData`<!-- -->) that contains shallow copies of any loaded child
      properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.TableData;'
      return:
        type:
          - 'word!Word.Interfaces.TableData:interface'
        description: ''
  - uid: 'word!Word.Table#track:member(1)'
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
  - uid: 'word!Word.Table#untrack:member(1)'
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
  - uid: 'word!Word.Table#values:member'
    summary: |-
      Gets and sets the text values in the table, as a 2D Javascript array.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: string[][];'
      return:
        type:
          - 'string[][]'
  - uid: 'word!Word.Table#verticalAlignment:member'
    summary: |-
      Gets and sets the vertical alignment of every cell in the table. The value can be 'Top', 'Center', or 'Bottom'.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: verticalAlignment
    fullName: verticalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'verticalAlignment: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom";'
      return:
        type:
          - 'word!Word.Table#verticalAlignment~0:complex'
  - uid: 'word!Word.Table#width:member'
    summary: |-
      Gets and sets the width of the table in points.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.TableRowCollection:class'
    name: Word.TableRowCollection
  - uid: 'word!Word.Table#alignment~0:complex'
    name: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    fullName: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    spec.typeScript:
      - uid: 'word!Word.Alignment:enum'
        name: Word.Alignment
        fullName: Word.Alignment
      - name: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
        fullName: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.TableBorder:class'
    name: Word.TableBorder
  - uid: 'word!Word.BorderLocation:enum'
    name: Word.BorderLocation
  - uid: 'word!Word.TableCell:class'
    name: Word.TableCell
  - uid: 'word!Word.Table#getCellPadding~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'word!Word.CellPaddingLocation:enum'
    name: Word.CellPaddingLocation
  - uid: 'word!Word.Table#getCellPadding~1:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'word!Word.Table:class'
    name: Word.Table
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.RangeLocation:enum'
    name: Word.RangeLocation
  - uid: 'word!Word.Table#horizontalAlignment~0:complex'
    name: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    fullName: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    spec.typeScript:
      - uid: 'word!Word.Alignment:enum'
        name: Word.Alignment
        fullName: Word.Alignment
      - name: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
        fullName: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.Interfaces.TableLoadOptions:interface'
    name: Word.Interfaces.TableLoadOptions
  - uid: 'word!Word.Body:class'
    name: Word.Body
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.Table#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.TableUpdateData:interface'
    name: Interfaces.TableUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Table#styleBuiltIn~0:complex'
    name: >-
      Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" |
      "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" |
      "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" |
      "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" |
      "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" |
      "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" |
      "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" |
      "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" |
      "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" |
      "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" |
      "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" |
      "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" |
      "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" |
      "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" |
      "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" |
      "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" |
      "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2"
      | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" |
      "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" |
      "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" |
      "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" |
      "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" |
      "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" |
      "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" |
      "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" |
      "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" |
      "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3"
      | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" |
      "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3"
      | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
    fullName: >-
      Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" |
      "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" |
      "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" |
      "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" |
      "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" |
      "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" |
      "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" |
      "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" |
      "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" |
      "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" |
      "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" |
      "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" |
      "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" |
      "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" |
      "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" |
      "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" |
      "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2"
      | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" |
      "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" |
      "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" |
      "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" |
      "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" |
      "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" |
      "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" |
      "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" |
      "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" |
      "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3"
      | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" |
      "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3"
      | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
    spec.typeScript:
      - uid: 'word!Word.Style:enum'
        name: Word.Style
        fullName: Word.Style
      - name: ' | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"'
        fullName: ' | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"'
  - uid: 'word!Word.TableCollection:class'
    name: Word.TableCollection
  - uid: 'word!Word.Interfaces.TableData:interface'
    name: Word.Interfaces.TableData
  - uid: 'word!Word.Table#verticalAlignment~0:complex'
    name: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom"
    fullName: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom"
    spec.typeScript:
      - uid: 'word!Word.VerticalAlignment:enum'
        name: Word.VerticalAlignment
        fullName: Word.VerticalAlignment
      - name: ' | "Mixed" | "Top" | "Center" | "Bottom"'
        fullName: ' | "Mixed" | "Top" | "Center" | "Bottom"'
