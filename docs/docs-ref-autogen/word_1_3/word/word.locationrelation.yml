### YamlMime:TSEnum
name: Word.LocationRelation
uid: 'word!Word.LocationRelation:enum'
package: word!
fullName: Word.LocationRelation
summary: ''
remarks: >-
  \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/35-ranges/compare-location.yaml

  // Compare the location of one paragraph in relation to another paragraph.

  await Word.run(async (context) => {
    const paragraphs = context.document.body.paragraphs;
    paragraphs.load("items");

    await context.sync();

    const firstParagraphAsRange = paragraphs.items[0].getRange();
    const secondParagraphAsRange = paragraphs.items[1].getRange();

    const comparedLocation = firstParagraphAsRange.compareLocationWith(secondParagraphAsRange);

    await context.sync();

    console.log(`Location of the first paragraph in relation to the second paragraph: ${comparedLocation.value}`);
  });

  ```
isPreview: false
isDeprecated: false
fields:
  - name: adjacentAfter
    uid: 'word!Word.LocationRelation.adjacentAfter:member'
    package: word!
    summary: ''
    value: '"AdjacentAfter"'
  - name: adjacentBefore
    uid: 'word!Word.LocationRelation.adjacentBefore:member'
    package: word!
    summary: ''
    value: '"AdjacentBefore"'
  - name: after
    uid: 'word!Word.LocationRelation.after:member'
    package: word!
    summary: ''
    value: '"After"'
  - name: before
    uid: 'word!Word.LocationRelation.before:member'
    package: word!
    summary: ''
    value: '"Before"'
  - name: contains
    uid: 'word!Word.LocationRelation.contains:member'
    package: word!
    summary: ''
    value: '"Contains"'
  - name: containsEnd
    uid: 'word!Word.LocationRelation.containsEnd:member'
    package: word!
    summary: ''
    value: '"ContainsEnd"'
  - name: containsStart
    uid: 'word!Word.LocationRelation.containsStart:member'
    package: word!
    summary: ''
    value: '"ContainsStart"'
  - name: equal
    uid: 'word!Word.LocationRelation.equal:member'
    package: word!
    summary: ''
    value: '"Equal"'
  - name: inside
    uid: 'word!Word.LocationRelation.inside:member'
    package: word!
    summary: ''
    value: '"Inside"'
  - name: insideEnd
    uid: 'word!Word.LocationRelation.insideEnd:member'
    package: word!
    summary: ''
    value: '"InsideEnd"'
  - name: insideStart
    uid: 'word!Word.LocationRelation.insideStart:member'
    package: word!
    summary: ''
    value: '"InsideStart"'
  - name: overlapsAfter
    uid: 'word!Word.LocationRelation.overlapsAfter:member'
    package: word!
    summary: ''
    value: '"OverlapsAfter"'
  - name: overlapsBefore
    uid: 'word!Word.LocationRelation.overlapsBefore:member'
    package: word!
    summary: ''
    value: '"OverlapsBefore"'
  - name: unrelated
    uid: 'word!Word.LocationRelation.unrelated:member'
    package: word!
    summary: ''
    value: '"Unrelated"'
