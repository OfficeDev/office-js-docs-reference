### YamlMime:UniversalReference
items:
  - uid: Word_1_3.Word.ParagraphCollection
    summary: |-
      Contains a collection of [Word.Paragraph](xref:Word_1_3.Word.Paragraph) objects.

      \[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: Word.ParagraphCollection
    fullName: Word.ParagraphCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: Word_1_3
    children:
      - Word_1_3.Word.ParagraphCollection.context
      - Word_1_3.Word.ParagraphCollection.getFirst
      - Word_1_3.Word.ParagraphCollection.getFirstOrNullObject
      - Word_1_3.Word.ParagraphCollection.getLast
      - Word_1_3.Word.ParagraphCollection.getLastOrNullObject
      - Word_1_3.Word.ParagraphCollection.items
      - Word_1_3.Word.ParagraphCollection.load
      - Word_1_3.Word.ParagraphCollection.toJSON
      - Word_1_3.Word.ParagraphCollection.track
      - Word_1_3.Word.ParagraphCollection.untrack
  - uid: Word_1_3.Word.ParagraphCollection.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: Word_1_3.Word.ParagraphCollection.getFirst
    summary: |-
      Gets the first paragraph in this collection. Throws if the collection is empty.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getFirst()
    fullName: getFirst
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
  - uid: Word_1_3.Word.ParagraphCollection.getFirstOrNullObject
    summary: |-
      Gets the first paragraph in this collection. Returns a null object if the collection is empty.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getFirstOrNullObject()
    fullName: getFirstOrNullObject
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirstOrNullObject(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
  - uid: Word_1_3.Word.ParagraphCollection.getLast
    summary: |-
      Gets the last paragraph in this collection. Throws if the collection is empty.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getLast()
    fullName: getLast
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLast(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
  - uid: Word_1_3.Word.ParagraphCollection.getLastOrNullObject
    summary: |-
      Gets the last paragraph in this collection. Returns a null object if the collection is empty.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getLastOrNullObject()
    fullName: getLastOrNullObject
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLastOrNullObject(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
  - uid: Word_1_3.Word.ParagraphCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Word.Paragraph[];'
      return:
        type:
          - 'Word.Paragraph[]'
  - uid: Word_1_3.Word.ParagraphCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: { select?: string; expand?: string; }): Word.ParagraphCollection` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ParagraphCollection` -
      Only available on collection types. It is similar to the preceding signature. Option.top specifies the maximum
      number of collection items that can be included in the result. Option.skip specifies the number of items that are
      to be skipped and not included in the result. If option.top is specified, the result set will start after skipping
      the specified number of items.
    name: load(option)
    fullName: load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): Word.ParagraphCollection;'
      return:
        type:
          - Word.ParagraphCollection
        description: ''
      parameters:
        - id: option
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: Word_1_3.Word.ParagraphCollection.toJSON
    name: toJSON()
    fullName: toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphCollectionData;'
      return:
        type:
          - Word.Interfaces.ParagraphCollectionData
        description: ''
  - uid: Word_1_3.Word.ParagraphCollection.track
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: track
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.ParagraphCollection;'
      return:
        type:
          - Word.ParagraphCollection
        description: ''
  - uid: Word_1_3.Word.ParagraphCollection.untrack
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: untrack
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.ParagraphCollection;'
      return:
        type:
          - Word.ParagraphCollection
        description: ''
