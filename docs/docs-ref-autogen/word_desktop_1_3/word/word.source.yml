### YamlMime:TSType
name: Word.Source
uid: word!Word.Source:class
package: word!
fullName: Word.Source
summary: >-
  Represents an individual source, such as a book, journal article, or
  interview.
remarks: >-
  \[ [API set: WordApiDesktop
  1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: word!Word.Source#context:member
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: <xref uid="word!Word.RequestContext:class" />
  - name: isCited
    uid: word!Word.Source#isCited:member
    package: word!
    fullName: isCited
    summary: Gets if the `Source` object has been cited in the document.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly isCited: boolean;'
      return:
        type: boolean
  - name: tag
    uid: word!Word.Source#tag:member
    package: word!
    fullName: tag
    summary: Gets the tag of the source.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly tag: string;'
      return:
        type: string
  - name: xml
    uid: word!Word.Source#xml:member
    package: word!
    fullName: xml
    summary: Gets the XML representation of the source.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly xml: string;'
      return:
        type: string
methods:
  - name: delete()
    uid: word!Word.Source#delete:member(1)
    package: word!
    fullName: delete()
    summary: Deletes the `Source` object.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: ''
  - name: getFieldByName(name)
    uid: word!Word.Source#getFieldByName:member(1)
    package: word!
    fullName: getFieldByName(name)
    summary: Returns the value of a field in the bibliography `Source` object.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFieldByName(name: string): OfficeExtension.ClientResult<string>;'
      parameters:
        - id: name
          description: The name of the field to retrieve.
          type: string
      return:
        type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
        description: ''
  - name: load(options)
    uid: word!Word.Source#load:member(1)
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Word.Interfaces.SourceLoadOptions): Word.Source;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: <xref uid="word!Word.Interfaces.SourceLoadOptions:interface" />
      return:
        type: <xref uid="word!Word.Source:class" />
        description: ''
  - name: load(propertyNames)
    uid: word!Word.Source#load:member(2)
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Source;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: string | string[]
      return:
        type: <xref uid="word!Word.Source:class" />
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: word!Word.Source#load:member(3)
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.Source;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: <xref uid="word!Word.Source:class" />
        description: ''
  - name: toJSON()
    uid: word!Word.Source#toJSON:member(1)
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that's passed to it.) Whereas the original `Word.Source` object is
      an API object, the `toJSON` method returns a plain JavaScript object
      (typed as `Word.Interfaces.SourceData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.SourceData;'
      return:
        type: <xref uid="word!Word.Interfaces.SourceData:interface" />
        description: ''
  - name: track()
    uid: word!Word.Source#track:member(1)
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in
      the document. This call is a shorthand for
      [context.trackedObjects.add(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you're using this object across `.sync` calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath"
      error when setting a property or invoking a method on the object, you need
      to add the object to the tracked object collection when the object was
      first created. If this object is part of a collection, you should also
      track the parent collection.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.Source;'
      return:
        type: <xref uid="word!Word.Source:class" />
        description: ''
  - name: untrack()
    uid: word!Word.Source#untrack:member(1)
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been
      tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so
      please remember to free any objects you add, once you're done using them.
      You'll need to call `context.sync()` before the memory release takes
      effect.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.Source;'
      return:
        type: <xref uid="word!Word.Source:class" />
        description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
