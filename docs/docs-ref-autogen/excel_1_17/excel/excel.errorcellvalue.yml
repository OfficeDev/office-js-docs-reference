### YamlMime:TSTypeAlias
name: Excel.ErrorCellValue
uid: excel!Excel.ErrorCellValue:type
package: excel!
fullName: Excel.ErrorCellValue
summary: Represents a cell value which contains an error.
remarks: "\\[ [API set: ExcelApi 1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \\]\n\n#### Examples\n\n```TypeScript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/20-data-types/data-types-error-values.yaml\n\n// This function sets the value of cell A1 to a #BUSY! error using data types.\nawait Excel.run(async (context) => {\n  // Retrieve the Sample worksheet and cell A1 on that sheet.\n  const sheet = context.workbook.worksheets.getItemOrNullObject(\"Sample\");\n  const range = sheet.getRange(\"A1\");\n\n  // Get the error data type and set its type to `busy`.\n  const error: Excel.ErrorCellValue = {\n    type: Excel.CellValueType.error,\n    errorType: Excel.ErrorCellValueType.busy\n  };\n\n  // Set cell A1 as the busy error.\n  range.valuesAsJson = [[error]];\n  await context.sync();\n});\n```\r\n\r\nThis type is a union of the following types: \r\n\r\n[excel_1_17.BlockedErrorCellValue](/javascript/api/excel_1_17/excel_1_17.BlockedErrorCellValue)\" />, [excel_1_17.BusyErrorCellValue](/javascript/api/excel_1_17/excel_1_17.BusyErrorCellValue)\" />, [excel_1_17.CalcErrorCellValue](/javascript/api/excel_1_17/excel_1_17.CalcErrorCellValue)\" />, [excel_1_17.ConnectErrorCellValue](/javascript/api/excel_1_17/excel_1_17.ConnectErrorCellValue)\" />, [excel_1_17.Div0ErrorCellValue](/javascript/api/excel_1_17/excel_1_17.Div0ErrorCellValue)\" />, [excel_1_17.ExternalErrorCellValue](/javascript/api/excel_1_17/excel_1_17.ExternalErrorCellValue)\" />, [excel_1_17.FieldErrorCellValue](/javascript/api/excel_1_17/excel_1_17.FieldErrorCellValue)\" />, [excel_1_17.GettingDataErrorCellValue](/javascript/api/excel_1_17/excel_1_17.GettingDataErrorCellValue)\" />, [excel_1_17.NotAvailableErrorCellValue](/javascript/api/excel_1_17/excel_1_17.NotAvailableErrorCellValue)\" />, [excel_1_17.NameErrorCellValue](/javascript/api/excel_1_17/excel_1_17.NameErrorCellValue)\" />, [excel_1_17.NullErrorCellValue](/javascript/api/excel_1_17/excel_1_17.NullErrorCellValue)\" />, [excel_1_17.NumErrorCellValue](/javascript/api/excel_1_17/excel_1_17.NumErrorCellValue)\" />, [excel_1_17.PlaceholderErrorCellValue](/javascript/api/excel_1_17/excel_1_17.PlaceholderErrorCellValue)\" />, [excel_1_17.RefErrorCellValue](/javascript/api/excel_1_17/excel_1_17.RefErrorCellValue)\" />, [excel_1_17.SpillErrorCellValue](/javascript/api/excel_1_17/excel_1_17.SpillErrorCellValue)\" />, [excel_1_17.ValueErrorCellValue](/javascript/api/excel_1_17/excel_1_17.ValueErrorCellValue)\" />"

isPreview: false
isDeprecated: false
syntax: >-
  export type ErrorCellValue = BlockedErrorCellValue | BusyErrorCellValue |
  CalcErrorCellValue | ConnectErrorCellValue | Div0ErrorCellValue |
  ExternalErrorCellValue | FieldErrorCellValue | GettingDataErrorCellValue |
  NotAvailableErrorCellValue | NameErrorCellValue | NullErrorCellValue |
  NumErrorCellValue | PlaceholderErrorCellValue | RefErrorCellValue |
  SpillErrorCellValue | ValueErrorCellValue;
