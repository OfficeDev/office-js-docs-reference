### YamlMime:TSEnum
name: Office.MailboxEnums.ComposeType
uid: 'outlook!Office.MailboxEnums.ComposeType:enum'
package: outlook!
fullName: Office.MailboxEnums.ComposeType
summary: Specifies a message's compose type.
remarks: >-
  \[ [API set: Mailbox 1.10](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


  **[Applicable Outlook
  mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
  Compose


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/90-other-item-apis/work-with-client-signatures.yaml


  // Get the compose type of the current message.

  Office.context.mailbox.item.getComposeTypeAsync(function(asyncResult) {
    if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
      console.log(
        "getComposeTypeAsync succeeded with composeType: " +
          asyncResult.value.composeType +
          " and coercionType: " +
          asyncResult.value.coercionType
      );
    } else {
      console.error(asyncResult.error);
    }
  });

  ```
isPreview: false
isDeprecated: false
fields:
  - name: Reply
    uid: 'outlook!Office.MailboxEnums.ComposeType.Reply:member'
    package: outlook!
    summary: Reply.
    value: '"reply"'
  - name: NewMail
    uid: 'outlook!Office.MailboxEnums.ComposeType.NewMail:member'
    package: outlook!
    summary: New mail.
    value: '"newMail"'
  - name: Forward
    uid: 'outlook!Office.MailboxEnums.ComposeType.Forward:member'
    package: outlook!
    summary: Forward.
    value: '"forward"'
