### YamlMime:TSType
name: Office.EmailUser
uid: 'outlook!Office.EmailUser:interface'
package: outlook!
fullName: Office.EmailUser
summary: >-
  Represents an email account on an Exchange Server.


  `EmailUser` objects are primarily received in [MeetingSuggestion](xref:outlook!Office.MeetingSuggestion:interface) and
  [TaskSuggestion](xref:outlook!Office.TaskSuggestion:interface) entities extracted from an Outlook item. To learn more
  about this scenario, refer to [Extract entity strings from an Outlook
  item](https://docs.microsoft.com/office/dev/add-ins/outlook/extract-entity-strings-from-an-item)<!-- -->.
remarks: >-
  **[Minimum permission
  level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
  `ReadItem`


  **[Applicable Outlook
  mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: Read


  #### Examples


  ```javascript

  // The following example is an excerpt from a larger sample.

  // For the full sample, visit
  https://docs.microsoft.com/office/dev/add-ins/outlook/extract-entity-strings-from-an-item.


  // Gets instances of the task suggestion entity on the item.

  function myGetTaskSuggestions()

  {
      var htmlText = "";

      // Gets an array of TaskSuggestion objects, each array element 
      // containing an instance of a task suggestion entity from 
      // the current item.
      var tasksArray = _MyEntities.taskSuggestions;

      // Iterates through each instance of a task suggestion.
      for (var i = 0; i < tasksArray.length; i++)
      {
          // Gets the string that was identified as a task suggestion.
          htmlText += "TaskString : <span>" + 
          tasksArray[i].taskString + "</span><br/>";

          // Gets an array of assignees for that instance of a task 
          // suggestion. Each assignee is represented by an 
          // EmailUser object.
          var assigneesArray = tasksArray[i].assignees;
          for (var j = 0; j < assigneesArray.length; j++)
          {
              htmlText += "Assignee : ( ";
              // Gets the displayName property of the assignee.
              htmlText += "displayName = <span>" + assigneesArray[j].displayName + 
              "</span> , ";

              // Gets the emailAddress property of each assignee.
              // This is the SMTP address of the assignee.
              htmlText += "emailAddress = <span>" + assigneesArray[j].emailAddress + 
                  "</span>";

              htmlText += " )<br/>";
          }

          htmlText += "<hr/>";
      }

      document.getElementById("entities_box").innerHTML = htmlText;
  }

  ```
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: displayName
    uid: 'outlook!Office.EmailUser#displayName:member'
    package: outlook!
    fullName: displayName
    summary: Gets the display name associated with an email address.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'displayName: string;'
      return:
        type: string
  - name: emailAddress
    uid: 'outlook!Office.EmailUser#emailAddress:member'
    package: outlook!
    fullName: emailAddress
    summary: Gets the SMTP email address.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'emailAddress: string;'
      return:
        type: string
