### YamlMime:UniversalReference
items:
  - uid: Outlook_1_3.Office.NotificationMessages
    summary: |-
      The NotificationMessages object is returned as the notificationMessages property of an item.

      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>
    name: Office.NotificationMessages
    fullName: Outlook_1_3.Office.NotificationMessages
    langs:
      - typeScript
    type: interface
    package: Outlook_1_3
    children:
      - Outlook_1_3.Office.NotificationMessages.addAsync
      - Outlook_1_3.Office.NotificationMessages.getAllAsync
      - Outlook_1_3.Office.NotificationMessages.removeAsync
      - Outlook_1_3.Office.NotificationMessages.replaceAsync
  - uid: Outlook_1_3.Office.NotificationMessages.addAsync
    summary: >-
      Adds a notification to an item.


      There are a maximum of 5 notifications per message. Setting more will return a
      NumberOfNotificationMessagesExceeded error.
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>


      In addition to this signature, the method also has the following signatures:


      `addAsync(key: string, JSONmessage: NotificationMessageDetails): void;`


      `addAsync(key: string, JSONmessage: NotificationMessageDetails, options: Office.AsyncContextOptions): void;`


      `addAsync(key: string, JSONmessage: NotificationMessageDetails, callback: (result: AsyncResult) => void): void;`
    name: 'addAsync(key, JSONmessage, options, callback)'
    fullName: Outlook_1_3.Office.NotificationMessages.addAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addAsync(key: string, JSONmessage: NotificationMessageDetails, options?: Office.AsyncContextOptions, callback?:
        (result: AsyncResult) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: >-
            A developer-specified key used to reference this notification message. Developers can use it to modify this
            message later. It can't be longer than 32 characters.
          type:
            - string
        - id: JSONmessage
          description: >-
            A JSON object that contains the notification message to be added to the item. It contains a
            NotificationMessageDetails object.
          type:
            - NotificationMessageDetails
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type AsyncResult. \[Api set: Mailbox 1.3\]
          type:
            - '(result: AsyncResult) => void'
  - uid: Outlook_1_3.Office.NotificationMessages.getAllAsync
    summary: |-
      Returns all keys and messages for an item.

      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>


      In addition to the main signature, this method also has this signature:


      `getAllAsync(callback: (result: AsyncResult) => void): void;`
    name: 'getAllAsync(options, callback)'
    fullName: Outlook_1_3.Office.NotificationMessages.getAllAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type AsyncResult.
          type:
            - '(result: AsyncResult) => void'
  - uid: Outlook_1_3.Office.NotificationMessages.removeAsync
    summary: |-
      Removes a notification message for an item.

      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>


      In addition to the main signature, this method also has these signatures:


      `removeAsync(key: string): void;`


      `removeAsync(key: string, options: Office.AsyncContextOptions): void;`


      `removeAsync(key: string, callback: (result: AsyncResult) => void): void;`
    name: 'removeAsync(key, options, callback)'
    fullName: Outlook_1_3.Office.NotificationMessages.removeAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(key: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: The key for the notification message to remove.
          type:
            - string
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type AsyncResult.
          type:
            - '(result: AsyncResult) => void'
  - uid: Outlook_1_3.Office.NotificationMessages.replaceAsync
    summary: |-
      Replaces a notification message that has a given key with another message.

      If a notification message with the specified key doesn't exist, replaceAsync will add the notification.

      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Compose or
      read</td></tr></table>


      In addition to the main signature, this method also has these signatures:


      `replaceAsync(key: string, JSONmessage: NotificationMessageDetails): void;`


      `replaceAsync(key: string, JSONmessage: NotificationMessageDetails, options: Office.AsyncContextOptions): void;`


      `replaceAsync(key: string, JSONmessage: NotificationMessageDetails, callback: (result: AsyncResult) => void):
      void;`
    name: 'replaceAsync(key, JSONmessage, options, callback)'
    fullName: Outlook_1_3.Office.NotificationMessages.replaceAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        replaceAsync(key: string, JSONmessage: NotificationMessageDetails, options?: Office.AsyncContextOptions,
        callback?: (result: AsyncResult) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: The key for the notification message to replace. It can't be longer than 32 characters.
          type:
            - string
        - id: JSONmessage
          description: >-
            A JSON object that contains the new notification message to replace the existing message. It contains a
            NotificationMessageDetails object.
          type:
            - NotificationMessageDetails
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. asyncContext: Developers
            can provide any object they wish to access in the callback method.
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type AsyncResult.
          type:
            - '(result: AsyncResult) => void'
