### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Shape
    summary: |-
      Represents the Shape class.

      \[ [API set: 1.1](http://bing.com?type=visio) \]
    name: Visio.Shape
    fullName: visio.Visio.Shape
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Shape.comments
      - visio.Visio.Shape.getBounds
      - visio.Visio.Shape.hyperlinks
      - visio.Visio.Shape.id
      - visio.Visio.Shape.load
      - visio.Visio.Shape.name
      - visio.Visio.Shape.select
      - visio.Visio.Shape.set
      - visio.Visio.Shape.shapeDataItems
      - visio.Visio.Shape.subShapes
      - visio.Visio.Shape.text
      - visio.Visio.Shape.toJSON
      - visio.Visio.Shape.view
  - uid: visio.Visio.Shape.comments
    summary: |-
      Returns the Comments Collection

      \[ [API set: 1.1](http://bing.com?type=visio) \]
    name: comments
    fullName: visio.Visio.Shape.comments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly comments: Visio.CommentCollection;'
      return:
        type:
          - Visio.CommentCollection
  - uid: visio.Visio.Shape.getBounds
    summary: |-
      Returns the BoundingBox object that specifies bounding box of the shape.

      \[ [API set: 1.1](http://bing.com?type=visio) \]
    name: getBounds()
    fullName: visio.Visio.Shape.getBounds
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
      return:
        type:
          - OfficeExtension.ClientResult<Visio.BoundingBox>
        description: ''
  - uid: visio.Visio.Shape.hyperlinks
    summary: |-
      Returns the Hyperlinks collection for a Shape object. Read-only.

      \[ [API set: 1.1](http://bing.com?type=visio) \]
    name: hyperlinks
    fullName: visio.Visio.Shape.hyperlinks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
      return:
        type:
          - Visio.HyperlinkCollection
  - uid: visio.Visio.Shape.id
    summary: |-
      Shape's Identifier.

      \[ [API set: 1.1](http://bing.com?type=visio) \]
    name: id
    fullName: visio.Visio.Shape.id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: visio.Visio.Shape.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: visio.Visio.Shape.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeLoadOptions): Visio.Shape;'
      return:
        type:
          - Visio.Shape
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.ShapeLoadOptions
  - uid: visio.Visio.Shape.name
    summary: |-
      Shape's name.

      \[ [API set: 1.1](http://bing.com?type=visio) \]
    name: name
    fullName: visio.Visio.Shape.name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Shape.select
    summary: |-
      Returns true, if shape is selected. User can set true to select the shape explicitly.

      \[ [API set: 1.1](http://bing.com?type=visio) \]
    name: select
    fullName: visio.Visio.Shape.select
    langs:
      - typeScript
    type: property
    syntax:
      content: 'select: boolean;'
      return:
        type:
          - boolean
  - uid: visio.Visio.Shape.set
    summary: 'Sets multiple properties on the object at the same time, based on JSON input.'
    name: 'set(properties, options)'
    fullName: visio.Visio.Shape.set
    langs:
      - typeScript
    type: method
    syntax:
      content: "set(properties: Interfaces.ShapeUpdateData, options?: {\r\n            throwOnReadOnly?: boolean;\r\n        }): void;"
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Interfaces.ShapeUpdateData
        - id: options
          description: ''
          type:
            - "{\r\n            /**\r\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\r\n             */\r\n            throwOnReadOnly?: boolean;\r\n        }"
  - uid: visio.Visio.Shape.shapeDataItems
    summary: |-
      Returns the Shape's Data Section. Read-only.

      \[ [API set: 1.1](http://bing.com?type=visio) \]
    name: shapeDataItems
    fullName: visio.Visio.Shape.shapeDataItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
      return:
        type:
          - Visio.ShapeDataItemCollection
  - uid: visio.Visio.Shape.subShapes
    summary: |-
      Gets SubShape Collection.

      \[ [API set: 1.1](http://bing.com?type=visio) \]
    name: subShapes
    fullName: visio.Visio.Shape.subShapes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly subShapes: Visio.ShapeCollection;'
      return:
        type:
          - Visio.ShapeCollection
  - uid: visio.Visio.Shape.text
    summary: |-
      Shape's Text.

      \[ [API set: 1.1](http://bing.com?type=visio) \]
    name: text
    fullName: visio.Visio.Shape.text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Shape.toJSON
    name: toJSON()
    fullName: visio.Visio.Shape.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeData;'
      return:
        type:
          - Visio.Interfaces.ShapeData
        description: ''
  - uid: visio.Visio.Shape.view
    summary: |-
      Returns the view of the shape. Read-only.

      \[ [API set: 1.1](http://bing.com?type=visio) \]
    name: view
    fullName: visio.Visio.Shape.view
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly view: Visio.ShapeView;'
      return:
        type:
          - Visio.ShapeView
