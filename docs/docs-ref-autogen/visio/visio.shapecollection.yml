### YamlMime:UniversalReference
items:
  - uid: visio.Visio.ShapeCollection
    summary: |-
      Represents the Shape Collection.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: Visio.ShapeCollection
    fullName: visio.Visio.ShapeCollection
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.ShapeCollection.getCount
      - visio.Visio.ShapeCollection.getItem
      - visio.Visio.ShapeCollection.items
      - visio.Visio.ShapeCollection.load
      - visio.Visio.ShapeCollection.toJSON
  - uid: visio.Visio.ShapeCollection.getCount
    summary: |-
      Gets the number of Shapes in the collection.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: getCount()
    fullName: visio.Visio.ShapeCollection.getCount
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
    remarks: |


      #### Examples

      ```javascript
      Visio.run(function (ctx) { 
          var activePage = ctx.document.getActivePage();
          var numShapesActivePage = activePage.shapes.getCount();
          return ctx.sync().then(function () {
              console.log("Shapes Count: " + numShapesActivePage.value);
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
  - uid: visio.Visio.ShapeCollection.getItem
    summary: |-
      Gets a Shape using its key (name or Index).

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: getItem(key)
    fullName: visio.Visio.ShapeCollection.getItem
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: number | string): Visio.Shape;'
      return:
        type:
          - Visio.Shape
        description: ''
      parameters:
        - id: key
          description: Key is the Name or Index of the shape to be retrieved.
          type:
            - number | string
  - uid: visio.Visio.ShapeCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: visio.Visio.ShapeCollection.items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Array<Visio.Shape>;'
      return:
        type:
          - Array<Visio.Shape>
  - uid: visio.Visio.ShapeCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: visio.Visio.ShapeCollection.load
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        load(option?: Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions):
        Visio.ShapeCollection;
      return:
        type:
          - Visio.ShapeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
  - uid: visio.Visio.ShapeCollection.toJSON
    name: toJSON()
    fullName: visio.Visio.ShapeCollection.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeCollectionData;'
      return:
        type:
          - Visio.Interfaces.ShapeCollectionData
        description: ''
