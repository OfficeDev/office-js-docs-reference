### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio:namespace'
    name: Visio
    fullName: Visio
    langs:
      - typeScript
    type: namespace
    package: visio!
    children:
      - 'visio!Visio.Application:class'
      - 'visio!Visio.BoundingBox:interface'
      - 'visio!Visio.Comment:class'
      - 'visio!Visio.CommentCollection:class'
      - 'visio!Visio.DataRefreshCompleteEventArgs:interface'
      - 'visio!Visio.Document:class'
      - 'visio!Visio.DocumentLoadCompleteEventArgs:interface'
      - 'visio!Visio.DocumentView:class'
      - 'visio!Visio.ErrorCodes:enum'
      - 'visio!Visio.Highlight:interface'
      - 'visio!Visio.Hyperlink:class'
      - 'visio!Visio.HyperlinkCollection:class'
      - 'visio!Visio.OverlayHorizontalAlignment:enum'
      - 'visio!Visio.OverlayType:enum'
      - 'visio!Visio.OverlayVerticalAlignment:enum'
      - 'visio!Visio.Page:class'
      - 'visio!Visio.PageCollection:class'
      - 'visio!Visio.PageLoadCompleteEventArgs:interface'
      - 'visio!Visio.PageRenderCompleteEventArgs:interface'
      - 'visio!Visio.PageView:class'
      - 'visio!Visio.Position:interface'
      - 'visio!Visio.RequestContext:class'
      - 'visio!Visio.run:function(1)'
      - 'visio!Visio.run:function(2)'
      - 'visio!Visio.run:function(3)'
      - 'visio!Visio.run:function(4)'
      - 'visio!Visio.Selection:class'
      - 'visio!Visio.SelectionChangedEventArgs:interface'
      - 'visio!Visio.Shape:class'
      - 'visio!Visio.ShapeCollection:class'
      - 'visio!Visio.ShapeDataItem:class'
      - 'visio!Visio.ShapeDataItemCollection:class'
      - 'visio!Visio.ShapeMouseEnterEventArgs:interface'
      - 'visio!Visio.ShapeMouseLeaveEventArgs:interface'
      - 'visio!Visio.ShapeView:class'
      - 'visio!Visio.ToolBarType:enum'
  - uid: 'visio!Visio.run:function(1)'
    summary: >-
      Executes a batch script that performs actions on the Visio object model, using a new request context. When the
      promise is resolved, any tracked objects that were automatically allocated during execution will be released.
    name: run(batch)
    fullName: Visio.run(batch)
    langs:
      - typeScript
    namespace: 'visio!Visio:namespace'
    type: function
    syntax:
      content: 'export function run<T>(batch: (context: Visio.RequestContext) => Promise<T>): Promise<T>;'
      return:
        type:
          - 'visio!Visio.run~0:complex'
        description: ''
      parameters:
        - id: batch
          description: >-
            A function that takes in an Visio.RequestContext and returns a promise (typically, just the result of
            "context.sync()"). The context parameter facilitates requests to the Visio application. Since the Office
            add-in and the Visio application run in two different processes, the request context is required to get
            access to the Visio object model from the add-in.
          type:
            - 'visio!Visio.run~1:complex'
      typeParameters:
        - id: T
  - uid: 'visio!Visio.run:function(2)'
    summary: >-
      Executes a batch script that performs actions on the Visio object model, using the request context of a
      previously-created API object.
    name: 'run(object, batch)'
    fullName: 'Visio.run(object, batch)'
    langs:
      - typeScript
    namespace: 'visio!Visio:namespace'
    type: function
    syntax:
      content: >-
        export function run<T>(object: OfficeExtension.ClientObject | OfficeExtension.EmbeddedSession, batch: (context:
        Visio.RequestContext) => Promise<T>): Promise<T>;
      return:
        type:
          - 'visio!Visio.run~2:complex'
        description: ''
      parameters:
        - id: object
          description: >-
            A previously-created API object. The batch will use the same request context as the passed-in object, which
            means that any changes applied to the object will be picked up by "context.sync()".
          type:
            - 'visio!Visio.run~3:complex'
        - id: batch
          description: >-
            A function that takes in an Visio.RequestContext and returns a promise (typically, just the result of
            "context.sync()"). When the promise is resolved, any tracked objects that were automatically allocated
            during execution will be released.
          type:
            - 'visio!Visio.run~4:complex'
      typeParameters:
        - id: T
  - uid: 'visio!Visio.run:function(3)'
    summary: >-
      Executes a batch script that performs actions on the Visio object model, using the request context of
      previously-created API objects.
    name: 'run(objects, batch)'
    fullName: 'Visio.run(objects, batch)'
    langs:
      - typeScript
    namespace: 'visio!Visio:namespace'
    type: function
    syntax:
      content: >-
        export function run<T>(objects: OfficeExtension.ClientObject[], batch: (context: Visio.RequestContext) =>
        Promise<T>): Promise<T>;
      return:
        type:
          - 'visio!Visio.run~5:complex'
        description: ''
      parameters:
        - id: objects
          description: >-
            An array of previously-created API objects. The array will be validated to make sure that all of the objects
            share the same context. The batch will use this shared request context, which means that any changes applied
            to these objects will be picked up by "context.sync()".
          type:
            - 'visio!Visio.run~6:complex'
        - id: batch
          description: >-
            A function that takes in a Visio.RequestContext and returns a promise (typically, just the result of
            "context.sync()"). When the promise is resolved, any tracked objects that were automatically allocated
            during execution will be released.
          type:
            - 'visio!Visio.run~7:complex'
      typeParameters:
        - id: T
  - uid: 'visio!Visio.run:function(4)'
    summary: >-
      Executes a batch script that performs actions on the Visio object model, using the RequestContext of a
      previously-created object. When the promise is resolved, any tracked objects that were automatically allocated
      during execution will be released.
    remarks: >-
      In addition to this signature, the method also has the following signatures:


      `run<T>(batch: (context: Visio.RequestContext) => Promise<T>): Promise<T>;`


      `run<T>(object: OfficeExtension.ClientObject | OfficeExtension.EmbeddedSession, batch: (context:
      Visio.RequestContext) => Promise<T>): Promise<T>;`


      `run<T>(objects: OfficeExtension.ClientObject[], batch: (context: Visio.RequestContext) => Promise<T>):
      Promise<T>;`
    name: 'run(contextObject, batch)'
    fullName: 'Visio.run(contextObject, batch)'
    langs:
      - typeScript
    namespace: 'visio!Visio:namespace'
    type: function
    syntax:
      content: >-
        export function run<T>(contextObject: OfficeExtension.ClientRequestContext, batch: (context:
        Visio.RequestContext) => Promise<T>): Promise<T>;
      return:
        type:
          - 'visio!Visio.run~8:complex'
        description: ''
      parameters:
        - id: contextObject
          description: >-
            A previously-created Visio.RequestContext. This context will get re-used by the batch function (instead of
            having a new context created). This means that the batch will be able to pick up changes made to existing
            API objects, if those objects were derived from this same context.
          type:
            - 'visio!OfficeExtension.ClientRequestContext:class'
        - id: batch
          description: >-
            A function that takes in a RequestContext and returns a promise (typically, just the result of
            "context.sync()"). The context parameter facilitates requests to the Visio application. Since the Office
            add-in and the Visio application run in two different processes, the RequestContext is required to get
            access to the Visio object model from the add-in.
          type:
            - 'visio!Visio.run~9:complex'
      typeParameters:
        - id: T
references:
  - uid: 'visio!Visio.Application:class'
    name: Application
    fullName: Visio.Application
  - uid: 'visio!Visio.BoundingBox:interface'
    name: BoundingBox
    fullName: Visio.BoundingBox
  - uid: 'visio!Visio.Comment:class'
    name: Comment
    fullName: Visio.Comment
  - uid: 'visio!Visio.CommentCollection:class'
    name: CommentCollection
    fullName: Visio.CommentCollection
  - uid: 'visio!Visio.DataRefreshCompleteEventArgs:interface'
    name: DataRefreshCompleteEventArgs
    fullName: Visio.DataRefreshCompleteEventArgs
  - uid: 'visio!Visio.Document:class'
    name: Document
    fullName: Visio.Document
  - uid: 'visio!Visio.DocumentLoadCompleteEventArgs:interface'
    name: DocumentLoadCompleteEventArgs
    fullName: Visio.DocumentLoadCompleteEventArgs
  - uid: 'visio!Visio.DocumentView:class'
    name: DocumentView
    fullName: Visio.DocumentView
  - uid: 'visio!Visio.ErrorCodes:enum'
    name: ErrorCodes
    fullName: Visio.ErrorCodes
  - uid: 'visio!Visio.Highlight:interface'
    name: Highlight
    fullName: Visio.Highlight
  - uid: 'visio!Visio.Hyperlink:class'
    name: Hyperlink
    fullName: Visio.Hyperlink
  - uid: 'visio!Visio.HyperlinkCollection:class'
    name: HyperlinkCollection
    fullName: Visio.HyperlinkCollection
  - uid: 'visio!Visio.OverlayHorizontalAlignment:enum'
    name: OverlayHorizontalAlignment
    fullName: Visio.OverlayHorizontalAlignment
  - uid: 'visio!Visio.OverlayType:enum'
    name: OverlayType
    fullName: Visio.OverlayType
  - uid: 'visio!Visio.OverlayVerticalAlignment:enum'
    name: OverlayVerticalAlignment
    fullName: Visio.OverlayVerticalAlignment
  - uid: 'visio!Visio.Page:class'
    name: Page
    fullName: Visio.Page
  - uid: 'visio!Visio.PageCollection:class'
    name: PageCollection
    fullName: Visio.PageCollection
  - uid: 'visio!Visio.PageLoadCompleteEventArgs:interface'
    name: PageLoadCompleteEventArgs
    fullName: Visio.PageLoadCompleteEventArgs
  - uid: 'visio!Visio.PageRenderCompleteEventArgs:interface'
    name: PageRenderCompleteEventArgs
    fullName: Visio.PageRenderCompleteEventArgs
  - uid: 'visio!Visio.PageView:class'
    name: PageView
    fullName: Visio.PageView
  - uid: 'visio!Visio.Position:interface'
    name: Position
    fullName: Visio.Position
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
    fullName: Visio.RequestContext
  - uid: 'visio!Visio.run~0:complex'
    name: Promise<T>
    fullName: Promise<T>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'visio!Visio.run~1:complex'
    name: '(context: Visio.RequestContext) => Promise<T>'
    fullName: '(context: Visio.RequestContext) => Promise<T>'
    spec.typeScript:
      - name: '(context: '
        fullName: '(context: '
      - uid: 'visio!Visio.RequestContext:class'
        name: Visio.RequestContext
        fullName: Visio.RequestContext
      - name: ') => '
        fullName: ') => '
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'visio!Visio.run~2:complex'
    name: Promise<T>
    fullName: Promise<T>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'visio!Visio.run~3:complex'
    name: OfficeExtension.ClientObject | OfficeExtension.EmbeddedSession
    fullName: OfficeExtension.ClientObject | OfficeExtension.EmbeddedSession
    spec.typeScript:
      - uid: 'visio!OfficeExtension.ClientObject:class'
        name: OfficeExtension.ClientObject
        fullName: OfficeExtension.ClientObject
      - name: ' | '
        fullName: ' | '
      - uid: 'visio!OfficeExtension.EmbeddedSession:class'
        name: OfficeExtension.EmbeddedSession
        fullName: OfficeExtension.EmbeddedSession
  - uid: 'visio!Visio.run~4:complex'
    name: '(context: Visio.RequestContext) => Promise<T>'
    fullName: '(context: Visio.RequestContext) => Promise<T>'
    spec.typeScript:
      - name: '(context: '
        fullName: '(context: '
      - uid: 'visio!Visio.RequestContext:class'
        name: Visio.RequestContext
        fullName: Visio.RequestContext
      - name: ') => '
        fullName: ') => '
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'visio!Visio.run~5:complex'
    name: Promise<T>
    fullName: Promise<T>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'visio!Visio.run~6:complex'
    name: 'OfficeExtension.ClientObject[]'
    fullName: 'OfficeExtension.ClientObject[]'
    spec.typeScript:
      - uid: 'visio!OfficeExtension.ClientObject:class'
        name: OfficeExtension.ClientObject
        fullName: OfficeExtension.ClientObject
      - name: '[]'
        fullName: '[]'
  - uid: 'visio!Visio.run~7:complex'
    name: '(context: Visio.RequestContext) => Promise<T>'
    fullName: '(context: Visio.RequestContext) => Promise<T>'
    spec.typeScript:
      - name: '(context: '
        fullName: '(context: '
      - uid: 'visio!Visio.RequestContext:class'
        name: Visio.RequestContext
        fullName: Visio.RequestContext
      - name: ') => '
        fullName: ') => '
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'visio!Visio.run~8:complex'
    name: Promise<T>
    fullName: Promise<T>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'visio!OfficeExtension.ClientRequestContext:class'
    name: OfficeExtension.ClientRequestContext
  - uid: 'visio!Visio.run~9:complex'
    name: '(context: Visio.RequestContext) => Promise<T>'
    fullName: '(context: Visio.RequestContext) => Promise<T>'
    spec.typeScript:
      - name: '(context: '
        fullName: '(context: '
      - uid: 'visio!Visio.RequestContext:class'
        name: Visio.RequestContext
        fullName: Visio.RequestContext
      - name: ') => '
        fullName: ') => '
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'visio!Visio.Selection:class'
    name: Selection
    fullName: Visio.Selection
  - uid: 'visio!Visio.SelectionChangedEventArgs:interface'
    name: SelectionChangedEventArgs
    fullName: Visio.SelectionChangedEventArgs
  - uid: 'visio!Visio.Shape:class'
    name: Shape
    fullName: Visio.Shape
  - uid: 'visio!Visio.ShapeCollection:class'
    name: ShapeCollection
    fullName: Visio.ShapeCollection
  - uid: 'visio!Visio.ShapeDataItem:class'
    name: ShapeDataItem
    fullName: Visio.ShapeDataItem
  - uid: 'visio!Visio.ShapeDataItemCollection:class'
    name: ShapeDataItemCollection
    fullName: Visio.ShapeDataItemCollection
  - uid: 'visio!Visio.ShapeMouseEnterEventArgs:interface'
    name: ShapeMouseEnterEventArgs
    fullName: Visio.ShapeMouseEnterEventArgs
  - uid: 'visio!Visio.ShapeMouseLeaveEventArgs:interface'
    name: ShapeMouseLeaveEventArgs
    fullName: Visio.ShapeMouseLeaveEventArgs
  - uid: 'visio!Visio.ShapeView:class'
    name: ShapeView
    fullName: Visio.ShapeView
  - uid: 'visio!Visio.ToolBarType:enum'
    name: ToolBarType
    fullName: Visio.ToolBarType
