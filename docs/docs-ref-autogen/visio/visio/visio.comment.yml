### YamlMime:TSType
name: Visio.Comment
uid: 'visio!Visio.Comment:class'
package: visio!
fullName: Visio.Comment
summary: Represents the Comment.
remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
isPreview: false
isDeprecated: false
type: class
properties:
  - name: author
    uid: 'visio!Visio.Comment#author:member'
    package: visio!
    fullName: author
    summary: A string that specifies the name of the author of the comment.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'author: string;'
      return:
        type: string
  - name: context
    uid: 'visio!Visio.Comment#context:member'
    package: visio!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="visio!Visio.RequestContext:class" />'
  - name: date
    uid: 'visio!Visio.Comment#date:member'
    package: visio!
    fullName: date
    summary: A string that specifies the date when the comment was created.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'date: string;'
      return:
        type: string
  - name: text
    uid: 'visio!Visio.Comment#text:member'
    package: visio!
    fullName: text
    summary: A string that contains the comment text.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'text: string;'
      return:
        type: string
methods:
  - name: load(options)
    uid: 'visio!Visio.Comment#load:member(1)'
    package: visio!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Visio.Interfaces.CommentLoadOptions): Visio.Comment;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="visio!Visio.Interfaces.CommentLoadOptions:interface" />'
      return:
        type: '<xref uid="visio!Visio.Comment:class" />'
        description: |-


          #### Examples

          ```TypeScript
          Visio.run(session, function (ctx) {
              const activePage = ctx.document.getActivePage();
              const shapeName = "Position Belt.41";
              const shape = activePage.shapes.getItem(shapeName);
              const shapeComments= shape.comments;
              shapeComments.load(["author", "text"]);
              return ctx.sync().then(function () {
                  for (let i = 0; i < shapeComments.items.length; i++)
                  {
                      const comment = shapeComments.items[i];
                      console.log("comment Author: " + comment.author);
                      console.log("Comment Text: " + comment.text);
                      console.log("Date " + comment.date);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - name: load(propertyNames)
    uid: 'visio!Visio.Comment#load:member(2)'
    package: visio!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Comment;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="visio!Visio.Comment:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'visio!Visio.Comment#load:member(3)'
    package: visio!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Visio.Comment;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="visio!Visio.Comment:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'visio!Visio.Comment#set:member(1)'
    package: visio!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="visio!Visio.Interfaces.CommentUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'visio!Visio.Comment#set:member(2)'
    package: visio!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Visio.Comment): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="visio!Visio.Comment:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'visio!Visio.Comment#toJSON:member(1)'
    package: visio!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Visio.Comment object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Visio.Interfaces.CommentData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Visio.Interfaces.CommentData;'
      return:
        type: '<xref uid="visio!Visio.Interfaces.CommentData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
