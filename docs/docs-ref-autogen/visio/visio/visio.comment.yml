### YamlMime:TSType
name: Visio.Comment
uid: 'visio!Visio.Comment:class'
package: visio!
fullName: Visio.Comment
summary: >-
  Represents the Comment.


  \[ [API set:
  1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: author
    uid: 'visio!Visio.Comment#author:member'
    package: visio!
    fullName: author
    summary: >-
      A string that specifies the name of the author of the comment.


      \[ [API set:
      1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'author: string;'
      return:
        type: string
  - name: context
    uid: 'visio!Visio.Comment#context:member'
    package: visio!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="visio!Visio.RequestContext:class" />'
  - name: date
    uid: 'visio!Visio.Comment#date:member'
    package: visio!
    fullName: date
    summary: >-
      A string that specifies the date when the comment was created.


      \[ [API set:
      1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'date: string;'
      return:
        type: string
  - name: text
    uid: 'visio!Visio.Comment#text:member'
    package: visio!
    fullName: text
    summary: >-
      A string that contains the comment text.


      \[ [API set:
      1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'text: string;'
      return:
        type: string
methods:
  - name: load(option)
    uid: 'visio!Visio.Comment#load:member(1)'
    package: visio!
    fullName: load(option)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call "context.sync()" before reading the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Visio.Comment` - Where option is a
      comma-delimited string or an array of strings that specify the properties
      to load.


      `load(option?: { select?: string; expand?: string; }): Visio.Comment` -
      Where option.select is a comma-delimited string that specifies the
      properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?:
      number }): Visio.Comment` - Only available on collection types. It is
      similar to the preceding signature. Option.top specifies the maximum
      number of collection items that can be included in the result. Option.skip
      specifies the number of items that are to be skipped and not included in
      the result. If option.top is specified, the result set will start after
      skipping the specified number of items.


      #### Examples


      ```javascript

      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shapeName = "Position Belt.41";
          var shape = activePage.shapes.getItem(shapeName);
          var shapeComments= shape.comments;
          shapeComments.load(["author", "text"]);
          return ctx.sync().then(function () {
              for(var i = 0; i < shapeComments.items.length; i++)
              {
                  var comment = shapeComments.items[i];
                  console.log("comment Author: " + comment.author);
                  console.log("Comment Text: " + comment.text);
                  console.log("Date " + comment.date);
              }
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(option?: Visio.Interfaces.CommentLoadOptions): Visio.Comment;'
      parameters:
        - id: option
          description: ''
          type: '<xref uid="visio!Visio.Interfaces.CommentLoadOptions:interface" />'
      return:
        type: '<xref uid="visio!Visio.Comment:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'visio!Visio.Comment#load:member(2)'
    package: visio!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Comment;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="visio!Visio.Comment:class" />'
        description: ''
  - name: load(option)
    uid: 'visio!Visio.Comment#load:member(3)'
    package: visio!
    fullName: load(option)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(option?: {
                    select?: string;
                    expand?: string;
                }): Visio.Comment;
      parameters:
        - id: option
          description: ''
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="visio!Visio.Comment:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'visio!Visio.Comment#set:member(1)'
    package: visio!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Visio.Comment): void`
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.CommentUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: '<xref uid="visio!Visio.Interfaces.CommentUpdateData:interface" />'
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'visio!Visio.Comment#set:member(2)'
    package: visio!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Visio.Comment): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="visio!Visio.Comment:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'visio!Visio.Comment#toJSON:member(1)'
    package: visio!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Visio.Comment object is
      an API object, the `toJSON` method returns a plain JavaScript object
      (typed as `Visio.Interfaces.CommentData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Visio.Interfaces.CommentData;'
      return:
        type: '<xref uid="visio!Visio.Interfaces.CommentData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
