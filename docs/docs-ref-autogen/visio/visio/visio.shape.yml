### YamlMime:TSType
name: Visio.Shape
uid: 'visio!Visio.Shape:class'
package: visio!
fullName: Visio.Shape
summary: Represents the Shape class.
remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
isPreview: false
isDeprecated: false
type: class
properties:
  - name: comments
    uid: 'visio!Visio.Shape#comments:member'
    package: visio!
    fullName: comments
    summary: Returns the Comments Collection.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly comments: Visio.CommentCollection;'
      return:
        type: '<xref uid="visio!Visio.CommentCollection:class" />'
  - name: context
    uid: 'visio!Visio.Shape#context:member'
    package: visio!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="visio!Visio.RequestContext:class" />'
  - name: hyperlinks
    uid: 'visio!Visio.Shape#hyperlinks:member'
    package: visio!
    fullName: hyperlinks
    summary: Returns the Hyperlinks collection for a Shape object.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
      return:
        type: '<xref uid="visio!Visio.HyperlinkCollection:class" />'
  - name: id
    uid: 'visio!Visio.Shape#id:member'
    package: visio!
    fullName: id
    summary: Shape's identifier.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: number;'
      return:
        type: number
  - name: name
    uid: 'visio!Visio.Shape#name:member'
    package: visio!
    fullName: name
    summary: Shape's name.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly name: string;'
      return:
        type: string
  - name: select
    uid: 'visio!Visio.Shape#select:member'
    package: visio!
    fullName: select
    summary: 'Returns true, if shape is selected. User can set true to select the shape explicitly.'
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'select: boolean;'
      return:
        type: boolean
  - name: shapeDataItems
    uid: 'visio!Visio.Shape#shapeDataItems:member'
    package: visio!
    fullName: shapeDataItems
    summary: Returns the Shape's Data Section.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
      return:
        type: '<xref uid="visio!Visio.ShapeDataItemCollection:class" />'
  - name: subShapes
    uid: 'visio!Visio.Shape#subShapes:member'
    package: visio!
    fullName: subShapes
    summary: Gets SubShape Collection.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly subShapes: Visio.ShapeCollection;'
      return:
        type: '<xref uid="visio!Visio.ShapeCollection:class" />'
  - name: text
    uid: 'visio!Visio.Shape#text:member'
    package: visio!
    fullName: text
    summary: Shape's text.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly text: string;'
      return:
        type: string
  - name: view
    uid: 'visio!Visio.Shape#view:member'
    package: visio!
    fullName: view
    summary: Returns the view of the shape.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly view: Visio.ShapeView;'
      return:
        type: '<xref uid="visio!Visio.ShapeView:class" />'
methods:
  - name: getAbsoluteBounds()
    uid: 'visio!Visio.Shape#getAbsoluteBounds:member(1)'
    package: visio!
    fullName: getAbsoluteBounds()
    summary: Returns the AbsoluteBoundingBox object that specifies absolute bounding box of the shape.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getAbsoluteBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
      return:
        type: >-
          <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref uid="visio!Visio.BoundingBox:interface"
          />&gt;
        description: ''
  - name: getBounds()
    uid: 'visio!Visio.Shape#getBounds:member(1)'
    package: visio!
    fullName: getBounds()
    summary: Returns the BoundingBox object that specifies bounding box of the shape.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
      return:
        type: >-
          <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref uid="visio!Visio.BoundingBox:interface"
          />&gt;
        description: ''
  - name: load(options)
    uid: 'visio!Visio.Shape#load:member(1)'
    package: visio!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Visio.Interfaces.ShapeLoadOptions): Visio.Shape;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="visio!Visio.Interfaces.ShapeLoadOptions:interface" />'
      return:
        type: '<xref uid="visio!Visio.Shape:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'visio!Visio.Shape#load:member(2)'
    package: visio!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Shape;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="visio!Visio.Shape:class" />'
        description: |-


          #### Examples

          ```TypeScript
          Visio.run(session, function (ctx) {
              const activePage = ctx.document.getActivePage();
              const shapeName = "Sample Name";
              const shape = activePage.shapes.getItem(shapeName);
              shape.load(["name", "id", "text", "select"]);
              return ctx.sync().then(function () {
                  console.log(shape.name);
                  console.log(shape.id);
                  console.log(shape.text);
                  console.log(shape.select);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```TypeScript
          Visio.run(session, function (ctx) {
              const activePage = ctx.document.getActivePage();
              const shape = activePage.shapes.getItem(0);
              shape.view.highlight = { color: "#E7E7E7", width: 100 };
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - name: load(propertyNamesAndPaths)
    uid: 'visio!Visio.Shape#load:member(3)'
    package: visio!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Visio.Shape;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="visio!Visio.Shape:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'visio!Visio.Shape#set:member(1)'
    package: visio!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="visio!Visio.Interfaces.ShapeUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'visio!Visio.Shape#set:member(2)'
    package: visio!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Visio.Shape): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="visio!Visio.Shape:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'visio!Visio.Shape#toJSON:member(1)'
    package: visio!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Visio.Shape object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Visio.Interfaces.ShapeData`<!-- -->) that contains shallow copies of any loaded child
      properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeData;'
      return:
        type: '<xref uid="visio!Visio.Interfaces.ShapeData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
