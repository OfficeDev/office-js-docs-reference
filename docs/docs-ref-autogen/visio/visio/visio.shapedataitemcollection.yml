### YamlMime:TSType
name: Visio.ShapeDataItemCollection
uid: 'visio!Visio.ShapeDataItemCollection:class'
package: visio!
fullName: Visio.ShapeDataItemCollection
summary: Represents the ShapeDataItemCollection for a given Shape.
remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'visio!Visio.ShapeDataItemCollection#context:member'
    package: visio!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="visio!Visio.RequestContext:class" />'
  - name: items
    uid: 'visio!Visio.ShapeDataItemCollection#items:member'
    package: visio!
    fullName: items
    summary: Gets the loaded child items in this collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly items: Visio.ShapeDataItem[];'
      return:
        type: '<xref uid="visio!Visio.ShapeDataItem:class" />[]'
methods:
  - name: getCount()
    uid: 'visio!Visio.ShapeDataItemCollection#getCount:member(1)'
    package: visio!
    fullName: getCount()
    summary: Gets the number of Shape Data Items.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;'
        description: ''
  - name: getItem(key)
    uid: 'visio!Visio.ShapeDataItemCollection#getItem:member(1)'
    package: visio!
    fullName: getItem(key)
    summary: Gets the ShapeDataItem using its name.
    remarks: '\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItem(key: string): Visio.ShapeDataItem;'
      parameters:
        - id: key
          description: Key is the name of the ShapeDataItem to be retrieved.
          type: string
      return:
        type: '<xref uid="visio!Visio.ShapeDataItem:class" />'
        description: ''
  - name: load(options)
    uid: 'visio!Visio.ShapeDataItemCollection#load:member(1)'
    package: visio!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions):
        Visio.ShapeDataItemCollection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="visio!Visio.Interfaces.ShapeDataItemCollectionLoadOptions:interface" /> & <xref
            uid="visio!Visio.Interfaces.CollectionLoadOptions:interface" />
      return:
        type: '<xref uid="visio!Visio.ShapeDataItemCollection:class" />'
        description: |-


          #### Examples

          ```TypeScript
          Visio.run(session, function (ctx) {
              const activePage = ctx.document.getActivePage();
              const shape = activePage.shapes.getItem(0);
              const shapeDataItems = shape.shapeDataItems;
              shapeDataItems.load(["label", "value"]);
              return ctx.sync().then(function() {
                  for (let i = 0; i < shapeDataItems.items.length; i++) {
                      console.log(shapeDataItems.items[i].label);
                      console.log(shapeDataItems.items[i].value);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - name: load(propertyNames)
    uid: 'visio!Visio.ShapeDataItemCollection#load:member(2)'
    package: visio!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeDataItemCollection;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="visio!Visio.ShapeDataItemCollection:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'visio!Visio.ShapeDataItemCollection#load:member(3)'
    package: visio!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Visio.ShapeDataItemCollection;'
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: '<xref uid="office!OfficeExtension.LoadOption:interface" />'
      return:
        type: '<xref uid="visio!Visio.ShapeDataItemCollection:class" />'
        description: ''
  - name: toJSON()
    uid: 'visio!Visio.ShapeDataItemCollection#toJSON:member(1)'
    package: visio!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original `Visio.ShapeDataItemCollection` object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `Visio.Interfaces.ShapeDataItemCollectionData`<!-- -->) that contains
      an "items" array with shallow copies of any loaded properties from the collection's items.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeDataItemCollectionData;'
      return:
        type: '<xref uid="visio!Visio.Interfaces.ShapeDataItemCollectionData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
