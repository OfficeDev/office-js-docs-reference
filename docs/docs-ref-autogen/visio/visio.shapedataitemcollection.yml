### YamlMime:UniversalReference
items:
  - uid: visio.Visio.ShapeDataItemCollection
    summary: |-
      Represents the ShapeDataItemCollection for a given Shape.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: Visio.ShapeDataItemCollection
    fullName: visio.Visio.ShapeDataItemCollection
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.ShapeDataItemCollection.getCount
      - visio.Visio.ShapeDataItemCollection.getItem
      - visio.Visio.ShapeDataItemCollection.items
      - visio.Visio.ShapeDataItemCollection.load
      - visio.Visio.ShapeDataItemCollection.toJSON
  - uid: visio.Visio.ShapeDataItemCollection.getCount
    summary: |-
      Gets the number of Shape Data Items.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: getCount()
    fullName: visio.Visio.ShapeDataItemCollection.getCount
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: visio.Visio.ShapeDataItemCollection.getItem
    summary: |-
      Gets the ShapeDataItem using its name.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: getItem(key)
    fullName: visio.Visio.ShapeDataItemCollection.getItem
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Visio.ShapeDataItem;'
      return:
        type:
          - visio.Visio.ShapeDataItem
        description: ''
      parameters:
        - id: key
          description: Key is the name of the ShapeDataItem to be retrieved.
          type:
            - string
  - uid: visio.Visio.ShapeDataItemCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: visio.Visio.ShapeDataItemCollection.items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.ShapeDataItem[];'
      return:
        type:
          - 'Visio.ShapeDataItem[]'
  - uid: visio.Visio.ShapeDataItemCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >
      In addition to this signature, this method has the following signatures:


      `load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection` - Where option.select is a
      comma-delimited string that specifies the properties/relationships to load, and options.expand is a
      comma-delimited string that specifies the relationships to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection`
      - Only available on collection types. It is similar to the preceding signature. Option.top specifies the maximum
      number of collection items that can be included in the result. Option.skip specifies the number of items that are
      to be skipped and not included in the result. If option.top is specified, the result set will start after skipping
      the specified number of items.


      #### Examples


      ```javascript

      Visio.run(function (ctx) { 
          var activePage = ctx.document.getActivePage();
          var shape = activePage.shapes.getItem(0);
          var shapeDataItems = shape.shapeDataItems;
          shapeDataItems.load();
          return ctx.sync().then(function() {
              for (var i = 0; i < shapeDataItems.items.length; i++)
              {
                  console.log(shapeDataItems.items[i].label);
                  console.log(shapeDataItems.items[i].value);
              }
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });

      ```
    name: load(option)
    fullName: visio.Visio.ShapeDataItemCollection.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): Visio.ShapeDataItemCollection;'
      return:
        type:
          - visio.Visio.ShapeDataItemCollection
        description: ''
      parameters:
        - id: option
          description: A comma-delimited string or an array of strings that specify the properties/relationships to load.
          type:
            - 'string | string[]'
  - uid: visio.Visio.ShapeDataItemCollection.toJSON
    name: toJSON()
    fullName: visio.Visio.ShapeDataItemCollection.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeDataItemCollectionData;'
      return:
        type:
          - visio.Visio.Interfaces.ShapeDataItemCollectionData
        description: ''
