### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Document
    summary: |-
      Represents the Document class.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: Visio.Document
    fullName: visio.Visio.Document
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Document.application
      - visio.Visio.Document.getActivePage
      - visio.Visio.Document.load
      - visio.Visio.Document.onDataRefreshComplete
      - visio.Visio.Document.onDocumentLoadComplete
      - visio.Visio.Document.onPageLoadComplete
      - visio.Visio.Document.onSelectionChanged
      - visio.Visio.Document.onShapeMouseEnter
      - visio.Visio.Document.onShapeMouseLeave
      - visio.Visio.Document.pages
      - visio.Visio.Document.set
      - visio.Visio.Document.setActivePage
      - visio.Visio.Document.startDataRefresh
      - visio.Visio.Document.toJSON
      - visio.Visio.Document.view
  - uid: visio.Visio.Document.application
    summary: |-
      Represents a Visio application instance that contains this document. Read-only.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: application
    fullName: visio.Visio.Document.application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Visio.Application;'
      return:
        type:
          - Visio.Application
  - uid: visio.Visio.Document.getActivePage
    summary: |-
      Returns the Active Page of the document.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: getActivePage()
    fullName: visio.Visio.Document.getActivePage
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActivePage(): Visio.Page;'
      return:
        type:
          - Visio.Page
        description: |


          #### Examples

          ```javascript
          Visio.run(function (ctx) { 
              var document = ctx.document;
              var activePage = document.getActivePage();
              activePage.load();
              return ctx.sync().then(function () {
              console.log("pageName: " +activePage.name);
                });   
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Document.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Visio.Document` - Where option is a comma-delimited string or an array of
      strings that specify the properties/relationships to load.


      `load(option?: { select?: string; expand?: string; }): Visio.Document` - Where option.select is a comma-delimited
      string that specifies the properties/relationships to load, and options.expand is a comma-delimited string that
      specifies the relationships to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Document` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.


      #### Examples


      ```javascript

      Visio.run(function (ctx) { 
          var pages = ctx.document.pages;
          var pageCount = pages.getCount();
          return ctx.sync().then(function () {
              console.log("Pages Count: " +pageCount.value);
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });

      ```


      ```javascript

      Visio.run(function (ctx) { 
          var documentView = ctx.document.view;
          documentView.disableHyperlinks();
          return ctx.sync();
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });

      ```


      ```javascript

      Visio.run(function (ctx) { 
          var application = ctx.document.application;
          application.showToolbars = false;
          return ctx.sync();
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });

      ```
    name: load(option)
    fullName: visio.Visio.Document.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.DocumentLoadOptions): Visio.Document;'
      return:
        type:
          - Visio.Document
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - visio.Visio.Interfaces.DocumentLoadOptions
  - uid: visio.Visio.Document.onDataRefreshComplete
    summary: |-
      Occurs when the data is refreshed in the diagram.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: onDataRefreshComplete
    fullName: visio.Visio.Document.onDataRefreshComplete
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly onDataRefreshComplete: OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>
  - uid: visio.Visio.Document.onDocumentLoadComplete
    summary: |-
      Occurs when the Document is loaded, refreshed, or changed.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: onDocumentLoadComplete
    fullName: visio.Visio.Document.onDocumentLoadComplete
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly onDocumentLoadComplete: OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>
  - uid: visio.Visio.Document.onPageLoadComplete
    summary: |-
      Occurs when the page is finished loading.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: onPageLoadComplete
    fullName: visio.Visio.Document.onPageLoadComplete
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly onPageLoadComplete: OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>
  - uid: visio.Visio.Document.onSelectionChanged
    summary: |-
      Occurs when the current selection of shapes changes.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: onSelectionChanged
    fullName: visio.Visio.Document.onSelectionChanged
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>
  - uid: visio.Visio.Document.onShapeMouseEnter
    summary: |-
      Occurs when the user moves the mouse pointer into the bounding box of a shape.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: onShapeMouseEnter
    fullName: visio.Visio.Document.onShapeMouseEnter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly onShapeMouseEnter: OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>
  - uid: visio.Visio.Document.onShapeMouseLeave
    summary: |-
      Occurs when the user moves the mouse out of the bounding box of a shape.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: onShapeMouseLeave
    fullName: visio.Visio.Document.onShapeMouseLeave
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly onShapeMouseLeave: OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>
  - uid: visio.Visio.Document.pages
    summary: |-
      Represents a collection of pages associated with the document. Read-only.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: pages
    fullName: visio.Visio.Document.pages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pages: Visio.PageCollection;'
      return:
        type:
          - Visio.PageCollection
  - uid: visio.Visio.Document.set
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Visio.Document): void`
    name: 'set(properties, options)'
    fullName: visio.Visio.Document.set
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.DocumentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type:
            - Interfaces.DocumentUpdateData
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: visio.Visio.Document.setActivePage
    summary: |-
      Set the Active Page of the document.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: setActivePage(PageName)
    fullName: visio.Visio.Document.setActivePage
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setActivePage(PageName: string): void;'
      return:
        type:
          - void
        description: |


          #### Examples

          ```javascript
          Visio.run(function (ctx) { 
              var document = ctx.document;
              var pageName = "Page-1";
              document.setActivePage(pageName);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: PageName
          description: Name of the page
          type:
            - string
  - uid: visio.Visio.Document.startDataRefresh
    summary: |-
      Triggers the refresh of the data in the Diagram, for all pages.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: startDataRefresh()
    fullName: visio.Visio.Document.startDataRefresh
    langs:
      - typeScript
    type: method
    syntax:
      content: 'startDataRefresh(): void;'
      return:
        type:
          - void
        description: |


          #### Examples

          ```javascript
          Visio.run(function (ctx) { 
              var document = ctx.document;
              document.startDataRefresh();
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Document.toJSON
    name: toJSON()
    fullName: visio.Visio.Document.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.DocumentData;'
      return:
        type:
          - visio.Visio.Interfaces.DocumentData
        description: ''
  - uid: visio.Visio.Document.view
    summary: |-
      Returns the DocumentView object. Read-only.

      \[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]
    name: view
    fullName: visio.Visio.Document.view
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly view: Visio.DocumentView;'
      return:
        type:
          - visio.Visio.DocumentView
