### YamlMime:UniversalReference
items:
  - uid: visio.Visio.ShapeView
    summary: |-
      Represents the ShapeView class.

      \[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]
    name: Visio.ShapeView
    fullName: Visio.ShapeView
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.ShapeView.addOverlay
      - visio.Visio.ShapeView.addOverlay_1
      - visio.Visio.ShapeView.highlight
      - visio.Visio.ShapeView.load
      - visio.Visio.ShapeView.load_1
      - visio.Visio.ShapeView.load_2
      - visio.Visio.ShapeView.removeOverlay
      - visio.Visio.ShapeView.set
      - visio.Visio.ShapeView.set_1
      - visio.Visio.ShapeView.toJSON
  - uid: visio.Visio.ShapeView.addOverlay
    summary: |-
      Adds an overlay on top of the shape.

      \[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]
    name: 'addOverlay(OverlayType, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)'
    fullName: 'addOverlay(OverlayType, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addOverlay(OverlayType: Visio.OverlayType, Content: string, OverlayHorizontalAlignment:
        Visio.OverlayHorizontalAlignment, OverlayVerticalAlignment: Visio.OverlayVerticalAlignment, Width: number,
        Height: number): OfficeExtension.ClientResult<number>;
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: |-


          #### Examples

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              var overlayId=shape.view.addOverlay("Image", "Visio Online", "Center", "Center", 50, 50);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: OverlayType
          description: An Overlay Type. Can be 'Text' or 'Image'.
          type:
            - visio.Visio.OverlayType
        - id: Content
          description: Content of Overlay.
          type:
            - string
        - id: OverlayHorizontalAlignment
          description: 'Horizontal Alignment of Overlay. Can be ''Left'', ''Center'', or ''Right''.'
          type:
            - visio.Visio.OverlayHorizontalAlignment
        - id: OverlayVerticalAlignment
          description: 'Vertical Alignment of Overlay. Can be ''Top'', ''Middle'', ''Bottom''.'
          type:
            - visio.Visio.OverlayVerticalAlignment
        - id: Width
          description: Overlay Width.
          type:
            - number
        - id: Height
          description: Overlay Height.
          type:
            - number
  - uid: visio.Visio.ShapeView.addOverlay_1
    summary: |-
      Adds an overlay on top of the shape.

      \[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]
    name: 'addOverlay(OverlayTypeString, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)'
    fullName: 'addOverlay(OverlayTypeString, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addOverlay(OverlayTypeString: "Text" | "Image", Content: string, OverlayHorizontalAlignment: "Left" | "Center" |
        "Right", OverlayVerticalAlignment: "Top" | "Middle" | "Bottom", Width: number, Height: number):
        OfficeExtension.ClientResult<number>;
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
      parameters:
        - id: OverlayTypeString
          description: An Overlay Type. Can be 'Text' or 'Image'.
          type:
            - '"Text" | "Image"'
        - id: Content
          description: Content of Overlay.
          type:
            - string
        - id: OverlayHorizontalAlignment
          description: 'Horizontal Alignment of Overlay. Can be ''Left'', ''Center'', or ''Right''.'
          type:
            - '"Left" | "Center" | "Right"'
        - id: OverlayVerticalAlignment
          description: 'Vertical Alignment of Overlay. Can be ''Top'', ''Middle'', ''Bottom''.'
          type:
            - '"Top" | "Middle" | "Bottom"'
        - id: Width
          description: Overlay Width.
          type:
            - number
        - id: Height
          description: Overlay Height.
          type:
            - number
  - uid: visio.Visio.ShapeView.highlight
    summary: |-
      Represents the highlight around the shape.

      \[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]
    name: highlight
    fullName: highlight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlight: Visio.Highlight;'
      return:
        type:
          - visio.Visio.Highlight
        description: |-


          #### Examples

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              shape.view.highlight = { color: "#E7E7E7", width: 100 };
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.ShapeView.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Visio.ShapeView` - Where option is a comma-delimited string or an array of
      strings that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): Visio.ShapeView` - Where option.select is a comma-delimited
      string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the
      navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeView` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeViewLoadOptions): Visio.ShapeView;'
      return:
        type:
          - visio.Visio.ShapeView
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - visio.Visio.Interfaces.ShapeViewLoadOptions
  - uid: visio.Visio.ShapeView.load_1
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeView;'
      return:
        type:
          - visio.Visio.ShapeView
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: visio.Visio.ShapeView.load_2
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.ShapeView;'
      return:
        type:
          - visio.Visio.ShapeView
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and
            propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.ShapeView.removeOverlay
    summary: |-
      Removes particular overlay or all overlays on the Shape.

      \[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]
    name: removeOverlay(OverlayId)
    fullName: removeOverlay(OverlayId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeOverlay(OverlayId: number): void;'
      return:
        type:
          - void
        description: |-


          #### Examples

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              shape.view.removeOverlay(1);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: OverlayId
          description: An Overlay Id. Removes the specific overlay id from the shape.
          type:
            - number
  - uid: visio.Visio.ShapeView.set
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Visio.ShapeView): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ShapeViewUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type:
            - Interfaces.ShapeViewUpdateData
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: visio.Visio.ShapeView.set_1
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.ShapeView): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - visio.Visio.ShapeView
  - uid: visio.Visio.ShapeView.toJSON
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeViewData;'
      return:
        type:
          - visio.Visio.Interfaces.ShapeViewData
        description: ''
