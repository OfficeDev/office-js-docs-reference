### YamlMime:TSType
name: Excel.DoubleCellValue
uid: excel!Excel.DoubleCellValue:interface
package: excel!
fullName: Excel.DoubleCellValue
summary: Represents the value of a cell containing a double.
remarks: >-
  \[ [API set: ExcelApi
  1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

isPreview: false
isDeprecated: false
type: interface
properties:
  - name: basicType
    uid: excel!Excel.DoubleCellValue#basicType:member
    package: excel!
    fullName: basicType
    summary: >-
      Represents the value that would be returned by `Range.valueTypes` for a
      cell with this value.
    remarks: >-
      \[ [API set: ExcelApi
      1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets)
      \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'basicType?: RangeValueType.double | "Double";'
      return:
        type: <xref uid="excel!Excel.RangeValueType.double:member" /> | "Double"
  - name: basicValue
    uid: excel!Excel.DoubleCellValue#basicValue:member
    package: excel!
    fullName: basicValue
    summary: >-
      Represents the value that would be returned by `Range.values` for a cell
      with this value.
    remarks: >-
      \[ [API set: ExcelApi
      1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets)
      \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'basicValue: number;'
      return:
        type: number
  - name: type
    uid: excel!Excel.DoubleCellValue#type:member
    package: excel!
    fullName: type
    summary: Represents the type of this cell value.
    remarks: >-
      \[ [API set: ExcelApi
      1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets)
      \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/20-data-types/data-types-formatted-number.yaml


      // This function creates a double data type,

      // and sets the format of this data type as a date.

      await Excel.run(async (context) => {
        // Get the Sample worksheet and a range on that sheet.
        const sheet = context.workbook.worksheets.getItemOrNullObject("Sample");
        const dateRange = sheet.getRange("A1");

        // Write a number formatted as a date to cell A1.
        dateRange.valuesAsJson = [
          [
            {
              type: Excel.CellValueType.double,
              basicValue: 32889.0,
              numberFormat: "m/d/yyyy"
            }
          ]
        ];
        await context.sync();
      });

      ```

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type: CellValueType.double | "Double";'
      return:
        type: <xref uid="excel!Excel.CellValueType.double:member" /> | "Double"
