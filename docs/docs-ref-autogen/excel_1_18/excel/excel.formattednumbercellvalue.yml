### YamlMime:TSType
name: Excel.FormattedNumberCellValue
uid: 'excel!Excel.FormattedNumberCellValue:interface'
package: excel!
fullName: Excel.FormattedNumberCellValue
summary: >-
  Represents the value of a cell containing a number with a format string. Number format strings must conform to Excel
  guidelines. To learn more, see [Review guidelines for customizing a number
  format](https://support.microsoft.com/office/c0a1d1fa-d3f4-4018-96b7-9c9354dd99f5)<!-- -->. In this scenario, the
  format is applied to the value and not to the cell, so the value retains its format string throughout calculation.
remarks: '\[ [API set: ExcelApi 1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: basicType
    uid: 'excel!Excel.FormattedNumberCellValue#basicType:member'
    package: excel!
    fullName: basicType
    summary: Represents the value that would be returned by `Range.valueTypes` for a cell with this value.
    remarks: '\[ [API set: ExcelApi 1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'basicType?: RangeValueType.double | "Double";'
      return:
        type: '<xref uid="excel!Excel.RangeValueType.double:member" /> | "Double"'
  - name: basicValue
    uid: 'excel!Excel.FormattedNumberCellValue#basicValue:member'
    package: excel!
    fullName: basicValue
    summary: Represents the value that would be returned by `Range.values` for a cell with this value.
    remarks: '\[ [API set: ExcelApi 1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'basicValue: number;'
      return:
        type: number
  - name: numberFormat
    uid: 'excel!Excel.FormattedNumberCellValue#numberFormat:member'
    package: excel!
    fullName: numberFormat
    summary: >-
      Returns the number format string that is used to display this value. When accessed through a `valuesAsJson`
      property, this number format string is in the en-US locale. When accessed through a `valuesAsJsonLocal` property,
      this number format is in the user's display locale. Number format strings must conform to Excel guidelines. To
      learn more, see [Review guidelines for customizing a number
      format](https://support.microsoft.com/office/c0a1d1fa-d3f4-4018-96b7-9c9354dd99f5)<!-- -->.
    remarks: >-
      \[ [API set: ExcelApi 1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/20-data-types/data-types-formatted-number.yaml


      // This function creates a formatted number data type,

      // and sets the format of this data type as a currency.

      await Excel.run(async (context) => {
        // Get the Sample worksheet and a range on that sheet.
        const sheet = context.workbook.worksheets.getItemOrNullObject("Sample");
        const currencyRange = sheet.getRange("A2");

        // Write a number formatted as currency to cell A2.
        currencyRange.valuesAsJson = [
          [
            {
              type: Excel.CellValueType.formattedNumber,
              basicValue: 12.34,
              numberFormat: "$* #,##0.00"
            }
          ]
        ];

        await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'numberFormat: string;'
      return:
        type: string
  - name: type
    uid: 'excel!Excel.FormattedNumberCellValue#type:member'
    package: excel!
    fullName: type
    summary: Represents the type of this cell value.
    remarks: >-
      \[ [API set: ExcelApi 1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/20-data-types/data-types-formatted-number.yaml


      // This function creates a formatted number data type,

      // and sets the format of this data type as a date.

      await Excel.run(async (context) => {
        // Get the Sample worksheet and a range on that sheet.
        const sheet = context.workbook.worksheets.getItemOrNullObject("Sample");
        const dateRange = sheet.getRange("A1");

        // Write a number formatted as a date to cell A1.
        dateRange.valuesAsJson = [
          [
            {
              type: Excel.CellValueType.formattedNumber,
              basicValue: 32889.0,
              numberFormat: "m/d/yyyy"
            }
          ]
        ];
        await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type: CellValueType.formattedNumber | "FormattedNumber";'
      return:
        type: '<xref uid="excel!Excel.CellValueType.formattedNumber:member" /> | "FormattedNumber"'
