### YamlMime:TSType
name: Excel.Interfaces.TableColumnCollectionLoadOptions
uid: 'excel!Excel.Interfaces.TableColumnCollectionLoadOptions:interface'
package: excel!
fullName: Excel.Interfaces.TableColumnCollectionLoadOptions
summary: Represents a collection of all the columns that are part of the table.
remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: $all
    uid: 'excel!Excel.Interfaces.TableColumnCollectionLoadOptions#$all:member'
    package: excel!
    fullName: $all
    summary: >-
      Specifying `$all` for the load options loads all the scalar properties (such as `Range.address`<!-- -->) but not
      the navigational properties (such as `Range.format.fill.color`<!-- -->).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: '$all?: boolean;'
      return:
        type: boolean
  - name: filter
    uid: 'excel!Excel.Interfaces.TableColumnCollectionLoadOptions#filter:member'
    package: excel!
    fullName: filter
    summary: 'For EACH ITEM in the collection: Retrieves the filter applied to the column.'
    remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'filter?: Excel.Interfaces.FilterLoadOptions;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.FilterLoadOptions:interface" />'
  - name: id
    uid: 'excel!Excel.Interfaces.TableColumnCollectionLoadOptions#id:member'
    package: excel!
    fullName: id
    summary: 'For EACH ITEM in the collection: Returns a unique key that identifies the column within the table.'
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id?: boolean;'
      return:
        type: boolean
  - name: index
    uid: 'excel!Excel.Interfaces.TableColumnCollectionLoadOptions#index:member'
    package: excel!
    fullName: index
    summary: >-
      For EACH ITEM in the collection: Returns the index number of the column within the columns collection of the
      table. Zero-indexed.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'index?: boolean;'
      return:
        type: boolean
  - name: name
    uid: 'excel!Excel.Interfaces.TableColumnCollectionLoadOptions#name:member'
    package: excel!
    fullName: name
    summary: 'For EACH ITEM in the collection: Specifies the name of the table column.'
    remarks: >-
      \[ [API set: ExcelApi 1.1 for getting the name; 1.4 for setting
      it.](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name?: boolean;'
      return:
        type: boolean
  - name: values
    uid: 'excel!Excel.Interfaces.TableColumnCollectionLoadOptions#values:member'
    package: excel!
    fullName: values
    summary: >-
      For EACH ITEM in the collection: Represents the raw values of the specified range. The data returned could be a
      string, number, or boolean. Cells that contain an error will return the error string. If the returned value starts
      with a plus ("+"), minus ("-"), or equal sign ("="), Excel interprets this value as a formula.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'values?: boolean;'
      return:
        type: boolean
  - name: valuesAsJson
    uid: 'excel!Excel.Interfaces.TableColumnCollectionLoadOptions#valuesAsJson:member'
    package: excel!
    fullName: valuesAsJson
    summary: >-
      For EACH ITEM in the collection: A JSON representation of the values in the cells in this table column. Unlike
      `TableColumn.values`<!-- -->, `TableColumn.valuesAsJson` supports all data types which can be in a cell. Examples
      include formatted number values and web images, in addition to the standard boolean, number, and string values.
      Data returned from this API always aligns with the en-US locale. To retrieve data in the user's display locale,
      use `TableColumn.valuesAsJsonLocal`<!-- -->.
    remarks: '\[ [API set: ExcelApi 1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'valuesAsJson?: boolean;'
      return:
        type: boolean
  - name: valuesAsJsonLocal
    uid: 'excel!Excel.Interfaces.TableColumnCollectionLoadOptions#valuesAsJsonLocal:member'
    package: excel!
    fullName: valuesAsJsonLocal
    summary: >-
      For EACH ITEM in the collection: A JSON representation of the values in the cells in this table column. Unlike
      `TableColumn.values`<!-- -->, `TableColumn.valuesAsJsonLocal` supports all data types which can be in a cell.
      Examples include formatted number values and web images, in addition to the standard boolean, number, and string
      values. Data returned from this API always aligns with the user's display locale. To retrieve data independent of
      locale, use `TableColumn.valuesAsJson`<!-- -->.
    remarks: '\[ [API set: ExcelApi 1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'valuesAsJsonLocal?: boolean;'
      return:
        type: boolean
