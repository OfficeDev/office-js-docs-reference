### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.MasterCategories:interface'
    summary: >-
      Represents the categories master list on the mailbox.


      In Outlook, a user can tag messages and appointments by using a category to color-code them. The user defines
      categories in a master list on their mailbox. They can then apply one or more categories to an item.


      **Important**: In delegate or shared scenarios, the delegate can get the categories in the master list but can't
      add or remove categories.


      \[ [API set: Mailbox 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
      `ReadWriteMailbox`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
      Compose or Read
    name: Office.MasterCategories
    fullName: Office.MasterCategories
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.MasterCategories#addAsync:member(1)'
      - 'outlook!Office.MasterCategories#addAsync:member(2)'
      - 'outlook!Office.MasterCategories#getAsync:member(1)'
      - 'outlook!Office.MasterCategories#getAsync:member(2)'
      - 'outlook!Office.MasterCategories#removeAsync:member(1)'
      - 'outlook!Office.MasterCategories#removeAsync:member(2)'
  - uid: 'outlook!Office.MasterCategories#addAsync:member(1)'
    summary: >-
      Adds categories to the master list on a mailbox. Each category must have a unique name but multiple categories can
      use the same color.


      \[ [API set: Mailbox 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
      `ReadWriteMailbox`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
      Compose or Read


      **Errors**:


      - `DuplicateCategory`<!-- -->: One of the categories provided is already in the master category list.


      - `PermissionDenied`<!-- -->: The user does not have permission to perform this action.
    name: 'addAsync(categories, options, callback)'
    fullName: 'addAsync(categories, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addAsync(categories: CategoryDetails[], options?: Office.AsyncContextOptions, callback?: (asyncResult:
        Office.AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: categories
          description: The categories to be added to the master list on the mailbox.
          type:
            - 'outlook!Office.MasterCategories#addAsync~0:complex'
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. `asyncContext`<!-- -->:
            Developers can provide any object they wish to access in the callback method.
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the `callback` parameter is called with a single
            parameter of type `Office.AsyncResult`<!-- -->.
          type:
            - 'outlook!Office.MasterCategories#addAsync~1:complex'
  - uid: 'outlook!Office.MasterCategories#addAsync:member(2)'
    summary: >-
      Adds categories to the master list on a mailbox. Each category must have a unique name but multiple categories can
      use the same color.


      \[ [API set: Mailbox 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
      `ReadWriteMailbox`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
      Compose or Read


      **Errors**:


      - `DuplicateCategory`<!-- -->: One of the categories provided is already in the master category list.


      - `PermissionDenied`<!-- -->: The user does not have permission to perform this action.


      #### Examples


      ```javascript

      var masterCategoriesToAdd = [
          {
              "displayName": "Urgent!",
              "color": Office.MailboxEnums.CategoryColor.Preset0
          }
      ];


      Office.context.mailbox.masterCategories.addAsync(masterCategoriesToAdd, function (asyncResult) {
          if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
              console.log("Successfully added categories to master list");
          } else {
              console.log("masterCategories.addAsync call failed with error: " + asyncResult.error.message);
          }
      });

      ```

      ```javascript

      var masterCategoriesToAdd = [
        {
          displayName: "TestCategory",
          color: Office.MailboxEnums.CategoryColor.Preset0
        }
      ];


      Office.context.mailbox.masterCategories.addAsync(masterCategoriesToAdd, function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("Successfully added categories to master list");
        } else {
          console.log("masterCategories.addAsync call failed with error: " + asyncResult.error.message);
        }
      });

      ```
    name: 'addAsync(categories, callback)'
    fullName: 'addAsync(categories, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(categories: CategoryDetails[], callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: categories
          description: The categories to be added to the master list on the mailbox.
          type:
            - 'outlook!Office.MasterCategories#addAsync~2:complex'
        - id: callback
          description: >-
            When the method completes, the function passed in the `callback` parameter is called with a single parameter
            of type `Office.AsyncResult`<!-- -->. If adding categories fails, the `asyncResult.error` property will
            contain an error code.
          type:
            - 'outlook!Office.MasterCategories#addAsync~3:complex'
  - uid: 'outlook!Office.MasterCategories#getAsync:member(1)'
    summary: |-
      Gets the master list of categories on a mailbox.

      \[ [API set: Mailbox 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
      `ReadWriteMailbox`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
      Compose or Read
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getAsync(options: Office.AsyncContextOptions, callback: (asyncResult:
        Office.AsyncResult<CategoryDetails[]>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: >-
            An object literal that contains one or more of the following properties. `asyncContext`<!-- -->: Developers
            can provide any object they wish to access in the callback method.
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: >-
            When the method completes, the function passed in the `callback` parameter is called with a single parameter
            of type `Office.AsyncResult`<!-- -->. If adding categories fails, the `asyncResult.error` property will
            contain an error code.
          type:
            - 'outlook!Office.MasterCategories#getAsync~0:complex'
  - uid: 'outlook!Office.MasterCategories#getAsync:member(2)'
    summary: |-
      Gets the master list of categories on a mailbox.

      \[ [API set: Mailbox 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
      `ReadWriteMailbox`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
      Compose or Read


      #### Examples


      ```javascript

      Office.context.mailbox.masterCategories.getAsync(function (asyncResult) {
          if (asyncResult.status === Office.AsyncResultStatus.Failed) {
              console.log("Action failed with error: " + asyncResult.error.message);
          } else {
              var masterCategories = asyncResult.value;
              console.log("Master categories:");
              masterCategories.forEach(function (item) {
                  console.log("-- " + JSON.stringify(item));
              });
          }
      });

      ```

      ```javascript

      Office.context.mailbox.masterCategories.getAsync(function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          var categories = asyncResult.value;
          if (categories && categories.length > 0) {
            console.log("Master categories:");
            console.log(JSON.stringify(categories));
          } else {
            console.log("There are no categories in the master list.");
          }
        } else {
          console.error(asyncResult.error);
        }
      });

      ```
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<CategoryDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: >-
            When the method completes, the function passed in the `callback` parameter is called with a single parameter
            of type `Office.AsyncResult`<!-- -->.
          type:
            - 'outlook!Office.MasterCategories#getAsync~1:complex'
  - uid: 'outlook!Office.MasterCategories#removeAsync:member(1)'
    summary: |-
      Removes categories from the master list on a mailbox.

      \[ [API set: Mailbox 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
      `ReadWriteMailbox`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
      Compose or Read


      **Errors**:


      - `PermissionDenied`<!-- -->: The user does not have permission to perform this action.
    name: 'removeAsync(categories, options, callback)'
    fullName: 'removeAsync(categories, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        removeAsync(categories: string[], options?: Office.AsyncContextOptions, callback?: (asyncResult:
        Office.AsyncResult<void>) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: categories
          description: The categories to be removed from the master list on the mailbox.
          type:
            - 'string[]'
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the following properties. `asyncContext`<!-- -->:
            Developers can provide any object they wish to access in the callback method.
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the `callback` parameter is called with a single
            parameter of type `Office.AsyncResult`<!-- -->. If removing categories fails, the `asyncResult.error`
            property will contain an error code.
          type:
            - 'outlook!Office.MasterCategories#removeAsync~0:complex'
  - uid: 'outlook!Office.MasterCategories#removeAsync:member(2)'
    summary: |-
      Removes categories from the master list on a mailbox.

      \[ [API set: Mailbox 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
      `ReadWriteMailbox`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
      Compose or Read


      **Errors**:


      - `PermissionDenied`<!-- -->: The user does not have permission to perform this action.


      #### Examples


      ```javascript

      var masterCategoriesToRemove = ["Urgent!"];


      Office.context.mailbox.masterCategories.removeAsync(masterCategoriesToRemove, function (asyncResult) {
          if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
              console.log("Successfully removed categories from master list");
          } else {
              console.log("masterCategories.removeAsync call failed with error: " + asyncResult.error.message);
          }
      });

      ```

      ```javascript

      var masterCategoriesToRemove = ["TestCategory"];


      Office.context.mailbox.masterCategories.removeAsync(masterCategoriesToRemove, function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("Successfully removed categories from master list");
        } else {
          console.log("masterCategories.removeAsync call failed with error: " + asyncResult.error.message);
        }
      });

      ```
    name: 'removeAsync(categories, callback)'
    fullName: 'removeAsync(categories, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(categories: string[], callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: categories
          description: The categories to be removed from the master list on the mailbox.
          type:
            - 'string[]'
        - id: callback
          description: >-
            When the method completes, the function passed in the `callback` parameter is called with a single parameter
            of type `Office.AsyncResult`<!-- -->. If removing categories fails, the `asyncResult.error` property will
            contain an error code.
          type:
            - 'outlook!Office.MasterCategories#removeAsync~1:complex'
references:
  - uid: 'outlook!Office.MasterCategories#addAsync~0:complex'
    name: 'CategoryDetails[]'
    fullName: 'Office.CategoryDetails[]'
    spec.typeScript:
      - uid: 'outlook!Office.CategoryDetails:interface'
        name: CategoryDetails
        fullName: Office.CategoryDetails
      - name: '[]'
        fullName: '[]'
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.MasterCategories#addAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.MasterCategories#addAsync~2:complex'
    name: 'CategoryDetails[]'
    fullName: 'Office.CategoryDetails[]'
    spec.typeScript:
      - uid: 'outlook!Office.CategoryDetails:interface'
        name: CategoryDetails
        fullName: Office.CategoryDetails
      - name: '[]'
        fullName: '[]'
  - uid: 'outlook!Office.MasterCategories#addAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.MasterCategories#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<CategoryDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.CategoryDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.CategoryDetails:interface'
        name: CategoryDetails
        fullName: Office.CategoryDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.MasterCategories#getAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<CategoryDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.CategoryDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.CategoryDetails:interface'
        name: CategoryDetails
        fullName: Office.CategoryDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.MasterCategories#removeAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.MasterCategories#removeAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
