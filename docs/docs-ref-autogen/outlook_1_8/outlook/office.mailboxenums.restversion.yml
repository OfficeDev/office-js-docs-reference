### YamlMime:TSEnum
name: Office.MailboxEnums.RestVersion
uid: 'outlook!Office.MailboxEnums.RestVersion:enum'
package: outlook!
fullName: Office.MailboxEnums.RestVersion
summary: Specifies the version of the REST API that corresponds to a REST-formatted item ID.
remarks: >-
  \[ [API set: Mailbox 1.3](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


  **[Applicable Outlook
  mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
  Compose or Read


  #### Examples


  ```javascript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/85-tokens-and-service-calls/basic-rest-cors.yaml

  Office.context.mailbox.getCallbackTokenAsync({ isRest: true }, function (result) {
      const ewsId = Office.context.mailbox.item.itemId;
      const token = result.value;
      const restId = Office.context.mailbox.convertToRestId(ewsId, Office.MailboxEnums.RestVersion.v2_0);
      const getMessageUrl = Office.context.mailbox.restUrl + '/v2.0/me/messages/' + restId;
              
      const xhr = new XMLHttpRequest();
      xhr.open('GET', getMessageUrl);
      xhr.setRequestHeader("Authorization", "Bearer " + token);
      xhr.onload = function (e) {
          console.log(this.response);
      }
      xhr.send();
  });

  ```
isPreview: false
isDeprecated: false
fields:
  - name: Beta
    uid: 'outlook!Office.MailboxEnums.RestVersion.Beta:member'
    package: outlook!
    summary: Beta.
    value: '"beta"'
  - name: v1_0
    uid: 'outlook!Office.MailboxEnums.RestVersion.v1_0:member'
    package: outlook!
    summary: Version 1.0.
    value: '"v1.0"'
  - name: v2_0
    uid: 'outlook!Office.MailboxEnums.RestVersion.v2_0:member'
    package: outlook!
    summary: Version 2.0.
    value: '"v2.0"'
