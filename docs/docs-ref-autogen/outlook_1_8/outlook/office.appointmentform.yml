### YamlMime:TSType
name: Office.AppointmentForm
uid: 'outlook!Office.AppointmentForm:interface'
package: outlook!
fullName: Office.AppointmentForm
summary: >-
  The `AppointmentForm` object is used to access the currently selected
  appointment.
remarks: >-
  **[Minimum permission
  level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
  -->**: `Restricted`


  **[Applicable Outlook
  mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
  -->**: Compose or Read
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: body
    uid: 'outlook!Office.AppointmentForm#body:member'
    package: outlook!
    fullName: body
    summary: >-
      Gets an object that provides methods for manipulating the body of an item.


      \[ [API set: Mailbox
      1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)
      \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: `ReadItem`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose or Read
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'body: Body | string;'
      return:
        type: '<xref uid="outlook!Office.Body:interface" /> | string'
  - name: end
    uid: 'outlook!Office.AppointmentForm#end:member'
    package: outlook!
    fullName: end
    summary: >-
      Gets or sets the date and time that the appointment is to end.


      The `end` property is expressed as a Coordinated Universal Time (UTC) date
      and time value. You can use the `convertToLocalClientTime` method to
      convert the `end` property value to the client's local date and time.


      *Read mode*


      The `end` property returns a `Date` object.


      *Compose mode*


      The `end` property returns a `Time` object.


      When you use the `Time.setAsync` method to set the end time, you should
      use the `convertToUtcClientTime` method to convert the local time on the
      client to UTC for the server.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: `ReadItem`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose or Read
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'end: Time | Date;'
      return:
        type: '<xref uid="outlook!Office.Time:interface" /> | Date'
  - name: location
    uid: 'outlook!Office.AppointmentForm#location:member'
    package: outlook!
    fullName: location
    summary: >-
      Gets or sets the location of an appointment.


      *Read mode*


      The `location` property returns a string that contains the location of the
      appointment.


      *Compose mode*


      The `location` property returns a `Location` object that provides methods
      that are used to get and set the location of the appointment.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: `ReadItem`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose or Read
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'location: Location | string;'
      return:
        type: '<xref uid="outlook!Office.Location:interface" /> | string'
  - name: optionalAttendees
    uid: 'outlook!Office.AppointmentForm#optionalAttendees:member'
    package: outlook!
    fullName: optionalAttendees
    summary: >-
      Provides access to the optional attendees of an event. The type of object
      and level of access depend on the mode of the current item.


      *Read mode*


      The `optionalAttendees` property returns an array that contains an
      [EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface)
      object for each optional attendee to the meeting. Collection size limits:


      - Windows: 500 members


      - Mac: 100 members


      - Other: No limit


      *Compose mode*


      The `optionalAttendees` property returns a `Recipients` object that
      provides methods to get or update the optional attendees for a meeting.
      However, depending on the client/platform (i.e., Windows, Mac, etc.),
      limits may apply on how many recipients you can get or update. See the
      [Recipients](xref:outlook!Office.Recipients:interface) object for more
      details.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: `ReadItem`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose or Read
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'optionalAttendees: Recipients[] | EmailAddressDetails[];'
      return:
        type: >-
          <xref uid="outlook!Office.Recipients:interface" />[] | <xref
          uid="outlook!Office.EmailAddressDetails:interface" />[]
  - name: requiredAttendees
    uid: 'outlook!Office.AppointmentForm#requiredAttendees:member'
    package: outlook!
    fullName: requiredAttendees
    summary: >-
      Provides access to the required attendees of an event. The type of object
      and level of access depend on the mode of the current item.


      *Read mode*


      The `requiredAttendees` property returns an array that contains an
      [EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface)
      object for each required attendee to the meeting. Collection size limits:


      - Windows: 500 members


      - Mac: 100 members


      - Other: No limit


      *Compose mode*


      The `requiredAttendees` property returns a `Recipients` object that
      provides methods to get or update the required attendees for a meeting.
      However, depending on the client/platform (i.e., Windows, Mac, etc.),
      limits may apply on how many recipients you can get or update. See the
      [Recipients](xref:outlook!Office.Recipients:interface) object for more
      details.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: `ReadItem`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose or Read
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'requiredAttendees: Recipients[] | EmailAddressDetails[];'
      return:
        type: >-
          <xref uid="outlook!Office.Recipients:interface" />[] | <xref
          uid="outlook!Office.EmailAddressDetails:interface" />[]
  - name: resources
    uid: 'outlook!Office.AppointmentForm#resources:member'
    package: outlook!
    fullName: resources
    summary: >-
      Provides access to the resources of an event. Returns an array of strings
      containing the resources required for the appointment.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: `ReadItem`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose or Read
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resources: string[];'
      return:
        type: 'string[]'
  - name: start
    uid: 'outlook!Office.AppointmentForm#start:member'
    package: outlook!
    fullName: start
    summary: >-
      Gets or sets the date and time that the appointment is to begin.


      The `start` property is expressed as a Coordinated Universal Time (UTC)
      date and time value. You can use the `convertToLocalClientTime` method to
      convert the value to the client's local date and time.


      *Read mode*


      The `start` property returns a `Date` object.


      *Compose mode*


      The `start` property returns a `Time` object.


      When you use the `Time.setAsync` method to set the start time, you should
      use the `convertToUtcClientTime` method to convert the local time on the
      client to UTC for the server.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: `ReadItem`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose or Read
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'start: Time | Date;'
      return:
        type: '<xref uid="outlook!Office.Time:interface" /> | Date'
  - name: subject
    uid: 'outlook!Office.AppointmentForm#subject:member'
    package: outlook!
    fullName: subject
    summary: >-
      Gets or sets the description that appears in the subject field of an item.


      The `subject` property gets or sets the entire subject of the item, as
      sent by the email server.


      *Read mode*


      The `subject` property returns a string. Use the `normalizedSubject`
      property to get the subject minus any leading prefixes such as RE: and
      FW:.


      *Compose mode*


      The `subject` property returns a `Subject` object that provides methods to
      get and set the subject.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: `ReadItem`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose or Read
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subject: Subject | string;'
      return:
        type: '<xref uid="outlook!Office.Subject:interface" /> | string'
