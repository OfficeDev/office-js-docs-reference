### YamlMime:TSType
name: Excel.Workbook
uid: 'excel!Excel.Workbook:class'
package: excel!
fullName: Excel.Workbook
summary: >-
  Workbook is the top level object which contains related workbook objects such
  as worksheets, tables, ranges, etc. To learn more about the workbook object
  model, read [Work with workbooks using the Excel JavaScript
  API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks)<!--
  -->.


  \[ [API set: ExcelApi
  1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: application
    uid: 'excel!Excel.Workbook#application:member'
    package: excel!
    fullName: application
    summary: >-
      Represents the Excel application instance that contains this workbook.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly application: Excel.Application;'
      return:
        type: '<xref uid="excel!Excel.Application:class" />'
  - name: autoSave
    uid: 'excel!Excel.Workbook#autoSave:member'
    package: excel!
    fullName: autoSave
    summary: >-
      Specifies if the workbook is in autosave mode.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly autoSave: boolean;'
      return:
        type: boolean
  - name: bindings
    uid: 'excel!Excel.Workbook#bindings:member'
    package: excel!
    fullName: bindings
    summary: >-
      Represents a collection of bindings that are part of the workbook.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly bindings: Excel.BindingCollection;'
      return:
        type: '<xref uid="excel!Excel.BindingCollection:class" />'
  - name: calculationEngineVersion
    uid: 'excel!Excel.Workbook#calculationEngineVersion:member'
    package: excel!
    fullName: calculationEngineVersion
    summary: >-
      Returns a number about the version of Excel Calculation Engine.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly calculationEngineVersion: number;'
      return:
        type: number
  - name: chartDataPointTrack
    uid: 'excel!Excel.Workbook#chartDataPointTrack:member'
    package: excel!
    fullName: chartDataPointTrack
    summary: >-
      True if all charts in the workbook are tracking the actual data points to
      which they are attached. False if the charts track the index of the data
      points.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'chartDataPointTrack: boolean;'
      return:
        type: boolean
  - name: comments
    uid: 'excel!Excel.Workbook#comments:member'
    package: excel!
    fullName: comments
    summary: >-
      Represents a collection of Comments associated with the workbook.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly comments: Excel.CommentCollection;'
      return:
        type: '<xref uid="excel!Excel.CommentCollection:class" />'
  - name: context
    uid: 'excel!Excel.Workbook#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: customXmlParts
    uid: 'excel!Excel.Workbook#customXmlParts:member'
    package: excel!
    fullName: customXmlParts
    summary: >-
      Represents the collection of custom XML parts contained by this workbook.


      \[ [API set: ExcelApi
      1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
      return:
        type: '<xref uid="excel!Excel.CustomXmlPartCollection:class" />'
  - name: dataConnections
    uid: 'excel!Excel.Workbook#dataConnections:member'
    package: excel!
    fullName: dataConnections
    summary: >-
      Represents all data connections in the workbook.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly dataConnections: Excel.DataConnectionCollection;'
      return:
        type: '<xref uid="excel!Excel.DataConnectionCollection:class" />'
  - name: functions
    uid: 'excel!Excel.Workbook#functions:member'
    package: excel!
    fullName: functions
    summary: >-
      Represents a collection of worksheet functions that can be used for
      computation.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly functions: Excel.Functions;'
      return:
        type: '<xref uid="excel!Excel.Functions:class" />'
  - name: isDirty
    uid: 'excel!Excel.Workbook#isDirty:member'
    package: excel!
    fullName: isDirty
    summary: >-
      Specifies if changes have been made since the workbook was last saved. You
      can set this property to true if you want to close a modified workbook
      without either saving it or being prompted to save it.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isDirty: boolean;'
      return:
        type: boolean
  - name: name
    uid: 'excel!Excel.Workbook#name:member'
    package: excel!
    fullName: name
    summary: >-
      Gets the workbook name.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly name: string;'
      return:
        type: string
  - name: names
    uid: 'excel!Excel.Workbook#names:member'
    package: excel!
    fullName: names
    summary: >-
      Represents a collection of workbook scoped named items (named ranges and
      constants).


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type: '<xref uid="excel!Excel.NamedItemCollection:class" />'
  - name: onAutoSaveSettingChanged
    uid: 'excel!Excel.Workbook#onAutoSaveSettingChanged:member'
    package: excel!
    fullName: onAutoSaveSettingChanged
    summary: >-
      Occurs when the autoSave setting is changed on the workbook.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        readonly onAutoSaveSettingChanged:
        OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>;
      return:
        type: >-
          <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref
          uid="excel!Excel.WorkbookAutoSaveSettingChangedEventArgs:interface"
          />&gt;
  - name: onSelectionChanged
    uid: 'excel!Excel.Workbook#onSelectionChanged:member'
    package: excel!
    fullName: onSelectionChanged
    summary: >-
      Occurs when the selection in the document is changed.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        readonly onSelectionChanged:
        OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;
      return:
        type: >-
          <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref
          uid="excel!Excel.SelectionChangedEventArgs:interface" />&gt;
  - name: pivotTables
    uid: 'excel!Excel.Workbook#pivotTables:member'
    package: excel!
    fullName: pivotTables
    summary: >-
      Represents a collection of PivotTables associated with the workbook.


      \[ [API set: ExcelApi
      1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly pivotTables: Excel.PivotTableCollection;'
      return:
        type: '<xref uid="excel!Excel.PivotTableCollection:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-get-pivottables.yaml

          await Excel.run(async (context) => {
            // Get the names of all the PivotTables in the workbook.
            const pivotTables = context.workbook.pivotTables;
            pivotTables.load("name");
            await context.sync();

            // Display the names in the console.
            console.log("PivotTables in the workbook:")
            pivotTables.items.forEach((pivotTable) => {
              console.log(`\t${pivotTable.name}`);
            });
          });

          ```
  - name: pivotTableStyles
    uid: 'excel!Excel.Workbook#pivotTableStyles:member'
    package: excel!
    fullName: pivotTableStyles
    summary: >-
      Represents a collection of PivotTableStyles associated with the workbook.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly pivotTableStyles: Excel.PivotTableStyleCollection;'
      return:
        type: '<xref uid="excel!Excel.PivotTableStyleCollection:class" />'
  - name: previouslySaved
    uid: 'excel!Excel.Workbook#previouslySaved:member'
    package: excel!
    fullName: previouslySaved
    summary: >-
      Specifies if the workbook has ever been saved locally or online.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly previouslySaved: boolean;'
      return:
        type: boolean
  - name: properties
    uid: 'excel!Excel.Workbook#properties:member'
    package: excel!
    fullName: properties
    summary: >-
      Gets the workbook properties.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly properties: Excel.DocumentProperties;'
      return:
        type: '<xref uid="excel!Excel.DocumentProperties:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/26-document/properties.yaml

          await Excel.run(async (context) => {
              let titleValue = "Excel document properties API";
              let subjectValue = "Set and get document properties";
              let keywordsValue = "Set and get operations";
              let commentsValue = "This is an Excel document properties API code sample";
              let categoryValue = "Office Add-ins";
              let managerValue = "John";
              let companyValue = "Microsoft";

              let docProperties = context.workbook.properties;

              // Set the writeable document properties.
              docProperties.title = titleValue;
              docProperties.subject = subjectValue;
              docProperties.keywords = keywordsValue;
              docProperties.comments = commentsValue;
              docProperties.category = categoryValue;
              docProperties.manager = managerValue;
              docProperties.company = companyValue;

              await context.sync();

              console.log("Set the following document properties: title, subject, keywords, comments, category, manager, company.");
          });

          ```
  - name: protection
    uid: 'excel!Excel.Workbook#protection:member'
    package: excel!
    fullName: protection
    summary: >-
      Returns the protection object for a workbook.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly protection: Excel.WorkbookProtection;'
      return:
        type: '<xref uid="excel!Excel.WorkbookProtection:class" />'
  - name: readOnly
    uid: 'excel!Excel.Workbook#readOnly:member'
    package: excel!
    fullName: readOnly
    summary: >-
      True if the workbook is open in Read-only mode.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly readOnly: boolean;'
      return:
        type: boolean
  - name: settings
    uid: 'excel!Excel.Workbook#settings:member'
    package: excel!
    fullName: settings
    summary: >-
      Represents a collection of Settings associated with the workbook.


      \[ [API set: ExcelApi
      1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly settings: Excel.SettingCollection;'
      return:
        type: '<xref uid="excel!Excel.SettingCollection:class" />'
  - name: slicers
    uid: 'excel!Excel.Workbook#slicers:member'
    package: excel!
    fullName: slicers
    summary: >-
      Represents a collection of Slicers associated with the workbook.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly slicers: Excel.SlicerCollection;'
      return:
        type: '<xref uid="excel!Excel.SlicerCollection:class" />'
  - name: slicerStyles
    uid: 'excel!Excel.Workbook#slicerStyles:member'
    package: excel!
    fullName: slicerStyles
    summary: >-
      Represents a collection of SlicerStyles associated with the workbook.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly slicerStyles: Excel.SlicerStyleCollection;'
      return:
        type: '<xref uid="excel!Excel.SlicerStyleCollection:class" />'
  - name: styles
    uid: 'excel!Excel.Workbook#styles:member'
    package: excel!
    fullName: styles
    summary: >-
      Represents a collection of styles associated with the workbook.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly styles: Excel.StyleCollection;'
      return:
        type: '<xref uid="excel!Excel.StyleCollection:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/style.yaml

          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });

          ```
  - name: tables
    uid: 'excel!Excel.Workbook#tables:member'
    package: excel!
    fullName: tables
    summary: >-
      Represents a collection of tables associated with the workbook.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type: '<xref uid="excel!Excel.TableCollection:class" />'
  - name: tableStyles
    uid: 'excel!Excel.Workbook#tableStyles:member'
    package: excel!
    fullName: tableStyles
    summary: >-
      Represents a collection of TableStyles associated with the workbook.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly tableStyles: Excel.TableStyleCollection;'
      return:
        type: '<xref uid="excel!Excel.TableStyleCollection:class" />'
  - name: timelineStyles
    uid: 'excel!Excel.Workbook#timelineStyles:member'
    package: excel!
    fullName: timelineStyles
    summary: >-
      Represents a collection of TimelineStyles associated with the workbook.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly timelineStyles: Excel.TimelineStyleCollection;'
      return:
        type: '<xref uid="excel!Excel.TimelineStyleCollection:class" />'
  - name: usePrecisionAsDisplayed
    uid: 'excel!Excel.Workbook#usePrecisionAsDisplayed:member'
    package: excel!
    fullName: usePrecisionAsDisplayed
    summary: >-
      True if calculations in this workbook will be done using only the
      precision of the numbers as they're displayed. Data will permanently lose
      accuracy when switching this property from false to true.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'usePrecisionAsDisplayed: boolean;'
      return:
        type: boolean
  - name: worksheets
    uid: 'excel!Excel.Workbook#worksheets:member'
    package: excel!
    fullName: worksheets
    summary: >-
      Represents a collection of worksheets associated with the workbook.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly worksheets: Excel.WorksheetCollection;'
      return:
        type: '<xref uid="excel!Excel.WorksheetCollection:class" />'
methods:
  - name: close(closeBehavior)
    uid: 'excel!Excel.Workbook#close:member(1)'
    package: excel!
    fullName: close(closeBehavior)
    summary: >-
      Close current workbook.


      \[ [API set: ExcelApi
      1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'close(closeBehavior?: Excel.CloseBehavior): void;'
      parameters:
        - id: closeBehavior
          description: workbook close behavior.
          type: '<xref uid="excel!Excel.CloseBehavior:enum" />'
      return:
        type: void
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/workbook-save-and-close.yaml

          await Excel.run(async (context) => {
              context.workbook.close(Excel.CloseBehavior.save);
          });

          ```
  - name: close(closeBehaviorString)
    uid: 'excel!Excel.Workbook#close:member(2)'
    package: excel!
    fullName: close(closeBehaviorString)
    summary: >-
      Close current workbook.


      \[ [API set: ExcelApi
      1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'close(closeBehaviorString?: "Save" | "SkipSave"): void;'
      parameters:
        - id: closeBehaviorString
          description: workbook close behavior.
          type: '"Save" | "SkipSave"'
      return:
        type: void
        description: ''
  - name: getActiveCell()
    uid: 'excel!Excel.Workbook#getActiveCell:member(1)'
    package: excel!
    fullName: getActiveCell()
    summary: >-
      Gets the currently active cell from the workbook.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getActiveCell(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/workbook-get-active-cell.yaml

          await Excel.run(async (context) => {

              let myWorkbook = context.workbook;
              let activeCell = myWorkbook.getActiveCell();
              activeCell.load("address");

              await context.sync();
              
              console.log("The active cell is " + activeCell.address);
          });

          ```
  - name: getActiveChart()
    uid: 'excel!Excel.Workbook#getActiveChart:member(1)'
    package: excel!
    fullName: getActiveChart()
    summary: >-
      Gets the currently active chart in the workbook. If there is no active
      chart, an `ItemNotFound` exception is thrown.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getActiveChart(): Excel.Chart;'
      return:
        type: '<xref uid="excel!Excel.Chart:class" />'
        description: ''
  - name: getActiveChartOrNullObject()
    uid: 'excel!Excel.Workbook#getActiveChartOrNullObject:member(1)'
    package: excel!
    fullName: getActiveChartOrNullObject()
    summary: >-
      Gets the currently active chart in the workbook. If there is no active
      chart, a null object is returned.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getActiveChartOrNullObject(): Excel.Chart;'
      return:
        type: '<xref uid="excel!Excel.Chart:class" />'
        description: ''
  - name: getActiveSlicer()
    uid: 'excel!Excel.Workbook#getActiveSlicer:member(1)'
    package: excel!
    fullName: getActiveSlicer()
    summary: >-
      Gets the currently active slicer in the workbook. If there is no active
      slicer, an `ItemNotFound` exception is thrown.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getActiveSlicer(): Excel.Slicer;'
      return:
        type: '<xref uid="excel!Excel.Slicer:class" />'
        description: ''
  - name: getActiveSlicerOrNullObject()
    uid: 'excel!Excel.Workbook#getActiveSlicerOrNullObject:member(1)'
    package: excel!
    fullName: getActiveSlicerOrNullObject()
    summary: >-
      Gets the currently active slicer in the workbook. If there is no active
      slicer, a null object is returned.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getActiveSlicerOrNullObject(): Excel.Slicer;'
      return:
        type: '<xref uid="excel!Excel.Slicer:class" />'
        description: ''
  - name: getIsActiveCollabSession()
    uid: 'excel!Excel.Workbook#getIsActiveCollabSession:member(1)'
    package: excel!
    fullName: getIsActiveCollabSession()
    summary: >-
      True if the workbook is being edited by multiple users (co-authoring).
      Please be aware there might be some delay between when the workbook status
      changes and when the changes are reflected on the result of the method.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getIsActiveCollabSession(): OfficeExtension.ClientResult<boolean>;'
      return:
        type: >-
          <xref uid="office!OfficeExtension.ClientResult:class"
          />&lt;boolean&gt;
        description: ''
  - name: getSelectedRange()
    uid: 'excel!Excel.Workbook#getSelectedRange:member(1)'
    package: excel!
    fullName: getSelectedRange()
    summary: >-
      Gets the currently selected single range from the workbook. If there are
      multiple ranges selected, this method will throw an error.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSelectedRange(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: |-


          #### Examples

          ```javascript
          Excel.run(function (ctx) { 
              var selectedRange = ctx.workbook.getSelectedRange();
              selectedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(selectedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - name: getSelectedRanges()
    uid: 'excel!Excel.Workbook#getSelectedRanges:member(1)'
    package: excel!
    fullName: getSelectedRanges()
    summary: >-
      Gets the currently selected one or more ranges from the workbook. Unlike
      getSelectedRange(), this method returns a RangeAreas object that
      represents all the selected ranges.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSelectedRanges(): Excel.RangeAreas;'
      return:
        type: '<xref uid="excel!Excel.RangeAreas:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/range-areas.yaml

          await Excel.run(async (context) => {

              const selectedRanges = context.workbook.getSelectedRanges();
              selectedRanges.format.fill.color = "lightblue";

              await context.sync();
          })

          ```
  - name: load(options)
    uid: 'excel!Excel.Workbook#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="excel!Excel.Interfaces.WorkbookLoadOptions:interface" />'
      return:
        type: '<xref uid="excel!Excel.Workbook:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.Workbook#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.Workbook:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.Workbook#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Workbook;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.Workbook:class" />'
        description: ''
  - name: save(saveBehavior)
    uid: 'excel!Excel.Workbook#save:member(1)'
    package: excel!
    fullName: save(saveBehavior)
    summary: >-
      Save current workbook.


      \[ [API set: ExcelApi
      1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'save(saveBehavior?: Excel.SaveBehavior): void;'
      parameters:
        - id: saveBehavior
          description: workbook save behavior.
          type: '<xref uid="excel!Excel.SaveBehavior:enum" />'
      return:
        type: void
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/workbook-save-and-close.yaml

          await Excel.run(async (context) => {
              context.workbook.save(Excel.SaveBehavior.save);
          });

          ```
  - name: save(saveBehaviorString)
    uid: 'excel!Excel.Workbook#save:member(2)'
    package: excel!
    fullName: save(saveBehaviorString)
    summary: >-
      Save current workbook.


      \[ [API set: ExcelApi
      1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'save(saveBehaviorString?: "Save" | "Prompt"): void;'
      parameters:
        - id: saveBehaviorString
          description: workbook save behavior.
          type: '"Save" | "Prompt"'
      return:
        type: void
        description: ''
  - name: 'set(properties, options)'
    uid: 'excel!Excel.Workbook#set:member(1)'
    package: excel!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.Workbook): void`
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.WorkbookUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: '<xref uid="excel!Excel.Interfaces.WorkbookUpdateData:interface" />'
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'excel!Excel.Workbook#set:member(2)'
    package: excel!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.Workbook): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="excel!Excel.Workbook:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.Workbook#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Excel.Workbook object
      is an API object, the `toJSON` method returns a plain JavaScript object
      (typed as `Excel.Interfaces.WorkbookData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.WorkbookData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
