### YamlMime:TSType
name: Excel.WorksheetProtection
uid: 'excel!Excel.WorksheetProtection:class'
package: excel!
fullName: Excel.WorksheetProtection
summary: Represents the protection of a worksheet object.
remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: class
properties:
  - name: allowEditRanges
    uid: 'excel!Excel.WorksheetProtection#allowEditRanges:member'
    package: excel!
    fullName: allowEditRanges
    summary: >-
      Specifies the `AllowEditRangeCollection` object found in this worksheet. This is a collection of `AllowEditRange`
      objects, which work with worksheet protection properties. When worksheet protection is enabled, an
      `AllowEditRange` object can be used to allow editing of a specific range, while maintaining protection on the rest
      of the worksheet.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly allowEditRanges: Excel.AllowEditRangeCollection;'
      return:
        type: '<xref uid="excel!Excel.AllowEditRangeCollection:class" />'
  - name: canPauseProtection
    uid: 'excel!Excel.WorksheetProtection#canPauseProtection:member'
    package: excel!
    fullName: canPauseProtection
    summary: Specifies if protection can be paused for this worksheet.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly canPauseProtection: boolean;'
      return:
        type: boolean
  - name: context
    uid: 'excel!Excel.WorksheetProtection#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: isPasswordProtected
    uid: 'excel!Excel.WorksheetProtection#isPasswordProtected:member'
    package: excel!
    fullName: isPasswordProtected
    summary: Specifies if the sheet is password protected.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly isPasswordProtected: boolean;'
      return:
        type: boolean
  - name: isPaused
    uid: 'excel!Excel.WorksheetProtection#isPaused:member'
    package: excel!
    fullName: isPaused
    summary: Specifies if worksheet protection is paused.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly isPaused: boolean;'
      return:
        type: boolean
  - name: options
    uid: 'excel!Excel.WorksheetProtection#options:member'
    package: excel!
    fullName: options
    summary: Specifies the protection options for the worksheet.
    remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly options: Excel.WorksheetProtectionOptions;'
      return:
        type: '<xref uid="excel!Excel.WorksheetProtectionOptions:interface" />'
  - name: protected
    uid: 'excel!Excel.WorksheetProtection#protected:member'
    package: excel!
    fullName: protected
    summary: Specifies if the worksheet is protected.
    remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type: boolean
  - name: savedOptions
    uid: 'excel!Excel.WorksheetProtection#savedOptions:member'
    package: excel!
    fullName: savedOptions
    summary: >-
      Specifies the protection options saved in the worksheet. This will return the same `WorksheetProtectionOptions`
      object regardless of the worksheet protection state.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly savedOptions: Excel.WorksheetProtectionOptions;'
      return:
        type: '<xref uid="excel!Excel.WorksheetProtectionOptions:interface" />'
methods:
  - name: checkPassword(password)
    uid: 'excel!Excel.WorksheetProtection#checkPassword:member(1)'
    package: excel!
    fullName: checkPassword(password)
    summary: >-
      Specifies if the password can be used to unlock worksheet protection. This method doesn't change the worksheet
      protection state. If a password is input but no password is required to unlock worksheet protection, this method
      will return false.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'checkPassword(password?: string): OfficeExtension.ClientResult<boolean>;'
      parameters:
        - id: password
          description: The password to check against the protected worksheet.
          type: string
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;boolean&gt;'
        description: 'Returns `true` if the password can be used to unlock worksheet protection. Otherwise, returns `false`<!-- -->.'
  - name: load(options)
    uid: 'excel!Excel.WorksheetProtection#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.WorksheetProtectionLoadOptions): Excel.WorksheetProtection;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="excel!Excel.Interfaces.WorksheetProtectionLoadOptions:interface" />'
      return:
        type: '<xref uid="excel!Excel.WorksheetProtection:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.WorksheetProtection#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetProtection;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.WorksheetProtection:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.WorksheetProtection#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.WorksheetProtection;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.WorksheetProtection:class" />'
        description: ''
  - name: pauseProtection(password)
    uid: 'excel!Excel.WorksheetProtection#pauseProtection:member(1)'
    package: excel!
    fullName: pauseProtection(password)
    summary: >-
      Pauses worksheet protection for the given worksheet object for the user in the current session. This method does
      nothing if worksheet protection isn't enabled or is already paused. If the password is incorrect, then this method
      throws an `InvalidArgument` error and fails to pause protection. This method does not change the protection state
      if worksheet protection is not enabled or already paused.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'pauseProtection(password?: string): void;'
      parameters:
        - id: password
          description: The password associated with the protected worksheet.
          type: string
      return:
        type: void
        description: ''
  - name: 'protect(options, password)'
    uid: 'excel!Excel.WorksheetProtection#protect:member(1)'
    package: excel!
    fullName: 'protect(options, password)'
    summary: Protects a worksheet. Fails if the worksheet has already been protected.
    remarks: >-
      \[ [API set: ExcelApi 1.2 for options; 1.7 for
      password](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/50-workbook/data-protection.yaml

      let password = await passwordHandler();

      passwordHelper(password);

      await Excel.run(async (context) => {
          let activeSheet = context.workbook.worksheets.getActiveWorksheet();
          activeSheet.load("protection/protected");

          await context.sync();

          if (!activeSheet.protection.protected) {
              activeSheet.protection.protect(null, password);
          }
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protect(options?: Excel.WorksheetProtectionOptions, password?: string): void;'
      parameters:
        - id: options
          description: Optional. Sheet protection options.
          type: '<xref uid="excel!Excel.WorksheetProtectionOptions:interface" />'
        - id: password
          description: Optional. Sheet protection password.
          type: string
      return:
        type: void
        description: ''
  - name: resumeProtection()
    uid: 'excel!Excel.WorksheetProtection#resumeProtection:member(1)'
    package: excel!
    fullName: resumeProtection()
    summary: >-
      Resumes worksheet protection for the given worksheet object for the user in a given session. Worksheet protection
      must be paused for this method to work. If worksheet protection is not paused, then this method will not change
      the protection state of the worksheet.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resumeProtection(): void;'
      return:
        type: void
        description: ''
  - name: setPassword(password)
    uid: 'excel!Excel.WorksheetProtection#setPassword:member(1)'
    package: excel!
    fullName: setPassword(password)
    summary: >-
      Changes the password associated with the `WorksheetProtection` object. Setting the password as an empty string
      ("") or as `null` will remove password protection from the `WorksheetProtection` object. Worksheet protection must
      be enabled and paused for this method to work properly. If worksheet protection is disabled, this method throws an
      `InvalidOperation` error and fails to change the password. If worksheet protection is enabled and not paused, this
      method throws an `AccessDenied` error and fails to change the password.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setPassword(password?: string): void;'
      parameters:
        - id: password
          description: The password associated with the `WorksheetProtection` object.
          type: string
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.WorksheetProtection#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.WorksheetProtection object is an API object, the `toJSON` method returns
      a plain JavaScript object (typed as `Excel.Interfaces.WorksheetProtectionData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.WorksheetProtectionData:interface" />'
        description: ''
  - name: unprotect(password)
    uid: 'excel!Excel.WorksheetProtection#unprotect:member(1)'
    package: excel!
    fullName: unprotect(password)
    summary: Unprotects a worksheet.
    remarks: >-
      \[ [API set: ExcelApi 1.7 for password](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/50-workbook/data-protection.yaml

      let password = await passwordHandler();

      passwordHelper(password);

      await Excel.run(async (context) => {
          let activeSheet = context.workbook.worksheets.getActiveWorksheet();
          activeSheet.protection.unprotect(password);
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'unprotect(password?: string): void;'
      parameters:
        - id: password
          description: Sheet protection password.
          type: string
      return:
        type: void
        description: ''
  - name: updateOptions(options)
    uid: 'excel!Excel.WorksheetProtection#updateOptions:member(1)'
    package: excel!
    fullName: updateOptions(options)
    summary: >-
      Change the worksheet protection options associated with the `WorksheetProtection` object. Worksheet protection
      must be disabled or paused for this method to work properly. If worksheet protection is enabled and not paused,
      this method throws an `AccessDenied` error and fails to change the worksheet protection options.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'updateOptions(options: Excel.WorksheetProtectionOptions): void;'
      parameters:
        - id: options
          description: The options interface associated with the `WorksheetProtection` object.
          type: '<xref uid="excel!Excel.WorksheetProtectionOptions:interface" />'
      return:
        type: void
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
