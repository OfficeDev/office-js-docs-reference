### YamlMime:TSType
name: Excel.WorksheetProtection
uid: 'excel!Excel.WorksheetProtection:class'
package: excel!
fullName: Excel.WorksheetProtection
summary: >-
  Represents the protection of a sheet object.


  \[ [API set: ExcelApi
  1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'excel!Excel.WorksheetProtection#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: options
    uid: 'excel!Excel.WorksheetProtection#options:member'
    package: excel!
    fullName: options
    summary: >-
      Specifies the protection options for the worksheet.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly options: Excel.WorksheetProtectionOptions;'
      return:
        type: '<xref uid="excel!Excel.WorksheetProtectionOptions:interface" />'
  - name: protected
    uid: 'excel!Excel.WorksheetProtection#protected:member'
    package: excel!
    fullName: protected
    summary: >-
      Specifies if the worksheet is protected.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type: boolean
methods:
  - name: load(options)
    uid: 'excel!Excel.WorksheetProtection#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.WorksheetProtectionLoadOptions):
        Excel.WorksheetProtection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref
            uid="excel!Excel.Interfaces.WorksheetProtectionLoadOptions:interface"
            />
      return:
        type: '<xref uid="excel!Excel.WorksheetProtection:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.WorksheetProtection#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetProtection;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.WorksheetProtection:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.WorksheetProtection#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.WorksheetProtection;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.WorksheetProtection:class" />'
        description: ''
  - name: 'protect(options, password)'
    uid: 'excel!Excel.WorksheetProtection#protect:member(1)'
    package: excel!
    fullName: 'protect(options, password)'
    summary: >-
      Protects a worksheet. Fails if the worksheet has already been protected.


      \[ [API set: ExcelApi 1.2 for options; 1.7 for
      password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protect(options?: Excel.WorksheetProtectionOptions, password?: string):
        void;
      parameters:
        - id: options
          description: Optional. Sheet protection options.
          type: '<xref uid="excel!Excel.WorksheetProtectionOptions:interface" />'
        - id: password
          description: Optional. Sheet protection password.
          type: string
      return:
        type: void
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/data-protection.yaml

          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.load("protection/protected");

              await context.sync();

              if (!activeSheet.protection.protected) {
                  activeSheet.protection.protect();
              }
          });

          ```

          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/data-protection.yaml

          let password = await passwordHandler();

          passwordHelper(password);

          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.load("protection/protected");

              await context.sync();

              if (!activeSheet.protection.protected) {
                  activeSheet.protection.protect(null, password);
              }
          });

          ```
  - name: toJSON()
    uid: 'excel!Excel.WorksheetProtection#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original
      Excel.WorksheetProtection object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as
      `Excel.Interfaces.WorksheetProtectionData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
      return:
        type: >-
          <xref uid="excel!Excel.Interfaces.WorksheetProtectionData:interface"
          />
        description: ''
  - name: unprotect(password)
    uid: 'excel!Excel.WorksheetProtection#unprotect:member(1)'
    package: excel!
    fullName: unprotect(password)
    summary: >-
      Unprotects a worksheet.


      \[ [API set: ExcelApi 1.7 for
      password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'unprotect(password?: string): void;'
      parameters:
        - id: password
          description: sheet protection password.
          type: string
      return:
        type: void
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/data-protection.yaml

          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.protection.unprotect();
          });

          ```

          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/data-protection.yaml

          let password = await passwordHandler();

          passwordHelper(password);

          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.protection.unprotect(password);
          });

          ```
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
