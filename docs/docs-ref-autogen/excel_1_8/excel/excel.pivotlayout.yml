### YamlMime:TSType
name: Excel.PivotLayout
uid: 'excel!Excel.PivotLayout:class'
package: excel!
fullName: Excel.PivotLayout
summary: >-
  Represents the visual layout of the PivotTable.


  \[ [API set: ExcelApi
  1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'excel!Excel.PivotLayout#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: layoutType
    uid: 'excel!Excel.PivotLayout#layoutType:member'
    package: excel!
    fullName: layoutType
    summary: >-
      This property indicates the PivotLayoutType of all fields on the
      PivotTable. If fields have different states, this will be null.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
      return:
        type: >-
          <xref uid="excel!Excel.PivotLayoutType:enum" /> | "Compact" |
          "Tabular" | "Outline"
  - name: showColumnGrandTotals
    uid: 'excel!Excel.PivotLayout#showColumnGrandTotals:member'
    package: excel!
    fullName: showColumnGrandTotals
    summary: >-
      Specifies if the PivotTable report shows grand totals for columns.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showColumnGrandTotals: boolean;'
      return:
        type: boolean
  - name: showRowGrandTotals
    uid: 'excel!Excel.PivotLayout#showRowGrandTotals:member'
    package: excel!
    fullName: showRowGrandTotals
    summary: >-
      Specifies if the PivotTable report shows grand totals for rows.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showRowGrandTotals: boolean;'
      return:
        type: boolean
  - name: subtotalLocation
    uid: 'excel!Excel.PivotLayout#subtotalLocation:member'
    package: excel!
    fullName: subtotalLocation
    summary: >-
      This property indicates the SubtotalLocationType of all fields on the
      PivotTable. If fields have different states, this will be null.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" |
        "Off";
      return:
        type: >-
          <xref uid="excel!Excel.SubtotalLocationType:enum" /> | "AtTop" |
          "AtBottom" | "Off"
methods:
  - name: getColumnLabelRange()
    uid: 'excel!Excel.PivotLayout#getColumnLabelRange:member(1)'
    package: excel!
    fullName: getColumnLabelRange()
    summary: >-
      Returns the range where the PivotTable's column labels reside.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getColumnLabelRange(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: ''
  - name: getDataBodyRange()
    uid: 'excel!Excel.PivotLayout#getDataBodyRange:member(1)'
    package: excel!
    fullName: getDataBodyRange()
    summary: >-
      Returns the range where the PivotTable's data values reside.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-filters-and-summaries.yaml

          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

              // the layout controls the ranges used by the PivotTable
              const range = pivotTable.layout.getDataBodyRange();

              // get all the data hierarchy totals
              const grandTotalRange = range.getLastRow();
              grandTotalRange.load("address");
              await context.sync();
              
              // use the wholesale and farm sale totals to make a final sum
              const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange("B27:C27");
              masterTotalRange.formulas = [["All Crates", "=SUM(" + grandTotalRange.address + ")"]];
              await context.sync();
          });

          ```
  - name: getFilterAxisRange()
    uid: 'excel!Excel.PivotLayout#getFilterAxisRange:member(1)'
    package: excel!
    fullName: getFilterAxisRange()
    summary: >-
      Returns the range of the PivotTable's filter area.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFilterAxisRange(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: ''
  - name: getRange()
    uid: 'excel!Excel.PivotLayout#getRange:member(1)'
    package: excel!
    fullName: getRange()
    summary: >-
      Returns the range the PivotTable exists on, excluding the filter area.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: ''
  - name: getRowLabelRange()
    uid: 'excel!Excel.PivotLayout#getRowLabelRange:member(1)'
    package: excel!
    fullName: getRowLabelRange()
    summary: >-
      Returns the range where the PivotTable's row labels reside.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRowLabelRange(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: ''
  - name: load(options)
    uid: 'excel!Excel.PivotLayout#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.PivotLayoutLoadOptions):
        Excel.PivotLayout;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="excel!Excel.Interfaces.PivotLayoutLoadOptions:interface"
            />
      return:
        type: '<xref uid="excel!Excel.PivotLayout:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.PivotLayout#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.PivotLayout:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.PivotLayout#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PivotLayout;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.PivotLayout:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'excel!Excel.PivotLayout#set:member(1)'
    package: excel!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.PivotLayout): void`
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.PivotLayoutUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: >-
            <xref uid="excel!Excel.Interfaces.PivotLayoutUpdateData:interface"
            />
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'excel!Excel.PivotLayout#set:member(2)'
    package: excel!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.PivotLayout): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="excel!Excel.PivotLayout:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.PivotLayout#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Excel.PivotLayout
      object is an API object, the `toJSON` method returns a plain JavaScript
      object (typed as `Excel.Interfaces.PivotLayoutData`<!-- -->) that contains
      shallow copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.PivotLayoutData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
