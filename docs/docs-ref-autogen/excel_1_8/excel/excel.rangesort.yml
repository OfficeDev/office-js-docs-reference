### YamlMime:TSType
name: Excel.RangeSort
uid: 'excel!Excel.RangeSort:class'
package: excel!
fullName: Excel.RangeSort
summary: >-
  Manages sorting operations on Range objects.


  \[ [API set: ExcelApi
  1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'excel!Excel.RangeSort#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
methods:
  - name: 'apply(fields, matchCase, hasHeaders, orientation, method)'
    uid: 'excel!Excel.RangeSort#apply:member(1)'
    package: excel!
    fullName: 'apply(fields, matchCase, hasHeaders, orientation, method)'
    summary: >-
      Perform a sort operation.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?:
        boolean, orientation?: Excel.SortOrientation, method?:
        Excel.SortMethod): void;
      parameters:
        - id: fields
          description: The list of conditions to sort on.
          type: '<xref uid="excel!Excel.SortField:interface" />[]'
        - id: matchCase
          description: Optional. Whether to have the casing impact string ordering.
          type: boolean
        - id: hasHeaders
          description: Optional. Whether the range has a header.
          type: boolean
        - id: orientation
          description: Optional. Whether the operation is sorting rows or columns.
          type: '<xref uid="excel!Excel.SortOrientation:enum" />'
        - id: method
          description: Optional. The ordering method used for Chinese characters.
          type: '<xref uid="excel!Excel.SortMethod:enum" />'
      return:
        type: void
        description: ''
  - name: 'apply(fields, matchCase, hasHeaders, orientationString, method)'
    uid: 'excel!Excel.RangeSort#apply:member(2)'
    package: excel!
    fullName: 'apply(fields, matchCase, hasHeaders, orientationString, method)'
    summary: >-
      Perform a sort operation.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?:
        boolean, orientationString?: "Rows" | "Columns", method?: "PinYin" |
        "StrokeCount"): void;
      parameters:
        - id: fields
          description: The list of conditions to sort on.
          type: '<xref uid="excel!Excel.SortField:interface" />[]'
        - id: matchCase
          description: Optional. Whether to have the casing impact string ordering.
          type: boolean
        - id: hasHeaders
          description: Optional. Whether the range has a header.
          type: boolean
        - id: orientationString
          description: Optional. Whether the operation is sorting rows or columns.
          type: '"Rows" | "Columns"'
        - id: method
          description: Optional. The ordering method used for Chinese characters.
          type: '"PinYin" | "StrokeCount"'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.RangeSort#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Excel.RangeSort object
      is an API object, the `toJSON` method returns a plain JavaScript object
      (typed as `Excel.Interfaces.RangeSortData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        toJSON(): {
                    [key: string]: string;
                };
      return:
        type: |-
          {
                      [key: string]: string;
                  }
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
