### YamlMime:TSType
name: Excel.ChartTitle
uid: 'excel!Excel.ChartTitle:class'
package: excel!
fullName: Excel.ChartTitle
summary: >-
  Represents a chart title object of a chart.


  \[ [API set: ExcelApi
  1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'excel!Excel.ChartTitle#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: format
    uid: 'excel!Excel.ChartTitle#format:member'
    package: excel!
    fullName: format
    summary: >-
      Represents the formatting of a chart title, which includes fill and font
      formatting.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly format: Excel.ChartTitleFormat;'
      return:
        type: '<xref uid="excel!Excel.ChartTitleFormat:class" />'
  - name: height
    uid: 'excel!Excel.ChartTitle#height:member'
    package: excel!
    fullName: height
    summary: >-
      Returns the height, in points, of the chart title. Null if chart title is
      not visible.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly height: number;'
      return:
        type: number
  - name: horizontalAlignment
    uid: 'excel!Excel.ChartTitle#horizontalAlignment:member'
    package: excel!
    fullName: horizontalAlignment
    summary: >-
      Specifies the horizontal alignment for chart title.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        horizontalAlignment: Excel.ChartTextHorizontalAlignment | "Center" |
        "Left" | "Right" | "Justify" | "Distributed";
      return:
        type: >-
          <xref uid="excel!Excel.ChartTextHorizontalAlignment:enum" /> |
          "Center" | "Left" | "Right" | "Justify" | "Distributed"
  - name: left
    uid: 'excel!Excel.ChartTitle#left:member'
    package: excel!
    fullName: left
    summary: >-
      Specifies the distance, in points, from the left edge of chart title to
      the left edge of chart area. Null if chart title is not visible.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'left: number;'
      return:
        type: number
  - name: overlay
    uid: 'excel!Excel.ChartTitle#overlay:member'
    package: excel!
    fullName: overlay
    summary: >-
      Specifies if the chart title will overlay the chart.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'overlay: boolean;'
      return:
        type: boolean
  - name: position
    uid: 'excel!Excel.ChartTitle#position:member'
    package: excel!
    fullName: position
    summary: >-
      Represents the position of chart title. See Excel.ChartTitlePosition for
      details.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        position: Excel.ChartTitlePosition | "Automatic" | "Top" | "Bottom" |
        "Left" | "Right";
      return:
        type: >-
          <xref uid="excel!Excel.ChartTitlePosition:enum" /> | "Automatic" |
          "Top" | "Bottom" | "Left" | "Right"
  - name: showShadow
    uid: 'excel!Excel.ChartTitle#showShadow:member'
    package: excel!
    fullName: showShadow
    summary: >-
      Represents a boolean value that determines if the chart title has a
      shadow.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showShadow: boolean;'
      return:
        type: boolean
  - name: text
    uid: 'excel!Excel.ChartTitle#text:member'
    package: excel!
    fullName: text
    summary: >-
      Specifies the chart's title text.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'text: string;'
      return:
        type: string
  - name: textOrientation
    uid: 'excel!Excel.ChartTitle#textOrientation:member'
    package: excel!
    fullName: textOrientation
    summary: >-
      Specifies the angle to which the text is oriented for the chart title. The
      value should either be an integer from -90 to 90 or the integer 180 for
      vertically-oriented text.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'textOrientation: number;'
      return:
        type: number
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/10-chart/chart-title-format.yaml

          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const title = sheet.charts.getItemAt(0).title;
              title.textOrientation = -45;

              await context.sync();
          });

          ```
  - name: top
    uid: 'excel!Excel.ChartTitle#top:member'
    package: excel!
    fullName: top
    summary: >-
      Specifies the distance, in points, from the top edge of chart title to the
      top of chart area. Null if chart title is not visible.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'top: number;'
      return:
        type: number
  - name: verticalAlignment
    uid: 'excel!Excel.ChartTitle#verticalAlignment:member'
    package: excel!
    fullName: verticalAlignment
    summary: >-
      Specifies the vertical alignment of chart title. See
      Excel.ChartTextVerticalAlignment for details.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        verticalAlignment: Excel.ChartTextVerticalAlignment | "Center" |
        "Bottom" | "Top" | "Justify" | "Distributed";
      return:
        type: >-
          <xref uid="excel!Excel.ChartTextVerticalAlignment:enum" /> | "Center"
          | "Bottom" | "Top" | "Justify" | "Distributed"
  - name: visible
    uid: 'excel!Excel.ChartTitle#visible:member'
    package: excel!
    fullName: visible
    summary: >-
      Specifies if the chart title is visibile.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'visible: boolean;'
      return:
        type: boolean
  - name: width
    uid: 'excel!Excel.ChartTitle#width:member'
    package: excel!
    fullName: width
    summary: >-
      Specifies the width, in points, of the chart title. Null if chart title is
      not visible.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly width: number;'
      return:
        type: number
methods:
  - name: 'getSubstring(start, length)'
    uid: 'excel!Excel.ChartTitle#getSubstring:member(1)'
    package: excel!
    fullName: 'getSubstring(start, length)'
    summary: >-
      Get the substring of a chart title. Line break '<!-- -->\\<!-- -->n' also
      counts one character.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSubstring(start: number, length: number): Excel.ChartFormatString;'
      parameters:
        - id: start
          description: Start position of substring to be retrieved. Position start with 0.
          type: number
        - id: length
          description: Length of substring to be retrieved.
          type: number
      return:
        type: '<xref uid="excel!Excel.ChartFormatString:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/10-chart/chart-title-format.yaml

          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let chart = sheet.charts.getItemAt(0);

              // Get first seven characters of the title and color them green.
              chart.title.getSubstring(0, 7).font.color = "Yellow";
              await context.sync();
          });

          ```
  - name: load(options)
    uid: 'excel!Excel.ChartTitle#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.ChartTitleLoadOptions):
        Excel.ChartTitle;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="excel!Excel.Interfaces.ChartTitleLoadOptions:interface"
            />
      return:
        type: '<xref uid="excel!Excel.ChartTitle:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.ChartTitle#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartTitle;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.ChartTitle:class" />'
        description: >-


          #### Examples


          ```javascript

          // Get the text of Chart Title from Chart1.

          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              
              var title = chart.title;
              title.load('text');
              return ctx.sync().then(function() {
                      console.log(title.text);
              }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
              });
          });

          ```

          ```javascript

          // Set the text of Chart Title to "My Chart" and Make it show on top
          of the chart without overlaying.

          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              
              chart.title.text= "My Chart"; 
              chart.title.visible=true;
              chart.title.overlay=true;
              
              return ctx.sync().then(function() {
                  console.log("Char Title Changed");
              }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
              });
          });

          ```
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.ChartTitle#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ChartTitle;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.ChartTitle:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'excel!Excel.ChartTitle#set:member(1)'
    package: excel!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.ChartTitle): void`
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.ChartTitleUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: '<xref uid="excel!Excel.Interfaces.ChartTitleUpdateData:interface" />'
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'excel!Excel.ChartTitle#set:member(2)'
    package: excel!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.ChartTitle): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="excel!Excel.ChartTitle:class" />'
      return:
        type: void
        description: ''
  - name: setFormula(formula)
    uid: 'excel!Excel.ChartTitle#setFormula:member(1)'
    package: excel!
    fullName: setFormula(formula)
    summary: >-
      Sets a string value that represents the formula of chart title using
      A1-style notation.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setFormula(formula: string): void;'
      parameters:
        - id: formula
          description: A string that represents the formula to set.
          type: string
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.ChartTitle#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Excel.ChartTitle object
      is an API object, the `toJSON` method returns a plain JavaScript object
      (typed as `Excel.Interfaces.ChartTitleData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartTitleData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.ChartTitleData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
