### YamlMime:TSEnum
name: Office.MailboxEnums.DelegatePermissions
uid: 'outlook!Office.MailboxEnums.DelegatePermissions:enum'
package: outlook!
fullName: Office.MailboxEnums.DelegatePermissions
summary: This bitmask represents a delegate's permissions on a shared folder.
remarks: >-
  \[ [API set: Mailbox 1.8](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


  **[Applicable Outlook
  mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
  Compose or Read


  #### Examples


  ```javascript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/65-delegates-and-shared-folders/get-shared-properties.yaml

  if (!Office.context.mailbox.item.getSharedPropertiesAsync) {
    console.error("Try this sample on an appointment from a shared folder.");
    return;
  }


  Office.context.mailbox.getCallbackTokenAsync({ isRest: true }, function(result) {
    if (result.status === Office.AsyncResultStatus.Succeeded && result.value !== "") {
      Office.context.mailbox.item.getSharedPropertiesAsync(
        {
          // Pass auth token along.
          asyncContext: result.value
        },
        function(result2) {
          let sharedProperties = result2.value;
          let delegatePermissions = sharedProperties.delegatePermissions;

          // Determine if user has the appropriate permission to do the operation.
          if ((delegatePermissions & Office.MailboxEnums.DelegatePermissions.Read) != 0) {
            const ewsId = Office.context.mailbox.item.itemId;
            const restId = Office.context.mailbox.convertToRestId(ewsId, Office.MailboxEnums.RestVersion.v2_0);
            let rest_url =
              sharedProperties.targetRestUrl + "/v2.0/users/" + sharedProperties.targetMailbox + "/events/" + restId;

            $.ajax({
              url: rest_url,
              dataType: "json",
              headers: { Authorization: "Bearer " + result2.asyncContext }
            })
              .done(function(response) {
                console.log(response);
              })
              .fail(function(error) {
                console.error(error);
              });
          }
        }
      );
    }
  });

  ```
isPreview: false
isDeprecated: false
fields:
  - name: DeleteAll
    uid: 'outlook!Office.MailboxEnums.DelegatePermissions.DeleteAll:member'
    package: outlook!
    summary: Delegate has permission to delete any items.
    value: '8'
  - name: DeleteOwn
    uid: 'outlook!Office.MailboxEnums.DelegatePermissions.DeleteOwn:member'
    package: outlook!
    summary: Delegate has permission to delete only the items they created.
    value: '4'
  - name: EditAll
    uid: 'outlook!Office.MailboxEnums.DelegatePermissions.EditAll:member'
    package: outlook!
    summary: Delegate has permission to edit any items.
    value: '32'
  - name: EditOwn
    uid: 'outlook!Office.MailboxEnums.DelegatePermissions.EditOwn:member'
    package: outlook!
    summary: Delegate has permission to edit only they items they created.
    value: '16'
  - name: Read
    uid: 'outlook!Office.MailboxEnums.DelegatePermissions.Read:member'
    package: outlook!
    summary: Delegate has permission to read items.
    value: '1'
  - name: Write
    uid: 'outlook!Office.MailboxEnums.DelegatePermissions.Write:member'
    package: outlook!
    summary: Delegate has permission to create and write items.
    value: '2'
