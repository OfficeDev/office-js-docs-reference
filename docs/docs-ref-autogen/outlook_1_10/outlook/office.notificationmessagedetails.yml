### YamlMime:TSType
name: Office.NotificationMessageDetails
uid: outlook!Office.NotificationMessageDetails:interface
package: outlook!
fullName: Office.NotificationMessageDetails
summary: >-
  An array of `NotificationMessageDetails` objects are returned by the
  `NotificationMessages.getAllAsync` method.
remarks: >-
  \[ [API set: Mailbox
  1.3](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


  **[Minimum permission
  level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
  -->**: **read item**


  **[Applicable Outlook
  mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
  -->**: Compose or Read


  **Important**: To learn about the different types of notification messages
  you can implement, see [Create notifications for your Outlook
  add-in](https://learn.microsoft.com/office/dev/add-ins/outlook/notifications)<!--
  -->.


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml


  // Gets all the notification messages and their keys for the current mail
  item.

  Office.context.mailbox.item.notificationMessages.getAllAsync((asyncResult) =>
  {
    if (asyncResult.status === Office.AsyncResultStatus.Failed) {
      console.log(asyncResult.error.message);
      return;
    }

    console.log(asyncResult.value);
  });

  ```

isPreview: false
isDeprecated: false
type: interface
properties:
  - name: actions
    uid: outlook!Office.NotificationMessageDetails#actions:member
    package: outlook!
    fullName: actions
    summary: >-
      Specifies actions for the message. Limit: 1 action. This limit doesn't
      count the "Dismiss" action which is included by default. Only applicable
      when the type is `InsightMessage`<!-- -->. Specifying this property for an
      unsupported type or including too many actions throws an error.


      **Important**: In modern Outlook on the web and [new Outlook on
      Windows](https://support.microsoft.com/office/656bb8d9-5a60-49b2-a98b-ba7822bc7627)<!--
      -->, the `actions` property is available in Compose mode only.
    remarks: >-
      \[ [API set: Mailbox
      1.10](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets)
      \]


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose or Read

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'actions?: NotificationMessageAction[];'
      return:
        type: <xref uid="outlook!Office.NotificationMessageAction:interface" />[]
  - name: icon
    uid: outlook!Office.NotificationMessageDetails#icon:member
    package: outlook!
    fullName: icon
    summary: >-
      A reference to a custom icon that's defined in the manifest. The icon
      appears before the notification message in the infobar area. An icon must
      be specified for `InformationalMessage` and `InsightMessage`
      notifications.
    remarks: >-
      **Important**:


      - Currently, the custom icon is only displayed in classic Outlook on
      Windows.


      - A custom icon is only supported in `InformationalMessage` and
      `InsightMessage` notifications. Specifying an icon for other notification
      types results in an exception.


      - If your add-in uses the [add-in only
      manifest](https://learn.microsoft.com/office/dev/add-ins/develop/add-in-manifests)<!--
      -->, the icon must be specified in the
      [Images](https://learn.microsoft.com/javascript/api/manifest/images)
      element of the
      [Resources](https://learn.microsoft.com/javascript/api/manifest/resources)
      section of the manifest.


      - If your add-in uses the [unified manifest for Microsoft
      365](https://learn.microsoft.com/office/dev/add-ins/develop/unified-manifest-overview)<!--
      -->, you can't currently customize the icon of an `InformationalMessage`
      or `InsightMessage` notification. The notification uses the first image
      specified in the
      ["icons"](https://learn.microsoft.com/microsoft-365/extensibility/schema/extension-common-icon)
      array of the first
      [extensions.ribbons.tabs.groups.controls](https://learn.microsoft.com/microsoft-365/extensibility/schema/extension-common-custom-group-controls-item)
      object of the manifest. Although this is the case, you must still specify
      a string in the `icon` property (for example, "icon-16").

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'icon?: string;'
      return:
        type: string
  - name: key
    uid: outlook!Office.NotificationMessageDetails#key:member
    package: outlook!
    fullName: key
    summary: The identifier for the notification message.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'key?: string;'
      return:
        type: string
  - name: message
    uid: outlook!Office.NotificationMessageDetails#message:member
    package: outlook!
    fullName: message
    summary: >-
      The text of the notification message. Maximum length is 150 characters. If
      the developer passes in a longer string, an `ArgumentOutOfRange` exception
      is thrown.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'message: string;'
      return:
        type: string
  - name: persistent
    uid: outlook!Office.NotificationMessageDetails#persistent:member
    package: outlook!
    fullName: persistent
    summary: >-
      Specifies if the message should be persistent. Only applicable when type
      is `InformationalMessage`<!-- -->. If true, the message remains until
      removed by this add-in or dismissed by the user. If false, it is removed
      when the user navigates to a different item. For error notifications, the
      message persists until the user sees it once. Specifying this parameter
      for an unsupported type throws an exception.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'persistent?: Boolean;'
      return:
        type: Boolean
  - name: type
    uid: outlook!Office.NotificationMessageDetails#type:member
    package: outlook!
    fullName: type
    summary: Specifies the `ItemNotificationMessageType` of message.
    remarks: >-
      **Important**:


      - For the `ProgressIndicator` or `ErrorMessage` types, an icon is
      automatically supplied and the message isn't persistent. Therefore, the
      icon and persistent properties aren't valid for these types of messages.
      Including them will result in an `ArgumentException`<!-- -->.


      - For the `ProgressIndicator` type, you should remove or replace the
      progress indicator when the action is complete.


      - In Outlook on Android and on iOS, only the `ProgressIndicator`<!-- -->,
      `InformationalMessage`<!-- -->, and `ErrorMessage` notification types are
      supported.


      - In compose mode, while the style of each notification type varies on
      other Outlook clients, notifications in Outlook on Android and on iOS all
      use the same style. The notification message is always prefixed with an
      informational icon.

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type: MailboxEnums.ItemNotificationMessageType | string;'
      return:
        type: >-
          <xref
          uid="outlook!Office.MailboxEnums.ItemNotificationMessageType:enum" />
          | string
