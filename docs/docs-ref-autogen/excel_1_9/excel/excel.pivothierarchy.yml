### YamlMime:TSType
name: Excel.PivotHierarchy
uid: 'excel!Excel.PivotHierarchy:class'
package: excel!
fullName: Excel.PivotHierarchy
summary: >-
  Represents the Excel PivotHierarchy.


  \[ [API set: ExcelApi
  1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'excel!Excel.PivotHierarchy#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: fields
    uid: 'excel!Excel.PivotHierarchy#fields:member'
    package: excel!
    fullName: fields
    summary: >-
      Returns the PivotFields associated with the PivotHierarchy.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly fields: Excel.PivotFieldCollection;'
      return:
        type: '<xref uid="excel!Excel.PivotFieldCollection:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-pivotfilters.yaml

          await Excel.run(async (context) => {
            // Add a PivotFilter to filter on the values correlated with a row.

            // Get the PivotTable.
            const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

            // Get the "Farm" field.
            const field = pivotTable.hierarchies.getItem("Farm").fields.getItem("Farm");

            // Filter to only include rows with more than 500 wholesale crates sold.
            const filter: Excel.PivotValueFilter = {
              condition: Excel.ValueFilterCondition.greaterThan,
              comparator: 500,
              value: "Sum of Crates Sold Wholesale"
            };

            // Apply the value filter to the field.
            field.applyFilter({ valueFilter: filter });

            await context.sync();
          });

          ```
  - name: id
    uid: 'excel!Excel.PivotHierarchy#id:member'
    package: excel!
    fullName: id
    summary: >-
      Id of the PivotHierarchy.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: string;'
      return:
        type: string
  - name: name
    uid: 'excel!Excel.PivotHierarchy#name:member'
    package: excel!
    fullName: name
    summary: >-
      Name of the PivotHierarchy.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name: string;'
      return:
        type: string
methods:
  - name: load(options)
    uid: 'excel!Excel.PivotHierarchy#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.PivotHierarchyLoadOptions):
        Excel.PivotHierarchy;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref
            uid="excel!Excel.Interfaces.PivotHierarchyLoadOptions:interface" />
      return:
        type: '<xref uid="excel!Excel.PivotHierarchy:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.PivotHierarchy#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotHierarchy;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.PivotHierarchy:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.PivotHierarchy#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PivotHierarchy;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.PivotHierarchy:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'excel!Excel.PivotHierarchy#set:member(1)'
    package: excel!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.PivotHierarchy): void`
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.PivotHierarchyUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: >-
            <xref
            uid="excel!Excel.Interfaces.PivotHierarchyUpdateData:interface" />
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'excel!Excel.PivotHierarchy#set:member(2)'
    package: excel!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.PivotHierarchy): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="excel!Excel.PivotHierarchy:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.PivotHierarchy#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Excel.PivotHierarchy
      object is an API object, the `toJSON` method returns a plain JavaScript
      object (typed as `Excel.Interfaces.PivotHierarchyData`<!-- -->) that
      contains shallow copies of any loaded child properties from the original
      object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotHierarchyData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.PivotHierarchyData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
