### YamlMime:TSType
name: Excel.ConditionalTextComparisonRule
uid: 'excel!Excel.ConditionalTextComparisonRule:interface'
package: excel!
fullName: Excel.ConditionalTextComparisonRule
summary: >-
  Represents a Cell Value Conditional Format Rule


  \[ [API set: ExcelApi
  1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: operator
    uid: 'excel!Excel.ConditionalTextComparisonRule#operator:member'
    package: excel!
    fullName: operator
    summary: >-
      The operator of the text conditional format.


      \[ [API set: ExcelApi
      1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        operator: Excel.ConditionalTextOperator | "Invalid" | "Contains" |
        "NotContains" | "BeginsWith" | "EndsWith";
      return:
        type: >-
          <xref uid="excel!Excel.ConditionalTextOperator:enum" /> | "Invalid" |
          "Contains" | "NotContains" | "BeginsWith" | "EndsWith"
  - name: text
    uid: 'excel!Excel.ConditionalTextComparisonRule#text:member'
    package: excel!
    fullName: text
    summary: >-
      The Text value of conditional format.


      \[ [API set: ExcelApi
      1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'text: string;'
      return:
        type: string
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml

          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B16:D18");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.containsText);
              conditionalFormat.textComparison.format.font.color = "red";
              conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: "Delayed" };

              await context.sync();
          });

          ```
