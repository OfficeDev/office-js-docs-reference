### YamlMime:UniversalReference
items:
  - uid: word.Word.List
    summary: |-
      Contains a collection of \[paragraph\](paragraph.md) objects.

      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: Word.List
    fullName: word.Word.List
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: word
    children:
      - word.Word.List.getLevelParagraphs
      - word.Word.List.getLevelString
      - word.Word.List.id
      - word.Word.List.insertParagraph
      - word.Word.List.levelExistences
      - word.Word.List.levelTypes
      - word.Word.List.load
      - word.Word.List.paragraphs
      - word.Word.List.setLevelAlignment
      - word.Word.List.setLevelBullet
      - word.Word.List.setLevelIndents
      - word.Word.List.setLevelNumbering
      - word.Word.List.setLevelStartingNumber
      - word.Word.List.toJSON
      - word.Word.List.track
      - word.Word.List.untrack
  - uid: word.Word.List.getLevelParagraphs
    summary: |-
      Gets the paragraphs that occur at the specified level in the list.

      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: getLevelParagraphs(level)
    fullName: word.Word.List.getLevelParagraphs
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelParagraphs(level: number): Word.ParagraphCollection;'
      return:
        type:
          - Word.ParagraphCollection
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
  - uid: word.Word.List.getLevelString
    summary: |-
      Gets the bullet, number or picture at the specified level as a string.

      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: getLevelString(level)
    fullName: word.Word.List.getLevelString
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelString(level: number): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
  - uid: word.Word.List.id
    summary: |-
      Gets the list's id.

      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: id
    fullName: word.Word.List.id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: word.Word.List.insertParagraph
    summary: >-
      Inserts a paragraph at the specified location. The insertLocation value can be 'Start', 'End', 'Before' or
      'After'.


      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: word.Word.List.insertParagraph
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: Required. The paragraph text to be inserted.
          type:
            - string
        - id: insertLocation
          description: 'Required. The value can be ''Start'', ''End'', ''Before'' or ''After''.'
          type:
            - Word.InsertLocation
  - uid: word.Word.List.levelExistences
    summary: >-
      Checks whether each of the 9 levels exists in the list. A true value indicates the level exists, which means there
      is at least one list item at that level. Read-only.


      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: levelExistences
    fullName: word.Word.List.levelExistences
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly levelExistences: boolean[];'
      return:
        type:
          - 'boolean[]'
  - uid: word.Word.List.levelTypes
    summary: |-
      Gets all 9 level types in the list. Each type can be 'Bullet', 'Number' or 'Picture'. Read-only.

      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: levelTypes
    fullName: word.Word.List.levelTypes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly levelTypes: Word.ListLevelType[];'
      return:
        type:
          - 'Word.ListLevelType[]'
  - uid: word.Word.List.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: word.Word.List.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ListLoadOptions): Word.List;'
      return:
        type:
          - Word.List
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Word.Interfaces.ListLoadOptions
  - uid: word.Word.List.paragraphs
    summary: |-
      Gets paragraphs in the list. Read-only.

      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: paragraphs
    fullName: word.Word.List.paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - Word.ParagraphCollection
  - uid: word.Word.List.setLevelAlignment
    summary: |-
      Sets the alignment of the bullet, number or picture at the specified level in the list.

      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: 'setLevelAlignment(level, alignment)'
    fullName: word.Word.List.setLevelAlignment
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelAlignment(level: number, alignment: Word.Alignment): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: alignment
          description: 'Required. The level alignment that can be ''left'', ''centered'' or ''right''.'
          type:
            - Word.Alignment
  - uid: word.Word.List.setLevelBullet
    summary: |-
      Sets the bullet format at the specified level in the list. If the bullet is 'Custom', the charCode is required.

      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: 'setLevelBullet(level, listBullet, charCode, fontName)'
    fullName: word.Word.List.setLevelBullet
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelBullet(level: number, listBullet: Word.ListBullet, charCode?: number, fontName?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: listBullet
          description: Required. The bullet.
          type:
            - Word.ListBullet
        - id: charCode
          description: Optional. The bullet character's code value. Used only if the bullet is 'Custom'.
          type:
            - number
        - id: fontName
          description: Optional. The bullet's font name. Used only if the bullet is 'Custom'.
          type:
            - string
  - uid: word.Word.List.setLevelIndents
    summary: |-
      Sets the two indents of the specified level in the list.

      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    fullName: word.Word.List.setLevelIndents
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelIndents(level: number, textIndent: number, bulletNumberPictureIndent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: textIndent
          description: Required. The text indent in points. It is the same as paragraph left indent.
          type:
            - number
        - id: bulletNumberPictureIndent
          description: >-
            Required. The relative indent, in points, of the bullet, number or picture. It is the same as paragraph
            first line indent.
          type:
            - number
  - uid: word.Word.List.setLevelNumbering
    summary: |-
      Sets the numbering format at the specified level in the list.

      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: 'setLevelNumbering(level, listNumbering, formatString)'
    fullName: word.Word.List.setLevelNumbering
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelNumbering(level: number, listNumbering: Word.ListNumbering, formatString?: any[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: listNumbering
          description: Required. The ordinal format.
          type:
            - Word.ListNumbering
        - id: formatString
          description: >-
            Optional. The numbering string format defined as an array of strings and/or integers. Each integer is a
            level of number type that is higher than or equal to this level. For example, an array of \["(", level - 1,
            ".", level, ")"\] can define the format of "(2.c)", where 2 is the parent's item number and c is this
            level's item number.
          type:
            - 'any[]'
  - uid: word.Word.List.setLevelStartingNumber
    summary: |-
      Sets the starting number at the specified level in the list. Default value is 1.

      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: 'setLevelStartingNumber(level, startingNumber)'
    fullName: word.Word.List.setLevelStartingNumber
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelStartingNumber(level: number, startingNumber: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: startingNumber
          description: Required. The number to start with.
          type:
            - number
  - uid: word.Word.List.toJSON
    name: toJSON()
    fullName: word.Word.List.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ListData;'
      return:
        type:
          - Word.Interfaces.ListData
        description: ''
  - uid: word.Word.List.track
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: word.Word.List.track
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.List;'
      return:
        type:
          - Word.List
        description: ''
  - uid: word.Word.List.untrack
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: word.Word.List.untrack
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.List;'
      return:
        type:
          - Word.List
        description: ''
