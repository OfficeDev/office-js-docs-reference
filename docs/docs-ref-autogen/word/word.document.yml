### YamlMime:UniversalReference
items:
  - uid: word.Word.Document
    summary: >-
      The Document object is the top level object. A Document object contains one or more sections, content controls,
      and the body that contains the contents of the document.


      \[ [API set: WordApi 1.1](http://bing.com?type=word) \]
    name: Word.Document
    fullName: word.Word.Document
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: word
    children:
      - word.Word.Document.body
      - word.Word.Document.contentControls
      - word.Word.Document.getSelection
      - word.Word.Document.load
      - word.Word.Document.properties
      - word.Word.Document.save
      - word.Word.Document.saved
      - word.Word.Document.sections
      - word.Word.Document.set
      - word.Word.Document.toJSON
      - word.Word.Document.track
      - word.Word.Document.untrack
  - uid: word.Word.Document.body
    summary: >-
      Gets the body object of the document. The body is the text that excludes headers, footers, footnotes, textboxes,
      etc.. Read-only.


      \[ [API set: WordApi 1.1](http://bing.com?type=word) \]
    name: body
    fullName: word.Word.Document.body
    langs:
      - typeScript
    type: property
    syntax:
      content: 'body: Word.Body;'
      return:
        type:
          - Word.Body
  - uid: word.Word.Document.contentControls
    summary: >-
      Gets the collection of content control objects in the current document. This includes content controls in the body
      of the document, headers, footers, textboxes, etc.. Read-only.


      \[ [API set: WordApi 1.1](http://bing.com?type=word) \]
    name: contentControls
    fullName: word.Word.Document.contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'contentControls: Word.ContentControlCollection;'
      return:
        type:
          - Word.ContentControlCollection
  - uid: word.Word.Document.getSelection
    summary: |-
      Gets the current selection of the document. Multiple selections are not supported.

      \[ [API set: WordApi 1.1](http://bing.com?type=word) \]
    name: getSelection()
    fullName: word.Word.Document.getSelection
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelection(): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
  - uid: word.Word.Document.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: word.Word.Document.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[] | OfficeExtension.LoadOption): Word.Document;'
      return:
        type:
          - Word.Document
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'string | string[] | OfficeExtension.LoadOption'
  - uid: word.Word.Document.properties
    summary: |-
      Gets the properties of the current document. Read-only.

      \[ [API set: WordApi 1.3](http://bing.com?type=word) \]
    name: properties
    fullName: word.Word.Document.properties
    langs:
      - typeScript
    type: property
    syntax:
      content: 'properties: Word.DocumentProperties;'
      return:
        type:
          - Word.DocumentProperties
  - uid: word.Word.Document.save
    summary: >-
      Saves the document. This will use the Word default file naming convention if the document has not been saved
      before.


      \[ [API set: WordApi 1.1](http://bing.com?type=word) \]
    name: save()
    fullName: word.Word.Document.save
    langs:
      - typeScript
    type: method
    syntax:
      content: 'save(): void;'
      return:
        type:
          - void
        description: ''
  - uid: word.Word.Document.saved
    summary: >-
      Indicates whether the changes in the document have been saved. A value of true indicates that the document hasn't
      changed since it was saved. Read-only.


      \[ [API set: WordApi 1.1](http://bing.com?type=word) \]
    name: saved
    fullName: word.Word.Document.saved
    langs:
      - typeScript
    type: property
    syntax:
      content: 'saved: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.Document.sections
    summary: |-
      Gets the collection of section objects in the document. Read-only.

      \[ [API set: WordApi 1.1](http://bing.com?type=word) \]
    name: sections
    fullName: word.Word.Document.sections
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sections: Word.SectionCollection;'
      return:
        type:
          - Word.SectionCollection
  - uid: word.Word.Document.set
    summary: 'Sets multiple properties on the object at the same time, based on JSON input.'
    name: 'set(properties, options)'
    fullName: word.Word.Document.set
    langs:
      - typeScript
    type: method
    syntax:
      content: "set(properties: Interfaces.DocumentUpdateData, options?: {\r\n            throwOnReadOnly?: boolean;\r\n        }): void;"
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Interfaces.DocumentUpdateData
        - id: options
          description: ''
          type:
            - "{\r\n            /**\r\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\r\n             */\r\n            throwOnReadOnly?: boolean;\r\n        }"
  - uid: word.Word.Document.toJSON
    name: toJSON()
    fullName: word.Word.Document.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON:'
      return:
        type:
          - "{\r\n            \"body\": Body;\r\n            \"properties\": DocumentProperties;\r\n            \"saved\": boolean;\r\n        }"
        description: ''
  - uid: word.Word.Document.track
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: word.Word.Document.track
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Document;'
      return:
        type:
          - Word.Document
        description: ''
  - uid: word.Word.Document.untrack
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: word.Word.Document.untrack
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Document;'
      return:
        type:
          - Word.Document
        description: ''
