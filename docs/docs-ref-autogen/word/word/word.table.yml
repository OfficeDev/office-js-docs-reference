### YamlMime:TSType
name: Word.Table
uid: 'word!Word.Table:class'
package: word!
fullName: Word.Table
summary: Represents a table in a Word document.
remarks: >-
  \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


  #### Examples


  ```typescript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/table-cell-access.yaml

  await Word.run(async (context) => {
    // Use a two-dimensional array to hold the initial table values.
    const data = [
      ["Tokyo", "Beijing", "Seattle"],
      ["Apple", "Orange", "Pineapple"]
    ];
    const table = context.document.body.insertTable(2, 3, "Start", data);
    table.styleBuiltIn = Word.Style.gridTable5Dark_Accent2;
    table.styleFirstColumn = false;

    await context.sync();
  });

  ```
isPreview: false
isDeprecated: false
type: class
properties:
  - name: alignment
    uid: 'word!Word.Table#alignment:member'
    package: word!
    fullName: alignment
    summary: 'Gets or sets the alignment of the table against the page column. The value can be ''Left'', ''Centered'', or ''Right''.'
    remarks: >-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/manage-formatting.yaml

      // Get alignment details about the first table in the document.

      await Word.run(async (context) => {
        const firstTable = context.document.body.tables.getFirst();
        firstTable.load(["alignment", "horizontalAlignment", "verticalAlignment"]);
        await context.sync();

        console.log(`Details about the alignment of the first table:`);
        console.log(`- Alignment of the table within the containing page column: ${firstTable.alignment}`);
        console.log(`- Horizontal alignment of every cell in the table: ${firstTable.horizontalAlignment}`);
        console.log(`- Vertical alignment of every cell in the table: ${firstTable.verticalAlignment}`);
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type: '<xref uid="word!Word.Alignment:enum" /> | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - name: context
    uid: 'word!Word.Table#context:member'
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="word!Word.RequestContext:class" />'
  - name: endnotes
    uid: 'word!Word.Table#endnotes:member'
    package: word!
    fullName: endnotes
    summary: Gets the collection of endnotes in the table.
    remarks: '\[ [API set: WordApiOnline 1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly endnotes: Word.NoteItemCollection;'
      return:
        type: '<xref uid="word!Word.NoteItemCollection:class" />'
  - name: fields
    uid: 'word!Word.Table#fields:member'
    package: word!
    fullName: fields
    summary: Gets the collection of field objects in the table.
    remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly fields: Word.FieldCollection;'
      return:
        type: '<xref uid="word!Word.FieldCollection:class" />'
  - name: font
    uid: 'word!Word.Table#font:member'
    package: word!
    fullName: font
    summary: 'Gets the font. Use this to get and set font name, size, color, and other properties.'
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type: '<xref uid="word!Word.Font:class" />'
  - name: footnotes
    uid: 'word!Word.Table#footnotes:member'
    package: word!
    fullName: footnotes
    summary: Gets the collection of footnotes in the table.
    remarks: '\[ [API set: WordApiOnline 1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly footnotes: Word.NoteItemCollection;'
      return:
        type: '<xref uid="word!Word.NoteItemCollection:class" />'
  - name: headerRowCount
    uid: 'word!Word.Table#headerRowCount:member'
    package: word!
    fullName: headerRowCount
    summary: Gets and sets the number of header rows.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'headerRowCount: number;'
      return:
        type: number
  - name: horizontalAlignment
    uid: 'word!Word.Table#horizontalAlignment:member'
    package: word!
    fullName: horizontalAlignment
    summary: >-
      Gets and sets the horizontal alignment of every cell in the table. The value can be 'Left', 'Centered', 'Right',
      or 'Justified'.
    remarks: >-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/manage-formatting.yaml

      // Get alignment details about the first table in the document.

      await Word.run(async (context) => {
        const firstTable = context.document.body.tables.getFirst();
        firstTable.load(["alignment", "horizontalAlignment", "verticalAlignment"]);
        await context.sync();

        console.log(`Details about the alignment of the first table:`);
        console.log(`- Alignment of the table within the containing page column: ${firstTable.alignment}`);
        console.log(`- Horizontal alignment of every cell in the table: ${firstTable.horizontalAlignment}`);
        console.log(`- Vertical alignment of every cell in the table: ${firstTable.verticalAlignment}`);
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'horizontalAlignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type: '<xref uid="word!Word.Alignment:enum" /> | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - name: isUniform
    uid: 'word!Word.Table#isUniform:member'
    package: word!
    fullName: isUniform
    summary: Indicates whether all of the table rows are uniform.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly isUniform: boolean;'
      return:
        type: boolean
  - name: nestingLevel
    uid: 'word!Word.Table#nestingLevel:member'
    package: word!
    fullName: nestingLevel
    summary: Gets the nesting level of the table. Top-level tables have level 1.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly nestingLevel: number;'
      return:
        type: number
  - name: parentBody
    uid: 'word!Word.Table#parentBody:member'
    package: word!
    fullName: parentBody
    summary: Gets the parent body of the table.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type: '<xref uid="word!Word.Body:class" />'
  - name: parentContentControl
    uid: 'word!Word.Table#parentContentControl:member'
    package: word!
    fullName: parentContentControl
    summary: >-
      Gets the content control that contains the table. Throws an `ItemNotFound` error if there isn't a parent content
      control.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type: '<xref uid="word!Word.ContentControl:class" />'
  - name: parentContentControlOrNullObject
    uid: 'word!Word.Table#parentContentControlOrNullObject:member'
    package: word!
    fullName: parentContentControlOrNullObject
    summary: >-
      Gets the content control that contains the table. If there isn't a parent content control, then this method will
      return an object with its `isNullObject` property set to `true`<!-- -->. For further information, see
      [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type: '<xref uid="word!Word.ContentControl:class" />'
  - name: parentTable
    uid: 'word!Word.Table#parentTable:member'
    package: word!
    fullName: parentTable
    summary: Gets the table that contains this table. Throws an `ItemNotFound` error if it is not contained in a table.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentTable: Word.Table;'
      return:
        type: '<xref uid="word!Word.Table:class" />'
  - name: parentTableCell
    uid: 'word!Word.Table#parentTableCell:member'
    package: word!
    fullName: parentTableCell
    summary: >-
      Gets the table cell that contains this table. Throws an `ItemNotFound` error if it is not contained in a table
      cell.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentTableCell: Word.TableCell;'
      return:
        type: '<xref uid="word!Word.TableCell:class" />'
  - name: parentTableCellOrNullObject
    uid: 'word!Word.Table#parentTableCellOrNullObject:member'
    package: word!
    fullName: parentTableCellOrNullObject
    summary: >-
      Gets the table cell that contains this table. If it is not contained in a table cell, then this method will return
      an object with its `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject
      methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
      return:
        type: '<xref uid="word!Word.TableCell:class" />'
  - name: parentTableOrNullObject
    uid: 'word!Word.Table#parentTableOrNullObject:member'
    package: word!
    fullName: parentTableOrNullObject
    summary: >-
      Gets the table that contains this table. If it is not contained in a table, then this method will return an object
      with its `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentTableOrNullObject: Word.Table;'
      return:
        type: '<xref uid="word!Word.Table:class" />'
  - name: rowCount
    uid: 'word!Word.Table#rowCount:member'
    package: word!
    fullName: rowCount
    summary: Gets the number of rows in the table.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly rowCount: number;'
      return:
        type: number
  - name: rows
    uid: 'word!Word.Table#rows:member'
    package: word!
    fullName: rows
    summary: Gets all of the table rows.
    remarks: >-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/manage-formatting.yaml

      // Get content alignment details about the first row of the first table in the document.

      await Word.run(async (context) => {
        const firstTable = context.document.body.tables.getFirst();
        const firstTableRow = firstTable.rows.getFirst();
        firstTableRow.load(["horizontalAlignment", "verticalAlignment"]);
        await context.sync();

        console.log(`Details about the alignment of the first table's first row:`);
        console.log(`- Horizontal alignment of every cell in the row: ${firstTableRow.horizontalAlignment}`);
        console.log(`- Vertical alignment of every cell in the row: ${firstTableRow.verticalAlignment}`);
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly rows: Word.TableRowCollection;'
      return:
        type: '<xref uid="word!Word.TableRowCollection:class" />'
  - name: shadingColor
    uid: 'word!Word.Table#shadingColor:member'
    package: word!
    fullName: shadingColor
    summary: 'Gets and sets the shading color. Color is specified in "\#RRGGBB" format or by using the color name.'
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'shadingColor: string;'
      return:
        type: string
  - name: style
    uid: 'word!Word.Table#style:member'
    package: word!
    fullName: style
    summary: >-
      Gets or sets the style name for the table. Use this property for custom styles and localized style names. To use
      the built-in styles that are portable between locales, see the "styleBuiltIn" property.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'style: string;'
      return:
        type: string
  - name: styleBandedColumns
    uid: 'word!Word.Table#styleBandedColumns:member'
    package: word!
    fullName: styleBandedColumns
    summary: Gets and sets whether the table has banded columns.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styleBandedColumns: boolean;'
      return:
        type: boolean
  - name: styleBandedRows
    uid: 'word!Word.Table#styleBandedRows:member'
    package: word!
    fullName: styleBandedRows
    summary: Gets and sets whether the table has banded rows.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styleBandedRows: boolean;'
      return:
        type: boolean
  - name: styleBuiltIn
    uid: 'word!Word.Table#styleBuiltIn:member'
    package: word!
    fullName: styleBuiltIn
    summary: >-
      Gets or sets the built-in style name for the table. Use this property for built-in styles that are portable
      between locales. To use custom styles or localized style names, see the "style" property.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styleBuiltIn: Word.BuiltInStyleName | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" |
        "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" |
        "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" |
        "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" |
        "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" |
        "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" |
        "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1"
        | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5"
        | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3"
        | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" |
        "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6"
        | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" |
        "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" |
        "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" |
        "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" |
        "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" |
        "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" |
        "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" |
        "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" |
        "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" |
        "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" |
        "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" |
        "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6"
        | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" |
        "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" |
        "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" |
        "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" |
        "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" |
        "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" |
        "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" |
        "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";
      return:
        type: >-
          <xref uid="word!Word.BuiltInStyleName:enum" /> | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" |
          "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" |
          "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" |
          "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" |
          "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" |
          "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" |
          "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" |
          "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" |
          "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" |
          "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" |
          "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" |
          "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" |
          "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" |
          "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" |
          "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" |
          "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2"
          | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" |
          "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" |
          "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" |
          "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" |
          "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5"
          | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" |
          "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" |
          "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" |
          "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" |
          "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" |
          "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" |
          "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" |
          "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" |
          "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" |
          "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" |
          "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
  - name: styleFirstColumn
    uid: 'word!Word.Table#styleFirstColumn:member'
    package: word!
    fullName: styleFirstColumn
    summary: Gets and sets whether the table has a first column with a special style.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styleFirstColumn: boolean;'
      return:
        type: boolean
  - name: styleLastColumn
    uid: 'word!Word.Table#styleLastColumn:member'
    package: word!
    fullName: styleLastColumn
    summary: Gets and sets whether the table has a last column with a special style.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styleLastColumn: boolean;'
      return:
        type: boolean
  - name: styleTotalRow
    uid: 'word!Word.Table#styleTotalRow:member'
    package: word!
    fullName: styleTotalRow
    summary: Gets and sets whether the table has a total (last) row with a special style.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styleTotalRow: boolean;'
      return:
        type: boolean
  - name: tables
    uid: 'word!Word.Table#tables:member'
    package: word!
    fullName: tables
    summary: Gets the child tables nested one level deeper.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly tables: Word.TableCollection;'
      return:
        type: '<xref uid="word!Word.TableCollection:class" />'
  - name: values
    uid: 'word!Word.Table#values:member'
    package: word!
    fullName: values
    summary: 'Gets and sets the text values in the table, as a 2D Javascript array.'
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'values: string[][];'
      return:
        type: 'string[][]'
  - name: verticalAlignment
    uid: 'word!Word.Table#verticalAlignment:member'
    package: word!
    fullName: verticalAlignment
    summary: 'Gets and sets the vertical alignment of every cell in the table. The value can be ''Top'', ''Center'', or ''Bottom''.'
    remarks: >-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/manage-formatting.yaml

      // Get alignment details about the first table in the document.

      await Word.run(async (context) => {
        const firstTable = context.document.body.tables.getFirst();
        firstTable.load(["alignment", "horizontalAlignment", "verticalAlignment"]);
        await context.sync();

        console.log(`Details about the alignment of the first table:`);
        console.log(`- Alignment of the table within the containing page column: ${firstTable.alignment}`);
        console.log(`- Horizontal alignment of every cell in the table: ${firstTable.horizontalAlignment}`);
        console.log(`- Vertical alignment of every cell in the table: ${firstTable.verticalAlignment}`);
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'verticalAlignment: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom";'
      return:
        type: '<xref uid="word!Word.VerticalAlignment:enum" /> | "Mixed" | "Top" | "Center" | "Bottom"'
  - name: width
    uid: 'word!Word.Table#width:member'
    package: word!
    fullName: width
    summary: Gets and sets the width of the table in points.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'width: number;'
      return:
        type: number
methods:
  - name: 'addColumns(insertLocation, columnCount, values)'
    uid: 'word!Word.Table#addColumns:member(1)'
    package: word!
    fullName: 'addColumns(insertLocation, columnCount, values)'
    summary: >-
      Adds columns to the start or end of the table, using the first or last existing column as a template. This is
      applicable to uniform tables. The string values, if specified, are set in the newly inserted rows.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        addColumns(insertLocation: Word.InsertLocation.start | Word.InsertLocation.end | "Start" | "End", columnCount:
        number, values?: string[][]): void;
      parameters:
        - id: insertLocation
          description: 'Required. It must be ''Start'' or ''End'', corresponding to the appropriate side of the table.'
          type: >-
            <xref uid="word!Word.InsertLocation.start:member" /> | <xref uid="word!Word.InsertLocation.end:member" /> |
            "Start" | "End"
        - id: columnCount
          description: Required. Number of columns to add.
          type: number
        - id: values
          description: Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
          type: 'string[][]'
      return:
        type: void
        description: ''
  - name: 'addRows(insertLocation, rowCount, values)'
    uid: 'word!Word.Table#addRows:member(1)'
    package: word!
    fullName: 'addRows(insertLocation, rowCount, values)'
    summary: >-
      Adds rows to the start or end of the table, using the first or last existing row as a template. The string values,
      if specified, are set in the newly inserted rows.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        addRows(insertLocation: Word.InsertLocation.start | Word.InsertLocation.end | "Start" | "End", rowCount: number,
        values?: string[][]): Word.TableRowCollection;
      parameters:
        - id: insertLocation
          description: Required. It must be 'Start' or 'End'.
          type: >-
            <xref uid="word!Word.InsertLocation.start:member" /> | <xref uid="word!Word.InsertLocation.end:member" /> |
            "Start" | "End"
        - id: rowCount
          description: Required. Number of rows to add.
          type: number
        - id: values
          description: Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
          type: 'string[][]'
      return:
        type: '<xref uid="word!Word.TableRowCollection:class" />'
        description: ''
  - name: autoFitWindow()
    uid: 'word!Word.Table#autoFitWindow:member(1)'
    package: word!
    fullName: autoFitWindow()
    summary: Autofits the table columns to the width of the window.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoFitWindow(): void;'
      return:
        type: void
        description: ''
  - name: clear()
    uid: 'word!Word.Table#clear:member(1)'
    package: word!
    fullName: clear()
    summary: Clears the contents of the table.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clear(): void;'
      return:
        type: void
        description: ''
  - name: delete()
    uid: 'word!Word.Table#delete:member(1)'
    package: word!
    fullName: delete()
    summary: Deletes the entire table.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: ''
  - name: 'deleteColumns(columnIndex, columnCount)'
    uid: 'word!Word.Table#deleteColumns:member(1)'
    package: word!
    fullName: 'deleteColumns(columnIndex, columnCount)'
    summary: Deletes specific columns. This is applicable to uniform tables.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'deleteColumns(columnIndex: number, columnCount?: number): void;'
      parameters:
        - id: columnIndex
          description: Required. The first column to delete.
          type: number
        - id: columnCount
          description: Optional. The number of columns to delete. Default 1.
          type: number
      return:
        type: void
        description: ''
  - name: 'deleteRows(rowIndex, rowCount)'
    uid: 'word!Word.Table#deleteRows:member(1)'
    package: word!
    fullName: 'deleteRows(rowIndex, rowCount)'
    summary: Deletes specific rows.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'deleteRows(rowIndex: number, rowCount?: number): void;'
      parameters:
        - id: rowIndex
          description: Required. The first row to delete.
          type: number
        - id: rowCount
          description: Optional. The number of rows to delete. Default 1.
          type: number
      return:
        type: void
        description: ''
  - name: distributeColumns()
    uid: 'word!Word.Table#distributeColumns:member(1)'
    package: word!
    fullName: distributeColumns()
    summary: Distributes the column widths evenly. This is applicable to uniform tables.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'distributeColumns(): void;'
      return:
        type: void
        description: ''
  - name: getBorder(borderLocation)
    uid: 'word!Word.Table#getBorder:member(1)'
    package: word!
    fullName: getBorder(borderLocation)
    summary: Gets the border style for the specified border.
    remarks: >-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/manage-formatting.yaml

      // Get border details about the first table in the document.

      await Word.run(async (context) => {
        const firstTable = context.document.body.tables.getFirst();
        const borderLocation = Word.BorderLocation.top;
        const border = firstTable.getBorder(borderLocation);
        border.load(["type", "color", "width"]);
        await context.sync();

        console.log(`Details about the ${borderLocation} border of the first table:`);
        console.log(`- Color: ${border.color}`);
        console.log(`- Type: ${border.type}`);
        console.log(`- Width: ${border.width} points`);
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getBorder(borderLocation: Word.BorderLocation): Word.TableBorder;'
      parameters:
        - id: borderLocation
          description: Required. The border location.
          type: '<xref uid="word!Word.BorderLocation:enum" />'
      return:
        type: '<xref uid="word!Word.TableBorder:class" />'
        description: ''
  - name: getBorder(borderLocationString)
    uid: 'word!Word.Table#getBorder:member(2)'
    package: word!
    fullName: getBorder(borderLocationString)
    summary: Gets the border style for the specified border.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getBorder(borderLocationString: "Top" | "Left" | "Bottom" | "Right" | "InsideHorizontal" | "InsideVertical" |
        "Inside" | "Outside" | "All"): Word.TableBorder;
      parameters:
        - id: borderLocationString
          description: Required. The border location.
          type: '"Top" | "Left" | "Bottom" | "Right" | "InsideHorizontal" | "InsideVertical" | "Inside" | "Outside" | "All"'
      return:
        type: '<xref uid="word!Word.TableBorder:class" />'
        description: ''
  - name: 'getCell(rowIndex, cellIndex)'
    uid: 'word!Word.Table#getCell:member(1)'
    package: word!
    fullName: 'getCell(rowIndex, cellIndex)'
    summary: >-
      Gets the table cell at a specified row and column. Throws an `ItemNotFound` error if the specified table cell does
      not exist.
    remarks: >-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/table-cell-access.yaml

      // Get the content of the first cell in the first table.

      await Word.run(async (context) => {
        const firstCell = context.document.body.tables.getFirst().getCell(0, 0).body;
        firstCell.load("text");

        await context.sync();
        console.log("First cell's text is: " + firstCell.text);
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCell(rowIndex: number, cellIndex: number): Word.TableCell;'
      parameters:
        - id: rowIndex
          description: Required. The index of the row.
          type: number
        - id: cellIndex
          description: Required. The index of the cell in the row.
          type: number
      return:
        type: '<xref uid="word!Word.TableCell:class" />'
        description: ''
  - name: 'getCellOrNullObject(rowIndex, cellIndex)'
    uid: 'word!Word.Table#getCellOrNullObject:member(1)'
    package: word!
    fullName: 'getCellOrNullObject(rowIndex, cellIndex)'
    summary: >-
      Gets the table cell at a specified row and column. If the specified table cell does not exist, then this method
      will return an object with its `isNullObject` property set to `true`<!-- -->. For further information, see
      [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCellOrNullObject(rowIndex: number, cellIndex: number): Word.TableCell;'
      parameters:
        - id: rowIndex
          description: Required. The index of the row.
          type: number
        - id: cellIndex
          description: Required. The index of the cell in the row.
          type: number
      return:
        type: '<xref uid="word!Word.TableCell:class" />'
        description: ''
  - name: getCellPadding(cellPaddingLocation)
    uid: 'word!Word.Table#getCellPadding:member(1)'
    package: word!
    fullName: getCellPadding(cellPaddingLocation)
    summary: Gets cell padding in points.
    remarks: >-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/manage-formatting.yaml

      // Get cell padding details about the first table in the document.

      await Word.run(async (context) => {
        const firstTable = context.document.body.tables.getFirst();
        const cellPaddingLocation = Word.CellPaddingLocation.right;
        const cellPadding = firstTable.getCellPadding(cellPaddingLocation);
        await context.sync();

        console.log(
          `Cell padding details about the ${cellPaddingLocation} border of the first table: ${cellPadding.value} points`
        );
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCellPadding(cellPaddingLocation: Word.CellPaddingLocation): OfficeExtension.ClientResult<number>;'
      parameters:
        - id: cellPaddingLocation
          description: 'Required. The cell padding location must be ''Top'', ''Left'', ''Bottom'', or ''Right''.'
          type: '<xref uid="word!Word.CellPaddingLocation:enum" />'
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;'
        description: ''
  - name: getCellPadding(cellPaddingLocationString)
    uid: 'word!Word.Table#getCellPadding:member(2)'
    package: word!
    fullName: getCellPadding(cellPaddingLocationString)
    summary: Gets cell padding in points.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getCellPadding(cellPaddingLocationString: "Top" | "Left" | "Bottom" | "Right"):
        OfficeExtension.ClientResult<number>;
      parameters:
        - id: cellPaddingLocationString
          description: 'Required. The cell padding location must be ''Top'', ''Left'', ''Bottom'', or ''Right''.'
          type: '"Top" | "Left" | "Bottom" | "Right"'
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;'
        description: ''
  - name: getNext()
    uid: 'word!Word.Table#getNext:member(1)'
    package: word!
    fullName: getNext()
    summary: Gets the next table. Throws an `ItemNotFound` error if this table is the last one.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getNext(): Word.Table;'
      return:
        type: '<xref uid="word!Word.Table:class" />'
        description: ''
  - name: getNextOrNullObject()
    uid: 'word!Word.Table#getNextOrNullObject:member(1)'
    package: word!
    fullName: getNextOrNullObject()
    summary: >-
      Gets the next table. If this table is the last one, then this method will return an object with its `isNullObject`
      property set to `true`<!-- -->. For further information, see [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getNextOrNullObject(): Word.Table;'
      return:
        type: '<xref uid="word!Word.Table:class" />'
        description: ''
  - name: getParagraphAfter()
    uid: 'word!Word.Table#getParagraphAfter:member(1)'
    package: word!
    fullName: getParagraphAfter()
    summary: Gets the paragraph after the table. Throws an `ItemNotFound` error if there isn't a paragraph after the table.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getParagraphAfter(): Word.Paragraph;'
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: getParagraphAfterOrNullObject()
    uid: 'word!Word.Table#getParagraphAfterOrNullObject:member(1)'
    package: word!
    fullName: getParagraphAfterOrNullObject()
    summary: >-
      Gets the paragraph after the table. If there isn't a paragraph after the table, then this method will return an
      object with its `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject methods
      and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getParagraphAfterOrNullObject(): Word.Paragraph;'
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: getParagraphBefore()
    uid: 'word!Word.Table#getParagraphBefore:member(1)'
    package: word!
    fullName: getParagraphBefore()
    summary: Gets the paragraph before the table. Throws an `ItemNotFound` error if there isn't a paragraph before the table.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getParagraphBefore(): Word.Paragraph;'
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: getParagraphBeforeOrNullObject()
    uid: 'word!Word.Table#getParagraphBeforeOrNullObject:member(1)'
    package: word!
    fullName: getParagraphBeforeOrNullObject()
    summary: >-
      Gets the paragraph before the table. If there isn't a paragraph before the table, then this method will return an
      object with its `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject methods
      and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getParagraphBeforeOrNullObject(): Word.Paragraph;'
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: getRange(rangeLocation)
    uid: 'word!Word.Table#getRange:member(1)'
    package: word!
    fullName: getRange(rangeLocation)
    summary: 'Gets the range that contains this table, or the range at the start or end of the table.'
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getRange(rangeLocation?: Word.RangeLocation.whole | Word.RangeLocation.start | Word.RangeLocation.end |
        Word.RangeLocation.after | "Whole" | "Start" | "End" | "After"): Word.Range;
      parameters:
        - id: rangeLocation
          description: 'Optional. The range location must be ''Whole'', ''Start'', ''End'', or ''After''.'
          type: >-
            <xref uid="word!Word.RangeLocation.whole:member" /> | <xref uid="word!Word.RangeLocation.start:member" /> |
            <xref uid="word!Word.RangeLocation.end:member" /> | <xref uid="word!Word.RangeLocation.after:member" /> |
            "Whole" | "Start" | "End" | "After"
      return:
        type: '<xref uid="word!Word.Range:class" />'
        description: ''
  - name: insertContentControl()
    uid: 'word!Word.Table#insertContentControl:member(1)'
    package: word!
    fullName: insertContentControl()
    summary: Inserts a content control on the table.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type: '<xref uid="word!Word.ContentControl:class" />'
        description: ''
  - name: 'insertParagraph(paragraphText, insertLocation)'
    uid: 'word!Word.Table#insertParagraph:member(1)'
    package: word!
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    summary: Inserts a paragraph at the specified location.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after |
        "Before" | "After"): Word.Paragraph;
      parameters:
        - id: paragraphText
          description: Required. The paragraph text to be inserted.
          type: string
        - id: insertLocation
          description: Required. The value must be 'Before' or 'After'.
          type: >-
            <xref uid="word!Word.InsertLocation.before:member" /> | <xref uid="word!Word.InsertLocation.after:member" />
            | "Before" | "After"
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    uid: 'word!Word.Table#insertTable:member(1)'
    package: word!
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    summary: Inserts a table with the specified number of rows and columns.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation.before |
        Word.InsertLocation.after | "Before" | "After", values?: string[][]): Word.Table;
      parameters:
        - id: rowCount
          description: Required. The number of rows in the table.
          type: number
        - id: columnCount
          description: Required. The number of columns in the table.
          type: number
        - id: insertLocation
          description: Required. The value must be 'Before' or 'After'.
          type: >-
            <xref uid="word!Word.InsertLocation.before:member" /> | <xref uid="word!Word.InsertLocation.after:member" />
            | "Before" | "After"
        - id: values
          description: Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
          type: 'string[][]'
      return:
        type: '<xref uid="word!Word.Table:class" />'
        description: ''
  - name: load(options)
    uid: 'word!Word.Table#load:member(1)'
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Word.Interfaces.TableLoadOptions): Word.Table;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="word!Word.Interfaces.TableLoadOptions:interface" />'
      return:
        type: '<xref uid="word!Word.Table:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'word!Word.Table#load:member(2)'
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Table;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="word!Word.Table:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'word!Word.Table#load:member(3)'
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.Table;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="word!Word.Table:class" />'
        description: ''
  - name: 'mergeCells(topRow, firstCell, bottomRow, lastCell)'
    uid: 'word!Word.Table#mergeCells:member(1)'
    package: word!
    fullName: 'mergeCells(topRow, firstCell, bottomRow, lastCell)'
    summary: Merges the cells bounded inclusively by a first and last cell.
    remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'mergeCells(topRow: number, firstCell: number, bottomRow: number, lastCell: number): Word.TableCell;'
      parameters:
        - id: topRow
          description: Required. The row of the first cell
          type: number
        - id: firstCell
          description: Required. The index of the first cell in its row
          type: number
        - id: bottomRow
          description: Required. The row of the last cell
          type: number
        - id: lastCell
          description: Required. The index of the last cell in its row
          type: number
      return:
        type: '<xref uid="word!Word.TableCell:class" />'
        description: ''
  - name: 'search(searchText, searchOptions)'
    uid: 'word!Word.Table#search:member(1)'
    package: word!
    fullName: 'search(searchText, searchOptions)'
    summary: >-
      Performs a search with the specified SearchOptions on the scope of the table object. The search results are a
      collection of range objects.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      parameters:
        - id: searchText
          description: Required. The search text.
          type: string
        - id: searchOptions
          description: Optional. Options for the search.
          type: |-
            <xref uid="word!Word.SearchOptions:class" /> | {
                        ignorePunct?: boolean;
                        ignoreSpace?: boolean;
                        matchCase?: boolean;
                        matchPrefix?: boolean;
                        matchSuffix?: boolean;
                        matchWholeWord?: boolean;
                        matchWildcards?: boolean;
                    }
      return:
        type: '<xref uid="word!Word.RangeCollection:class" />'
        description: ''
  - name: select(selectionMode)
    uid: 'word!Word.Table#select:member(1)'
    package: word!
    fullName: select(selectionMode)
    summary: 'Selects the table, or the position at the start or end of the table, and navigates the Word UI to it.'
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      parameters:
        - id: selectionMode
          description: 'Optional. The selection mode must be ''Select'', ''Start'', or ''End''. ''Select'' is the default.'
          type: '<xref uid="word!Word.SelectionMode:enum" />'
      return:
        type: void
        description: ''
  - name: select(selectionModeString)
    uid: 'word!Word.Table#select:member(2)'
    package: word!
    fullName: select(selectionModeString)
    summary: 'Selects the table, or the position at the start or end of the table, and navigates the Word UI to it.'
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      parameters:
        - id: selectionModeString
          description: 'Optional. The selection mode must be ''Select'', ''Start'', or ''End''. ''Select'' is the default.'
          type: '"Select" | "Start" | "End"'
      return:
        type: void
        description: ''
  - name: 'set(properties, options)'
    uid: 'word!Word.Table#set:member(1)'
    package: word!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="word!Word.Interfaces.TableUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'word!Word.Table#set:member(2)'
    package: word!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Word.Table): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="word!Word.Table:class" />'
      return:
        type: void
        description: ''
  - name: 'setCellPadding(cellPaddingLocation, cellPadding)'
    uid: 'word!Word.Table#setCellPadding:member(1)'
    package: word!
    fullName: 'setCellPadding(cellPaddingLocation, cellPadding)'
    summary: Sets cell padding in points.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setCellPadding(cellPaddingLocation: Word.CellPaddingLocation, cellPadding: number): void;'
      parameters:
        - id: cellPaddingLocation
          description: 'Required. The cell padding location must be ''Top'', ''Left'', ''Bottom'', or ''Right''.'
          type: '<xref uid="word!Word.CellPaddingLocation:enum" />'
        - id: cellPadding
          description: Required. The cell padding.
          type: number
      return:
        type: void
        description: ''
  - name: 'setCellPadding(cellPaddingLocationString, cellPadding)'
    uid: 'word!Word.Table#setCellPadding:member(2)'
    package: word!
    fullName: 'setCellPadding(cellPaddingLocationString, cellPadding)'
    summary: Sets cell padding in points.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setCellPadding(cellPaddingLocationString: "Top" | "Left" | "Bottom" | "Right", cellPadding: number): void;'
      parameters:
        - id: cellPaddingLocationString
          description: 'Required. The cell padding location must be ''Top'', ''Left'', ''Bottom'', or ''Right''.'
          type: '"Top" | "Left" | "Bottom" | "Right"'
        - id: cellPadding
          description: Required. The cell padding.
          type: number
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'word!Word.Table#toJSON:member(1)'
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Word.Table object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Word.Interfaces.TableData`<!-- -->) that contains shallow copies of any loaded child
      properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.TableData;'
      return:
        type: '<xref uid="word!Word.Interfaces.TableData:interface" />'
        description: ''
  - name: track()
    uid: 'word!Word.Table#track:member(1)'
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for
      [context.trackedObjects.add(thisObject)](https://docs.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you are using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and
      get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the
      object to the tracked object collection when the object was first created. If this object is part of a collection,
      you should also track the parent collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.Table;'
      return:
        type: '<xref uid="word!Word.Table:class" />'
        description: ''
  - name: untrack()
    uid: 'word!Word.Table#untrack:member(1)'
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://docs.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so please remember to free any objects you add,
      once you're done using them. You will need to call `context.sync()` before the memory release takes effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.Table;'
      return:
        type: '<xref uid="word!Word.Table:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
