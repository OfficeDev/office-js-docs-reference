### YamlMime:TSType
name: Word.Interfaces.FontUpdateData
uid: word!Word.Interfaces.FontUpdateData:interface
package: word!
fullName: Word.Interfaces.FontUpdateData
summary: >-
  An interface for updating data on the `Font` object, for use in `font.set({
  ... })`<!-- -->.
remarks: ''

isPreview: false
isDeprecated: false
type: interface
properties:
  - name: allCaps
    uid: word!Word.Interfaces.FontUpdateData#allCaps:member
    package: word!
    fullName: allCaps
    summary: >-
      Specifies whether the font is formatted as all capital letters, which
      makes lowercase letters appear as uppercase letters. The possible values
      are as follows:


      - `true`<!-- -->: All the text has the **All Caps** attribute.


      - `false`<!-- -->: None of the text has the **All Caps** attribute.


      - `null`<!-- -->: Returned if some, but not all, of the text has the
      **All Caps** attribute.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'allCaps?: boolean;'
      return:
        type: boolean
  - name: bold
    uid: word!Word.Interfaces.FontUpdateData#bold:member
    package: word!
    fullName: bold
    summary: >-
      Specifies a value that indicates whether the font is bold. True if the
      font is formatted as bold, otherwise, false.
    remarks: >-
      \[ [API set: WordApi
      1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'bold?: boolean;'
      return:
        type: boolean
  - name: boldBidirectional
    uid: word!Word.Interfaces.FontUpdateData#boldBidirectional:member
    package: word!
    fullName: boldBidirectional
    summary: >-
      Specifies whether the font is formatted as bold in a right-to-left
      language document. The possible values are as follows:


      - `true`<!-- -->: All the text is bold.


      - `false`<!-- -->: None of the text is bold.


      - `null`<!-- -->: Returned if some, but not all, of the text is bold.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'boldBidirectional?: boolean;'
      return:
        type: boolean
  - name: color
    uid: word!Word.Interfaces.FontUpdateData#color:member
    package: word!
    fullName: color
    summary: >-
      Specifies the color for the specified font. You can provide the value in
      the '\#RRGGBB' format or the color name.
    remarks: >-
      \[ [API set: WordApi
      1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'color?: string;'
      return:
        type: string
  - name: colorIndex
    uid: word!Word.Interfaces.FontUpdateData#colorIndex:member
    package: word!
    fullName: colorIndex
    summary: Specifies a `ColorIndex` value that represents the color for the font.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        colorIndex?: Word.ColorIndex | "Auto" | "Black" | "Blue" | "Turquoise" |
        "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" | "DarkBlue" |
        "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" | "Gray50" |
        "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
      return:
        type: >-
          <xref uid="word!Word.ColorIndex:enum" /> | "Auto" | "Black" | "Blue" |
          "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" |
          "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" |
          "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor"
  - name: colorIndexBidirectional
    uid: word!Word.Interfaces.FontUpdateData#colorIndexBidirectional:member
    package: word!
    fullName: colorIndexBidirectional
    summary: >-
      Specifies the color for the `Font` object in a right-to-left language
      document.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        colorIndexBidirectional?: Word.ColorIndex | "Auto" | "Black" | "Blue" |
        "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" |
        "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" |
        "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor";
      return:
        type: >-
          <xref uid="word!Word.ColorIndex:enum" /> | "Auto" | "Black" | "Blue" |
          "Turquoise" | "BrightGreen" | "Pink" | "Red" | "Yellow" | "White" |
          "DarkBlue" | "Teal" | "Green" | "Violet" | "DarkRed" | "DarkYellow" |
          "Gray50" | "Gray25" | "ClassicRed" | "ClassicBlue" | "ByAuthor"
  - name: contextualAlternates
    uid: word!Word.Interfaces.FontUpdateData#contextualAlternates:member
    package: word!
    fullName: contextualAlternates
    summary: Specifies whether contextual alternates are enabled for the font.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'contextualAlternates?: boolean;'
      return:
        type: boolean
  - name: diacriticColor
    uid: word!Word.Interfaces.FontUpdateData#diacriticColor:member
    package: word!
    fullName: diacriticColor
    summary: >-
      Specifies the color to be used for diacritics for the `Font` object. You
      can provide the value in the '\#RRGGBB' format.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'diacriticColor?: string;'
      return:
        type: string
  - name: disableCharacterSpaceGrid
    uid: word!Word.Interfaces.FontUpdateData#disableCharacterSpaceGrid:member
    package: word!
    fullName: disableCharacterSpaceGrid
    summary: >-
      Specifies whether Microsoft Word ignores the number of characters per line
      for the corresponding `Font` object.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'disableCharacterSpaceGrid?: boolean;'
      return:
        type: boolean
  - name: doubleStrikeThrough
    uid: word!Word.Interfaces.FontUpdateData#doubleStrikeThrough:member
    package: word!
    fullName: doubleStrikeThrough
    summary: >-
      Specifies a value that indicates whether the font has a double
      strikethrough. True if the font is formatted as double strikethrough text,
      otherwise, false.
    remarks: >-
      \[ [API set: WordApi
      1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'doubleStrikeThrough?: boolean;'
      return:
        type: boolean
  - name: emboss
    uid: word!Word.Interfaces.FontUpdateData#emboss:member
    package: word!
    fullName: emboss
    summary: >-
      Specifies whether the font is formatted as embossed. The possible values
      are as follows:


      - `true`<!-- -->: All the text is embossed.


      - `false`<!-- -->: None of the text is embossed.


      - `null`<!-- -->: Returned if some, but not all, of the text is embossed.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'emboss?: boolean;'
      return:
        type: boolean
  - name: emphasisMark
    uid: word!Word.Interfaces.FontUpdateData#emphasisMark:member
    package: word!
    fullName: emphasisMark
    summary: >-
      Specifies an `EmphasisMark` value that represents the emphasis mark for a
      character or designated character string.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        emphasisMark?: Word.EmphasisMark | "None" | "OverSolidCircle" |
        "OverComma" | "OverWhiteCircle" | "UnderSolidCircle";
      return:
        type: >-
          <xref uid="word!Word.EmphasisMark:enum" /> | "None" |
          "OverSolidCircle" | "OverComma" | "OverWhiteCircle" |
          "UnderSolidCircle"
  - name: engrave
    uid: word!Word.Interfaces.FontUpdateData#engrave:member
    package: word!
    fullName: engrave
    summary: >-
      Specifies whether the font is formatted as engraved. The possible values
      are as follows:


      - `true`<!-- -->: All the text is engraved.


      - `false`<!-- -->: None of the text is engraved.


      - `null`<!-- -->: Returned if some, but not all, of the text is engraved.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'engrave?: boolean;'
      return:
        type: boolean
  - name: fill
    uid: word!Word.Interfaces.FontUpdateData#fill:member
    package: word!
    fullName: fill
    summary: >-
      Returns a `FillFormat` object that contains fill formatting properties for
      the font used by the range of text.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'fill?: Word.Interfaces.FillFormatUpdateData;'
      return:
        type: <xref uid="word!Word.Interfaces.FillFormatUpdateData:interface" />
  - name: glow
    uid: word!Word.Interfaces.FontUpdateData#glow:member
    package: word!
    fullName: glow
    summary: >-
      Returns a `GlowFormat` object that represents the glow formatting for the
      font used by the range of text.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'glow?: Word.Interfaces.GlowFormatUpdateData;'
      return:
        type: <xref uid="word!Word.Interfaces.GlowFormatUpdateData:interface" />
  - name: hidden
    uid: word!Word.Interfaces.FontUpdateData#hidden:member
    package: word!
    fullName: hidden
    summary: >-
      Specifies a value that indicates whether the font is tagged as hidden.
      True if the font is formatted as hidden text, otherwise, false.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hidden?: boolean;'
      return:
        type: boolean
  - name: highlightColor
    uid: word!Word.Interfaces.FontUpdateData#highlightColor:member
    package: word!
    fullName: highlightColor
    summary: >-
      Specifies the highlight color. To set it, use a value either in the
      '\#RRGGBB' format or the color name. To remove highlight color, set it to
      null. The returned highlight color can be in the '\#RRGGBB' format, an
      empty string for mixed highlight colors, or `null` for no highlight color.
      Note: Only the default highlight colors are available in Office for
      Windows Desktop. These are "Yellow", "Lime", "Turquoise", "Pink", "Blue",
      "Red", "DarkBlue", "Teal", "Green", "Purple", "DarkRed", "Olive", "Gray",
      "LightGray", and "Black". When the add-in runs in Office for Windows
      Desktop, any other color is converted to the closest color when applied to
      the font.
    remarks: >-
      \[ [API set: WordApi
      1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'highlightColor?: string;'
      return:
        type: string
  - name: italic
    uid: word!Word.Interfaces.FontUpdateData#italic:member
    package: word!
    fullName: italic
    summary: >-
      Specifies a value that indicates whether the font is italicized. True if
      the font is italicized, otherwise, false.
    remarks: >-
      \[ [API set: WordApi
      1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'italic?: boolean;'
      return:
        type: boolean
  - name: italicBidirectional
    uid: word!Word.Interfaces.FontUpdateData#italicBidirectional:member
    package: word!
    fullName: italicBidirectional
    summary: >-
      Specifies whether the font is italicized in a right-to-left language
      document. The possible values are as follows:


      - `true`<!-- -->: All the text is italicized.


      - `false`<!-- -->: None of the text is italicized.


      - `null`<!-- -->: Returned if some, but not all, of the text is
      italicized.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'italicBidirectional?: boolean;'
      return:
        type: boolean
  - name: kerning
    uid: word!Word.Interfaces.FontUpdateData#kerning:member
    package: word!
    fullName: kerning
    summary: >-
      Specifies the minimum font size for which Microsoft Word will adjust
      kerning automatically.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'kerning?: number;'
      return:
        type: number
  - name: ligature
    uid: word!Word.Interfaces.FontUpdateData#ligature:member
    package: word!
    fullName: ligature
    summary: Specifies the ligature setting for the `Font` object.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        ligature?: Word.Ligature | "None" | "Standard" | "Contextual" |
        "StandardContextual" | "Historical" | "StandardHistorical" |
        "ContextualHistorical" | "StandardContextualHistorical" | "Discretional"
        | "StandardDiscretional" | "ContextualDiscretional" |
        "StandardContextualDiscretional" | "HistoricalDiscretional" |
        "StandardHistoricalDiscretional" | "ContextualHistoricalDiscretional" |
        "All";
      return:
        type: >-
          <xref uid="word!Word.Ligature:enum" /> | "None" | "Standard" |
          "Contextual" | "StandardContextual" | "Historical" |
          "StandardHistorical" | "ContextualHistorical" |
          "StandardContextualHistorical" | "Discretional" |
          "StandardDiscretional" | "ContextualDiscretional" |
          "StandardContextualDiscretional" | "HistoricalDiscretional" |
          "StandardHistoricalDiscretional" | "ContextualHistoricalDiscretional"
          | "All"
  - name: line
    uid: word!Word.Interfaces.FontUpdateData#line:member
    package: word!
    fullName: line
    summary: Returns a `LineFormat` object that specifies the formatting for a line.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'line?: Word.Interfaces.LineFormatUpdateData;'
      return:
        type: <xref uid="word!Word.Interfaces.LineFormatUpdateData:interface" />
  - name: name
    uid: word!Word.Interfaces.FontUpdateData#name:member
    package: word!
    fullName: name
    summary: Specifies a value that represents the name of the font.
    remarks: >-
      \[ [API set: WordApi
      1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name?: string;'
      return:
        type: string
  - name: nameAscii
    uid: word!Word.Interfaces.FontUpdateData#nameAscii:member
    package: word!
    fullName: nameAscii
    summary: >-
      Specifies the font used for Latin text (characters with character codes
      from 0 (zero) through 127).
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'nameAscii?: string;'
      return:
        type: string
  - name: nameBidirectional
    uid: word!Word.Interfaces.FontUpdateData#nameBidirectional:member
    package: word!
    fullName: nameBidirectional
    summary: Specifies the font name in a right-to-left language document.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'nameBidirectional?: string;'
      return:
        type: string
  - name: nameFarEast
    uid: word!Word.Interfaces.FontUpdateData#nameFarEast:member
    package: word!
    fullName: nameFarEast
    summary: Specifies the East Asian font name.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'nameFarEast?: string;'
      return:
        type: string
  - name: nameOther
    uid: word!Word.Interfaces.FontUpdateData#nameOther:member
    package: word!
    fullName: nameOther
    summary: Specifies the font used for characters with codes from 128 through 255.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'nameOther?: string;'
      return:
        type: string
  - name: numberForm
    uid: word!Word.Interfaces.FontUpdateData#numberForm:member
    package: word!
    fullName: numberForm
    summary: Specifies the number form setting for an OpenType font.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'numberForm?: Word.NumberForm | "Default" | "Lining" | "OldStyle";'
      return:
        type: >-
          <xref uid="word!Word.NumberForm:enum" /> | "Default" | "Lining" |
          "OldStyle"
  - name: numberSpacing
    uid: word!Word.Interfaces.FontUpdateData#numberSpacing:member
    package: word!
    fullName: numberSpacing
    summary: Specifies the number spacing setting for the font.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        numberSpacing?: Word.NumberSpacing | "Default" | "Proportional" |
        "Tabular";
      return:
        type: >-
          <xref uid="word!Word.NumberSpacing:enum" /> | "Default" |
          "Proportional" | "Tabular"
  - name: outline
    uid: word!Word.Interfaces.FontUpdateData#outline:member
    package: word!
    fullName: outline
    summary: >-
      Specifies if the font is formatted as outlined. The possible values are as
      follows:


      - `true`<!-- -->: All the text is outlined.


      - `false`<!-- -->: None of the text is outlined.


      - `null`<!-- -->: Returned if some, but not all, of the text is outlined.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'outline?: boolean;'
      return:
        type: boolean
  - name: position
    uid: word!Word.Interfaces.FontUpdateData#position:member
    package: word!
    fullName: position
    summary: Specifies the position of text (in points) relative to the base line.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'position?: number;'
      return:
        type: number
  - name: reflection
    uid: word!Word.Interfaces.FontUpdateData#reflection:member
    package: word!
    fullName: reflection
    summary: >-
      Returns a `ReflectionFormat` object that represents the reflection
      formatting for a shape.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'reflection?: Word.Interfaces.ReflectionFormatUpdateData;'
      return:
        type: >-
          <xref uid="word!Word.Interfaces.ReflectionFormatUpdateData:interface"
          />
  - name: scaling
    uid: word!Word.Interfaces.FontUpdateData#scaling:member
    package: word!
    fullName: scaling
    summary: Specifies the scaling percentage applied to the font.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'scaling?: number;'
      return:
        type: number
  - name: shadow
    uid: word!Word.Interfaces.FontUpdateData#shadow:member
    package: word!
    fullName: shadow
    summary: >-
      Specifies if the font is formatted as shadowed. The possible values are as
      follows:


      - `true`<!-- -->: All the text is shadowed.


      - `false`<!-- -->: None of the text is shadowed.


      - `null`<!-- -->: Returned if some, but not all, of the text is shadowed.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'shadow?: boolean;'
      return:
        type: boolean
  - name: size
    uid: word!Word.Interfaces.FontUpdateData#size:member
    package: word!
    fullName: size
    summary: Specifies a value that represents the font size in points.
    remarks: >-
      \[ [API set: WordApi
      1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'size?: number;'
      return:
        type: number
  - name: sizeBidirectional
    uid: word!Word.Interfaces.FontUpdateData#sizeBidirectional:member
    package: word!
    fullName: sizeBidirectional
    summary: Specifies the font size in points for right-to-left text.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'sizeBidirectional?: number;'
      return:
        type: number
  - name: smallCaps
    uid: word!Word.Interfaces.FontUpdateData#smallCaps:member
    package: word!
    fullName: smallCaps
    summary: >-
      Specifies whether the font is formatted as small caps, which makes
      lowercase letters appear as small uppercase letters. The possible values
      are as follows:


      - `true`<!-- -->: All the text has the **Small Caps** attribute.


      - `false`<!-- -->: None of the text has the **Small Caps** attribute.


      - `null`<!-- -->: Returned if some, but not all, of the text has the
      **Small Caps** attribute.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'smallCaps?: boolean;'
      return:
        type: boolean
  - name: spacing
    uid: word!Word.Interfaces.FontUpdateData#spacing:member
    package: word!
    fullName: spacing
    summary: Specifies the spacing between characters.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'spacing?: number;'
      return:
        type: number
  - name: strikeThrough
    uid: word!Word.Interfaces.FontUpdateData#strikeThrough:member
    package: word!
    fullName: strikeThrough
    summary: >-
      Specifies a value that indicates whether the font has a strikethrough.
      True if the font is formatted as strikethrough text, otherwise, false.
    remarks: >-
      \[ [API set: WordApi
      1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'strikeThrough?: boolean;'
      return:
        type: boolean
  - name: stylisticSet
    uid: word!Word.Interfaces.FontUpdateData#stylisticSet:member
    package: word!
    fullName: stylisticSet
    summary: Specifies the stylistic set for the font.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        stylisticSet?: Word.StylisticSet | "Default" | "Set01" | "Set02" |
        "Set03" | "Set04" | "Set05" | "Set06" | "Set07" | "Set08" | "Set09" |
        "Set10" | "Set11" | "Set12" | "Set13" | "Set14" | "Set15" | "Set16" |
        "Set17" | "Set18" | "Set19" | "Set20";
      return:
        type: >-
          <xref uid="word!Word.StylisticSet:enum" /> | "Default" | "Set01" |
          "Set02" | "Set03" | "Set04" | "Set05" | "Set06" | "Set07" | "Set08" |
          "Set09" | "Set10" | "Set11" | "Set12" | "Set13" | "Set14" | "Set15" |
          "Set16" | "Set17" | "Set18" | "Set19" | "Set20"
  - name: subscript
    uid: word!Word.Interfaces.FontUpdateData#subscript:member
    package: word!
    fullName: subscript
    summary: >-
      Specifies a value that indicates whether the font is a subscript. True if
      the font is formatted as subscript, otherwise, false.
    remarks: >-
      \[ [API set: WordApi
      1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subscript?: boolean;'
      return:
        type: boolean
  - name: superscript
    uid: word!Word.Interfaces.FontUpdateData#superscript:member
    package: word!
    fullName: superscript
    summary: >-
      Specifies a value that indicates whether the font is a superscript. True
      if the font is formatted as superscript, otherwise, false.
    remarks: >-
      \[ [API set: WordApi
      1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'superscript?: boolean;'
      return:
        type: boolean
  - name: textColor
    uid: word!Word.Interfaces.FontUpdateData#textColor:member
    package: word!
    fullName: textColor
    summary: Returns a `ColorFormat` object that represents the color for the font.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'textColor?: Word.Interfaces.ColorFormatUpdateData;'
      return:
        type: <xref uid="word!Word.Interfaces.ColorFormatUpdateData:interface" />
  - name: textShadow
    uid: word!Word.Interfaces.FontUpdateData#textShadow:member
    package: word!
    fullName: textShadow
    summary: >-
      Returns a `ShadowFormat` object that specifies the shadow formatting for
      the font.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'textShadow?: Word.Interfaces.ShadowFormatUpdateData;'
      return:
        type: <xref uid="word!Word.Interfaces.ShadowFormatUpdateData:interface" />
  - name: threeDimensionalFormat
    uid: word!Word.Interfaces.FontUpdateData#threeDimensionalFormat:member
    package: word!
    fullName: threeDimensionalFormat
    summary: >-
      Returns a `ThreeDimensionalFormat` object that contains 3-dimensional (3D)
      effect formatting properties for the font.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        threeDimensionalFormat?:
        Word.Interfaces.ThreeDimensionalFormatUpdateData;
      return:
        type: >-
          <xref
          uid="word!Word.Interfaces.ThreeDimensionalFormatUpdateData:interface"
          />
  - name: underline
    uid: word!Word.Interfaces.FontUpdateData#underline:member
    package: word!
    fullName: underline
    summary: >-
      Specifies a value that indicates the font's underline type. 'None' if the
      font isn't underlined.
    remarks: >-
      \[ [API set: WordApi
      1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        underline?: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine"
        | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" |
        "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" |
        "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" |
        "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";
      return:
        type: >-
          <xref uid="word!Word.UnderlineType:enum" /> | "Mixed" | "None" |
          "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" |
          "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" |
          "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" |
          "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave"
          | "WaveHeavy" | "WaveDouble"
  - name: underlineColor
    uid: word!Word.Interfaces.FontUpdateData#underlineColor:member
    package: word!
    fullName: underlineColor
    summary: >-
      Specifies the color of the underline for the `Font` object. You can
      provide the value in the '\#RRGGBB' format.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'underlineColor?: string;'
      return:
        type: string
