### YamlMime:TSType
name: Word.DocumentCreated
uid: 'word!Word.DocumentCreated:class'
package: word!
fullName: Word.DocumentCreated
summary: >-
  The DocumentCreated object is the top level object created by Application.CreateDocument. A DocumentCreated object is
  a special Document object.
remarks: |-
  \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

  #### Examples

  ```typescript
  // Update the text of the current document with the text from another document
  // passed in as a base64-encoded string.
  await Word.run(async (context) => {
      // Important: You'll need to implement getBase64() to get the base64-encoded 
      // string representation of a docx file.
      const externalDoc = context.application.createDocument(getBase64());
      await context.sync();

      const externalDocBody = externalDoc.body;
      externalDocBody.load("text");
      await context.sync();

      const externalDocBodyText = externalDocBody.text;
      const currentDocBody = context.document.body;
      currentDocBody.insertText(externalDocBodyText, WordInsertLocation.start);
      await context.sync();
  });
  ```
isPreview: false
isDeprecated: false
type: class
properties:
  - name: body
    uid: 'word!Word.DocumentCreated#body:member'
    package: word!
    fullName: body
    summary: >-
      Gets the body object of the document. The body is the text that excludes headers, footers, footnotes, textboxes,
      etc.
    remarks: '\[ [API set: WordApiHiddenDocument 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly body: Word.Body;'
      return:
        type: '<xref uid="word!Word.Body:class" />'
  - name: contentControls
    uid: 'word!Word.DocumentCreated#contentControls:member'
    package: word!
    fullName: contentControls
    summary: >-
      Gets the collection of content control objects in the document. This includes content controls in the body of the
      document, headers, footers, textboxes, etc.
    remarks: '\[ [API set: WordApiHiddenDocument 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type: '<xref uid="word!Word.ContentControlCollection:class" />'
  - name: context
    uid: 'word!Word.DocumentCreated#context:member'
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="word!Word.RequestContext:class" />'
  - name: customXmlParts
    uid: 'word!Word.DocumentCreated#customXmlParts:member'
    package: word!
    fullName: customXmlParts
    summary: Gets the custom XML parts in the document.
    remarks: '\[ [API set: WordApiHiddenDocument 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly customXmlParts: Word.CustomXmlPartCollection;'
      return:
        type: '<xref uid="word!Word.CustomXmlPartCollection:class" />'
  - name: properties
    uid: 'word!Word.DocumentCreated#properties:member'
    package: word!
    fullName: properties
    summary: Gets the properties of the document.
    remarks: '\[ [API set: WordApiHiddenDocument 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly properties: Word.DocumentProperties;'
      return:
        type: '<xref uid="word!Word.DocumentProperties:class" />'
  - name: saved
    uid: 'word!Word.DocumentCreated#saved:member'
    package: word!
    fullName: saved
    summary: >-
      Indicates whether the changes in the document have been saved. A value of true indicates that the document hasn't
      changed since it was saved.
    remarks: '\[ [API set: WordApiHiddenDocument 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly saved: boolean;'
      return:
        type: boolean
  - name: sections
    uid: 'word!Word.DocumentCreated#sections:member'
    package: word!
    fullName: sections
    summary: Gets the collection of section objects in the document.
    remarks: '\[ [API set: WordApiHiddenDocument 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly sections: Word.SectionCollection;'
      return:
        type: '<xref uid="word!Word.SectionCollection:class" />'
  - name: settings
    uid: 'word!Word.DocumentCreated#settings:member'
    package: word!
    fullName: settings
    summary: Gets the add-in's settings in the document.
    remarks: '\[ [API set: WordApiHiddenDocument 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly settings: Word.SettingCollection;'
      return:
        type: '<xref uid="word!Word.SettingCollection:class" />'
methods:
  - name: 'addStyle(name, type)'
    uid: 'word!Word.DocumentCreated#addStyle:member(1)'
    package: word!
    fullName: 'addStyle(name, type)'
    summary: Adds a style into the document by name and type.
    remarks: '\[ [API set: WordApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'addStyle(name: string, type: Word.StyleType): Word.Style;'
      parameters:
        - id: name
          description: Required. A string representing the style name.
          type: string
        - id: type
          description: 'Required. The style type, including character, list, paragraph, or table.'
          type: '<xref uid="word!Word.StyleType:enum" />'
      return:
        type: '<xref uid="word!Word.Style:class" />'
        description: ''
  - name: 'addStyle(name, typeString)'
    uid: 'word!Word.DocumentCreated#addStyle:member(2)'
    package: word!
    fullName: 'addStyle(name, typeString)'
    summary: Adds a style into the document by name and type.
    remarks: '\[ [API set: WordApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'addStyle(name: string, typeString: "Character" | "List" | "Paragraph" | "Table"): Word.Style;'
      parameters:
        - id: name
          description: Required. A string representing the style name.
          type: string
        - id: typeString
          description: 'Required. The style type, including character, list, paragraph, or table.'
          type: '"Character" | "List" | "Paragraph" | "Table"'
      return:
        type: '<xref uid="word!Word.Style:class" />'
        description: ''
  - name: deleteBookmark(name)
    uid: 'word!Word.DocumentCreated#deleteBookmark:member(1)'
    package: word!
    fullName: deleteBookmark(name)
    summary: 'Deletes a bookmark, if it exists, from the document.'
    remarks: '\[ [API set: WordApiHiddenDocument 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'deleteBookmark(name: string): void;'
      parameters:
        - id: name
          description: 'Required. The bookmark name, which is case-insensitive.'
          type: string
      return:
        type: void
        description: ''
  - name: getBookmarkRange(name)
    uid: 'word!Word.DocumentCreated#getBookmarkRange:member(1)'
    package: word!
    fullName: getBookmarkRange(name)
    summary: Gets a bookmark's range. Throws an `ItemNotFound` error if the bookmark does not exist.
    remarks: '\[ [API set: WordApiHiddenDocument 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getBookmarkRange(name: string): Word.Range;'
      parameters:
        - id: name
          description: 'Required. The bookmark name, which is case-insensitive.'
          type: string
      return:
        type: '<xref uid="word!Word.Range:class" />'
        description: ''
  - name: getBookmarkRangeOrNullObject(name)
    uid: 'word!Word.DocumentCreated#getBookmarkRangeOrNullObject:member(1)'
    package: word!
    fullName: getBookmarkRangeOrNullObject(name)
    summary: >-
      Gets a bookmark's range. If the bookmark does not exist, then this method will return an object with its
      `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApiHiddenDocument 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getBookmarkRangeOrNullObject(name: string): Word.Range;'
      parameters:
        - id: name
          description: 'Required. The bookmark name, which is case-insensitive.'
          type: string
      return:
        type: '<xref uid="word!Word.Range:class" />'
        description: ''
  - name: getContentControls(options)
    uid: 'word!Word.DocumentCreated#getContentControls:member(1)'
    package: word!
    fullName: getContentControls(options)
    summary: >-
      Gets the currently supported content controls in the document. **Important**: If specific types are provided in
      the options parameter, only content controls of supported types are returned. Be aware that an exception will be
      thrown on using methods of a generic [Word.ContentControl](xref:word!Word.ContentControl:class) that aren't
      relevant for the specific type. With time, additional types of content controls may be supported. Therefore, your
      add-in should request and handle specific types of content controls.
    remarks: '\[ [API set: WordApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getContentControls(options?: Word.GetContentControlsOptions): Word.ContentControlCollection;'
      parameters:
        - id: options
          description: Optional. Options that define which content controls are returned.
          type: '<xref uid="word!Word.GetContentControlsOptions:interface" />'
      return:
        type: '<xref uid="word!Word.ContentControlCollection:class" />'
        description: ''
  - name: getStyles()
    uid: 'word!Word.DocumentCreated#getStyles:member(1)'
    package: word!
    fullName: getStyles()
    summary: Gets a StyleCollection object that represents the whole style set of the document.
    remarks: '\[ [API set: WordApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getStyles(): Word.StyleCollection;'
      return:
        type: '<xref uid="word!Word.StyleCollection:class" />'
        description: ''
  - name: 'insertFileFromBase64(base64File, insertLocation, insertFileOptions)'
    uid: 'word!Word.DocumentCreated#insertFileFromBase64:member(1)'
    package: word!
    fullName: 'insertFileFromBase64(base64File, insertLocation, insertFileOptions)'
    summary: >-
      Inserts a document into the target document at a specific location with additional properties. Headers, footers,
      watermarks, and other section properties are copied by default.
    remarks: '\[ [API set: WordApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation.replace | Word.InsertLocation.start
        | Word.InsertLocation.end | "Replace" | "Start" | "End", insertFileOptions?: Word.InsertFileOptions):
        Word.SectionCollection;
      parameters:
        - id: base64File
          description: Required. The base64 encoded content of a .docx file.
          type: string
        - id: insertLocation
          description: 'Required. The value must be ''Replace'', ''Start'', or ''End''.'
          type: >-
            <xref uid="word!Word.InsertLocation.replace:member" /> | <xref uid="word!Word.InsertLocation.start:member"
            /> | <xref uid="word!Word.InsertLocation.end:member" /> | "Replace" | "Start" | "End"
        - id: insertFileOptions
          description: Optional. The additional properties that should be imported to the destination document.
          type: '<xref uid="word!Word.InsertFileOptions:interface" />'
      return:
        type: '<xref uid="word!Word.SectionCollection:class" />'
        description: ''
  - name: load(options)
    uid: 'word!Word.DocumentCreated#load:member(1)'
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Word.Interfaces.DocumentCreatedLoadOptions): Word.DocumentCreated;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="word!Word.Interfaces.DocumentCreatedLoadOptions:interface" />'
      return:
        type: '<xref uid="word!Word.DocumentCreated:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'word!Word.DocumentCreated#load:member(2)'
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.DocumentCreated;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="word!Word.DocumentCreated:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'word!Word.DocumentCreated#load:member(3)'
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.DocumentCreated;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="word!Word.DocumentCreated:class" />'
        description: ''
  - name: open()
    uid: 'word!Word.DocumentCreated#open:member(1)'
    package: word!
    fullName: open()
    summary: Opens the document.
    remarks: |-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

      #### Examples

      ```typescript
      // Create and open a new document in a new tab or window.
      await Word.run(async (context) => {
          const externalDoc = context.application.createDocument();
          await context.sync();

          externalDoc.open();
          await context.sync();
      });
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'open(): void;'
      return:
        type: void
        description: ''
  - name: 'save(saveBehavior, fileName)'
    uid: 'word!Word.DocumentCreated#save:member(1)'
    package: word!
    fullName: 'save(saveBehavior, fileName)'
    summary: Save the document.
    remarks: '\[ [API set: WordApiHiddenDocument 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'save(saveBehavior?: Word.SaveBehavior, fileName?: string): void;'
      parameters:
        - id: saveBehavior
          description: Optional. DocumentCreated only supports 'Save'.
          type: '<xref uid="word!Word.SaveBehavior:enum" />'
        - id: fileName
          description: Optional. The file name. Only takes effect for a new document.
          type: string
      return:
        type: void
        description: ''
  - name: 'save(saveBehaviorString, fileName)'
    uid: 'word!Word.DocumentCreated#save:member(2)'
    package: word!
    fullName: 'save(saveBehaviorString, fileName)'
    summary: Save the document.
    remarks: '\[ [API set: WordApiHiddenDocument 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'save(saveBehaviorString?: "Save" | "Prompt", fileName?: string): void;'
      parameters:
        - id: saveBehaviorString
          description: Optional. DocumentCreated only supports 'Save'.
          type: '"Save" | "Prompt"'
        - id: fileName
          description: Optional. The file name. Only takes effect for a new document.
          type: string
      return:
        type: void
        description: ''
  - name: 'set(properties, options)'
    uid: 'word!Word.DocumentCreated#set:member(1)'
    package: word!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.DocumentCreatedUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="word!Word.Interfaces.DocumentCreatedUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'word!Word.DocumentCreated#set:member(2)'
    package: word!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Word.DocumentCreated): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="word!Word.DocumentCreated:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'word!Word.DocumentCreated#toJSON:member(1)'
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Word.DocumentCreated object is an API object, the `toJSON` method returns a
      plain JavaScript object (typed as `Word.Interfaces.DocumentCreatedData`<!-- -->) that contains shallow copies of
      any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.DocumentCreatedData;'
      return:
        type: '<xref uid="word!Word.Interfaces.DocumentCreatedData:interface" />'
        description: ''
  - name: track()
    uid: 'word!Word.DocumentCreated#track:member(1)'
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for
      [context.trackedObjects.add(thisObject)](https://docs.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you are using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and
      get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the
      object to the tracked object collection when the object was first created. If this object is part of a collection,
      you should also track the parent collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.DocumentCreated;'
      return:
        type: '<xref uid="word!Word.DocumentCreated:class" />'
        description: ''
  - name: untrack()
    uid: 'word!Word.DocumentCreated#untrack:member(1)'
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://docs.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so please remember to free any objects you add,
      once you're done using them. You will need to call `context.sync()` before the memory release takes effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.DocumentCreated;'
      return:
        type: '<xref uid="word!Word.DocumentCreated:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
