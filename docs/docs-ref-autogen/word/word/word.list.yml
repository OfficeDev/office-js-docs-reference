### YamlMime:UniversalReference
items:
  - uid: 'word!Word.List:class'
    summary: |-
      Contains a collection of [Word.Paragraph](xref:word!Word.Paragraph:class) objects.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: Word.List
    fullName: Word.List
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.List#context:member'
      - 'word!Word.List#getLevelFont:member(1)'
      - 'word!Word.List#getLevelParagraphs:member(1)'
      - 'word!Word.List#getLevelPicture:member(1)'
      - 'word!Word.List#getLevelString:member(1)'
      - 'word!Word.List#id:member'
      - 'word!Word.List#insertParagraph:member(1)'
      - 'word!Word.List#insertParagraph:member(2)'
      - 'word!Word.List#levelExistences:member'
      - 'word!Word.List#levelTypes:member'
      - 'word!Word.List#load:member(1)'
      - 'word!Word.List#load:member(2)'
      - 'word!Word.List#load:member(3)'
      - 'word!Word.List#paragraphs:member'
      - 'word!Word.List#resetLevelFont:member(1)'
      - 'word!Word.List#setLevelAlignment:member(1)'
      - 'word!Word.List#setLevelAlignment:member(2)'
      - 'word!Word.List#setLevelBullet:member(1)'
      - 'word!Word.List#setLevelBullet:member(2)'
      - 'word!Word.List#setLevelIndents:member(1)'
      - 'word!Word.List#setLevelNumbering:member(1)'
      - 'word!Word.List#setLevelNumbering:member(2)'
      - 'word!Word.List#setLevelPicture:member(1)'
      - 'word!Word.List#setLevelStartingNumber:member(1)'
      - 'word!Word.List#toJSON:member(1)'
      - 'word!Word.List#track:member(1)'
      - 'word!Word.List#untrack:member(1)'
  - uid: 'word!Word.List#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.List#getLevelFont:member(1)'
    summary: >-
      Gets the font of the bullet, number, or picture at the specified level in the list.


      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    isPreview: true
    name: getLevelFont(level)
    fullName: getLevelFont(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelFont(level: number): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
  - uid: 'word!Word.List#getLevelParagraphs:member(1)'
    summary: |-
      Gets the paragraphs that occur at the specified level in the list.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getLevelParagraphs(level)
    fullName: getLevelParagraphs(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelParagraphs(level: number): Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
  - uid: 'word!Word.List#getLevelPicture:member(1)'
    summary: >-
      Gets the base64 encoded string representation of the picture at the specified level in the list.


      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    isPreview: true
    name: getLevelPicture(level)
    fullName: getLevelPicture(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelPicture(level: number): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.List#getLevelPicture~0:complex'
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
  - uid: 'word!Word.List#getLevelString:member(1)'
    summary: |-
      Gets the bullet, number, or picture at the specified level as a string.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getLevelString(level)
    fullName: getLevelString(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelString(level: number): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.List#getLevelString~0:complex'
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
  - uid: 'word!Word.List#id:member'
    summary: |-
      Gets the list's id.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: 'word!Word.List#insertParagraph:member(1)'
    summary: |-
      Inserts a paragraph at the specified location.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: Required. The paragraph text to be inserted.
          type:
            - string
        - id: insertLocation
          description: 'Required. The value can be ''Start'', ''End'', ''Before'', or ''After''.'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.List#insertParagraph:member(2)'
    summary: |-
      Inserts a paragraph at the specified location.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"):
        Word.Paragraph;
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: Required. The paragraph text to be inserted.
          type:
            - string
        - id: insertLocationString
          description: 'Required. The value can be ''Start'', ''End'', ''Before'', or ''After''.'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.List#levelExistences:member'
    summary: >-
      Checks whether each of the 9 levels exists in the list. A true value indicates the level exists, which means there
      is at least one list item at that level. Read-only.


      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: levelExistences
    fullName: levelExistences
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly levelExistences: boolean[];'
      return:
        type:
          - 'boolean[]'
  - uid: 'word!Word.List#levelTypes:member'
    summary: |-
      Gets all 9 level types in the list. Each type can be 'Bullet', 'Number', or 'Picture'. Read-only.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: levelTypes
    fullName: levelTypes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly levelTypes: Word.ListLevelType[];'
      return:
        type:
          - 'word!Word.List#levelTypes~0:complex'
  - uid: 'word!Word.List#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Word.Interfaces.ListLoadOptions): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type:
            - 'word!Word.Interfaces.ListLoadOptions:interface'
  - uid: 'word!Word.List#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'word!Word.List#load:member(3)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.List;
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'word!Word.List#paragraphs:member'
    summary: |-
      Gets paragraphs in the list. Read-only.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
  - uid: 'word!Word.List#resetLevelFont:member(1)'
    summary: >-
      Resets the font of the bullet, number, or picture at the specified level in the list.


      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    isPreview: true
    name: 'resetLevelFont(level, resetFontName)'
    fullName: 'resetLevelFont(level, resetFontName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'resetLevelFont(level: number, resetFontName?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: resetFontName
          description: >-
            Optional. Indicates whether to reset the font name. Default is false that indicates the font name is kept
            unchanged.
          type:
            - boolean
  - uid: 'word!Word.List#setLevelAlignment:member(1)'
    summary: |-
      Sets the alignment of the bullet, number, or picture at the specified level in the list.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'setLevelAlignment(level, alignment)'
    fullName: 'setLevelAlignment(level, alignment)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelAlignment(level: number, alignment: Word.Alignment): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: alignment
          description: 'Required. The level alignment that can be ''Left'', ''Centered'', or ''Right''.'
          type:
            - 'word!Word.Alignment:enum'
  - uid: 'word!Word.List#setLevelAlignment:member(2)'
    summary: |-
      Sets the alignment of the bullet, number, or picture at the specified level in the list.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'setLevelAlignment(level, alignmentString)'
    fullName: 'setLevelAlignment(level, alignmentString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        setLevelAlignment(level: number, alignmentString: "Mixed" | "Unknown" | "Left" | "Centered" | "Right" |
        "Justified"): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: alignmentString
          description: 'Required. The level alignment that can be ''Left'', ''Centered'', or ''Right''.'
          type:
            - '"Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - uid: 'word!Word.List#setLevelBullet:member(1)'
    summary: |-
      Sets the bullet format at the specified level in the list. If the bullet is 'Custom', the charCode is required.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'setLevelBullet(level, listBullet, charCode, fontName)'
    fullName: 'setLevelBullet(level, listBullet, charCode, fontName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelBullet(level: number, listBullet: Word.ListBullet, charCode?: number, fontName?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: listBullet
          description: Required. The bullet.
          type:
            - 'word!Word.ListBullet:enum'
        - id: charCode
          description: Optional. The bullet character's code value. Used only if the bullet is 'Custom'.
          type:
            - number
        - id: fontName
          description: Optional. The bullet's font name. Used only if the bullet is 'Custom'.
          type:
            - string
  - uid: 'word!Word.List#setLevelBullet:member(2)'
    summary: |-
      Sets the bullet format at the specified level in the list. If the bullet is 'Custom', the charCode is required.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'setLevelBullet(level, listBulletString, charCode, fontName)'
    fullName: 'setLevelBullet(level, listBulletString, charCode, fontName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        setLevelBullet(level: number, listBulletString: "Custom" | "Solid" | "Hollow" | "Square" | "Diamonds" | "Arrow"
        | "Checkmark", charCode?: number, fontName?: string): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: listBulletString
          description: Required. The bullet.
          type:
            - '"Custom" | "Solid" | "Hollow" | "Square" | "Diamonds" | "Arrow" | "Checkmark"'
        - id: charCode
          description: Optional. The bullet character's code value. Used only if the bullet is 'Custom'.
          type:
            - number
        - id: fontName
          description: Optional. The bullet's font name. Used only if the bullet is 'Custom'.
          type:
            - string
  - uid: 'word!Word.List#setLevelIndents:member(1)'
    summary: |-
      Sets the two indents of the specified level in the list.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    fullName: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelIndents(level: number, textIndent: number, bulletNumberPictureIndent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: textIndent
          description: Required. The text indent in points. It is the same as paragraph left indent.
          type:
            - number
        - id: bulletNumberPictureIndent
          description: >-
            Required. The relative indent, in points, of the bullet, number, or picture. It is the same as paragraph
            first line indent.
          type:
            - number
  - uid: 'word!Word.List#setLevelNumbering:member(1)'
    summary: |-
      Sets the numbering format at the specified level in the list.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'setLevelNumbering(level, listNumbering, formatString)'
    fullName: 'setLevelNumbering(level, listNumbering, formatString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        setLevelNumbering(level: number, listNumbering: Word.ListNumbering, formatString?: Array<string | number>):
        void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: listNumbering
          description: Required. The ordinal format.
          type:
            - 'word!Word.ListNumbering:enum'
        - id: formatString
          description: >-
            Optional. The numbering string format defined as an array of strings and/or integers. Each integer is a
            level of number type that is higher than or equal to this level. For example, an array of \["(", level - 1,
            ".", level, ")"\] can define the format of "(2.c)", where 2 is the parent's item number and c is this
            level's item number.
          type:
            - 'word!Word.List#setLevelNumbering~0:complex'
  - uid: 'word!Word.List#setLevelNumbering:member(2)'
    summary: |-
      Sets the numbering format at the specified level in the list.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'setLevelNumbering(level, listNumberingString, formatString)'
    fullName: 'setLevelNumbering(level, listNumberingString, formatString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        setLevelNumbering(level: number, listNumberingString: "None" | "Arabic" | "UpperRoman" | "LowerRoman" |
        "UpperLetter" | "LowerLetter", formatString?: Array<string | number>): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: listNumberingString
          description: Required. The ordinal format.
          type:
            - '"None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter"'
        - id: formatString
          description: >-
            Optional. The numbering string format defined as an array of strings and/or integers. Each integer is a
            level of number type that is higher than or equal to this level. For example, an array of \["(", level - 1,
            ".", level, ")"\] can define the format of "(2.c)", where 2 is the parent's item number and c is this
            level's item number.
          type:
            - 'word!Word.List#setLevelNumbering~1:complex'
  - uid: 'word!Word.List#setLevelPicture:member(1)'
    summary: >-
      Sets the picture at the specified level in the list.


      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    isPreview: true
    name: 'setLevelPicture(level, base64EncodedImage)'
    fullName: 'setLevelPicture(level, base64EncodedImage)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelPicture(level: number, base64EncodedImage?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: base64EncodedImage
          description: 'Optional. The base64 encoded image to be set. If not given, the default picture is set.'
          type:
            - string
  - uid: 'word!Word.List#setLevelStartingNumber:member(1)'
    summary: |-
      Sets the starting number at the specified level in the list. Default value is 1.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: 'setLevelStartingNumber(level, startingNumber)'
    fullName: 'setLevelStartingNumber(level, startingNumber)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelStartingNumber(level: number, startingNumber: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Required. The level in the list.
          type:
            - number
        - id: startingNumber
          description: Required. The number to start with.
          type:
            - number
  - uid: 'word!Word.List#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Word.List object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Word.Interfaces.ListData`<!-- -->) that contains shallow copies of any loaded child
      properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ListData;'
      return:
        type:
          - 'word!Word.Interfaces.ListData:interface'
        description: ''
  - uid: 'word!Word.List#track:member(1)'
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for `context.trackedObjects.add(thisObject)`<!-- -->. If you are using this object across `.sync` calls and
      outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property
      or invoking a method on the object, you needed to have added the object to the tracked object collection when the
      object was first created.
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
  - uid: 'word!Word.List#untrack:member(1)'
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      `context.trackedObjects.remove(thisObject)`<!-- -->. Having many tracked objects slows down the host application,
      so please remember to free any objects you add, once you're done using them. You will need to call
      `context.sync()` before the memory release takes effect.
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.List#getLevelPicture~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.List#getLevelString~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.List#levelTypes~0:complex'
    name: 'Word.ListLevelType[]'
    fullName: 'Word.ListLevelType[]'
    spec.typeScript:
      - uid: 'word!Word.ListLevelType:enum'
        name: Word.ListLevelType
        fullName: Word.ListLevelType
      - name: '[]'
        fullName: '[]'
  - uid: 'word!Word.List:class'
    name: Word.List
  - uid: 'word!Word.Interfaces.ListLoadOptions:interface'
    name: Word.Interfaces.ListLoadOptions
  - uid: 'word!Word.Alignment:enum'
    name: Word.Alignment
  - uid: 'word!Word.ListBullet:enum'
    name: Word.ListBullet
  - uid: 'word!Word.ListNumbering:enum'
    name: Word.ListNumbering
  - uid: 'word!Word.List#setLevelNumbering~0:complex'
    name: Array<string | number>
    fullName: Array<string | number>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <string | number>
        fullName: <string | number>
  - uid: 'word!Word.List#setLevelNumbering~1:complex'
    name: Array<string | number>
    fullName: Array<string | number>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <string | number>
        fullName: <string | number>
  - uid: 'word!Word.Interfaces.ListData:interface'
    name: Word.Interfaces.ListData
