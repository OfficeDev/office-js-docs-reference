### YamlMime:TSType
name: Word.List
uid: 'word!Word.List:class'
package: word!
fullName: Word.List
summary: >-
  Contains a collection of [Word.Paragraph](xref:word!Word.Paragraph:class)
  objects.


  \[ [API set: WordApi
  1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'word!Word.List#context:member'
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="word!Word.RequestContext:class" />'
  - name: id
    uid: 'word!Word.List#id:member'
    package: word!
    fullName: id
    summary: >-
      Gets the list's id.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: number;'
      return:
        type: number
  - name: levelExistences
    uid: 'word!Word.List#levelExistences:member'
    package: word!
    fullName: levelExistences
    summary: >-
      Checks whether each of the 9 levels exists in the list. A true value
      indicates the level exists, which means there is at least one list item at
      that level. Read-only.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly levelExistences: boolean[];'
      return:
        type: 'boolean[]'
  - name: levelTypes
    uid: 'word!Word.List#levelTypes:member'
    package: word!
    fullName: levelTypes
    summary: >-
      Gets all 9 level types in the list. Each type can be 'Bullet', 'Number',
      or 'Picture'. Read-only.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly levelTypes: Word.ListLevelType[];'
      return:
        type: '<xref uid="word!Word.ListLevelType:enum" />[]'
  - name: paragraphs
    uid: 'word!Word.List#paragraphs:member'
    package: word!
    fullName: paragraphs
    summary: >-
      Gets paragraphs in the list. Read-only.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type: '<xref uid="word!Word.ParagraphCollection:class" />'
methods:
  - name: getLevelFont(level)
    uid: 'word!Word.List#getLevelFont:member(1)'
    package: word!
    fullName: getLevelFont(level)
    summary: >-
      Gets the font of the bullet, number, or picture at the specified level in
      the list.


      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getLevelFont(level: number): Word.Font;'
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
      return:
        type: '<xref uid="word!Word.Font:class" />'
        description: ''
  - name: getLevelParagraphs(level)
    uid: 'word!Word.List#getLevelParagraphs:member(1)'
    package: word!
    fullName: getLevelParagraphs(level)
    summary: >-
      Gets the paragraphs that occur at the specified level in the list.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getLevelParagraphs(level: number): Word.ParagraphCollection;'
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
      return:
        type: '<xref uid="word!Word.ParagraphCollection:class" />'
        description: ''
  - name: getLevelPicture(level)
    uid: 'word!Word.List#getLevelPicture:member(1)'
    package: word!
    fullName: getLevelPicture(level)
    summary: >-
      Gets the base64 encoded string representation of the picture at the
      specified level in the list.


      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getLevelPicture(level: number): OfficeExtension.ClientResult<string>;'
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;'
        description: ''
  - name: getLevelString(level)
    uid: 'word!Word.List#getLevelString:member(1)'
    package: word!
    fullName: getLevelString(level)
    summary: >-
      Gets the bullet, number, or picture at the specified level as a string.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getLevelString(level: number): OfficeExtension.ClientResult<string>;'
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;'
        description: ''
  - name: 'insertParagraph(paragraphText, insertLocation)'
    uid: 'word!Word.List#insertParagraph:member(1)'
    package: word!
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    summary: >-
      Inserts a paragraph at the specified location.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertParagraph(paragraphText: string, insertLocation:
        Word.InsertLocation): Word.Paragraph;
      parameters:
        - id: paragraphText
          description: Required. The paragraph text to be inserted.
          type: string
        - id: insertLocation
          description: 'Required. The value can be ''Start'', ''End'', ''Before'', or ''After''.'
          type: '<xref uid="word!Word.InsertLocation:enum" />'
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: 'insertParagraph(paragraphText, insertLocationString)'
    uid: 'word!Word.List#insertParagraph:member(2)'
    package: word!
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    summary: >-
      Inserts a paragraph at the specified location.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertParagraph(paragraphText: string, insertLocationString: "Before" |
        "After" | "Start" | "End" | "Replace"): Word.Paragraph;
      parameters:
        - id: paragraphText
          description: Required. The paragraph text to be inserted.
          type: string
        - id: insertLocationString
          description: 'Required. The value can be ''Start'', ''End'', ''Before'', or ''After''.'
          type: '"Before" | "After" | "Start" | "End" | "Replace"'
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: load(options)
    uid: 'word!Word.List#load:member(1)'
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Word.Interfaces.ListLoadOptions): Word.List;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="word!Word.Interfaces.ListLoadOptions:interface" />'
      return:
        type: '<xref uid="word!Word.List:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'word!Word.List#load:member(2)'
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.List;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="word!Word.List:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'word!Word.List#load:member(3)'
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.List;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="word!Word.List:class" />'
        description: ''
  - name: 'resetLevelFont(level, resetFontName)'
    uid: 'word!Word.List#resetLevelFont:member(1)'
    package: word!
    fullName: 'resetLevelFont(level, resetFontName)'
    summary: >-
      Resets the font of the bullet, number, or picture at the specified level
      in the list.


      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'resetLevelFont(level: number, resetFontName?: boolean): void;'
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
        - id: resetFontName
          description: >-
            Optional. Indicates whether to reset the font name. Default is false
            that indicates the font name is kept unchanged.
          type: boolean
      return:
        type: void
        description: ''
  - name: 'setLevelAlignment(level, alignment)'
    uid: 'word!Word.List#setLevelAlignment:member(1)'
    package: word!
    fullName: 'setLevelAlignment(level, alignment)'
    summary: >-
      Sets the alignment of the bullet, number, or picture at the specified
      level in the list.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setLevelAlignment(level: number, alignment: Word.Alignment): void;'
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
        - id: alignment
          description: >-
            Required. The level alignment that can be 'Left', 'Centered', or
            'Right'.
          type: '<xref uid="word!Word.Alignment:enum" />'
      return:
        type: void
        description: ''
  - name: 'setLevelAlignment(level, alignmentString)'
    uid: 'word!Word.List#setLevelAlignment:member(2)'
    package: word!
    fullName: 'setLevelAlignment(level, alignmentString)'
    summary: >-
      Sets the alignment of the bullet, number, or picture at the specified
      level in the list.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        setLevelAlignment(level: number, alignmentString: "Mixed" | "Unknown" |
        "Left" | "Centered" | "Right" | "Justified"): void;
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
        - id: alignmentString
          description: >-
            Required. The level alignment that can be 'Left', 'Centered', or
            'Right'.
          type: '"Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
      return:
        type: void
        description: ''
  - name: 'setLevelBullet(level, listBullet, charCode, fontName)'
    uid: 'word!Word.List#setLevelBullet:member(1)'
    package: word!
    fullName: 'setLevelBullet(level, listBullet, charCode, fontName)'
    summary: >-
      Sets the bullet format at the specified level in the list. If the bullet
      is 'Custom', the charCode is required.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        setLevelBullet(level: number, listBullet: Word.ListBullet, charCode?:
        number, fontName?: string): void;
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
        - id: listBullet
          description: Required. The bullet.
          type: '<xref uid="word!Word.ListBullet:enum" />'
        - id: charCode
          description: >-
            Optional. The bullet character's code value. Used only if the bullet
            is 'Custom'.
          type: number
        - id: fontName
          description: >-
            Optional. The bullet's font name. Used only if the bullet is
            'Custom'.
          type: string
      return:
        type: void
        description: ''
  - name: 'setLevelBullet(level, listBulletString, charCode, fontName)'
    uid: 'word!Word.List#setLevelBullet:member(2)'
    package: word!
    fullName: 'setLevelBullet(level, listBulletString, charCode, fontName)'
    summary: >-
      Sets the bullet format at the specified level in the list. If the bullet
      is 'Custom', the charCode is required.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        setLevelBullet(level: number, listBulletString: "Custom" | "Solid" |
        "Hollow" | "Square" | "Diamonds" | "Arrow" | "Checkmark", charCode?:
        number, fontName?: string): void;
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
        - id: listBulletString
          description: Required. The bullet.
          type: >-
            "Custom" | "Solid" | "Hollow" | "Square" | "Diamonds" | "Arrow" |
            "Checkmark"
        - id: charCode
          description: >-
            Optional. The bullet character's code value. Used only if the bullet
            is 'Custom'.
          type: number
        - id: fontName
          description: >-
            Optional. The bullet's font name. Used only if the bullet is
            'Custom'.
          type: string
      return:
        type: void
        description: ''
  - name: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    uid: 'word!Word.List#setLevelIndents:member(1)'
    package: word!
    fullName: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    summary: >-
      Sets the two indents of the specified level in the list.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        setLevelIndents(level: number, textIndent: number,
        bulletNumberPictureIndent: number): void;
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
        - id: textIndent
          description: >-
            Required. The text indent in points. It is the same as paragraph
            left indent.
          type: number
        - id: bulletNumberPictureIndent
          description: >-
            Required. The relative indent, in points, of the bullet, number, or
            picture. It is the same as paragraph first line indent.
          type: number
      return:
        type: void
        description: ''
  - name: 'setLevelNumbering(level, listNumbering, formatString)'
    uid: 'word!Word.List#setLevelNumbering:member(1)'
    package: word!
    fullName: 'setLevelNumbering(level, listNumbering, formatString)'
    summary: >-
      Sets the numbering format at the specified level in the list.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        setLevelNumbering(level: number, listNumbering: Word.ListNumbering,
        formatString?: Array<string | number>): void;
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
        - id: listNumbering
          description: Required. The ordinal format.
          type: '<xref uid="word!Word.ListNumbering:enum" />'
        - id: formatString
          description: >-
            Optional. The numbering string format defined as an array of strings
            and/or integers. Each integer is a level of number type that is
            higher than or equal to this level. For example, an array of \["(",
            level - 1, ".", level, ")"\] can define the format of "(2.c)", where
            2 is the parent's item number and c is this level's item number.
          type: Array&lt;string | number&gt;
      return:
        type: void
        description: ''
  - name: 'setLevelNumbering(level, listNumberingString, formatString)'
    uid: 'word!Word.List#setLevelNumbering:member(2)'
    package: word!
    fullName: 'setLevelNumbering(level, listNumberingString, formatString)'
    summary: >-
      Sets the numbering format at the specified level in the list.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        setLevelNumbering(level: number, listNumberingString: "None" | "Arabic"
        | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter",
        formatString?: Array<string | number>): void;
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
        - id: listNumberingString
          description: Required. The ordinal format.
          type: >-
            "None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" |
            "LowerLetter"
        - id: formatString
          description: >-
            Optional. The numbering string format defined as an array of strings
            and/or integers. Each integer is a level of number type that is
            higher than or equal to this level. For example, an array of \["(",
            level - 1, ".", level, ")"\] can define the format of "(2.c)", where
            2 is the parent's item number and c is this level's item number.
          type: Array&lt;string | number&gt;
      return:
        type: void
        description: ''
  - name: 'setLevelPicture(level, base64EncodedImage)'
    uid: 'word!Word.List#setLevelPicture:member(1)'
    package: word!
    fullName: 'setLevelPicture(level, base64EncodedImage)'
    summary: >-
      Sets the picture at the specified level in the list.


      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'setLevelPicture(level: number, base64EncodedImage?: string): void;'
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
        - id: base64EncodedImage
          description: >-
            Optional. The base64 encoded image to be set. If not given, the
            default picture is set.
          type: string
      return:
        type: void
        description: ''
  - name: 'setLevelStartingNumber(level, startingNumber)'
    uid: 'word!Word.List#setLevelStartingNumber:member(1)'
    package: word!
    fullName: 'setLevelStartingNumber(level, startingNumber)'
    summary: >-
      Sets the starting number at the specified level in the list. Default value
      is 1.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setLevelStartingNumber(level: number, startingNumber: number): void;'
      parameters:
        - id: level
          description: Required. The level in the list.
          type: number
        - id: startingNumber
          description: Required. The number to start with.
          type: number
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'word!Word.List#toJSON:member(1)'
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Word.List object is an
      API object, the `toJSON` method returns a plain JavaScript object (typed
      as `Word.Interfaces.ListData`<!-- -->) that contains shallow copies of any
      loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.ListData;'
      return:
        type: '<xref uid="word!Word.Interfaces.ListData:interface" />'
        description: ''
  - name: track()
    uid: 'word!Word.List#track:member(1)'
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in
      the document. This call is a shorthand for
      `context.trackedObjects.add(thisObject)`<!-- -->. If you are using this
      object across `.sync` calls and outside the sequential execution of a
      ".run" batch, and get an "InvalidObjectPath" error when setting a property
      or invoking a method on the object, you needed to have added the object to
      the tracked object collection when the object was first created.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.List;'
      return:
        type: '<xref uid="word!Word.List:class" />'
        description: ''
  - name: untrack()
    uid: 'word!Word.List#untrack:member(1)'
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been
      tracked. This call is shorthand for
      `context.trackedObjects.remove(thisObject)`<!-- -->. Having many tracked
      objects slows down the host application, so please remember to free any
      objects you add, once you're done using them. You will need to call
      `context.sync()` before the memory release takes effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.List;'
      return:
        type: '<xref uid="word!Word.List:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
