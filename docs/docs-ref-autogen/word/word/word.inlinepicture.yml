### YamlMime:TSType
name: Word.InlinePicture
uid: 'word!Word.InlinePicture:class'
package: word!
fullName: Word.InlinePicture
summary: Represents an inline picture.
remarks: >-
  \[ [API set: WordApi 1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


  #### Examples


  ```typescript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/15-images/insert-and-get-pictures.yaml

  // Inserts an image anchored to the last paragraph.

  await Word.run(async (context) => {
    context.document.body.paragraphs
      .getLast()
      .insertParagraph("", "After")
      .insertInlinePictureFromBase64(base64Image, "End");

    await context.sync();
  });

  ```
isPreview: false
isDeprecated: false
type: class
properties:
  - name: altTextDescription
    uid: 'word!Word.InlinePicture#altTextDescription:member'
    package: word!
    fullName: altTextDescription
    summary: Gets or sets a string that represents the alternative text associated with the inline image.
    remarks: '\[ [API set: WordApi 1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'altTextDescription: string;'
      return:
        type: string
  - name: altTextTitle
    uid: 'word!Word.InlinePicture#altTextTitle:member'
    package: word!
    fullName: altTextTitle
    summary: Gets or sets a string that contains the title for the inline image.
    remarks: '\[ [API set: WordApi 1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'altTextTitle: string;'
      return:
        type: string
  - name: context
    uid: 'word!Word.InlinePicture#context:member'
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="word!Word.RequestContext:class" />'
  - name: height
    uid: 'word!Word.InlinePicture#height:member'
    package: word!
    fullName: height
    summary: Gets or sets a number that describes the height of the inline image.
    remarks: '\[ [API set: WordApi 1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'height: number;'
      return:
        type: number
  - name: hyperlink
    uid: 'word!Word.InlinePicture#hyperlink:member'
    package: word!
    fullName: hyperlink
    summary: 'Gets or sets a hyperlink on the image. Use a ''\#'' to separate the address part from the optional location part.'
    remarks: '\[ [API set: WordApi 1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hyperlink: string;'
      return:
        type: string
  - name: imageFormat
    uid: 'word!Word.InlinePicture#imageFormat:member'
    package: word!
    fullName: imageFormat
    summary: Gets the format of the inline image.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/15-images/insert-and-get-pictures.yaml

      // Get the first image in the document.

      await Word.run(async (context) => {
        const firstPicture = context.document.body.inlinePictures.getFirst();
        firstPicture.load("width, height");

        await context.sync();
        console.log(`Image dimensions: ${firstPicture.width} x ${firstPicture.height}`);
        // Get the image encoded as Base64.
        const base64 = firstPicture.getBase64ImageSrc();

        await context.sync();
        console.log(base64.value);
      });

      ```
    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        readonly imageFormat: Word.ImageFormat | "Unsupported" | "Undefined" | "Bmp" | "Jpeg" | "Gif" | "Tiff" | "Png" |
        "Icon" | "Exif" | "Wmf" | "Emf" | "Pict" | "Pdf" | "Svg";
      return:
        type: >-
          <xref uid="word!Word.ImageFormat:enum" /> | "Unsupported" | "Undefined" | "Bmp" | "Jpeg" | "Gif" | "Tiff" |
          "Png" | "Icon" | "Exif" | "Wmf" | "Emf" | "Pict" | "Pdf" | "Svg"
  - name: lockAspectRatio
    uid: 'word!Word.InlinePicture#lockAspectRatio:member'
    package: word!
    fullName: lockAspectRatio
    summary: Gets or sets a value that indicates whether the inline image retains its original proportions when you resize it.
    remarks: '\[ [API set: WordApi 1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'lockAspectRatio: boolean;'
      return:
        type: boolean
  - name: paragraph
    uid: 'word!Word.InlinePicture#paragraph:member'
    package: word!
    fullName: paragraph
    summary: Gets the parent paragraph that contains the inline image.
    remarks: '\[ [API set: WordApi 1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly paragraph: Word.Paragraph;'
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
  - name: parentContentControl
    uid: 'word!Word.InlinePicture#parentContentControl:member'
    package: word!
    fullName: parentContentControl
    summary: >-
      Gets the content control that contains the inline image. Throws an `ItemNotFound` error if there isn't a parent
      content control.
    remarks: '\[ [API set: WordApi 1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type: '<xref uid="word!Word.ContentControl:class" />'
  - name: parentContentControlOrNullObject
    uid: 'word!Word.InlinePicture#parentContentControlOrNullObject:member'
    package: word!
    fullName: parentContentControlOrNullObject
    summary: >-
      Gets the content control that contains the inline image. If there isn't a parent content control, then this method
      will return an object with its `isNullObject` property set to `true`<!-- -->. For further information, see
      [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type: '<xref uid="word!Word.ContentControl:class" />'
  - name: parentTable
    uid: 'word!Word.InlinePicture#parentTable:member'
    package: word!
    fullName: parentTable
    summary: Gets the table that contains the inline image. Throws an `ItemNotFound` error if it is not contained in a table.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentTable: Word.Table;'
      return:
        type: '<xref uid="word!Word.Table:class" />'
  - name: parentTableCell
    uid: 'word!Word.InlinePicture#parentTableCell:member'
    package: word!
    fullName: parentTableCell
    summary: >-
      Gets the table cell that contains the inline image. Throws an `ItemNotFound` error if it is not contained in a
      table cell.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentTableCell: Word.TableCell;'
      return:
        type: '<xref uid="word!Word.TableCell:class" />'
  - name: parentTableCellOrNullObject
    uid: 'word!Word.InlinePicture#parentTableCellOrNullObject:member'
    package: word!
    fullName: parentTableCellOrNullObject
    summary: >-
      Gets the table cell that contains the inline image. If it is not contained in a table cell, then this method will
      return an object with its `isNullObject` property set to `true`<!-- -->. For further information, see
      [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
      return:
        type: '<xref uid="word!Word.TableCell:class" />'
  - name: parentTableOrNullObject
    uid: 'word!Word.InlinePicture#parentTableOrNullObject:member'
    package: word!
    fullName: parentTableOrNullObject
    summary: >-
      Gets the table that contains the inline image. If it is not contained in a table, then this method will return an
      object with its `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject methods
      and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentTableOrNullObject: Word.Table;'
      return:
        type: '<xref uid="word!Word.Table:class" />'
  - name: width
    uid: 'word!Word.InlinePicture#width:member'
    package: word!
    fullName: width
    summary: Gets or sets a number that describes the width of the inline image.
    remarks: '\[ [API set: WordApi 1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'width: number;'
      return:
        type: number
methods:
  - name: delete()
    uid: 'word!Word.InlinePicture#delete:member(1)'
    package: word!
    fullName: delete()
    summary: Deletes the inline picture from the document.
    remarks: '\[ [API set: WordApi 1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: ''
  - name: getBase64ImageSrc()
    uid: 'word!Word.InlinePicture#getBase64ImageSrc:member(1)'
    package: word!
    fullName: getBase64ImageSrc()
    summary: Gets the base64 encoded string representation of the inline image.
    remarks: >-
      \[ [API set: WordApi 1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/15-images/insert-and-get-pictures.yaml

      // Get the first image in the document.

      await Word.run(async (context) => {
        const firstPicture = context.document.body.inlinePictures.getFirst();
        firstPicture.load("width, height");

        await context.sync();
        console.log(`Image dimensions: ${firstPicture.width} x ${firstPicture.height}`);
        // Get the image encoded as Base64.
        const base64 = firstPicture.getBase64ImageSrc();

        await context.sync();
        console.log(base64.value);
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getBase64ImageSrc(): OfficeExtension.ClientResult<string>;'
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;'
        description: ''
  - name: getNext()
    uid: 'word!Word.InlinePicture#getNext:member(1)'
    package: word!
    fullName: getNext()
    summary: Gets the next inline image. Throws an `ItemNotFound` error if this inline image is the last one.
    remarks: |-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

      #### Examples

      ```typescript
      // To use this snippet, add an inline picture to the document and assign it an alt text title.
      // Run a batch operation against the Word object model.
      await Word.run(async (context) => {
          
          // Create a proxy object for the first inline picture.
          const firstPicture = context.document.body.inlinePictures.getFirstOrNullObject();

          // Queue a command to load the alternative text title of the picture.
          firstPicture.load('altTextTitle');

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          await context.sync();
          if (firstPicture.isNullObject) {
              console.log('There are no inline pictures in this document.')
          } else {
              console.log(firstPicture.altTextTitle);
          }
      }); 
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getNext(): Word.InlinePicture;'
      return:
        type: '<xref uid="word!Word.InlinePicture:class" />'
        description: ''
  - name: getNextOrNullObject()
    uid: 'word!Word.InlinePicture#getNextOrNullObject:member(1)'
    package: word!
    fullName: getNextOrNullObject()
    summary: >-
      Gets the next inline image. If this inline image is the last one, then this method will return an object with its
      `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: |-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

      #### Examples

      ```typescript
      // To use this snippet, add an inline picture to the document and assign it an alt text title.
      // Run a batch operation against the Word object model.
      await Word.run(async (context) => {
          
          // Create a proxy object for the first inline picture.
          const firstPicture = context.document.body.inlinePictures.getFirstOrNullObject();

          // Queue a command to load the alternative text title of the picture.
          firstPicture.load('altTextTitle');

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          await context.sync();
          if (firstPicture.isNullObject) {
              console.log('There are no inline pictures in this document.')
          } else {
              console.log(firstPicture.altTextTitle);
          }
      }); 
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getNextOrNullObject(): Word.InlinePicture;'
      return:
        type: '<xref uid="word!Word.InlinePicture:class" />'
        description: ''
  - name: getRange(rangeLocation)
    uid: 'word!Word.InlinePicture#getRange:member(1)'
    package: word!
    fullName: getRange(rangeLocation)
    summary: 'Gets the picture, or the starting or ending point of the picture, as a range.'
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getRange(rangeLocation?: Word.RangeLocation.whole | Word.RangeLocation.start | Word.RangeLocation.end | "Whole"
        | "Start" | "End"): Word.Range;
      parameters:
        - id: rangeLocation
          description: 'Optional. The range location must be ''Whole'', ''Start'', or ''End''.'
          type: >-
            <xref uid="word!Word.RangeLocation.whole:member" /> | <xref uid="word!Word.RangeLocation.start:member" /> |
            <xref uid="word!Word.RangeLocation.end:member" /> | "Whole" | "Start" | "End"
      return:
        type: '<xref uid="word!Word.Range:class" />'
        description: ''
  - name: 'insertBreak(breakType, insertLocation)'
    uid: 'word!Word.InlinePicture#insertBreak:member(1)'
    package: word!
    fullName: 'insertBreak(breakType, insertLocation)'
    summary: Inserts a break at the specified location in the main document.
    remarks: '\[ [API set: WordApi 1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertBreak(breakType: Word.BreakType | "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" |
        "SectionOdd" | "Line", insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" |
        "After"): void;
      parameters:
        - id: breakType
          description: Required. The break type to add.
          type: >-
            <xref uid="word!Word.BreakType:enum" /> | "Page" | "Next" | "SectionNext" | "SectionContinuous" |
            "SectionEven" | "SectionOdd" | "Line"
        - id: insertLocation
          description: Required. The value must be 'Before' or 'After'.
          type: >-
            <xref uid="word!Word.InsertLocation.before:member" /> | <xref uid="word!Word.InsertLocation.after:member" />
            | "Before" | "After"
      return:
        type: void
        description: ''
  - name: insertContentControl()
    uid: 'word!Word.InlinePicture#insertContentControl:member(1)'
    package: word!
    fullName: insertContentControl()
    summary: Wraps the inline picture with a rich text content control.
    remarks: '\[ [API set: WordApi 1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type: '<xref uid="word!Word.ContentControl:class" />'
        description: ''
  - name: 'insertFileFromBase64(base64File, insertLocation)'
    uid: 'word!Word.InlinePicture#insertFileFromBase64:member(1)'
    package: word!
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    summary: Inserts a document at the specified location.
    remarks: '\[ [API set: WordApi 1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after
        | "Before" | "After"): Word.Range;
      parameters:
        - id: base64File
          description: Required. The base64 encoded content of a .docx file.
          type: string
        - id: insertLocation
          description: Required. The value must be 'Before' or 'After'.
          type: >-
            <xref uid="word!Word.InsertLocation.before:member" /> | <xref uid="word!Word.InsertLocation.after:member" />
            | "Before" | "After"
      return:
        type: '<xref uid="word!Word.Range:class" />'
        description: ''
  - name: 'insertHtml(html, insertLocation)'
    uid: 'word!Word.InlinePicture#insertHtml:member(1)'
    package: word!
    fullName: 'insertHtml(html, insertLocation)'
    summary: Inserts HTML at the specified location.
    remarks: '\[ [API set: WordApi 1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertHtml(html: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" |
        "After"): Word.Range;
      parameters:
        - id: html
          description: Required. The HTML to be inserted.
          type: string
        - id: insertLocation
          description: Required. The value must be 'Before' or 'After'.
          type: >-
            <xref uid="word!Word.InsertLocation.before:member" /> | <xref uid="word!Word.InsertLocation.after:member" />
            | "Before" | "After"
      return:
        type: '<xref uid="word!Word.Range:class" />'
        description: ''
  - name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    uid: 'word!Word.InlinePicture#insertInlinePictureFromBase64:member(1)'
    package: word!
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    summary: Inserts an inline picture at the specified location.
    remarks: '\[ [API set: WordApi 1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation.replace |
        Word.InsertLocation.before | Word.InsertLocation.after | "Replace" | "Before" | "After"): Word.InlinePicture;
      parameters:
        - id: base64EncodedImage
          description: Required. The base64 encoded image to be inserted.
          type: string
        - id: insertLocation
          description: 'Required. The value must be ''Replace'', ''Before'', or ''After''.'
          type: >-
            <xref uid="word!Word.InsertLocation.replace:member" /> | <xref uid="word!Word.InsertLocation.before:member"
            /> | <xref uid="word!Word.InsertLocation.after:member" /> | "Replace" | "Before" | "After"
      return:
        type: '<xref uid="word!Word.InlinePicture:class" />'
        description: ''
  - name: 'insertOoxml(ooxml, insertLocation)'
    uid: 'word!Word.InlinePicture#insertOoxml:member(1)'
    package: word!
    fullName: 'insertOoxml(ooxml, insertLocation)'
    summary: Inserts OOXML at the specified location.
    remarks: '\[ [API set: WordApi 1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertOoxml(ooxml: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" |
        "After"): Word.Range;
      parameters:
        - id: ooxml
          description: Required. The OOXML to be inserted.
          type: string
        - id: insertLocation
          description: Required. The value must be 'Before' or 'After'.
          type: >-
            <xref uid="word!Word.InsertLocation.before:member" /> | <xref uid="word!Word.InsertLocation.after:member" />
            | "Before" | "After"
      return:
        type: '<xref uid="word!Word.Range:class" />'
        description: ''
  - name: 'insertParagraph(paragraphText, insertLocation)'
    uid: 'word!Word.InlinePicture#insertParagraph:member(1)'
    package: word!
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    summary: Inserts a paragraph at the specified location.
    remarks: '\[ [API set: WordApi 1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after |
        "Before" | "After"): Word.Paragraph;
      parameters:
        - id: paragraphText
          description: Required. The paragraph text to be inserted.
          type: string
        - id: insertLocation
          description: Required. The value must be 'Before' or 'After'.
          type: >-
            <xref uid="word!Word.InsertLocation.before:member" /> | <xref uid="word!Word.InsertLocation.after:member" />
            | "Before" | "After"
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: 'insertText(text, insertLocation)'
    uid: 'word!Word.InlinePicture#insertText:member(1)'
    package: word!
    fullName: 'insertText(text, insertLocation)'
    summary: Inserts text at the specified location.
    remarks: '\[ [API set: WordApi 1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertText(text: string, insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" |
        "After"): Word.Range;
      parameters:
        - id: text
          description: Required. Text to be inserted.
          type: string
        - id: insertLocation
          description: Required. The value must be 'Before' or 'After'.
          type: >-
            <xref uid="word!Word.InsertLocation.before:member" /> | <xref uid="word!Word.InsertLocation.after:member" />
            | "Before" | "After"
      return:
        type: '<xref uid="word!Word.Range:class" />'
        description: ''
  - name: load(options)
    uid: 'word!Word.InlinePicture#load:member(1)'
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Word.Interfaces.InlinePictureLoadOptions): Word.InlinePicture;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="word!Word.Interfaces.InlinePictureLoadOptions:interface" />'
      return:
        type: '<xref uid="word!Word.InlinePicture:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'word!Word.InlinePicture#load:member(2)'
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.InlinePicture;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="word!Word.InlinePicture:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'word!Word.InlinePicture#load:member(3)'
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.InlinePicture;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="word!Word.InlinePicture:class" />'
        description: ''
  - name: select(selectionMode)
    uid: 'word!Word.InlinePicture#select:member(1)'
    package: word!
    fullName: select(selectionMode)
    summary: Selects the inline picture. This causes Word to scroll to the selection.
    remarks: '\[ [API set: WordApi 1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      parameters:
        - id: selectionMode
          description: 'Optional. The selection mode must be ''Select'', ''Start'', or ''End''. ''Select'' is the default.'
          type: '<xref uid="word!Word.SelectionMode:enum" />'
      return:
        type: void
        description: ''
  - name: select(selectionModeString)
    uid: 'word!Word.InlinePicture#select:member(2)'
    package: word!
    fullName: select(selectionModeString)
    summary: Selects the inline picture. This causes Word to scroll to the selection.
    remarks: '\[ [API set: WordApi 1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      parameters:
        - id: selectionModeString
          description: 'Optional. The selection mode must be ''Select'', ''Start'', or ''End''. ''Select'' is the default.'
          type: '"Select" | "Start" | "End"'
      return:
        type: void
        description: ''
  - name: 'set(properties, options)'
    uid: 'word!Word.InlinePicture#set:member(1)'
    package: word!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.InlinePictureUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="word!Word.Interfaces.InlinePictureUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'word!Word.InlinePicture#set:member(2)'
    package: word!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Word.InlinePicture): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="word!Word.InlinePicture:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'word!Word.InlinePicture#toJSON:member(1)'
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Word.InlinePicture object is an API object, the `toJSON` method returns a
      plain JavaScript object (typed as `Word.Interfaces.InlinePictureData`<!-- -->) that contains shallow copies of any
      loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.InlinePictureData;'
      return:
        type: '<xref uid="word!Word.Interfaces.InlinePictureData:interface" />'
        description: ''
  - name: track()
    uid: 'word!Word.InlinePicture#track:member(1)'
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for
      [context.trackedObjects.add(thisObject)](https://docs.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you are using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and
      get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the
      object to the tracked object collection when the object was first created. If this object is part of a collection,
      you should also track the parent collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.InlinePicture;'
      return:
        type: '<xref uid="word!Word.InlinePicture:class" />'
        description: ''
  - name: untrack()
    uid: 'word!Word.InlinePicture#untrack:member(1)'
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://docs.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so please remember to free any objects you add,
      once you're done using them. You will need to call `context.sync()` before the memory release takes effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.InlinePicture;'
      return:
        type: '<xref uid="word!Word.InlinePicture:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
