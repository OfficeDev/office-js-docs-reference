### YamlMime:TSType
name: Word.ParagraphCollection
uid: 'word!Word.ParagraphCollection:class'
package: word!
fullName: Word.ParagraphCollection
summary: >-
  Contains a collection of [Word.Paragraph](xref:word!Word.Paragraph:class)
  objects.


  \[ [API set: WordApi
  1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'word!Word.ParagraphCollection#context:member'
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="word!Word.RequestContext:class" />'
  - name: items
    uid: 'word!Word.ParagraphCollection#items:member'
    package: word!
    fullName: items
    summary: Gets the loaded child items in this collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly items: Word.Paragraph[];'
      return:
        type: '<xref uid="word!Word.Paragraph:class" />[]'
methods:
  - name: getFirst()
    uid: 'word!Word.ParagraphCollection#getFirst:member(1)'
    package: word!
    fullName: getFirst()
    summary: >-
      Gets the first paragraph in this collection. Throws an error if the
      collection is empty.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFirst(): Word.Paragraph;'
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: getFirstOrNullObject()
    uid: 'word!Word.ParagraphCollection#getFirstOrNullObject:member(1)'
    package: word!
    fullName: getFirstOrNullObject()
    summary: >-
      Gets the first paragraph in this collection. Returns a null object if the
      collection is empty.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFirstOrNullObject(): Word.Paragraph;'
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: getLast()
    uid: 'word!Word.ParagraphCollection#getLast:member(1)'
    package: word!
    fullName: getLast()
    summary: >-
      Gets the last paragraph in this collection. Throws an error if the
      collection is empty.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getLast(): Word.Paragraph;'
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: getLastOrNullObject()
    uid: 'word!Word.ParagraphCollection#getLastOrNullObject:member(1)'
    package: word!
    fullName: getLastOrNullObject()
    summary: >-
      Gets the last paragraph in this collection. Returns a null object if the
      collection is empty.


      \[ [API set: WordApi
      1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getLastOrNullObject(): Word.Paragraph;'
      return:
        type: '<xref uid="word!Word.Paragraph:class" />'
        description: ''
  - name: load(options)
    uid: 'word!Word.ParagraphCollection#load:member(1)'
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Word.Interfaces.ParagraphCollectionLoadOptions &
        Word.Interfaces.CollectionLoadOptions): Word.ParagraphCollection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref
            uid="word!Word.Interfaces.ParagraphCollectionLoadOptions:interface"
            /> & <xref
            uid="word!Word.Interfaces.CollectionLoadOptions:interface" />
      return:
        type: '<xref uid="word!Word.ParagraphCollection:class" />'
        description: |-


          #### Examples

          ```javascript
          // This example shows how to get the paragraphs in the Word document
          // along with their text and font size properties.
          // 
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the text and font properties.
              // It is best practice to always specify the property set. Otherwise, all properties are
              // returned in on the object.
              context.load(paragraphs, 'text, font/size');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

              // Insert code that works with the paragraphs loaded by context.load().
              })
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - name: load(propertyNames)
    uid: 'word!Word.ParagraphCollection#load:member(2)'
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.ParagraphCollection;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="word!Word.ParagraphCollection:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'word!Word.ParagraphCollection#load:member(3)'
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption):
        Word.ParagraphCollection;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: '<xref uid="office!OfficeExtension.LoadOption:interface" />'
      return:
        type: '<xref uid="word!Word.ParagraphCollection:class" />'
        description: ''
  - name: toJSON()
    uid: 'word!Word.ParagraphCollection#toJSON:member(1)'
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original
      `Word.ParagraphCollection` object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as
      `Word.Interfaces.ParagraphCollectionData`<!-- -->) that contains an
      "items" array with shallow copies of any loaded properties from the
      collection's items.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphCollectionData;'
      return:
        type: '<xref uid="word!Word.Interfaces.ParagraphCollectionData:interface" />'
        description: ''
  - name: track()
    uid: 'word!Word.ParagraphCollection#track:member(1)'
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in
      the document. This call is a shorthand for
      `context.trackedObjects.add(thisObject)`<!-- -->. If you are using this
      object across `.sync` calls and outside the sequential execution of a
      ".run" batch, and get an "InvalidObjectPath" error when setting a property
      or invoking a method on the object, you needed to have added the object to
      the tracked object collection when the object was first created.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.ParagraphCollection;'
      return:
        type: '<xref uid="word!Word.ParagraphCollection:class" />'
        description: ''
  - name: untrack()
    uid: 'word!Word.ParagraphCollection#untrack:member(1)'
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been
      tracked. This call is shorthand for
      `context.trackedObjects.remove(thisObject)`<!-- -->. Having many tracked
      objects slows down the host application, so please remember to free any
      objects you add, once you're done using them. You will need to call
      `context.sync()` before the memory release takes effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.ParagraphCollection;'
      return:
        type: '<xref uid="word!Word.ParagraphCollection:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
