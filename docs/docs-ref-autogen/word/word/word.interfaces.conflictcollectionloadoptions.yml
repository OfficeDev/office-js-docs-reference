### YamlMime:TSType
name: Word.Interfaces.ConflictCollectionLoadOptions
uid: word!Word.Interfaces.ConflictCollectionLoadOptions:interface
package: word!
fullName: Word.Interfaces.ConflictCollectionLoadOptions
summary: Represents the coauthoring conflicts in a Word document.
remarks: >-
  \[ [API set: WordApi BETA (PREVIEW
  ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

isPreview: true
isDeprecated: false
type: interface
properties:
  - name: $all
    uid: word!Word.Interfaces.ConflictCollectionLoadOptions#$all:member
    package: word!
    fullName: $all
    summary: >-
      Specifying `$all` for the load options loads all the scalar properties
      (such as `Range.address`<!-- -->) but not the navigational properties
      (such as `Range.format.fill.color`<!-- -->).
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: '$all?: boolean;'
      return:
        type: boolean
  - name: range
    uid: word!Word.Interfaces.ConflictCollectionLoadOptions#range:member
    package: word!
    fullName: range
    summary: >-
      For EACH ITEM in the collection: Gets a `Range` object that represents the
      portion of the document that's contained in the `Conflict` object.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'range?: Word.Interfaces.RangeLoadOptions;'
      return:
        type: <xref uid="word!Word.Interfaces.RangeLoadOptions:interface" />
  - name: type
    uid: word!Word.Interfaces.ConflictCollectionLoadOptions#type:member
    package: word!
    fullName: type
    summary: >-
      For EACH ITEM in the collection: Gets the `RevisionType` for the
      `Conflict` object.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'type?: boolean;'
      return:
        type: boolean
