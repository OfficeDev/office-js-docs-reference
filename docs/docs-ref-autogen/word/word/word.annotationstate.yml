### YamlMime:TSEnum
name: Word.AnnotationState
uid: 'word!Word.AnnotationState:enum'
package: word!
fullName: Word.AnnotationState
summary: Represents the state of the annotation.
remarks: >-
  \[ [API set: WordApi 1.7](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-annotations.yaml


  // Accepts the first annotation found in the selected paragraph.

  await Word.run(async (context) => {
    const paragraph: Word.Paragraph = context.document.getSelection().paragraphs.getFirst();
    const annotations: Word.AnnotationCollection = paragraph.getAnnotations();
    annotations.load("id,state,critiqueAnnotation");

    await context.sync();

    for (let i = 0; i < annotations.items.length; i++) {
      const annotation: Word.Annotation = annotations.items[i];

      if (annotation.state === Word.AnnotationState.created) {
        console.log(`Accepting ID ${annotation.id}...`);
        annotation.critiqueAnnotation.accept();

        await context.sync();
        break;
      }
    }
  });

  ```
isPreview: false
isDeprecated: false
fields:
  - name: accepted
    uid: 'word!Word.AnnotationState.accepted:member'
    package: word!
    summary: |-
      Accepted.

      * \[ [API set: WordApi 1.7](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]
    value: '"Accepted"'
  - name: created
    uid: 'word!Word.AnnotationState.created:member'
    package: word!
    summary: |-
      Created.

      * \[ [API set: WordApi 1.7](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]
    value: '"Created"'
  - name: rejected
    uid: 'word!Word.AnnotationState.rejected:member'
    package: word!
    summary: |-
      Rejected.

      * \[ [API set: WordApi 1.7](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]
    value: '"Rejected"'
