### YamlMime:TSType
name: Word.RepeatingSectionItem
uid: word!Word.RepeatingSectionItem:class
package: word!
fullName: Word.RepeatingSectionItem
summary: Represents a single item in a .
remarks: >-
  \[ [API set: WordApi BETA (PREVIEW
  ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

isPreview: true
isDeprecated: false
type: class
properties:
  - name: context
    uid: word!Word.RepeatingSectionItem#context:member
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: <xref uid="word!Word.RequestContext:class" />
  - name: range
    uid: word!Word.RepeatingSectionItem#range:member
    package: word!
    fullName: range
    summary: >-
      Returns the range of this repeating section item, excluding the start and
      end tags.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'readonly range: Word.Range;'
      return:
        type: <xref uid="word!Word.Range:class" />
methods:
  - name: delete()
    uid: word!Word.RepeatingSectionItem#delete:member(1)
    package: word!
    fullName: delete()
    summary: Deletes this `RepeatingSectionItem` object.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: ''
  - name: insertItemAfter()
    uid: word!Word.RepeatingSectionItem#insertItemAfter:member(1)
    package: word!
    fullName: insertItemAfter()
    summary: Adds a repeating section item after this item and returns the new item.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'insertItemAfter(): Word.RepeatingSectionItem;'
      return:
        type: <xref uid="word!Word.RepeatingSectionItem:class" />
        description: ''
  - name: insertItemBefore()
    uid: word!Word.RepeatingSectionItem#insertItemBefore:member(1)
    package: word!
    fullName: insertItemBefore()
    summary: Adds a repeating section item before this item and returns the new item.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'insertItemBefore(): Word.RepeatingSectionItem;'
      return:
        type: <xref uid="word!Word.RepeatingSectionItem:class" />
        description: ''
  - name: load(options)
    uid: word!Word.RepeatingSectionItem#load:member(1)
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Word.Interfaces.RepeatingSectionItemLoadOptions):
        Word.RepeatingSectionItem;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref
            uid="word!Word.Interfaces.RepeatingSectionItemLoadOptions:interface"
            />
      return:
        type: <xref uid="word!Word.RepeatingSectionItem:class" />
        description: ''
  - name: load(propertyNames)
    uid: word!Word.RepeatingSectionItem#load:member(2)
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.RepeatingSectionItem;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: string | string[]
      return:
        type: <xref uid="word!Word.RepeatingSectionItem:class" />
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: word!Word.RepeatingSectionItem#load:member(3)
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.RepeatingSectionItem;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: <xref uid="word!Word.RepeatingSectionItem:class" />
        description: ''
  - name: set(properties, options)
    uid: word!Word.RepeatingSectionItem#set:member(1)
    package: word!
    fullName: set(properties, options)
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.RepeatingSectionItemUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: >-
            <xref
            uid="word!Word.Interfaces.RepeatingSectionItemUpdateData:interface"
            />
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: word!Word.RepeatingSectionItem#set:member(2)
    package: word!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'set(properties: Word.RepeatingSectionItem): void;'
      parameters:
        - id: properties
          description: ''
          type: <xref uid="word!Word.RepeatingSectionItem:class" />
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: word!Word.RepeatingSectionItem#toJSON:member(1)
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that's passed to it.) Whereas the original
      `Word.RepeatingSectionItem` object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as
      `Word.Interfaces.RepeatingSectionItemData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.RepeatingSectionItemData;'
      return:
        type: <xref uid="word!Word.Interfaces.RepeatingSectionItemData:interface" />
        description: ''
  - name: track()
    uid: word!Word.RepeatingSectionItem#track:member(1)
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in
      the document. This call is a shorthand for
      [context.trackedObjects.add(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you're using this object across `.sync` calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath"
      error when setting a property or invoking a method on the object, you need
      to add the object to the tracked object collection when the object was
      first created. If this object is part of a collection, you should also
      track the parent collection.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'track(): Word.RepeatingSectionItem;'
      return:
        type: <xref uid="word!Word.RepeatingSectionItem:class" />
        description: ''
  - name: untrack()
    uid: word!Word.RepeatingSectionItem#untrack:member(1)
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been
      tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so
      please remember to free any objects you add, once you're done using them.
      You'll need to call `context.sync()` before the memory release takes
      effect.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.RepeatingSectionItem;'
      return:
        type: <xref uid="word!Word.RepeatingSectionItem:class" />
        description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
