### YamlMime:TSType
name: Word.ContentControlDataChangedEventArgs
uid: 'word!Word.ContentControlDataChangedEventArgs:interface'
package: word!
fullName: Word.ContentControlDataChangedEventArgs
summary: Provides information about the content control that raised contentControlDataChanged event.
remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: eventType
    uid: 'word!Word.ContentControlDataChangedEventArgs#eventType:member'
    package: word!
    fullName: eventType
    summary: The event type. See Word.EventType for details.
    remarks: >-
      \[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/10-content-controls/content-control-ondatachanged-event.yaml

      async function contentControlDataChanged(event: Word.ContentControlDataChangedEventArgs) {
        await Word.run(async (context) => {
          console.log(`${event.eventType} event detected. IDs of content controls where data was changed:`);
          console.log(event.ids);
        });
      }

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        eventType: Word.EventType | "ContentControlDeleted" | "ContentControlSelectionChanged" |
        "ContentControlDataChanged" | "ContentControlAdded" | "CommentDeleted" | "CommentSelected" | "CommentDeselected"
        | "CommentChanged" | "CommentAdded" | "ContentControlEntered" | "ContentControlExited";
      return:
        type: >-
          <xref uid="word!Word.EventType:enum" /> | "ContentControlDeleted" | "ContentControlSelectionChanged" |
          "ContentControlDataChanged" | "ContentControlAdded" | "CommentDeleted" | "CommentSelected" |
          "CommentDeselected" | "CommentChanged" | "CommentAdded" | "ContentControlEntered" | "ContentControlExited"
  - name: ids
    uid: 'word!Word.ContentControlDataChangedEventArgs#ids:member'
    package: word!
    fullName: ids
    summary: Gets the content control IDs.
    remarks: >-
      \[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/10-content-controls/content-control-ondatachanged-event.yaml

      async function contentControlDataChanged(event: Word.ContentControlDataChangedEventArgs) {
        await Word.run(async (context) => {
          console.log(`${event.eventType} event detected. IDs of content controls where data was changed:`);
          console.log(event.ids);
        });
      }

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ids: number[];'
      return:
        type: 'number[]'
  - name: source
    uid: 'word!Word.ContentControlDataChangedEventArgs#source:member'
    package: word!
    fullName: source
    summary: The source of the event. It can be local or remote (through coauthoring).
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'source: Word.EventSource | "Local" | "Remote";'
      return:
        type: '<xref uid="word!Word.EventSource:enum" /> | "Local" | "Remote"'
