### YamlMime:TSType
name: Word.EditorCollection
uid: word!Word.EditorCollection:class
package: word!
fullName: Word.EditorCollection
summary: >-
  Represents the [editors](xref:word!Word.Editor:class) in a protected
  (read-only) Word document.
remarks: >-
  \[ [API set: WordApi BETA (PREVIEW
  ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

isPreview: true
isDeprecated: false
type: class
properties:
  - name: context
    uid: word!Word.EditorCollection#context:member
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: <xref uid="word!Word.RequestContext:class" />
methods:
  - name: addById(editorId)
    uid: word!Word.EditorCollection#addById:member(1)
    package: word!
    fullName: addById(editorId)
    summary: >-
      Returns an `Editor` object that represents a new permission for the
      specified user to modify a range within the document.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'addById(editorId: string): Word.Editor;'
      parameters:
        - id: editorId
          description: The user's email alias (if in the same domain) or an email address.
          type: string
      return:
        type: <xref uid="word!Word.Editor:class" />
        description: ''
  - name: addByType(editorType)
    uid: word!Word.EditorCollection#addByType:member(1)
    package: word!
    fullName: addByType(editorType)
    summary: >-
      Returns an `Editor` object that represents a new permission for the
      specified group of users to modify a range within the document.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'addByType(editorType: Word.EditorType): Word.Editor;'
      parameters:
        - id: editorType
          description: An `EditorType` that represents a group of users.
          type: <xref uid="word!Word.EditorType:enum" />
      return:
        type: <xref uid="word!Word.Editor:class" />
        description: ''
  - name: addByType(editorType)
    uid: word!Word.EditorCollection#addByType:member(2)
    package: word!
    fullName: addByType(editorType)
    summary: >-
      Returns an `Editor` object that represents a new permission for the
      specified group of users to modify a range within the document.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        addByType(editorType: "Current" | "Editors" | "Everyone" | "Owners"):
        Word.Editor;
      parameters:
        - id: editorType
          description: An `EditorType` that represents a group of users.
          type: '"Current" | "Editors" | "Everyone" | "Owners"'
      return:
        type: <xref uid="word!Word.Editor:class" />
        description: ''
  - name: getCount()
    uid: word!Word.EditorCollection#getCount:member(1)
    package: word!
    fullName: getCount()
    summary: Returns the number of items in the collection.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
        description: ''
  - name: getItemAt(index)
    uid: word!Word.EditorCollection#getItemAt:member(1)
    package: word!
    fullName: getItemAt(index)
    summary: Gets an `Editor` object by its index in the collection.
    remarks: >-
      \[ [API set: WordApi BETA (PREVIEW
      ONLY)](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getItemAt(index: number): Word.Editor;'
      parameters:
        - id: index
          description: The index of the item to retrieve.
          type: number
      return:
        type: <xref uid="word!Word.Editor:class" />
        description: ''
  - name: load(propertyNames)
    uid: word!Word.EditorCollection#load:member(1)
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.EditorCollection;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: string | string[]
      return:
        type: <xref uid="word!Word.EditorCollection:class" />
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: word!Word.EditorCollection#load:member(2)
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.EditorCollection;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: <xref uid="word!Word.EditorCollection:class" />
        description: ''
  - name: toJSON()
    uid: word!Word.EditorCollection#toJSON:member(1)
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that's passed to it.) Whereas the original `Word.EditorCollection`
      object is an API object, the `toJSON` method returns a plain JavaScript
      object (typed as `Word.Interfaces.EditorCollectionData`<!-- -->) that
      contains shallow copies of any loaded child properties from the original
      object.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: |-
        toJSON(): {
                    [key: string]: string;
                };
      return:
        type: |-
          {
                      [key: string]: string;
                  }
        description: ''
  - name: track()
    uid: word!Word.EditorCollection#track:member(1)
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in
      the document. This call is a shorthand for
      [context.trackedObjects.add(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you're using this object across `.sync` calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath"
      error when setting a property or invoking a method on the object, you need
      to add the object to the tracked object collection when the object was
      first created. If this object is part of a collection, you should also
      track the parent collection.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'track(): Word.EditorCollection;'
      return:
        type: <xref uid="word!Word.EditorCollection:class" />
        description: ''
  - name: untrack()
    uid: word!Word.EditorCollection#untrack:member(1)
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been
      tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so
      please remember to free any objects you add, once you're done using them.
      You'll need to call `context.sync()` before the memory release takes
      effect.
    remarks: ''

    isPreview: true
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.EditorCollection;'
      return:
        type: <xref uid="word!Word.EditorCollection:class" />
        description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
