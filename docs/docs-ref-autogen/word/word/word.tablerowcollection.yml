### YamlMime:UniversalReference
items:
  - uid: 'word!Word.TableRowCollection:class'
    summary: |-
      Contains the collection of the document's TableRow objects.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: Word.TableRowCollection
    fullName: Word.TableRowCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.TableRowCollection#context:member'
      - 'word!Word.TableRowCollection#getFirst:member(1)'
      - 'word!Word.TableRowCollection#getFirstOrNullObject:member(1)'
      - 'word!Word.TableRowCollection#items:member'
      - 'word!Word.TableRowCollection#load:member(1)'
      - 'word!Word.TableRowCollection#load:member(2)'
      - 'word!Word.TableRowCollection#load:member(3)'
      - 'word!Word.TableRowCollection#toJSON:member(1)'
      - 'word!Word.TableRowCollection#track:member(1)'
      - 'word!Word.TableRowCollection#untrack:member(1)'
  - uid: 'word!Word.TableRowCollection#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.TableRowCollection#getFirst:member(1)'
    summary: |-
      Gets the first row in this collection. Throws an error if this collection is empty.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getFirst()
    fullName: getFirst()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(): Word.TableRow;'
      return:
        type:
          - 'word!Word.TableRow:class'
        description: ''
  - uid: 'word!Word.TableRowCollection#getFirstOrNullObject:member(1)'
    summary: |-
      Gets the first row in this collection. Returns a null object if this collection is empty.

      \[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]
    name: getFirstOrNullObject()
    fullName: getFirstOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirstOrNullObject(): Word.TableRow;'
      return:
        type:
          - 'word!Word.TableRow:class'
        description: ''
  - uid: 'word!Word.TableRowCollection#items:member'
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Word.TableRow[];'
      return:
        type:
          - 'word!Word.TableRowCollection#items~0:complex'
  - uid: 'word!Word.TableRowCollection#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Word.TableRowCollection` - Where option is a comma-delimited string or an array
      of strings that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): Word.TableRowCollection` - Where option.select is a
      comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that
      specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.TableRowCollection` - Only
      available on collection types. It is similar to the preceding signature. Option.top specifies the maximum number
      of collection items that can be included in the result. Option.skip specifies the number of items that are to be
      skipped and not included in the result. If option.top is specified, the result set will start after skipping the
      specified number of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        load(option?: Word.Interfaces.TableRowCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions):
        Word.TableRowCollection;
      return:
        type:
          - 'word!Word.TableRowCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.TableRowCollection#load~0:complex'
  - uid: 'word!Word.TableRowCollection#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.TableRowCollection;'
      return:
        type:
          - 'word!Word.TableRowCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'word!Word.TableRowCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Word.TableRowCollection;'
      return:
        type:
          - 'word!Word.TableRowCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'word!Word.TableRowCollection#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original `Word.TableRowCollection` object is an API object, the `toJSON` method returns
      a plain JavaScript object (typed as `Word.Interfaces.TableRowCollectionData`<!-- -->) that contains an "items"
      array with shallow copies of any loaded properties from the collection's items.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.TableRowCollectionData;'
      return:
        type:
          - 'word!Word.Interfaces.TableRowCollectionData:interface'
        description: ''
  - uid: 'word!Word.TableRowCollection#track:member(1)'
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.TableRowCollection;'
      return:
        type:
          - 'word!Word.TableRowCollection:class'
        description: ''
  - uid: 'word!Word.TableRowCollection#untrack:member(1)'
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.TableRowCollection;'
      return:
        type:
          - 'word!Word.TableRowCollection:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.TableRow:class'
    name: Word.TableRow
  - uid: 'word!Word.TableRowCollection#items~0:complex'
    name: 'Word.TableRow[]'
    fullName: 'Word.TableRow[]'
    spec.typeScript:
      - uid: 'word!Word.TableRow:class'
        name: Word.TableRow
        fullName: Word.TableRow
      - name: '[]'
        fullName: '[]'
  - uid: 'word!Word.TableRowCollection:class'
    name: Word.TableRowCollection
  - uid: 'word!Word.TableRowCollection#load~0:complex'
    name: Word.Interfaces.TableRowCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
    fullName: Word.Interfaces.TableRowCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'word!Word.Interfaces.TableRowCollectionLoadOptions:interface'
        name: Word.Interfaces.TableRowCollectionLoadOptions
        fullName: Word.Interfaces.TableRowCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'word!Word.Interfaces.CollectionLoadOptions:interface'
        name: Word.Interfaces.CollectionLoadOptions
        fullName: Word.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'word!Word.Interfaces.TableRowCollectionData:interface'
    name: Word.Interfaces.TableRowCollectionData
