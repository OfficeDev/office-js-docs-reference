### YamlMime:TSType
name: Excel.PageLayout
uid: 'excel!Excel.PageLayout:class'
package: excel!
fullName: Excel.PageLayout
summary: >-
  Represents layout and print settings that are not dependent any
  printer-specific implementation. These settings include margins, orientation,
  page numbering, title rows, and print area.


  \[ [API set: ExcelApi
  1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: blackAndWhite
    uid: 'excel!Excel.PageLayout#blackAndWhite:member'
    package: excel!
    fullName: blackAndWhite
    summary: >-
      The worksheet's black and white print option.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'blackAndWhite: boolean;'
      return:
        type: boolean
  - name: bottomMargin
    uid: 'excel!Excel.PageLayout#bottomMargin:member'
    package: excel!
    fullName: bottomMargin
    summary: >-
      The worksheet's bottom page margin to use for printing in points.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'bottomMargin: number;'
      return:
        type: number
  - name: centerHorizontally
    uid: 'excel!Excel.PageLayout#centerHorizontally:member'
    package: excel!
    fullName: centerHorizontally
    summary: >-
      The worksheet's center horizontally flag. This flag determines whether the
      worksheet will be centered horizontally when it's printed.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'centerHorizontally: boolean;'
      return:
        type: boolean
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-page-layout.yaml

          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.centerHorizontally = true;
              farmSheet.pageLayout.centerVertically = true;
              await context.sync();
          });

          ```
  - name: centerVertically
    uid: 'excel!Excel.PageLayout#centerVertically:member'
    package: excel!
    fullName: centerVertically
    summary: >-
      The worksheet's center vertically flag. This flag determines whether the
      worksheet will be centered vertically when it's printed.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'centerVertically: boolean;'
      return:
        type: boolean
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-page-layout.yaml

          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.centerHorizontally = true;
              farmSheet.pageLayout.centerVertically = true;
              await context.sync();
          });

          ```
  - name: context
    uid: 'excel!Excel.PageLayout#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: draftMode
    uid: 'excel!Excel.PageLayout#draftMode:member'
    package: excel!
    fullName: draftMode
    summary: >-
      The worksheet's draft mode option. If true the sheet will be printed
      without graphics.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'draftMode: boolean;'
      return:
        type: boolean
  - name: firstPageNumber
    uid: 'excel!Excel.PageLayout#firstPageNumber:member'
    package: excel!
    fullName: firstPageNumber
    summary: >-
      The worksheet's first page number to print. Null value represents "auto"
      page numbering.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'firstPageNumber: number | "";'
      return:
        type: number | ""
  - name: footerMargin
    uid: 'excel!Excel.PageLayout#footerMargin:member'
    package: excel!
    fullName: footerMargin
    summary: >-
      The worksheet's footer margin, in points, for use when printing.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'footerMargin: number;'
      return:
        type: number
  - name: headerMargin
    uid: 'excel!Excel.PageLayout#headerMargin:member'
    package: excel!
    fullName: headerMargin
    summary: >-
      The worksheet's header margin, in points, for use when printing.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'headerMargin: number;'
      return:
        type: number
  - name: headersFooters
    uid: 'excel!Excel.PageLayout#headersFooters:member'
    package: excel!
    fullName: headersFooters
    summary: >-
      Header and footer configuration for the worksheet.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly headersFooters: Excel.HeaderFooterGroup;'
      return:
        type: '<xref uid="excel!Excel.HeaderFooterGroup:class" />'
  - name: leftMargin
    uid: 'excel!Excel.PageLayout#leftMargin:member'
    package: excel!
    fullName: leftMargin
    summary: >-
      The worksheet's left margin, in points, for use when printing.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'leftMargin: number;'
      return:
        type: number
  - name: orientation
    uid: 'excel!Excel.PageLayout#orientation:member'
    package: excel!
    fullName: orientation
    summary: >-
      The worksheet's orientation of the page.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'orientation: Excel.PageOrientation | "Portrait" | "Landscape";'
      return:
        type: >-
          <xref uid="excel!Excel.PageOrientation:enum" /> | "Portrait" |
          "Landscape"
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-page-layout.yaml

          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.orientation = Excel.PageOrientation.landscape;
              await context.sync();
          });

          ```
  - name: paperSize
    uid: 'excel!Excel.PageLayout#paperSize:member'
    package: excel!
    fullName: paperSize
    summary: >-
      The worksheet's paper size of the page.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        paperSize: Excel.PaperType | "Letter" | "LetterSmall" | "Tabloid" |
        "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small"
        | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17"
        | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" |
        "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" |
        "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" |
        "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" |
        "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" |
        "FanfoldStdGerman" | "FanfoldLegalGerman";
      return:
        type: >-
          <xref uid="excel!Excel.PaperType:enum" /> | "Letter" | "LetterSmall" |
          "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" |
          "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" |
          "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" |
          "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" |
          "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" |
          "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" |
          "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" |
          "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" |
          "FanfoldLegalGerman"
  - name: printComments
    uid: 'excel!Excel.PageLayout#printComments:member'
    package: excel!
    fullName: printComments
    summary: >-
      Specifies if the worksheet's comments should be displayed when printing.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        printComments: Excel.PrintComments | "NoComments" | "EndSheet" |
        "InPlace";
      return:
        type: >-
          <xref uid="excel!Excel.PrintComments:enum" /> | "NoComments" |
          "EndSheet" | "InPlace"
  - name: printErrors
    uid: 'excel!Excel.PageLayout#printErrors:member'
    package: excel!
    fullName: printErrors
    summary: >-
      The worksheet's print errors option.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        printErrors: Excel.PrintErrorType | "AsDisplayed" | "Blank" | "Dash" |
        "NotAvailable";
      return:
        type: >-
          <xref uid="excel!Excel.PrintErrorType:enum" /> | "AsDisplayed" |
          "Blank" | "Dash" | "NotAvailable"
  - name: printGridlines
    uid: 'excel!Excel.PageLayout#printGridlines:member'
    package: excel!
    fullName: printGridlines
    summary: >-
      Specifies if the worksheet's gridlines will be printed.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'printGridlines: boolean;'
      return:
        type: boolean
  - name: printHeadings
    uid: 'excel!Excel.PageLayout#printHeadings:member'
    package: excel!
    fullName: printHeadings
    summary: >-
      Specifies if the worksheet's headings will be printed.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'printHeadings: boolean;'
      return:
        type: boolean
  - name: printOrder
    uid: 'excel!Excel.PageLayout#printOrder:member'
    package: excel!
    fullName: printOrder
    summary: >-
      The worksheet's page print order option. This specifies the order to use
      for processing the page number printed.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'printOrder: Excel.PrintOrder | "DownThenOver" | "OverThenDown";'
      return:
        type: >-
          <xref uid="excel!Excel.PrintOrder:enum" /> | "DownThenOver" |
          "OverThenDown"
  - name: rightMargin
    uid: 'excel!Excel.PageLayout#rightMargin:member'
    package: excel!
    fullName: rightMargin
    summary: >-
      The worksheet's right margin, in points, for use when printing.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rightMargin: number;'
      return:
        type: number
  - name: topMargin
    uid: 'excel!Excel.PageLayout#topMargin:member'
    package: excel!
    fullName: topMargin
    summary: >-
      The worksheet's top margin, in points, for use when printing.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'topMargin: number;'
      return:
        type: number
  - name: zoom
    uid: 'excel!Excel.PageLayout#zoom:member'
    package: excel!
    fullName: zoom
    summary: >-
      The worksheet's print zoom options. The `PageLayoutZoomOptions` object
      must be set as a JSON object (use `x.zoom = {...}` instead of
      `x.zoom.scale = ...`<!-- -->).


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'zoom: Excel.PageLayoutZoomOptions;'
      return:
        type: '<xref uid="excel!Excel.PageLayoutZoomOptions:interface" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-page-layout.yaml

          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.zoom = { scale: 200 };
              await context.sync();
          });

          ```
methods:
  - name: getPrintArea()
    uid: 'excel!Excel.PageLayout#getPrintArea:member(1)'
    package: excel!
    fullName: getPrintArea()
    summary: >-
      Gets the RangeAreas object, comprising one or more rectangular ranges,
      that represents the print area for the worksheet. If there is no print
      area, an ItemNotFound error will be thrown.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPrintArea(): Excel.RangeAreas;'
      return:
        type: '<xref uid="excel!Excel.RangeAreas:class" />'
        description: ''
  - name: getPrintAreaOrNullObject()
    uid: 'excel!Excel.PageLayout#getPrintAreaOrNullObject:member(1)'
    package: excel!
    fullName: getPrintAreaOrNullObject()
    summary: >-
      Gets the RangeAreas object, comprising one or more rectangular ranges,
      that represents the print area for the worksheet. If there is no print
      area, a null object will be returned.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPrintAreaOrNullObject(): Excel.RangeAreas;'
      return:
        type: '<xref uid="excel!Excel.RangeAreas:class" />'
        description: ''
  - name: getPrintTitleColumns()
    uid: 'excel!Excel.PageLayout#getPrintTitleColumns:member(1)'
    package: excel!
    fullName: getPrintTitleColumns()
    summary: >-
      Gets the range object representing the title columns.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPrintTitleColumns(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: ''
  - name: getPrintTitleColumnsOrNullObject()
    uid: 'excel!Excel.PageLayout#getPrintTitleColumnsOrNullObject:member(1)'
    package: excel!
    fullName: getPrintTitleColumnsOrNullObject()
    summary: >-
      Gets the range object representing the title columns. If not set, this
      will return a null object.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPrintTitleColumnsOrNullObject(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: ''
  - name: getPrintTitleRows()
    uid: 'excel!Excel.PageLayout#getPrintTitleRows:member(1)'
    package: excel!
    fullName: getPrintTitleRows()
    summary: >-
      Gets the range object representing the title rows.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPrintTitleRows(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: ''
  - name: getPrintTitleRowsOrNullObject()
    uid: 'excel!Excel.PageLayout#getPrintTitleRowsOrNullObject:member(1)'
    package: excel!
    fullName: getPrintTitleRowsOrNullObject()
    summary: >-
      Gets the range object representing the title rows. If not set, this will
      return a null object.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPrintTitleRowsOrNullObject(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: ''
  - name: load(options)
    uid: 'excel!Excel.PageLayout#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.PageLayoutLoadOptions):
        Excel.PageLayout;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="excel!Excel.Interfaces.PageLayoutLoadOptions:interface"
            />
      return:
        type: '<xref uid="excel!Excel.PageLayout:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.PageLayout#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PageLayout;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.PageLayout:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.PageLayout#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PageLayout;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.PageLayout:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'excel!Excel.PageLayout#set:member(1)'
    package: excel!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.PageLayout): void`
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.PageLayoutUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: '<xref uid="excel!Excel.Interfaces.PageLayoutUpdateData:interface" />'
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'excel!Excel.PageLayout#set:member(2)'
    package: excel!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.PageLayout): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="excel!Excel.PageLayout:class" />'
      return:
        type: void
        description: ''
  - name: setPrintArea(printArea)
    uid: 'excel!Excel.PageLayout#setPrintArea:member(1)'
    package: excel!
    fullName: setPrintArea(printArea)
    summary: >-
      Sets the worksheet's print area.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setPrintArea(printArea: Range | RangeAreas | string): void;'
      parameters:
        - id: printArea
          description: 'The range, or RangeAreas of the content to print.'
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeAreas:class" /> | string
      return:
        type: void
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-page-layout.yaml

          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.setPrintArea("A1:D41");
              await context.sync();
          });

          ```
  - name: 'setPrintMargins(unit, marginOptions)'
    uid: 'excel!Excel.PageLayout#setPrintMargins:member(1)'
    package: excel!
    fullName: 'setPrintMargins(unit, marginOptions)'
    summary: >-
      Sets the worksheet's page margins with units.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        setPrintMargins(unit: Excel.PrintMarginUnit, marginOptions:
        Excel.PageLayoutMarginOptions): void;
      parameters:
        - id: unit
          description: Measurement unit for the margins provided.
          type: '<xref uid="excel!Excel.PrintMarginUnit:enum" />'
        - id: marginOptions
          description: 'Margin values to set, margins not provided will remain unchanged.'
          type: '<xref uid="excel!Excel.PageLayoutMarginOptions:interface" />'
      return:
        type: void
        description: ''
  - name: 'setPrintMargins(unitString, marginOptions)'
    uid: 'excel!Excel.PageLayout#setPrintMargins:member(2)'
    package: excel!
    fullName: 'setPrintMargins(unitString, marginOptions)'
    summary: >-
      Sets the worksheet's page margins with units.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        setPrintMargins(unitString: "Points" | "Inches" | "Centimeters",
        marginOptions: Excel.PageLayoutMarginOptions): void;
      parameters:
        - id: unitString
          description: Measurement unit for the margins provided.
          type: '"Points" | "Inches" | "Centimeters"'
        - id: marginOptions
          description: 'Margin values to set, margins not provided will remain unchanged.'
          type: '<xref uid="excel!Excel.PageLayoutMarginOptions:interface" />'
      return:
        type: void
        description: ''
  - name: setPrintTitleColumns(printTitleColumns)
    uid: 'excel!Excel.PageLayout#setPrintTitleColumns:member(1)'
    package: excel!
    fullName: setPrintTitleColumns(printTitleColumns)
    summary: >-
      Sets the columns that contain the cells to be repeated at the left of each
      page of the worksheet for printing.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setPrintTitleColumns(printTitleColumns: Range | string): void;'
      parameters:
        - id: printTitleColumns
          description: >-
            The columns to be repeated to the left of each page, range must span
            the entire column to be valid.
          type: '<xref uid="excel!Excel.Range:class" /> | string'
      return:
        type: void
        description: ''
  - name: setPrintTitleRows(printTitleRows)
    uid: 'excel!Excel.PageLayout#setPrintTitleRows:member(1)'
    package: excel!
    fullName: setPrintTitleRows(printTitleRows)
    summary: >-
      Sets the rows that contain the cells to be repeated at the top of each
      page of the worksheet for printing.


      \[ [API set: ExcelApi
      1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setPrintTitleRows(printTitleRows: Range | string): void;'
      parameters:
        - id: printTitleRows
          description: >-
            The rows to be repeated at the top of each page, range must span the
            entire row to be valid.
          type: '<xref uid="excel!Excel.Range:class" /> | string'
      return:
        type: void
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-page-layout.yaml

          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.setPrintTitleRows("$1:$1");
              await context.sync();
          });

          ```
  - name: toJSON()
    uid: 'excel!Excel.PageLayout#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Excel.PageLayout object
      is an API object, the `toJSON` method returns a plain JavaScript object
      (typed as `Excel.Interfaces.PageLayoutData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.PageLayoutData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.PageLayoutData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
