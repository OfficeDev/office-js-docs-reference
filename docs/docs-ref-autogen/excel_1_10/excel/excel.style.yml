### YamlMime:TSType
name: Excel.Style
uid: 'excel!Excel.Style:class'
package: excel!
fullName: Excel.Style
summary: >-
  An object encapsulating a style's format and other properties.


  \[ [API set: ExcelApi
  1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: autoIndent
    uid: 'excel!Excel.Style#autoIndent:member'
    package: excel!
    fullName: autoIndent
    summary: >-
      Specifies if text is automatically indented when the text alignment in a
      cell is set to equal distribution.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoIndent: boolean;'
      return:
        type: boolean
  - name: borders
    uid: 'excel!Excel.Style#borders:member'
    package: excel!
    fullName: borders
    summary: >-
      A Border collection of four Border objects that represent the style of the
      four borders.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly borders: Excel.RangeBorderCollection;'
      return:
        type: '<xref uid="excel!Excel.RangeBorderCollection:class" />'
  - name: builtIn
    uid: 'excel!Excel.Style#builtIn:member'
    package: excel!
    fullName: builtIn
    summary: >-
      Specifies if the style is a built-in style.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly builtIn: boolean;'
      return:
        type: boolean
  - name: context
    uid: 'excel!Excel.Style#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: fill
    uid: 'excel!Excel.Style#fill:member'
    package: excel!
    fullName: fill
    summary: >-
      The Fill of the style.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly fill: Excel.RangeFill;'
      return:
        type: '<xref uid="excel!Excel.RangeFill:class" />'
  - name: font
    uid: 'excel!Excel.Style#font:member'
    package: excel!
    fullName: font
    summary: >-
      A Font object that represents the font of the style.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly font: Excel.RangeFont;'
      return:
        type: '<xref uid="excel!Excel.RangeFont:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/style.yaml

          await Excel.run(async (context) => {
              let style = context.workbook.styles.getItem("Normal");
              style.font.load("bold, color, italic, name, size");
              style.fill.load("color");

              await context.sync();

              console.log("Bold: " + style.font.bold);
              console.log("Font color: " + style.font.color);
              console.log("Italic: " + style.font.italic);
              console.log("Name: " + style.font.name);
              console.log("Size: " + style.font.size);
              console.log("Fill color: " + style.fill.color);
          });

          ```
  - name: formulaHidden
    uid: 'excel!Excel.Style#formulaHidden:member'
    package: excel!
    fullName: formulaHidden
    summary: >-
      Specifies if the formula will be hidden when the worksheet is protected.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formulaHidden: boolean;'
      return:
        type: boolean
  - name: horizontalAlignment
    uid: 'excel!Excel.Style#horizontalAlignment:member'
    package: excel!
    fullName: horizontalAlignment
    summary: >-
      Represents the horizontal alignment for the style. See
      Excel.HorizontalAlignment for details.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        horizontalAlignment: Excel.HorizontalAlignment | "General" | "Left" |
        "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" |
        "Distributed";
      return:
        type: >-
          <xref uid="excel!Excel.HorizontalAlignment:enum" /> | "General" |
          "Left" | "Center" | "Right" | "Fill" | "Justify" |
          "CenterAcrossSelection" | "Distributed"
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/style.yaml

          await Excel.run(async (context) => {
              let worksheet = context.workbook.worksheets.getItem("Sample");
              let range = worksheet.getRange("A1:E1");

              // Apply built-in style. 
              // Styles are in the Home tab ribbon.
              range.style = Excel.BuiltInStyle.neutral;
              range.format.horizontalAlignment = "Right";

              await context.sync();
          });

          ```
  - name: includeAlignment
    uid: 'excel!Excel.Style#includeAlignment:member'
    package: excel!
    fullName: includeAlignment
    summary: >-
      Specifies if the style includes the AutoIndent, HorizontalAlignment,
      VerticalAlignment, WrapText, IndentLevel, and TextOrientation properties.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'includeAlignment: boolean;'
      return:
        type: boolean
  - name: includeBorder
    uid: 'excel!Excel.Style#includeBorder:member'
    package: excel!
    fullName: includeBorder
    summary: >-
      Specifies if the style includes the Color, ColorIndex, LineStyle, and
      Weight border properties.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'includeBorder: boolean;'
      return:
        type: boolean
  - name: includeFont
    uid: 'excel!Excel.Style#includeFont:member'
    package: excel!
    fullName: includeFont
    summary: >-
      Specifies if the style includes the Background, Bold, Color, ColorIndex,
      FontStyle, Italic, Name, Size, Strikethrough, Subscript, Superscript, and
      Underline font properties.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'includeFont: boolean;'
      return:
        type: boolean
  - name: includeNumber
    uid: 'excel!Excel.Style#includeNumber:member'
    package: excel!
    fullName: includeNumber
    summary: >-
      Specifies if the style includes the NumberFormat property.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'includeNumber: boolean;'
      return:
        type: boolean
  - name: includePatterns
    uid: 'excel!Excel.Style#includePatterns:member'
    package: excel!
    fullName: includePatterns
    summary: >-
      Specifies if the style includes the Color, ColorIndex, InvertIfNegative,
      Pattern, PatternColor, and PatternColorIndex interior properties.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'includePatterns: boolean;'
      return:
        type: boolean
  - name: includeProtection
    uid: 'excel!Excel.Style#includeProtection:member'
    package: excel!
    fullName: includeProtection
    summary: >-
      Specifies if the style includes the FormulaHidden and Locked protection
      properties.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'includeProtection: boolean;'
      return:
        type: boolean
  - name: indentLevel
    uid: 'excel!Excel.Style#indentLevel:member'
    package: excel!
    fullName: indentLevel
    summary: >-
      An integer from 0 to 250 that indicates the indent level for the style.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'indentLevel: number;'
      return:
        type: number
  - name: locked
    uid: 'excel!Excel.Style#locked:member'
    package: excel!
    fullName: locked
    summary: >-
      Specifies if the object is locked when the worksheet is protected.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'locked: boolean;'
      return:
        type: boolean
  - name: name
    uid: 'excel!Excel.Style#name:member'
    package: excel!
    fullName: name
    summary: >-
      The name of the style.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly name: string;'
      return:
        type: string
  - name: numberFormat
    uid: 'excel!Excel.Style#numberFormat:member'
    package: excel!
    fullName: numberFormat
    summary: >-
      The format code of the number format for the style.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'numberFormat: string;'
      return:
        type: string
  - name: numberFormatLocal
    uid: 'excel!Excel.Style#numberFormatLocal:member'
    package: excel!
    fullName: numberFormatLocal
    summary: >-
      The localized format code of the number format for the style.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'numberFormatLocal: string;'
      return:
        type: string
  - name: readingOrder
    uid: 'excel!Excel.Style#readingOrder:member'
    package: excel!
    fullName: readingOrder
    summary: >-
      The reading order for the style.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        readingOrder: Excel.ReadingOrder | "Context" | "LeftToRight" |
        "RightToLeft";
      return:
        type: >-
          <xref uid="excel!Excel.ReadingOrder:enum" /> | "Context" |
          "LeftToRight" | "RightToLeft"
  - name: shrinkToFit
    uid: 'excel!Excel.Style#shrinkToFit:member'
    package: excel!
    fullName: shrinkToFit
    summary: >-
      Specifies if text automatically shrinks to fit in the available column
      width.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'shrinkToFit: boolean;'
      return:
        type: boolean
  - name: textOrientation
    uid: 'excel!Excel.Style#textOrientation:member'
    package: excel!
    fullName: textOrientation
    summary: >-
      The text orientation for the style.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'textOrientation: number;'
      return:
        type: number
  - name: verticalAlignment
    uid: 'excel!Excel.Style#verticalAlignment:member'
    package: excel!
    fullName: verticalAlignment
    summary: >-
      Specifies the vertical alignment for the style. See
      Excel.VerticalAlignment for details.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        verticalAlignment: Excel.VerticalAlignment | "Top" | "Center" | "Bottom"
        | "Justify" | "Distributed";
      return:
        type: >-
          <xref uid="excel!Excel.VerticalAlignment:enum" /> | "Top" | "Center" |
          "Bottom" | "Justify" | "Distributed"
  - name: wrapText
    uid: 'excel!Excel.Style#wrapText:member'
    package: excel!
    fullName: wrapText
    summary: >-
      Specifies if Excel wraps the text in the object.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'wrapText: boolean;'
      return:
        type: boolean
methods:
  - name: delete()
    uid: 'excel!Excel.Style#delete:member(1)'
    package: excel!
    fullName: delete()
    summary: >-
      Deletes this style.


      \[ [API set: ExcelApi
      1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/style.yaml

          await Excel.run(async (context) => {
              let style = context.workbook.styles.getItem("Diagonal Orientation Style");

              // Delete the diagonal orientation style from the style collection.
              // Styles are in the Home tab ribbon.
              style.delete();

              await context.sync();

              console.log("Successfully deleted the diagonal orientation style from the Home tab ribbon.");
          });

          ```
  - name: load(options)
    uid: 'excel!Excel.Style#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.StyleLoadOptions): Excel.Style;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="excel!Excel.Interfaces.StyleLoadOptions:interface" />'
      return:
        type: '<xref uid="excel!Excel.Style:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/style.yaml

          await Excel.run(async (context) => {
              let style = context.workbook.styles.getItem("Diagonal Orientation Style");            
              style.load("textOrientation, horizontalAlignment, autoIndent, readingOrder, wrapText, includeProtection, shrinkToFit, locked");

              await context.sync();

              console.log("Orientation: " + style.textOrientation);
              console.log("Horizontal alignment: " + style.horizontalAlignment);
              console.log("Add indent: " + style.autoIndent);
              console.log("Reading order: " + style.readingOrder);
              console.log("Wrap text: " + style.wrapText);
              console.log("Include protection: " + style.includeProtection);
              console.log("Shrink to fit: " + style.shrinkToFit);
              console.log("Style locked: " + style.locked);
          });

          ```
  - name: load(propertyNames)
    uid: 'excel!Excel.Style#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Style;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.Style:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.Style#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Style;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.Style:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'excel!Excel.Style#set:member(1)'
    package: excel!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.Style): void`
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.StyleUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: '<xref uid="excel!Excel.Interfaces.StyleUpdateData:interface" />'
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'excel!Excel.Style#set:member(2)'
    package: excel!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.Style): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="excel!Excel.Style:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.Style#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Excel.Style object is
      an API object, the `toJSON` method returns a plain JavaScript object
      (typed as `Excel.Interfaces.StyleData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.StyleData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.StyleData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
