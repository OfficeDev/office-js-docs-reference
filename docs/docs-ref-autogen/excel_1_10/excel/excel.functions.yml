### YamlMime:TSType
name: Excel.Functions
uid: 'excel!Excel.Functions:class'
package: excel!
fullName: Excel.Functions
summary: >-
  An object for evaluating Excel functions.


  \[ [API set: ExcelApi
  1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'excel!Excel.Functions#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
methods:
  - name: abs(number)
    uid: 'excel!Excel.Functions#abs:member(1)'
    package: excel!
    fullName: abs(number)
    summary: >-
      Returns the absolute value of a number, a number without its sign.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        abs(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the real number for which you want the absolute value.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: >-
      accrInt(issue, firstInterest, settlement, rate, par, frequency, basis,
      calcMethod)
    uid: 'excel!Excel.Functions#accrInt:member(1)'
    package: excel!
    fullName: >-
      accrInt(issue, firstInterest, settlement, rate, par, frequency, basis,
      calcMethod)
    summary: >-
      Returns the accrued interest for a security that pays periodic interest.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        accrInt(issue: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, firstInterest: number
        | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, settlement: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, par: number | string | boolean | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        calcMethod?: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: firstInterest
          description: >-
            Is the security's first interest date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the security's annual coupon rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: par
          description: Is the security's par value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: calcMethod
          description: >-
            Is a logical value: to accrued interest from issue date = TRUE or
            omitted; to calculate from last coupon payment date = FALSE.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'accrIntM(issue, settlement, rate, par, basis)'
    uid: 'excel!Excel.Functions#accrIntM:member(1)'
    package: excel!
    fullName: 'accrIntM(issue, settlement, rate, par, basis)'
    summary: >-
      Returns the accrued interest for a security that pays interest at
      maturity.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        accrIntM(issue: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, settlement: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, par: number | string
        | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: settlement
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the security's annual coupon rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: par
          description: Is the security's par value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: acos(number)
    uid: 'excel!Excel.Functions#acos:member(1)'
    package: excel!
    fullName: acos(number)
    summary: >-
      Returns the arccosine of a number, in radians in the range 0 to Pi. The
      arccosine is the angle whose cosine is Number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        acos(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the cosine of the angle you want and must be from -1 to 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: acosh(number)
    uid: 'excel!Excel.Functions#acosh:member(1)'
    package: excel!
    fullName: acosh(number)
    summary: >-
      Returns the inverse hyperbolic cosine of a number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        acosh(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is any real number equal to or greater than 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: acot(number)
    uid: 'excel!Excel.Functions#acot:member(1)'
    package: excel!
    fullName: acot(number)
    summary: >-
      Returns the arccotangent of a number, in radians in the range 0 to Pi.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        acot(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the cotangent of the angle you want.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: acoth(number)
    uid: 'excel!Excel.Functions#acoth:member(1)'
    package: excel!
    fullName: acoth(number)
    summary: >-
      Returns the inverse hyperbolic cotangent of a number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        acoth(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the hyperbolic cotangent of the angle that you want.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'amorDegrc(cost, datePurchased, firstPeriod, salvage, period, rate, basis)'
    uid: 'excel!Excel.Functions#amorDegrc:member(1)'
    package: excel!
    fullName: 'amorDegrc(cost, datePurchased, firstPeriod, salvage, period, rate, basis)'
    summary: >-
      Returns the prorated linear depreciation of an asset for each accounting
      period.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        amorDegrc(cost: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, datePurchased: number
        | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, firstPeriod: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, period: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: cost
          description: Is the cost of the asset.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: datePurchased
          description: Is the date the asset is purchased.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: firstPeriod
          description: Is the date of the end of the first period.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: salvage
          description: Is the salvage value at the end of life of the asset.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: period
          description: Is the period.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the rate of depreciation.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: >-
            Year\_basis : 0 for year of 360 days, 1 for actual, 3 for year of
            365 days.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'amorLinc(cost, datePurchased, firstPeriod, salvage, period, rate, basis)'
    uid: 'excel!Excel.Functions#amorLinc:member(1)'
    package: excel!
    fullName: 'amorLinc(cost, datePurchased, firstPeriod, salvage, period, rate, basis)'
    summary: >-
      Returns the prorated linear depreciation of an asset for each accounting
      period.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        amorLinc(cost: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, datePurchased: number
        | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, firstPeriod: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, period: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: cost
          description: Is the cost of the asset.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: datePurchased
          description: Is the date the asset is purchased.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: firstPeriod
          description: Is the date of the end of the first period.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: salvage
          description: Is the salvage value at the end of life of the asset.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: period
          description: Is the period.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the rate of depreciation.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: >-
            Year\_basis : 0 for year of 360 days, 1 for actual, 3 for year of
            365 days.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: and(values)
    uid: 'excel!Excel.Functions#and:member(1)'
    package: excel!
    fullName: and(values)
    summary: >-
      Checks whether all arguments are TRUE, and returns TRUE if all arguments
      are TRUE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        and(...values: Array<boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<boolean>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 conditions you want
            to test that can be either TRUE or FALSE and can be logical values,
            arrays, or references.
          type: >-
            Array&lt;boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: arabic(text)
    uid: 'excel!Excel.Functions#arabic:member(1)'
    package: excel!
    fullName: arabic(text)
    summary: >-
      Converts a Roman numeral to Arabic.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        arabic(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: text
          description: Is the Roman numeral you want to convert.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: areas(reference)
    uid: 'excel!Excel.Functions#areas:member(1)'
    package: excel!
    fullName: areas(reference)
    summary: >-
      Returns the number of areas in a reference. An area is a range of
      contiguous cells or a single cell.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        areas(reference: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: reference
          description: >-
            Is a reference to a cell or range of cells and can refer to multiple
            areas.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: asc(text)
    uid: 'excel!Excel.Functions#asc:member(1)'
    package: excel!
    fullName: asc(text)
    summary: >-
      Changes full-width (double-byte) characters to half-width (single-byte)
      characters. Use with double-byte character sets (DBCS).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        asc(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: text
          description: 'Is a text, or a reference to a cell containing a text.'
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: asin(number)
    uid: 'excel!Excel.Functions#asin:member(1)'
    package: excel!
    fullName: asin(number)
    summary: >-
      Returns the arcsine of a number in radians, in the range -Pi/2 to Pi/2.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        asin(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the sine of the angle you want and must be from -1 to 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: asinh(number)
    uid: 'excel!Excel.Functions#asinh:member(1)'
    package: excel!
    fullName: asinh(number)
    summary: >-
      Returns the inverse hyperbolic sine of a number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        asinh(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is any real number equal to or greater than 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: atan(number)
    uid: 'excel!Excel.Functions#atan:member(1)'
    package: excel!
    fullName: atan(number)
    summary: >-
      Returns the arctangent of a number in radians, in the range -Pi/2 to Pi/2.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        atan(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the tangent of the angle you want.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'atan2(xNum, yNum)'
    uid: 'excel!Excel.Functions#atan2:member(1)'
    package: excel!
    fullName: 'atan2(xNum, yNum)'
    summary: >-
      Returns the arctangent of the specified x- and y- coordinates, in radians
      between -Pi and Pi, excluding -Pi.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        atan2(xNum: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, yNum: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: xNum
          description: Is the x-coordinate of the point.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: yNum
          description: Is the y-coordinate of the point.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: atanh(number)
    uid: 'excel!Excel.Functions#atanh:member(1)'
    package: excel!
    fullName: atanh(number)
    summary: >-
      Returns the inverse hyperbolic tangent of a number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        atanh(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is any real number between -1 and 1 excluding -1 and 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: aveDev(values)
    uid: 'excel!Excel.Functions#aveDev:member(1)'
    package: excel!
    fullName: aveDev(values)
    summary: >-
      Returns the average of the absolute deviations of data points from their
      mean. Arguments can be numbers or names, arrays, or references that
      contain numbers.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        aveDev(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 arguments for which
            you want the average of the absolute deviations.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: average(values)
    uid: 'excel!Excel.Functions#average:member(1)'
    package: excel!
    fullName: average(values)
    summary: >-
      Returns the average (arithmetic mean) of its arguments, which can be
      numbers or names, arrays, or references that contain numbers.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        average(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numeric arguments
            for which you want the average.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: averageA(values)
    uid: 'excel!Excel.Functions#averageA:member(1)'
    package: excel!
    fullName: averageA(values)
    summary: >-
      Returns the average (arithmetic mean) of its arguments, evaluating text
      and FALSE in arguments as 0; TRUE evaluates as 1. Arguments can be
      numbers, names, arrays, or references.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        averageA(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 arguments for which
            you want the average.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'averageIf(range, criteria, averageRange)'
    uid: 'excel!Excel.Functions#averageIf:member(1)'
    package: excel!
    fullName: 'averageIf(range, criteria, averageRange)'
    summary: >-
      Finds average(arithmetic mean) for the cells specified by a given
      condition or criteria.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        averageIf(range: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, criteria: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        averageRange?: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: range
          description: Is the range of cells you want evaluated.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the condition or criteria in the form of a number, expression, or
            text that defines which cells will be used to find the average.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: averageRange
          description: >-
            Are the actual cells to be used to find the average. If omitted, the
            cells in range are used.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'averageIfs(averageRange, values)'
    uid: 'excel!Excel.Functions#averageIfs:member(1)'
    package: excel!
    fullName: 'averageIfs(averageRange, values)'
    summary: >-
      Finds average(arithmetic mean) for the cells specified by a given set of
      conditions or criteria.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        averageIfs(averageRange: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, ...values: Array<Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any> | number | string |
        boolean>): FunctionResult<number>;
      parameters:
        - id: averageRange
          description: Are the actual cells to be used to find the average.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: values
          description: >-
            List of parameters, where the first element of each pair is the Is
            the range of cells you want evaluated for the particular condition ,
            and the second element is is the condition or criteria in the form
            of a number, expression, or text that defines which cells will be
            used to find the average.
          type: >-
            Array&lt;<xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt; | number |
            string | boolean&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: bahtText(number)
    uid: 'excel!Excel.Functions#bahtText:member(1)'
    package: excel!
    fullName: bahtText(number)
    summary: >-
      Converts a number to text (baht).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bahtText(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: number
          description: Is a number that you want to convert.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'base(number, radix, minLength)'
    uid: 'excel!Excel.Functions#base:member(1)'
    package: excel!
    fullName: 'base(number, radix, minLength)'
    summary: >-
      Converts a number into a text representation with the given radix (base).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        base(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, radix: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, minLength?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: number
          description: Is the number that you want to convert.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: radix
          description: Is the base Radix that you want to convert the number into.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: minLength
          description: >-
            Is the minimum length of the returned string. If omitted leading
            zeros are not added.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'besselI(x, n)'
    uid: 'excel!Excel.Functions#besselI:member(1)'
    package: excel!
    fullName: 'besselI(x, n)'
    summary: >-
      Returns the modified Bessel function In(x).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        besselI(x: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, n: number | string |
        boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value at which to evaluate the function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: 'n'
          description: Is the order of the Bessel function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'besselJ(x, n)'
    uid: 'excel!Excel.Functions#besselJ:member(1)'
    package: excel!
    fullName: 'besselJ(x, n)'
    summary: >-
      Returns the Bessel function Jn(x).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        besselJ(x: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, n: number | string |
        boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value at which to evaluate the function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: 'n'
          description: Is the order of the Bessel function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'besselK(x, n)'
    uid: 'excel!Excel.Functions#besselK:member(1)'
    package: excel!
    fullName: 'besselK(x, n)'
    summary: >-
      Returns the modified Bessel function Kn(x).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        besselK(x: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, n: number | string |
        boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value at which to evaluate the function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: 'n'
          description: Is the order of the function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'besselY(x, n)'
    uid: 'excel!Excel.Functions#besselY:member(1)'
    package: excel!
    fullName: 'besselY(x, n)'
    summary: >-
      Returns the Bessel function Yn(x).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        besselY(x: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, n: number | string |
        boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value at which to evaluate the function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: 'n'
          description: Is the order of the function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'beta_Dist(x, alpha, beta, cumulative, A, B)'
    uid: 'excel!Excel.Functions#beta_Dist:member(1)'
    package: excel!
    fullName: 'beta_Dist(x, alpha, beta, cumulative, A, B)'
    summary: >-
      Returns the beta probability distribution function.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        beta_Dist(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, alpha: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, beta: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, A?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, B?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value between A and B at which to evaluate the function.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: alpha
          description: Is a parameter to the distribution and must be greater than 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: beta
          description: Is a parameter to the distribution and must be greater than 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability density function, use FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: A
          description: 'Is an optional lower bound to the interval of x. If omitted, A = 0.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: B
          description: 'Is an optional upper bound to the interval of x. If omitted, B = 1.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'beta_Inv(probability, alpha, beta, A, B)'
    uid: 'excel!Excel.Functions#beta_Inv:member(1)'
    package: excel!
    fullName: 'beta_Inv(probability, alpha, beta, A, B)'
    summary: >-
      Returns the inverse of the cumulative beta probability density function
      (BETA.DIST).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        beta_Inv(probability: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, alpha: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, beta: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, A?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        B?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: probability
          description: Is a probability associated with the beta distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: alpha
          description: Is a parameter to the distribution and must be greater than 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: beta
          description: Is a parameter to the distribution and must be greater than 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: A
          description: 'Is an optional lower bound to the interval of x. If omitted, A = 0.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: B
          description: 'Is an optional upper bound to the interval of x. If omitted, B = 1.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: bin2Dec(number)
    uid: 'excel!Excel.Functions#bin2Dec:member(1)'
    package: excel!
    fullName: bin2Dec(number)
    summary: >-
      Converts a binary number to decimal.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bin2Dec(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the binary number you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bin2Hex(number, places)'
    uid: 'excel!Excel.Functions#bin2Hex:member(1)'
    package: excel!
    fullName: 'bin2Hex(number, places)'
    summary: >-
      Converts a binary number to hexadecimal.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bin2Hex(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, places?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the binary number you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bin2Oct(number, places)'
    uid: 'excel!Excel.Functions#bin2Oct:member(1)'
    package: excel!
    fullName: 'bin2Oct(number, places)'
    summary: >-
      Converts a binary number to octal.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bin2Oct(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, places?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the binary number you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'binom_Dist_Range(trials, probabilityS, numberS, numberS2)'
    uid: 'excel!Excel.Functions#binom_Dist_Range:member(1)'
    package: excel!
    fullName: 'binom_Dist_Range(trials, probabilityS, numberS, numberS2)'
    summary: >-
      Returns the probability of a trial result using a binomial distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        binom_Dist_Range(trials: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, probabilityS: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, numberS: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        numberS2?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: trials
          description: Is the number of independent trials.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: probabilityS
          description: Is the probability of success on each trial.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberS
          description: Is the number of successes in trials.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberS2
          description: >-
            If provided this function returns the probability that the number of
            successful trials shall lie between numberS and numberS2.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'binom_Dist(numberS, trials, probabilityS, cumulative)'
    uid: 'excel!Excel.Functions#binom_Dist:member(1)'
    package: excel!
    fullName: 'binom_Dist(numberS, trials, probabilityS, cumulative)'
    summary: >-
      Returns the individual term binomial distribution probability.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        binom_Dist(numberS: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, trials: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, probabilityS: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: numberS
          description: Is the number of successes in trials.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: trials
          description: Is the number of independent trials.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: probabilityS
          description: Is the probability of success on each trial.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability mass function, use FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'binom_Inv(trials, probabilityS, alpha)'
    uid: 'excel!Excel.Functions#binom_Inv:member(1)'
    package: excel!
    fullName: 'binom_Inv(trials, probabilityS, alpha)'
    summary: >-
      Returns the smallest value for which the cumulative binomial distribution
      is greater than or equal to a criterion value.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        binom_Inv(trials: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, probabilityS: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, alpha: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: trials
          description: Is the number of Bernoulli trials.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: probabilityS
          description: >-
            Is the probability of success on each trial, a number between 0 and
            1 inclusive.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: alpha
          description: 'Is the criterion value, a number between 0 and 1 inclusive.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bitand(number1, number2)'
    uid: 'excel!Excel.Functions#bitand:member(1)'
    package: excel!
    fullName: 'bitand(number1, number2)'
    summary: >-
      Returns a bitwise 'And' of two numbers.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bitand(number1: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, number2: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number1
          description: >-
            Is the decimal representation of the binary number you want to
            evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: number2
          description: >-
            Is the decimal representation of the binary number you want to
            evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bitlshift(number, shiftAmount)'
    uid: 'excel!Excel.Functions#bitlshift:member(1)'
    package: excel!
    fullName: 'bitlshift(number, shiftAmount)'
    summary: >-
      Returns a number shifted left by shift\_amount bits.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bitlshift(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, shiftAmount: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: >-
            Is the decimal representation of the binary number you want to
            evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: shiftAmount
          description: Is the number of bits that you want to shift Number left by.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bitor(number1, number2)'
    uid: 'excel!Excel.Functions#bitor:member(1)'
    package: excel!
    fullName: 'bitor(number1, number2)'
    summary: >-
      Returns a bitwise 'Or' of two numbers.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bitor(number1: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, number2: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number1
          description: >-
            Is the decimal representation of the binary number you want to
            evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: number2
          description: >-
            Is the decimal representation of the binary number you want to
            evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bitrshift(number, shiftAmount)'
    uid: 'excel!Excel.Functions#bitrshift:member(1)'
    package: excel!
    fullName: 'bitrshift(number, shiftAmount)'
    summary: >-
      Returns a number shifted right by shift\_amount bits.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bitrshift(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, shiftAmount: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: >-
            Is the decimal representation of the binary number you want to
            evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: shiftAmount
          description: Is the number of bits that you want to shift Number right by.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bitxor(number1, number2)'
    uid: 'excel!Excel.Functions#bitxor:member(1)'
    package: excel!
    fullName: 'bitxor(number1, number2)'
    summary: >-
      Returns a bitwise 'Exclusive Or' of two numbers.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bitxor(number1: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, number2: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number1
          description: >-
            Is the decimal representation of the binary number you want to
            evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: number2
          description: >-
            Is the decimal representation of the binary number you want to
            evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'ceiling_Math(number, significance, mode)'
    uid: 'excel!Excel.Functions#ceiling_Math:member(1)'
    package: excel!
    fullName: 'ceiling_Math(number, significance, mode)'
    summary: >-
      Rounds a number up, to the nearest integer or to the nearest multiple of
      significance.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        ceiling_Math(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, significance?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, mode?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: significance
          description: Is the multiple to which you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: mode
          description: When given and nonzero this function will round away from zero.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'ceiling_Precise(number, significance)'
    uid: 'excel!Excel.Functions#ceiling_Precise:member(1)'
    package: excel!
    fullName: 'ceiling_Precise(number, significance)'
    summary: >-
      Rounds a number up, to the nearest integer or to the nearest multiple of
      significance.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        ceiling_Precise(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, significance?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: significance
          description: Is the multiple to which you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: char(number)
    uid: 'excel!Excel.Functions#char:member(1)'
    package: excel!
    fullName: char(number)
    summary: >-
      Returns the character specified by the code number from the character set
      for your computer.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        char(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: number
          description: Is a number between 1 and 255 specifying which character you want.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'chiSq_Dist_RT(x, degFreedom)'
    uid: 'excel!Excel.Functions#chiSq_Dist_RT:member(1)'
    package: excel!
    fullName: 'chiSq_Dist_RT(x, degFreedom)'
    summary: >-
      Returns the right-tailed probability of the chi-squared distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        chiSq_Dist_RT(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, degFreedom: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: x
          description: >-
            Is the value at which you want to evaluate the distribution, a
            nonnegative number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom
          description: >-
            Is the number of degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'chiSq_Dist(x, degFreedom, cumulative)'
    uid: 'excel!Excel.Functions#chiSq_Dist:member(1)'
    package: excel!
    fullName: 'chiSq_Dist(x, degFreedom, cumulative)'
    summary: >-
      Returns the left-tailed probability of the chi-squared distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        chiSq_Dist(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, degFreedom: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: x
          description: >-
            Is the value at which you want to evaluate the distribution, a
            nonnegative number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom
          description: >-
            Is the number of degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value for the function to return: the cumulative
            distribution function = TRUE; the probability density function =
            FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'chiSq_Inv_RT(probability, degFreedom)'
    uid: 'excel!Excel.Functions#chiSq_Inv_RT:member(1)'
    package: excel!
    fullName: 'chiSq_Inv_RT(probability, degFreedom)'
    summary: >-
      Returns the inverse of the right-tailed probability of the chi-squared
      distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        chiSq_Inv_RT(probability: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, degFreedom: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: probability
          description: >-
            Is a probability associated with the chi-squared distribution, a
            value between 0 and 1 inclusive.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom
          description: >-
            Is the number of degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'chiSq_Inv(probability, degFreedom)'
    uid: 'excel!Excel.Functions#chiSq_Inv:member(1)'
    package: excel!
    fullName: 'chiSq_Inv(probability, degFreedom)'
    summary: >-
      Returns the inverse of the left-tailed probability of the chi-squared
      distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        chiSq_Inv(probability: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, degFreedom: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: probability
          description: >-
            Is a probability associated with the chi-squared distribution, a
            value between 0 and 1 inclusive.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom
          description: >-
            Is the number of degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'choose(indexNum, values)'
    uid: 'excel!Excel.Functions#choose:member(1)'
    package: excel!
    fullName: 'choose(indexNum, values)'
    summary: >-
      Chooses a value or action to perform from a list of values, based on an
      index number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        choose(indexNum: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, ...values: Array<Excel.Range | number |
        string | boolean | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number | string | boolean>;
      parameters:
        - id: indexNum
          description: >-
            Specifies which value argument is selected. indexNum must be between
            1 and 254, or a formula or a reference to a number between 1 and
            254.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 254 numbers, cell
            references, defined names, formulas, functions, or text arguments
            from which CHOOSE selects.
          type: >-
            Array&lt;<xref uid="excel!Excel.Range:class" /> | number | string |
            boolean | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: >-
          <xref uid="excel!Excel.FunctionResult:class" />&lt;number | string |
          boolean&gt;
        description: ''
  - name: clean(text)
    uid: 'excel!Excel.Functions#clean:member(1)'
    package: excel!
    fullName: clean(text)
    summary: >-
      Removes all nonprintable characters from text.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        clean(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: text
          description: >-
            Is any worksheet information from which you want to remove
            nonprintable characters.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: code(text)
    uid: 'excel!Excel.Functions#code:member(1)'
    package: excel!
    fullName: code(text)
    summary: >-
      Returns a numeric code for the first character in a text string, in the
      character set used by your computer.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        code(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: text
          description: Is the text for which you want the code of the first character.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: columns(array)
    uid: 'excel!Excel.Functions#columns:member(1)'
    package: excel!
    fullName: columns(array)
    summary: >-
      Returns the number of columns in an array or reference.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        columns(array: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: array
          description: >-
            Is an array or array formula, or a reference to a range of cells for
            which you want the number of columns.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'combin(number, numberChosen)'
    uid: 'excel!Excel.Functions#combin:member(1)'
    package: excel!
    fullName: 'combin(number, numberChosen)'
    summary: >-
      Returns the number of combinations for a given number of items.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        combin(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numberChosen: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the total number of items.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberChosen
          description: Is the number of items in each combination.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'combina(number, numberChosen)'
    uid: 'excel!Excel.Functions#combina:member(1)'
    package: excel!
    fullName: 'combina(number, numberChosen)'
    summary: >-
      Returns the number of combinations with repetitions for a given number of
      items.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        combina(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numberChosen: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the total number of items.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberChosen
          description: Is the number of items in each combination.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'complex(realNum, iNum, suffix)'
    uid: 'excel!Excel.Functions#complex:member(1)'
    package: excel!
    fullName: 'complex(realNum, iNum, suffix)'
    summary: >-
      Converts real and imaginary coefficients into a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        complex(realNum: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, iNum: number | string
        | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, suffix?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: realNum
          description: Is the real coefficient of the complex number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: iNum
          description: Is the imaginary coefficient of the complex number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: suffix
          description: Is the suffix for the imaginary component of the complex number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: concatenate(values)
    uid: 'excel!Excel.Functions#concatenate:member(1)'
    package: excel!
    fullName: concatenate(values)
    summary: >-
      Joins several text strings into one text string.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        concatenate(...values: Array<string | Excel.Range | Excel.RangeReference
        | Excel.FunctionResult<any>>): FunctionResult<string>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 text strings to be
            joined into a single text string and can be text strings, numbers,
            or single-cell references.
          type: >-
            Array&lt;string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'confidence_Norm(alpha, standardDev, size)'
    uid: 'excel!Excel.Functions#confidence_Norm:member(1)'
    package: excel!
    fullName: 'confidence_Norm(alpha, standardDev, size)'
    summary: >-
      Returns the confidence interval for a population mean, using a normal
      distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        confidence_Norm(alpha: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, standardDev: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, size: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: alpha
          description: >-
            Is the significance level used to compute the confidence level, a
            number greater than 0 and less than 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: standardDev
          description: >-
            Is the population standard deviation for the data range and is
            assumed to be known. standardDev must be greater than 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: size
          description: Is the sample size.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'confidence_T(alpha, standardDev, size)'
    uid: 'excel!Excel.Functions#confidence_T:member(1)'
    package: excel!
    fullName: 'confidence_T(alpha, standardDev, size)'
    summary: >-
      Returns the confidence interval for a population mean, using a Student's T
      distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        confidence_T(alpha: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, standardDev: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, size: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: alpha
          description: >-
            Is the significance level used to compute the confidence level, a
            number greater than 0 and less than 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: standardDev
          description: >-
            Is the population standard deviation for the data range and is
            assumed to be known. standardDev must be greater than 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: size
          description: Is the sample size.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'convert(number, fromUnit, toUnit)'
    uid: 'excel!Excel.Functions#convert:member(1)'
    package: excel!
    fullName: 'convert(number, fromUnit, toUnit)'
    summary: >-
      Converts a number from one measurement system to another.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        convert(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, fromUnit: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, toUnit: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value in from\_units to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fromUnit
          description: Is the units for number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: toUnit
          description: Is the units for the result.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: cos(number)
    uid: 'excel!Excel.Functions#cos:member(1)'
    package: excel!
    fullName: cos(number)
    summary: >-
      Returns the cosine of an angle.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        cos(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the angle in radians for which you want the cosine.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: cosh(number)
    uid: 'excel!Excel.Functions#cosh:member(1)'
    package: excel!
    fullName: cosh(number)
    summary: >-
      Returns the hyperbolic cosine of a number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        cosh(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is any real number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: cot(number)
    uid: 'excel!Excel.Functions#cot:member(1)'
    package: excel!
    fullName: cot(number)
    summary: >-
      Returns the cotangent of an angle.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        cot(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the angle in radians for which you want the cotangent.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: coth(number)
    uid: 'excel!Excel.Functions#coth:member(1)'
    package: excel!
    fullName: coth(number)
    summary: >-
      Returns the hyperbolic cotangent of a number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        coth(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the angle in radians for which you want the hyperbolic cotangent.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: count(values)
    uid: 'excel!Excel.Functions#count:member(1)'
    package: excel!
    fullName: count(values)
    summary: >-
      Counts the number of cells in a range that contain numbers.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        count(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 arguments that can
            contain or refer to a variety of different types of data, but only
            numbers are counted.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: countA(values)
    uid: 'excel!Excel.Functions#countA:member(1)'
    package: excel!
    fullName: countA(values)
    summary: >-
      Counts the number of cells in a range that are not empty.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        countA(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 arguments
            representing the values and cells you want to count. Values can be
            any type of information.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: countBlank(range)
    uid: 'excel!Excel.Functions#countBlank:member(1)'
    package: excel!
    fullName: countBlank(range)
    summary: >-
      Counts the number of empty cells in a specified range of cells.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        countBlank(range: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: range
          description: Is the range from which you want to count the empty cells.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'countIf(range, criteria)'
    uid: 'excel!Excel.Functions#countIf:member(1)'
    package: excel!
    fullName: 'countIf(range, criteria)'
    summary: >-
      Counts the number of cells within a range that meet the given condition.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        countIf(range: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, criteria: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: range
          description: Is the range of cells from which you want to count nonblank cells.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the condition in the form of a number, expression, or text that
            defines which cells will be counted.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: countIfs(values)
    uid: 'excel!Excel.Functions#countIfs:member(1)'
    package: excel!
    fullName: countIfs(values)
    summary: >-
      Counts the number of cells specified by a given set of conditions or
      criteria.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        countIfs(...values: Array<Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any> | number | string | boolean>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, where the first element of each pair is the Is
            the range of cells you want evaluated for the particular condition ,
            and the second element is is the condition in the form of a number,
            expression, or text that defines which cells will be counted.
          type: >-
            Array&lt;<xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt; | number |
            string | boolean&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'coupDayBs(settlement, maturity, frequency, basis)'
    uid: 'excel!Excel.Functions#coupDayBs:member(1)'
    package: excel!
    fullName: 'coupDayBs(settlement, maturity, frequency, basis)'
    summary: >-
      Returns the number of days from the beginning of the coupon period to the
      settlement date.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        coupDayBs(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'coupDays(settlement, maturity, frequency, basis)'
    uid: 'excel!Excel.Functions#coupDays:member(1)'
    package: excel!
    fullName: 'coupDays(settlement, maturity, frequency, basis)'
    summary: >-
      Returns the number of days in the coupon period that contains the
      settlement date.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        coupDays(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'coupDaysNc(settlement, maturity, frequency, basis)'
    uid: 'excel!Excel.Functions#coupDaysNc:member(1)'
    package: excel!
    fullName: 'coupDaysNc(settlement, maturity, frequency, basis)'
    summary: >-
      Returns the number of days from the settlement date to the next coupon
      date.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        coupDaysNc(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'coupNcd(settlement, maturity, frequency, basis)'
    uid: 'excel!Excel.Functions#coupNcd:member(1)'
    package: excel!
    fullName: 'coupNcd(settlement, maturity, frequency, basis)'
    summary: >-
      Returns the next coupon date after the settlement date.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        coupNcd(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'coupNum(settlement, maturity, frequency, basis)'
    uid: 'excel!Excel.Functions#coupNum:member(1)'
    package: excel!
    fullName: 'coupNum(settlement, maturity, frequency, basis)'
    summary: >-
      Returns the number of coupons payable between the settlement date and
      maturity date.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        coupNum(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'coupPcd(settlement, maturity, frequency, basis)'
    uid: 'excel!Excel.Functions#coupPcd:member(1)'
    package: excel!
    fullName: 'coupPcd(settlement, maturity, frequency, basis)'
    summary: >-
      Returns the previous coupon date before the settlement date.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        coupPcd(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: csc(number)
    uid: 'excel!Excel.Functions#csc:member(1)'
    package: excel!
    fullName: csc(number)
    summary: >-
      Returns the cosecant of an angle.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        csc(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the angle in radians for which you want the cosecant.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: csch(number)
    uid: 'excel!Excel.Functions#csch:member(1)'
    package: excel!
    fullName: csch(number)
    summary: >-
      Returns the hyperbolic cosecant of an angle.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        csch(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the angle in radians for which you want the hyperbolic cosecant.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'cumIPmt(rate, nper, pv, startPeriod, endPeriod, type)'
    uid: 'excel!Excel.Functions#cumIPmt:member(1)'
    package: excel!
    fullName: 'cumIPmt(rate, nper, pv, startPeriod, endPeriod, type)'
    summary: >-
      Returns the cumulative interest paid between two periods.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        cumIPmt(rate: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, nper: number | string
        | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pv: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, startPeriod: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, endPeriod: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: rate
          description: Is the interest rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: nper
          description: Is the total number of payment periods.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pv
          description: Is the present value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: startPeriod
          description: Is the first period in the calculation.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: endPeriod
          description: Is the last period in the calculation.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: type
          description: Is the timing of the payment.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'cumPrinc(rate, nper, pv, startPeriod, endPeriod, type)'
    uid: 'excel!Excel.Functions#cumPrinc:member(1)'
    package: excel!
    fullName: 'cumPrinc(rate, nper, pv, startPeriod, endPeriod, type)'
    summary: >-
      Returns the cumulative principal paid on a loan between two periods.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        cumPrinc(rate: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, nper: number | string
        | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pv: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, startPeriod: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, endPeriod: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: rate
          description: Is the interest rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: nper
          description: Is the total number of payment periods.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pv
          description: Is the present value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: startPeriod
          description: Is the first period in the calculation.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: endPeriod
          description: Is the last period in the calculation.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: type
          description: Is the timing of the payment.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'date(year, month, day)'
    uid: 'excel!Excel.Functions#date:member(1)'
    package: excel!
    fullName: 'date(year, month, day)'
    summary: >-
      Returns the number that represents the date in Microsoft Excel date-time
      code.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        date(year: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, month: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, day: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: year
          description: >-
            Is a number from 1900 or 1904 (depending on the workbook's date
            system) to 9999.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: month
          description: Is a number from 1 to 12 representing the month of the year.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: day
          description: Is a number from 1 to 31 representing the day of the month.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: datevalue(dateText)
    uid: 'excel!Excel.Functions#datevalue:member(1)'
    package: excel!
    fullName: datevalue(dateText)
    summary: >-
      Converts a date in the form of text to a number that represents the date
      in Microsoft Excel date-time code.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        datevalue(dateText: string | number | Excel.Range | Excel.RangeReference
        | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: dateText
          description: >-
            Is text that represents a date in a Microsoft Excel date format,
            between 1/1/1900 or 1/1/1904 (depending on the workbook's date
            system) and 12/31/9999.
          type: >-
            string | number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'daverage(database, field, criteria)'
    uid: 'excel!Excel.Functions#daverage:member(1)'
    package: excel!
    fullName: 'daverage(database, field, criteria)'
    summary: >-
      Averages the values in a column in a list or database that match
      conditions you specify.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        daverage(database: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, field: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, criteria: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: database
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: day(serialNumber)
    uid: 'excel!Excel.Functions#day:member(1)'
    package: excel!
    fullName: day(serialNumber)
    summary: >-
      Returns the day of the month, a number from 1 to 31.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        day(serialNumber: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: serialNumber
          description: Is a number in the date-time code used by Microsoft Excel.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'days(endDate, startDate)'
    uid: 'excel!Excel.Functions#days:member(1)'
    package: excel!
    fullName: 'days(endDate, startDate)'
    summary: >-
      Returns the number of days between the two dates.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        days(endDate: string | number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, startDate: string | number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: endDate
          description: >-
            startDate and endDate are the two dates between which you want to
            know the number of days.
          type: >-
            string | number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: startDate
          description: >-
            startDate and endDate are the two dates between which you want to
            know the number of days.
          type: >-
            string | number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'days360(startDate, endDate, method)'
    uid: 'excel!Excel.Functions#days360:member(1)'
    package: excel!
    fullName: 'days360(startDate, endDate, method)'
    summary: >-
      Returns the number of days between two dates based on a 360-day year
      (twelve 30-day months).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        days360(startDate: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, endDate: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, method?: boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: startDate
          description: >-
            startDate and endDate are the two dates between which you want to
            know the number of days.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: endDate
          description: >-
            startDate and endDate are the two dates between which you want to
            know the number of days.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: method
          description: >-
            Is a logical value specifying the calculation method: U.S. (NASD) =
            FALSE or omitted; European = TRUE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'db(cost, salvage, life, period, month)'
    uid: 'excel!Excel.Functions#db:member(1)'
    package: excel!
    fullName: 'db(cost, salvage, life, period, month)'
    summary: >-
      Returns the depreciation of an asset for a specified period using the
      fixed-declining balance method.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        db(cost: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, salvage: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, life: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, period:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        month?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: cost
          description: Is the initial cost of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: salvage
          description: Is the salvage value at the end of the life of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: life
          description: >-
            Is the number of periods over which the asset is being depreciated
            (sometimes called the useful life of the asset).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: period
          description: >-
            Is the period for which you want to calculate the depreciation.
            Period must use the same units as Life.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: month
          description: >-
            Is the number of months in the first year. If month is omitted, it
            is assumed to be 12.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: dbcs(text)
    uid: 'excel!Excel.Functions#dbcs:member(1)'
    package: excel!
    fullName: dbcs(text)
    summary: >-
      Changes half-width (single-byte) characters within a character string to
      full-width (double-byte) characters. Use with double-byte character sets
      (DBCS).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dbcs(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: text
          description: 'Is a text, or a reference to a cell containing a text.'
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'dcount(database, field, criteria)'
    uid: 'excel!Excel.Functions#dcount:member(1)'
    package: excel!
    fullName: 'dcount(database, field, criteria)'
    summary: >-
      Counts the cells containing numbers in the field (column) of records in
      the database that match the conditions you specify.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dcount(database: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, field: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, criteria: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: database
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dcountA(database, field, criteria)'
    uid: 'excel!Excel.Functions#dcountA:member(1)'
    package: excel!
    fullName: 'dcountA(database, field, criteria)'
    summary: >-
      Counts nonblank cells in the field (column) of records in the database
      that match the conditions you specify.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dcountA(database: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, field: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, criteria: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: database
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'ddb(cost, salvage, life, period, factor)'
    uid: 'excel!Excel.Functions#ddb:member(1)'
    package: excel!
    fullName: 'ddb(cost, salvage, life, period, factor)'
    summary: >-
      Returns the depreciation of an asset for a specified period using the
      double-declining balance method or some other method you specify.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        ddb(cost: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, salvage: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, life: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, period:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        factor?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: cost
          description: Is the initial cost of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: salvage
          description: Is the salvage value at the end of the life of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: life
          description: >-
            Is the number of periods over which the asset is being depreciated
            (sometimes called the useful life of the asset).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: period
          description: >-
            Is the period for which you want to calculate the depreciation.
            Period must use the same units as Life.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: factor
          description: >-
            Is the rate at which the balance declines. If Factor is omitted, it
            is assumed to be 2 (the double-declining balance method).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dec2Bin(number, places)'
    uid: 'excel!Excel.Functions#dec2Bin:member(1)'
    package: excel!
    fullName: 'dec2Bin(number, places)'
    summary: >-
      Converts a decimal number to binary.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dec2Bin(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, places?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the decimal integer you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dec2Hex(number, places)'
    uid: 'excel!Excel.Functions#dec2Hex:member(1)'
    package: excel!
    fullName: 'dec2Hex(number, places)'
    summary: >-
      Converts a decimal number to hexadecimal.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dec2Hex(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, places?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the decimal integer you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dec2Oct(number, places)'
    uid: 'excel!Excel.Functions#dec2Oct:member(1)'
    package: excel!
    fullName: 'dec2Oct(number, places)'
    summary: >-
      Converts a decimal number to octal.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dec2Oct(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, places?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the decimal integer you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'decimal(number, radix)'
    uid: 'excel!Excel.Functions#decimal:member(1)'
    package: excel!
    fullName: 'decimal(number, radix)'
    summary: >-
      Converts a text representation of a number in a given base into a decimal
      number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        decimal(number: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, radix: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the number that you want to convert.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: radix
          description: Is the base Radix of the number you are converting.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: degrees(angle)
    uid: 'excel!Excel.Functions#degrees:member(1)'
    package: excel!
    fullName: degrees(angle)
    summary: >-
      Converts radians to degrees.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        degrees(angle: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: angle
          description: Is the angle in radians that you want to convert.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'delta(number1, number2)'
    uid: 'excel!Excel.Functions#delta:member(1)'
    package: excel!
    fullName: 'delta(number1, number2)'
    summary: >-
      Tests whether two numbers are equal.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        delta(number1: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, number2?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number1
          description: Is the first number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: number2
          description: Is the second number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: devSq(values)
    uid: 'excel!Excel.Functions#devSq:member(1)'
    package: excel!
    fullName: devSq(values)
    summary: >-
      Returns the sum of squares of deviations of data points from their sample
      mean.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        devSq(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 arguments, or an
            array or array reference, on which you want DEVSQ to calculate.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dget(database, field, criteria)'
    uid: 'excel!Excel.Functions#dget:member(1)'
    package: excel!
    fullName: 'dget(database, field, criteria)'
    summary: >-
      Extracts from a database a single record that matches the conditions you
      specify.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dget(database: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, field: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, criteria: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number | boolean | string>;
      parameters:
        - id: database
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: >-
          <xref uid="excel!Excel.FunctionResult:class" />&lt;number | boolean |
          string&gt;
        description: ''
  - name: 'disc(settlement, maturity, pr, redemption, basis)'
    uid: 'excel!Excel.Functions#disc:member(1)'
    package: excel!
    fullName: 'disc(settlement, maturity, pr, redemption, basis)'
    summary: >-
      Returns the discount rate for a security.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        disc(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, redemption: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pr
          description: Is the security's price per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dmax(database, field, criteria)'
    uid: 'excel!Excel.Functions#dmax:member(1)'
    package: excel!
    fullName: 'dmax(database, field, criteria)'
    summary: >-
      Returns the largest number in the field (column) of records in the
      database that match the conditions you specify.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dmax(database: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, field: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, criteria: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: database
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dmin(database, field, criteria)'
    uid: 'excel!Excel.Functions#dmin:member(1)'
    package: excel!
    fullName: 'dmin(database, field, criteria)'
    summary: >-
      Returns the smallest number in the field (column) of records in the
      database that match the conditions you specify.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dmin(database: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, field: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, criteria: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: database
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dollar(number, decimals)'
    uid: 'excel!Excel.Functions#dollar:member(1)'
    package: excel!
    fullName: 'dollar(number, decimals)'
    summary: >-
      Converts a number to text, using currency format.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dollar(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, decimals?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: number
          description: >-
            Is a number, a reference to a cell containing a number, or a formula
            that evaluates to a number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: decimals
          description: >-
            Is the number of digits to the right of the decimal point. The
            number is rounded as necessary; if omitted, Decimals = 2.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'dollarDe(fractionalDollar, fraction)'
    uid: 'excel!Excel.Functions#dollarDe:member(1)'
    package: excel!
    fullName: 'dollarDe(fractionalDollar, fraction)'
    summary: >-
      Converts a dollar price, expressed as a fraction, into a dollar price,
      expressed as a decimal number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dollarDe(fractionalDollar: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, fraction: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: fractionalDollar
          description: Is a number expressed as a fraction.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fraction
          description: Is the integer to use in the denominator of the fraction.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dollarFr(decimalDollar, fraction)'
    uid: 'excel!Excel.Functions#dollarFr:member(1)'
    package: excel!
    fullName: 'dollarFr(decimalDollar, fraction)'
    summary: >-
      Converts a dollar price, expressed as a decimal number, into a dollar
      price, expressed as a fraction.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dollarFr(decimalDollar: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, fraction: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: decimalDollar
          description: Is a decimal number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fraction
          description: Is the integer to use in the denominator of a fraction.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dproduct(database, field, criteria)'
    uid: 'excel!Excel.Functions#dproduct:member(1)'
    package: excel!
    fullName: 'dproduct(database, field, criteria)'
    summary: >-
      Multiplies the values in the field (column) of records in the database
      that match the conditions you specify.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dproduct(database: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, field: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, criteria: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: database
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dstDev(database, field, criteria)'
    uid: 'excel!Excel.Functions#dstDev:member(1)'
    package: excel!
    fullName: 'dstDev(database, field, criteria)'
    summary: >-
      Estimates the standard deviation based on a sample from selected database
      entries.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dstDev(database: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, field: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, criteria: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: database
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dstDevP(database, field, criteria)'
    uid: 'excel!Excel.Functions#dstDevP:member(1)'
    package: excel!
    fullName: 'dstDevP(database, field, criteria)'
    summary: >-
      Calculates the standard deviation based on the entire population of
      selected database entries.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dstDevP(database: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, field: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, criteria: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: database
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dsum(database, field, criteria)'
    uid: 'excel!Excel.Functions#dsum:member(1)'
    package: excel!
    fullName: 'dsum(database, field, criteria)'
    summary: >-
      Adds the numbers in the field (column) of records in the database that
      match the conditions you specify.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dsum(database: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, field: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, criteria: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: database
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'duration(settlement, maturity, coupon, yld, frequency, basis)'
    uid: 'excel!Excel.Functions#duration:member(1)'
    package: excel!
    fullName: 'duration(settlement, maturity, coupon, yld, frequency, basis)'
    summary: >-
      Returns the annual duration of a security with periodic interest payments.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        duration(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, coupon: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yld:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: coupon
          description: Is the security's annual coupon rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: yld
          description: Is the security's annual yield.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dvar(database, field, criteria)'
    uid: 'excel!Excel.Functions#dvar:member(1)'
    package: excel!
    fullName: 'dvar(database, field, criteria)'
    summary: >-
      Estimates variance based on a sample from selected database entries.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dvar(database: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, field: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, criteria: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: database
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dvarP(database, field, criteria)'
    uid: 'excel!Excel.Functions#dvarP:member(1)'
    package: excel!
    fullName: 'dvarP(database, field, criteria)'
    summary: >-
      Calculates variance based on the entire population of selected database
      entries.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dvarP(database: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, field: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, criteria: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: database
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'ecma_Ceiling(number, significance)'
    uid: 'excel!Excel.Functions#ecma_Ceiling:member(1)'
    package: excel!
    fullName: 'ecma_Ceiling(number, significance)'
    summary: >-
      Rounds a number up, to the nearest integer or to the nearest multiple of
      significance.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        ecma_Ceiling(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, significance: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: significance
          description: Is the multiple to which you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'edate(startDate, months)'
    uid: 'excel!Excel.Functions#edate:member(1)'
    package: excel!
    fullName: 'edate(startDate, months)'
    summary: >-
      Returns the serial number of the date that is the indicated number of
      months before or after the start date.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        edate(startDate: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, months: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: months
          description: Is the number of months before or after startDate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'effect(nominalRate, npery)'
    uid: 'excel!Excel.Functions#effect:member(1)'
    package: excel!
    fullName: 'effect(nominalRate, npery)'
    summary: >-
      Returns the effective annual interest rate.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        effect(nominalRate: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, npery: number | string
        | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: nominalRate
          description: Is the nominal interest rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: npery
          description: Is the number of compounding periods per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'eoMonth(startDate, months)'
    uid: 'excel!Excel.Functions#eoMonth:member(1)'
    package: excel!
    fullName: 'eoMonth(startDate, months)'
    summary: >-
      Returns the serial number of the last day of the month before or after a
      specified number of months.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        eoMonth(startDate: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, months: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: months
          description: Is the number of months before or after the startDate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: erf_Precise(X)
    uid: 'excel!Excel.Functions#erf_Precise:member(1)'
    package: excel!
    fullName: erf_Precise(X)
    summary: >-
      Returns the error function.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        erf_Precise(X: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: X
          description: Is the lower bound for integrating ERF.PRECISE.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'erf(lowerLimit, upperLimit)'
    uid: 'excel!Excel.Functions#erf:member(1)'
    package: excel!
    fullName: 'erf(lowerLimit, upperLimit)'
    summary: >-
      Returns the error function.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        erf(lowerLimit: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, upperLimit?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: lowerLimit
          description: Is the lower bound for integrating ERF.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: upperLimit
          description: Is the upper bound for integrating ERF.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: erfC_Precise(X)
    uid: 'excel!Excel.Functions#erfC_Precise:member(1)'
    package: excel!
    fullName: erfC_Precise(X)
    summary: >-
      Returns the complementary error function.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        erfC_Precise(X: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: X
          description: Is the lower bound for integrating ERFC.PRECISE.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: erfC(x)
    uid: 'excel!Excel.Functions#erfC:member(1)'
    package: excel!
    fullName: erfC(x)
    summary: >-
      Returns the complementary error function.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        erfC(x: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the lower bound for integrating ERF.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: error_Type(errorVal)
    uid: 'excel!Excel.Functions#error_Type:member(1)'
    package: excel!
    fullName: error_Type(errorVal)
    summary: >-
      Returns a number matching an error value.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        error_Type(errorVal: string | number | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: errorVal
          description: >-
            Is the error value for which you want the identifying number, and
            can be an actual error value or a reference to a cell containing an
            error value.
          type: >-
            string | number | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: even(number)
    uid: 'excel!Excel.Functions#even:member(1)'
    package: excel!
    fullName: even(number)
    summary: >-
      Rounds a positive number up and negative number down to the nearest even
      integer.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        even(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'exact(text1, text2)'
    uid: 'excel!Excel.Functions#exact:member(1)'
    package: excel!
    fullName: 'exact(text1, text2)'
    summary: >-
      Checks whether two text strings are exactly the same, and returns TRUE or
      FALSE. EXACT is case-sensitive.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        exact(text1: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, text2: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      parameters:
        - id: text1
          description: Is the first text string.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: text2
          description: Is the second text string.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: exp(number)
    uid: 'excel!Excel.Functions#exp:member(1)'
    package: excel!
    fullName: exp(number)
    summary: >-
      Returns e raised to the power of a given number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        exp(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: >-
            Is the exponent applied to the base e. The constant e equals
            2.71828182845904, the base of the natural logarithm.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'expon_Dist(x, lambda, cumulative)'
    uid: 'excel!Excel.Functions#expon_Dist:member(1)'
    package: excel!
    fullName: 'expon_Dist(x, lambda, cumulative)'
    summary: >-
      Returns the exponential distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        expon_Dist(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, lambda: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: x
          description: 'Is the value of the function, a nonnegative number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: lambda
          description: 'Is the parameter value, a positive number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value for the function to return: the cumulative
            distribution function = TRUE; the probability density function =
            FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'f_Dist_RT(x, degFreedom1, degFreedom2)'
    uid: 'excel!Excel.Functions#f_Dist_RT:member(1)'
    package: excel!
    fullName: 'f_Dist_RT(x, degFreedom1, degFreedom2)'
    summary: >-
      Returns the (right-tailed) F probability distribution (degree of
      diversity) for two data sets.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        f_Dist_RT(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, degFreedom1: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, degFreedom2: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: x
          description: >-
            Is the value at which to evaluate the function, a nonnegative
            number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom1
          description: >-
            Is the numerator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom2
          description: >-
            Is the denominator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'f_Dist(x, degFreedom1, degFreedom2, cumulative)'
    uid: 'excel!Excel.Functions#f_Dist:member(1)'
    package: excel!
    fullName: 'f_Dist(x, degFreedom1, degFreedom2, cumulative)'
    summary: >-
      Returns the (left-tailed) F probability distribution (degree of diversity)
      for two data sets.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        f_Dist(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, degFreedom1: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, degFreedom2: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: >-
            Is the value at which to evaluate the function, a nonnegative
            number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom1
          description: >-
            Is the numerator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom2
          description: >-
            Is the denominator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value for the function to return: the cumulative
            distribution function = TRUE; the probability density function =
            FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'f_Inv_RT(probability, degFreedom1, degFreedom2)'
    uid: 'excel!Excel.Functions#f_Inv_RT:member(1)'
    package: excel!
    fullName: 'f_Inv_RT(probability, degFreedom1, degFreedom2)'
    summary: >-
      Returns the inverse of the (right-tailed) F probability distribution: if p
      = F.DIST.RT(x,...), then F.INV.RT(p,...) = x.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        f_Inv_RT(probability: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, degFreedom1: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, degFreedom2: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: probability
          description: >-
            Is a probability associated with the F cumulative distribution, a
            number between 0 and 1 inclusive.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom1
          description: >-
            Is the numerator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom2
          description: >-
            Is the denominator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'f_Inv(probability, degFreedom1, degFreedom2)'
    uid: 'excel!Excel.Functions#f_Inv:member(1)'
    package: excel!
    fullName: 'f_Inv(probability, degFreedom1, degFreedom2)'
    summary: >-
      Returns the inverse of the (left-tailed) F probability distribution: if p
      = F.DIST(x,...), then F.INV(p,...) = x.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        f_Inv(probability: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, degFreedom1: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, degFreedom2: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: probability
          description: >-
            Is a probability associated with the F cumulative distribution, a
            number between 0 and 1 inclusive.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom1
          description: >-
            Is the numerator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom2
          description: >-
            Is the denominator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: fact(number)
    uid: 'excel!Excel.Functions#fact:member(1)'
    package: excel!
    fullName: fact(number)
    summary: >-
      Returns the factorial of a number, equal to 1*2*3*...* Number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        fact(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the nonnegative number you want the factorial of.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: factDouble(number)
    uid: 'excel!Excel.Functions#factDouble:member(1)'
    package: excel!
    fullName: factDouble(number)
    summary: >-
      Returns the double factorial of a number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        factDouble(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value for which to return the double factorial.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: false()
    uid: 'excel!Excel.Functions#false:member(1)'
    package: excel!
    fullName: false()
    summary: >-
      Returns the logical value FALSE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'false(): FunctionResult<boolean>;'
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: 'find(findText, withinText, startNum)'
    uid: 'excel!Excel.Functions#find:member(1)'
    package: excel!
    fullName: 'find(findText, withinText, startNum)'
    summary: >-
      Returns the starting position of one text string within another text
      string. FIND is case-sensitive.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        find(findText: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, withinText: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, startNum?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: findText
          description: >-
            Is the text you want to find. Use double quotes (empty text) to
            match the first character in withinText; wildcard characters not
            allowed.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: withinText
          description: Is the text containing the text you want to find.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: startNum
          description: >-
            Specifies the character at which to start the search. The first
            character in withinText is character number 1. If omitted, startNum
            = 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'findB(findText, withinText, startNum)'
    uid: 'excel!Excel.Functions#findB:member(1)'
    package: excel!
    fullName: 'findB(findText, withinText, startNum)'
    summary: >-
      Finds the starting position of one text string within another text string.
      FINDB is case-sensitive. Use with double-byte character sets (DBCS).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        findB(findText: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, withinText: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, startNum?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: findText
          description: Is the text you want to find.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: withinText
          description: Is the text containing the text you want to find.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: startNum
          description: Specifies the character at which to start the search.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: fisher(x)
    uid: 'excel!Excel.Functions#fisher:member(1)'
    package: excel!
    fullName: fisher(x)
    summary: >-
      Returns the Fisher transformation.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        fisher(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: >-
            Is the value for which you want the transformation, a number between
            -1 and 1, excluding -1 and 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: fisherInv(y)
    uid: 'excel!Excel.Functions#fisherInv:member(1)'
    package: excel!
    fullName: fisherInv(y)
    summary: >-
      Returns the inverse of the Fisher transformation: if y = FISHER(x), then
      FISHERINV(y) = x.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        fisherInv(y: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: 'y'
          description: >-
            Is the value for which you want to perform the inverse of the
            transformation.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'fixed(number, decimals, noCommas)'
    uid: 'excel!Excel.Functions#fixed:member(1)'
    package: excel!
    fullName: 'fixed(number, decimals, noCommas)'
    summary: >-
      Rounds a number to the specified number of decimals and returns the result
      as text with or without commas.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        fixed(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, decimals?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, noCommas?: boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: number
          description: Is the number you want to round and convert to text.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: decimals
          description: >-
            Is the number of digits to the right of the decimal point. If
            omitted, Decimals = 2.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: noCommas
          description: >-
            Is a logical value: do not display commas in the returned text =
            TRUE; do display commas in the returned text = FALSE or omitted.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'floor_Math(number, significance, mode)'
    uid: 'excel!Excel.Functions#floor_Math:member(1)'
    package: excel!
    fullName: 'floor_Math(number, significance, mode)'
    summary: >-
      Rounds a number down, to the nearest integer or to the nearest multiple of
      significance.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        floor_Math(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, significance?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, mode?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: significance
          description: Is the multiple to which you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: mode
          description: When given and nonzero this function will round towards zero.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'floor_Precise(number, significance)'
    uid: 'excel!Excel.Functions#floor_Precise:member(1)'
    package: excel!
    fullName: 'floor_Precise(number, significance)'
    summary: >-
      Rounds a number down, to the nearest integer or to the nearest multiple of
      significance.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        floor_Precise(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, significance?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the numeric value you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: significance
          description: Is the multiple to which you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'fv(rate, nper, pmt, pv, type)'
    uid: 'excel!Excel.Functions#fv:member(1)'
    package: excel!
    fullName: 'fv(rate, nper, pmt, pv, type)'
    summary: >-
      Returns the future value of an investment based on periodic, constant
      payments and a constant interest rate.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        fv(rate: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, nper: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, pmt: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        type?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: rate
          description: >-
            Is the interest rate per period. For example, use 6%/4 for quarterly
            payments at 6% APR.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: nper
          description: Is the total number of payment periods in the investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pmt
          description: >-
            Is the payment made each period; it cannot change over the life of
            the investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pv
          description: >-
            Is the present value, or the lump-sum amount that a series of future
            payments is worth now. If omitted, Pv = 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: type
          description: >-
            Is a value representing the timing of payment: payment at the
            beginning of the period = 1; payment at the end of the period = 0 or
            omitted.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'fvschedule(principal, schedule)'
    uid: 'excel!Excel.Functions#fvschedule:member(1)'
    package: excel!
    fullName: 'fvschedule(principal, schedule)'
    summary: >-
      Returns the future value of an initial principal after applying a series
      of compound interest rates.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        fvschedule(principal: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, schedule: number |
        string | Excel.Range | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: principal
          description: Is the present value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: schedule
          description: Is an array of interest rates to apply.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | boolean |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'gamma_Dist(x, alpha, beta, cumulative)'
    uid: 'excel!Excel.Functions#gamma_Dist:member(1)'
    package: excel!
    fullName: 'gamma_Dist(x, alpha, beta, cumulative)'
    summary: >-
      Returns the gamma distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        gamma_Dist(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, alpha: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, beta: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: >-
            Is the value at which you want to evaluate the distribution, a
            nonnegative number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: alpha
          description: 'Is a parameter to the distribution, a positive number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: beta
          description: >-
            Is a parameter to the distribution, a positive number. If beta = 1,
            GAMMA.DIST returns the standard gamma distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value: return the cumulative distribution function =
            TRUE; return the probability mass function = FALSE or omitted.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'gamma_Inv(probability, alpha, beta)'
    uid: 'excel!Excel.Functions#gamma_Inv:member(1)'
    package: excel!
    fullName: 'gamma_Inv(probability, alpha, beta)'
    summary: >-
      Returns the inverse of the gamma cumulative distribution: if p =
      GAMMA.DIST(x,...), then GAMMA.INV(p,...) = x.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        gamma_Inv(probability: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, alpha: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, beta: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: probability
          description: >-
            Is the probability associated with the gamma distribution, a number
            between 0 and 1, inclusive.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: alpha
          description: 'Is a parameter to the distribution, a positive number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: beta
          description: >-
            Is a parameter to the distribution, a positive number. If beta = 1,
            GAMMA.INV returns the inverse of the standard gamma distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: gamma(x)
    uid: 'excel!Excel.Functions#gamma:member(1)'
    package: excel!
    fullName: gamma(x)
    summary: >-
      Returns the Gamma function value.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        gamma(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value for which you want to calculate Gamma.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: gammaLn_Precise(x)
    uid: 'excel!Excel.Functions#gammaLn_Precise:member(1)'
    package: excel!
    fullName: gammaLn_Precise(x)
    summary: >-
      Returns the natural logarithm of the gamma function.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        gammaLn_Precise(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: >-
            Is the value for which you want to calculate GAMMALN.PRECISE, a
            positive number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: gammaLn(x)
    uid: 'excel!Excel.Functions#gammaLn:member(1)'
    package: excel!
    fullName: gammaLn(x)
    summary: >-
      Returns the natural logarithm of the gamma function.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        gammaLn(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: >-
            Is the value for which you want to calculate GAMMALN, a positive
            number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: gauss(x)
    uid: 'excel!Excel.Functions#gauss:member(1)'
    package: excel!
    fullName: gauss(x)
    summary: >-
      Returns 0.5 less than the standard normal cumulative distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        gauss(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value for which you want the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: gcd(values)
    uid: 'excel!Excel.Functions#gcd:member(1)'
    package: excel!
    fullName: gcd(values)
    summary: >-
      Returns the greatest common divisor.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        gcd(...values: Array<number | string | Excel.Range | boolean |
        Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: 'List of parameters, whose elements are 1 to 255 values.'
          type: >-
            Array&lt;number | string | <xref uid="excel!Excel.Range:class" /> |
            boolean | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: geoMean(values)
    uid: 'excel!Excel.Functions#geoMean:member(1)'
    package: excel!
    fullName: geoMean(values)
    summary: >-
      Returns the geometric mean of an array or range of positive numeric data.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        geoMean(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers or names,
            arrays, or references that contain numbers for which you want the
            mean.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'geStep(number, step)'
    uid: 'excel!Excel.Functions#geStep:member(1)'
    package: excel!
    fullName: 'geStep(number, step)'
    summary: >-
      Tests whether a number is greater than a threshold value.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        geStep(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, step?: number | string
        | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value to test against step.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: step
          description: Is the threshold value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: harMean(values)
    uid: 'excel!Excel.Functions#harMean:member(1)'
    package: excel!
    fullName: harMean(values)
    summary: >-
      Returns the harmonic mean of a data set of positive numbers: the
      reciprocal of the arithmetic mean of reciprocals.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        harMean(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers or names,
            arrays, or references that contain numbers for which you want the
            harmonic mean.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'hex2Bin(number, places)'
    uid: 'excel!Excel.Functions#hex2Bin:member(1)'
    package: excel!
    fullName: 'hex2Bin(number, places)'
    summary: >-
      Converts a Hexadecimal number to binary.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        hex2Bin(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, places?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the hexadecimal number you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: hex2Dec(number)
    uid: 'excel!Excel.Functions#hex2Dec:member(1)'
    package: excel!
    fullName: hex2Dec(number)
    summary: >-
      Converts a hexadecimal number to decimal.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        hex2Dec(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the hexadecimal number you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'hex2Oct(number, places)'
    uid: 'excel!Excel.Functions#hex2Oct:member(1)'
    package: excel!
    fullName: 'hex2Oct(number, places)'
    summary: >-
      Converts a hexadecimal number to octal.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        hex2Oct(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, places?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the hexadecimal number you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'hlookup(lookupValue, tableArray, rowIndexNum, rangeLookup)'
    uid: 'excel!Excel.Functions#hlookup:member(1)'
    package: excel!
    fullName: 'hlookup(lookupValue, tableArray, rowIndexNum, rangeLookup)'
    summary: >-
      Looks for a value in the top row of a table or array of values and returns
      the value in the same column from a row you specify.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        hlookup(lookupValue: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, tableArray:
        Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>,
        rowIndexNum: Excel.Range | number | Excel.RangeReference |
        Excel.FunctionResult<any>, rangeLookup?: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number
        | string | boolean>;
      parameters:
        - id: lookupValue
          description: >-
            Is the value to be found in the first row of the table and can be a
            value, a reference, or a text string.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: tableArray
          description: >-
            Is a table of text, numbers, or logical values in which data is
            looked up. tableArray can be a reference to a range or a range name.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | number | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rowIndexNum
          description: >-
            Is the row number in tableArray from which the matching value should
            be returned. The first row of values in the table is row 1.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | number | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rangeLookup
          description: >-
            Is a logical value: to find the closest match in the top row (sorted
            in ascending order) = TRUE or omitted; find an exact match = FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: >-
          <xref uid="excel!Excel.FunctionResult:class" />&lt;number | string |
          boolean&gt;
        description: ''
  - name: hour(serialNumber)
    uid: 'excel!Excel.Functions#hour:member(1)'
    package: excel!
    fullName: hour(serialNumber)
    summary: >-
      Returns the hour as a number from 0 (12:00 A.M.) to 23 (11:00 P.M.).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        hour(serialNumber: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: serialNumber
          description: >-
            Is a number in the date-time code used by Microsoft Excel, or text
            in time format, such as 16:48:00 or 4:48:00 PM.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'hyperlink(linkLocation, friendlyName)'
    uid: 'excel!Excel.Functions#hyperlink:member(1)'
    package: excel!
    fullName: 'hyperlink(linkLocation, friendlyName)'
    summary: >-
      Creates a shortcut or jump that opens a document stored on your hard
      drive, a network server, or on the Internet.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        hyperlink(linkLocation: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, friendlyName?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number | string | boolean>;
      parameters:
        - id: linkLocation
          description: >-
            Is the text giving the path and file name to the document to be
            opened, a hard drive location, UNC address, or URL path.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: friendlyName
          description: >-
            Is text or a number that is displayed in the cell. If omitted, the
            cell displays the linkLocation text.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: >-
          <xref uid="excel!Excel.FunctionResult:class" />&lt;number | string |
          boolean&gt;
        description: ''
  - name: 'hypGeom_Dist(sampleS, numberSample, populationS, numberPop, cumulative)'
    uid: 'excel!Excel.Functions#hypGeom_Dist:member(1)'
    package: excel!
    fullName: 'hypGeom_Dist(sampleS, numberSample, populationS, numberPop, cumulative)'
    summary: >-
      Returns the hypergeometric distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        hypGeom_Dist(sampleS: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numberSample: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, populationS: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        numberPop: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, cumulative: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: sampleS
          description: Is the number of successes in the sample.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberSample
          description: Is the size of the sample.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: populationS
          description: Is the number of successes in the population.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberPop
          description: Is the population size.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability density function, use FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'if(logicalTest, valueIfTrue, valueIfFalse)'
    uid: 'excel!Excel.Functions#if:member(1)'
    package: excel!
    fullName: 'if(logicalTest, valueIfTrue, valueIfFalse)'
    summary: >-
      Checks whether a condition is met, and returns one value if TRUE, and
      another value if FALSE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        if(logicalTest: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, valueIfTrue?: Excel.Range | number | string |
        boolean | Excel.RangeReference | Excel.FunctionResult<any>,
        valueIfFalse?: Excel.Range | number | string | boolean |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number
        | string | boolean>;
      parameters:
        - id: logicalTest
          description: Is any value or expression that can be evaluated to TRUE or FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: valueIfTrue
          description: >-
            Is the value that is returned if logicalTest is TRUE. If omitted,
            TRUE is returned. You can nest up to seven IF functions.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | number | string | boolean |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: valueIfFalse
          description: >-
            Is the value that is returned if logicalTest is FALSE. If omitted,
            FALSE is returned.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | number | string | boolean |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: >-
          <xref uid="excel!Excel.FunctionResult:class" />&lt;number | string |
          boolean&gt;
        description: ''
  - name: imAbs(inumber)
    uid: 'excel!Excel.Functions#imAbs:member(1)'
    package: excel!
    fullName: imAbs(inumber)
    summary: >-
      Returns the absolute value (modulus) of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imAbs(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the absolute value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imaginary(inumber)
    uid: 'excel!Excel.Functions#imaginary:member(1)'
    package: excel!
    fullName: imaginary(inumber)
    summary: >-
      Returns the imaginary coefficient of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imaginary(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the imaginary coefficient.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imArgument(inumber)
    uid: 'excel!Excel.Functions#imArgument:member(1)'
    package: excel!
    fullName: imArgument(inumber)
    summary: >-
      Returns the argument q, an angle expressed in radians.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imArgument(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the argument.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imConjugate(inumber)
    uid: 'excel!Excel.Functions#imConjugate:member(1)'
    package: excel!
    fullName: imConjugate(inumber)
    summary: >-
      Returns the complex conjugate of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imConjugate(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the conjugate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imCos(inumber)
    uid: 'excel!Excel.Functions#imCos:member(1)'
    package: excel!
    fullName: imCos(inumber)
    summary: >-
      Returns the cosine of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imCos(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the cosine.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imCosh(inumber)
    uid: 'excel!Excel.Functions#imCosh:member(1)'
    package: excel!
    fullName: imCosh(inumber)
    summary: >-
      Returns the hyperbolic cosine of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imCosh(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the hyperbolic cosine.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imCot(inumber)
    uid: 'excel!Excel.Functions#imCot:member(1)'
    package: excel!
    fullName: imCot(inumber)
    summary: >-
      Returns the cotangent of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imCot(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the cotangent.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imCsc(inumber)
    uid: 'excel!Excel.Functions#imCsc:member(1)'
    package: excel!
    fullName: imCsc(inumber)
    summary: >-
      Returns the cosecant of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imCsc(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the cosecant.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imCsch(inumber)
    uid: 'excel!Excel.Functions#imCsch:member(1)'
    package: excel!
    fullName: imCsch(inumber)
    summary: >-
      Returns the hyperbolic cosecant of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imCsch(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the hyperbolic cosecant.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'imDiv(inumber1, inumber2)'
    uid: 'excel!Excel.Functions#imDiv:member(1)'
    package: excel!
    fullName: 'imDiv(inumber1, inumber2)'
    summary: >-
      Returns the quotient of two complex numbers.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imDiv(inumber1: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, inumber2: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: inumber1
          description: Is the complex numerator or dividend.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: inumber2
          description: Is the complex denominator or divisor.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imExp(inumber)
    uid: 'excel!Excel.Functions#imExp:member(1)'
    package: excel!
    fullName: imExp(inumber)
    summary: >-
      Returns the exponential of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imExp(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the exponential.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imLn(inumber)
    uid: 'excel!Excel.Functions#imLn:member(1)'
    package: excel!
    fullName: imLn(inumber)
    summary: >-
      Returns the natural logarithm of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imLn(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the natural logarithm.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imLog10(inumber)
    uid: 'excel!Excel.Functions#imLog10:member(1)'
    package: excel!
    fullName: imLog10(inumber)
    summary: >-
      Returns the base-10 logarithm of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imLog10(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the common logarithm.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imLog2(inumber)
    uid: 'excel!Excel.Functions#imLog2:member(1)'
    package: excel!
    fullName: imLog2(inumber)
    summary: >-
      Returns the base-2 logarithm of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imLog2(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the base-2 logarithm.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'imPower(inumber, number)'
    uid: 'excel!Excel.Functions#imPower:member(1)'
    package: excel!
    fullName: 'imPower(inumber, number)'
    summary: >-
      Returns a complex number raised to an integer power.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imPower(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, number: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number you want to raise to a power.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: number
          description: Is the power to which you want to raise the complex number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imProduct(values)
    uid: 'excel!Excel.Functions#imProduct:member(1)'
    package: excel!
    fullName: imProduct(values)
    summary: >-
      Returns the product of 1 to 255 complex numbers.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imProduct(...values: Array<Excel.Range | number | string | boolean |
        Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            Inumber1, Inumber2,... are from 1 to 255 complex numbers to
            multiply.
          type: >-
            Array&lt;<xref uid="excel!Excel.Range:class" /> | number | string |
            boolean | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imReal(inumber)
    uid: 'excel!Excel.Functions#imReal:member(1)'
    package: excel!
    fullName: imReal(inumber)
    summary: >-
      Returns the real coefficient of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imReal(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the real coefficient.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imSec(inumber)
    uid: 'excel!Excel.Functions#imSec:member(1)'
    package: excel!
    fullName: imSec(inumber)
    summary: >-
      Returns the secant of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imSec(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the secant.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imSech(inumber)
    uid: 'excel!Excel.Functions#imSech:member(1)'
    package: excel!
    fullName: imSech(inumber)
    summary: >-
      Returns the hyperbolic secant of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imSech(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the hyperbolic secant.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imSin(inumber)
    uid: 'excel!Excel.Functions#imSin:member(1)'
    package: excel!
    fullName: imSin(inumber)
    summary: >-
      Returns the sine of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imSin(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the sine.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imSinh(inumber)
    uid: 'excel!Excel.Functions#imSinh:member(1)'
    package: excel!
    fullName: imSinh(inumber)
    summary: >-
      Returns the hyperbolic sine of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imSinh(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the hyperbolic sine.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imSqrt(inumber)
    uid: 'excel!Excel.Functions#imSqrt:member(1)'
    package: excel!
    fullName: imSqrt(inumber)
    summary: >-
      Returns the square root of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imSqrt(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the square root.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'imSub(inumber1, inumber2)'
    uid: 'excel!Excel.Functions#imSub:member(1)'
    package: excel!
    fullName: 'imSub(inumber1, inumber2)'
    summary: >-
      Returns the difference of two complex numbers.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imSub(inumber1: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, inumber2: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: inumber1
          description: Is the complex number from which to subtract inumber2.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: inumber2
          description: Is the complex number to subtract from inumber1.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imSum(values)
    uid: 'excel!Excel.Functions#imSum:member(1)'
    package: excel!
    fullName: imSum(values)
    summary: >-
      Returns the sum of complex numbers.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imSum(...values: Array<Excel.Range | number | string | boolean |
        Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are from 1 to 255 complex numbers
            to add.
          type: >-
            Array&lt;<xref uid="excel!Excel.Range:class" /> | number | string |
            boolean | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: imTan(inumber)
    uid: 'excel!Excel.Functions#imTan:member(1)'
    package: excel!
    fullName: imTan(inumber)
    summary: >-
      Returns the tangent of a complex number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        imTan(inumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: inumber
          description: Is a complex number for which you want the tangent.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: int(number)
    uid: 'excel!Excel.Functions#int:member(1)'
    package: excel!
    fullName: int(number)
    summary: >-
      Rounds a number down to the nearest integer.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        int(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the real number you want to round down to an integer.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'intRate(settlement, maturity, investment, redemption, basis)'
    uid: 'excel!Excel.Functions#intRate:member(1)'
    package: excel!
    fullName: 'intRate(settlement, maturity, investment, redemption, basis)'
    summary: >-
      Returns the interest rate for a fully invested security.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        intRate(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, investment: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        redemption: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: investment
          description: Is the amount invested in the security.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: redemption
          description: Is the amount to be received at maturity.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'ipmt(rate, per, nper, pv, fv, type)'
    uid: 'excel!Excel.Functions#ipmt:member(1)'
    package: excel!
    fullName: 'ipmt(rate, per, nper, pv, fv, type)'
    summary: >-
      Returns the interest payment for a given period for an investment, based
      on periodic, constant payments and a constant interest rate.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        ipmt(rate: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, per: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, nper: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        fv?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, type?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: rate
          description: >-
            Is the interest rate per period. For example, use 6%/4 for quarterly
            payments at 6% APR.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: per
          description: >-
            Is the period for which you want to find the interest and must be in
            the range 1 to Nper.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: nper
          description: Is the total number of payment periods in an investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pv
          description: >-
            Is the present value, or the lump-sum amount that a series of future
            payments is worth now.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fv
          description: >-
            Is the future value, or a cash balance you want to attain after the
            last payment is made. If omitted, Fv = 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: type
          description: >-
            Is a logical value representing the timing of payment: at the end of
            the period = 0 or omitted, at the beginning of the period = 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'irr(values, guess)'
    uid: 'excel!Excel.Functions#irr:member(1)'
    package: excel!
    fullName: 'irr(values, guess)'
    summary: >-
      Returns the internal rate of return for a series of cash flows.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        irr(values: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, guess?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            Is an array or a reference to cells that contain numbers for which
            you want to calculate the internal rate of return.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: guess
          description: >-
            Is a number that you guess is close to the result of IRR; 0.1 (10
            percent) if omitted.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: isErr(value)
    uid: 'excel!Excel.Functions#isErr:member(1)'
    package: excel!
    fullName: isErr(value)
    summary: >-
      Checks whether a value is an error (\#VALUE!, \#REF!, \#DIV/0!, \#NUM!,
      \#NAME?, or \#NULL!) excluding \#N/A, and returns TRUE or FALSE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        isErr(value: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: isError(value)
    uid: 'excel!Excel.Functions#isError:member(1)'
    package: excel!
    fullName: isError(value)
    summary: >-
      Checks whether a value is an error (\#N/A, \#VALUE!, \#REF!, \#DIV/0!,
      \#NUM!, \#NAME?, or \#NULL!), and returns TRUE or FALSE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        isError(value: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: isEven(number)
    uid: 'excel!Excel.Functions#isEven:member(1)'
    package: excel!
    fullName: isEven(number)
    summary: >-
      Returns TRUE if the number is even.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        isEven(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value to test.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: isFormula(reference)
    uid: 'excel!Excel.Functions#isFormula:member(1)'
    package: excel!
    fullName: isFormula(reference)
    summary: >-
      Checks whether a reference is to a cell containing a formula, and returns
      TRUE or FALSE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        isFormula(reference: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<boolean>;
      parameters:
        - id: reference
          description: >-
            Is a reference to the cell you want to test. Reference can be a cell
            reference, a formula, or name that refers to a cell.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: isLogical(value)
    uid: 'excel!Excel.Functions#isLogical:member(1)'
    package: excel!
    fullName: isLogical(value)
    summary: >-
      Checks whether a value is a logical value (TRUE or FALSE), and returns
      TRUE or FALSE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        isLogical(value: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: isNA(value)
    uid: 'excel!Excel.Functions#isNA:member(1)'
    package: excel!
    fullName: isNA(value)
    summary: >-
      Checks whether a value is \#N/A, and returns TRUE or FALSE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        isNA(value: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: isNonText(value)
    uid: 'excel!Excel.Functions#isNonText:member(1)'
    package: excel!
    fullName: isNonText(value)
    summary: >-
      Checks whether a value is not text (blank cells are not text), and returns
      TRUE or FALSE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        isNonText(value: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      parameters:
        - id: value
          description: >-
            Is the value you want tested: a cell; a formula; or a name referring
            to a cell, formula, or value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: isNumber(value)
    uid: 'excel!Excel.Functions#isNumber:member(1)'
    package: excel!
    fullName: isNumber(value)
    summary: >-
      Checks whether a value is a number, and returns TRUE or FALSE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        isNumber(value: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: 'iso_Ceiling(number, significance)'
    uid: 'excel!Excel.Functions#iso_Ceiling:member(1)'
    package: excel!
    fullName: 'iso_Ceiling(number, significance)'
    summary: >-
      Rounds a number up, to the nearest integer or to the nearest multiple of
      significance.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        iso_Ceiling(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, significance?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: significance
          description: Is the optional multiple to which you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: isOdd(number)
    uid: 'excel!Excel.Functions#isOdd:member(1)'
    package: excel!
    fullName: isOdd(number)
    summary: >-
      Returns TRUE if the number is odd.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        isOdd(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value to test.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: isoWeekNum(date)
    uid: 'excel!Excel.Functions#isoWeekNum:member(1)'
    package: excel!
    fullName: isoWeekNum(date)
    summary: >-
      Returns the ISO week number in the year for a given date.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        isoWeekNum(date: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: date
          description: >-
            Is the date-time code used by Microsoft Excel for date and time
            calculation.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'ispmt(rate, per, nper, pv)'
    uid: 'excel!Excel.Functions#ispmt:member(1)'
    package: excel!
    fullName: 'ispmt(rate, per, nper, pv)'
    summary: >-
      Returns the interest paid during a specific period of an investment.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        ispmt(rate: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, per: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, nper: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv:
        number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: rate
          description: >-
            Interest rate per period. For example, use 6%/4 for quarterly
            payments at 6% APR.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: per
          description: Period for which you want to find the interest.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: nper
          description: Number of payment periods in an investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pv
          description: Lump sum amount that a series of future payments is right now.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: isref(value)
    uid: 'excel!Excel.Functions#isref:member(1)'
    package: excel!
    fullName: isref(value)
    summary: >-
      Checks whether a value is a reference, and returns TRUE or FALSE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        isref(value: Excel.Range | number | string | boolean |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | number | string | boolean |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: isText(value)
    uid: 'excel!Excel.Functions#isText:member(1)'
    package: excel!
    fullName: isText(value)
    summary: >-
      Checks whether a value is text, and returns TRUE or FALSE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        isText(value: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: kurt(values)
    uid: 'excel!Excel.Functions#kurt:member(1)'
    package: excel!
    fullName: kurt(values)
    summary: >-
      Returns the kurtosis of a data set.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        kurt(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers or names,
            arrays, or references that contain numbers for which you want the
            kurtosis.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'large(array, k)'
    uid: 'excel!Excel.Functions#large:member(1)'
    package: excel!
    fullName: 'large(array, k)'
    summary: >-
      Returns the k-th largest value in a data set. For example, the fifth
      largest number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        large(array: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, k: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: array
          description: >-
            Is the array or range of data for which you want to determine the
            k-th largest value.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: k
          description: >-
            Is the position (from the largest) in the array or cell range of the
            value to return.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: lcm(values)
    uid: 'excel!Excel.Functions#lcm:member(1)'
    package: excel!
    fullName: lcm(values)
    summary: >-
      Returns the least common multiple.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        lcm(...values: Array<number | string | Excel.Range | boolean |
        Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 values for which you
            want the least common multiple.
          type: >-
            Array&lt;number | string | <xref uid="excel!Excel.Range:class" /> |
            boolean | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'left(text, numChars)'
    uid: 'excel!Excel.Functions#left:member(1)'
    package: excel!
    fullName: 'left(text, numChars)'
    summary: >-
      Returns the specified number of characters from the start of a text
      string.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        left(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numChars?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: text
          description: Is the text string containing the characters you want to extract.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numChars
          description: >-
            Specifies how many characters you want LEFT to extract; 1 if
            omitted.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'leftb(text, numBytes)'
    uid: 'excel!Excel.Functions#leftb:member(1)'
    package: excel!
    fullName: 'leftb(text, numBytes)'
    summary: >-
      Returns the specified number of characters from the start of a text
      string. Use with double-byte character sets (DBCS).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        leftb(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numBytes?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: text
          description: Is the text string containing the characters you want to extract.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numBytes
          description: Specifies how many characters you want LEFT to return.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: len(text)
    uid: 'excel!Excel.Functions#len:member(1)'
    package: excel!
    fullName: len(text)
    summary: >-
      Returns the number of characters in a text string.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        len(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: text
          description: >-
            Is the text whose length you want to find. Spaces count as
            characters.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: lenb(text)
    uid: 'excel!Excel.Functions#lenb:member(1)'
    package: excel!
    fullName: lenb(text)
    summary: >-
      Returns the number of characters in a text string. Use with double-byte
      character sets (DBCS).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        lenb(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: text
          description: Is the text whose length you want to find.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: ln(number)
    uid: 'excel!Excel.Functions#ln:member(1)'
    package: excel!
    fullName: ln(number)
    summary: >-
      Returns the natural logarithm of a number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        ln(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: >-
            Is the positive real number for which you want the natural
            logarithm.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'log(number, base)'
    uid: 'excel!Excel.Functions#log:member(1)'
    package: excel!
    fullName: 'log(number, base)'
    summary: >-
      Returns the logarithm of a number to the base you specify.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        log(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, base?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the positive real number for which you want the logarithm.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: base
          description: Is the base of the logarithm; 10 if omitted.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: log10(number)
    uid: 'excel!Excel.Functions#log10:member(1)'
    package: excel!
    fullName: log10(number)
    summary: >-
      Returns the base-10 logarithm of a number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        log10(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: >-
            Is the positive real number for which you want the base-10
            logarithm.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'logNorm_Dist(x, mean, standardDev, cumulative)'
    uid: 'excel!Excel.Functions#logNorm_Dist:member(1)'
    package: excel!
    fullName: 'logNorm_Dist(x, mean, standardDev, cumulative)'
    summary: >-
      Returns the lognormal distribution of x, where ln(x) is normally
      distributed with parameters Mean and Standard\_dev.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        logNorm_Dist(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, mean: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: 'Is the value at which to evaluate the function, a positive number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: mean
          description: Is the mean of ln(x).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: standardDev
          description: 'Is the standard deviation of ln(x), a positive number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability density function, use FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'logNorm_Inv(probability, mean, standardDev)'
    uid: 'excel!Excel.Functions#logNorm_Inv:member(1)'
    package: excel!
    fullName: 'logNorm_Inv(probability, mean, standardDev)'
    summary: >-
      Returns the inverse of the lognormal cumulative distribution function of
      x, where ln(x) is normally distributed with parameters Mean and
      Standard\_dev.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        logNorm_Inv(probability: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, mean: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: probability
          description: >-
            Is a probability associated with the lognormal distribution, a
            number between 0 and 1, inclusive.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: mean
          description: Is the mean of ln(x).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: standardDev
          description: 'Is the standard deviation of ln(x), a positive number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'lookup(lookupValue, lookupVector, resultVector)'
    uid: 'excel!Excel.Functions#lookup:member(1)'
    package: excel!
    fullName: 'lookup(lookupValue, lookupVector, resultVector)'
    summary: >-
      Looks up a value either from a one-row or one-column range or from an
      array. Provided for backward compatibility.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        lookup(lookupValue: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, lookupVector:
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        resultVector?: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number | string | boolean>;
      parameters:
        - id: lookupValue
          description: >-
            Is a value that LOOKUP searches for in lookupVector and can be a
            number, text, a logical value, or a name or reference to a value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: lookupVector
          description: >-
            Is a range that contains only one row or one column of text,
            numbers, or logical values, placed in ascending order.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: resultVector
          description: >-
            Is a range that contains only one row or column, the same size as
            lookupVector.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: >-
          <xref uid="excel!Excel.FunctionResult:class" />&lt;number | string |
          boolean&gt;
        description: ''
  - name: lower(text)
    uid: 'excel!Excel.Functions#lower:member(1)'
    package: excel!
    fullName: lower(text)
    summary: >-
      Converts all letters in a text string to lowercase.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        lower(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: text
          description: >-
            Is the text you want to convert to lowercase. Characters in Text
            that are not letters are not changed.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'match(lookupValue, lookupArray, matchType)'
    uid: 'excel!Excel.Functions#match:member(1)'
    package: excel!
    fullName: 'match(lookupValue, lookupArray, matchType)'
    summary: >-
      Returns the relative position of an item in an array that matches a
      specified value in a specified order.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        match(lookupValue: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, lookupArray: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        matchType?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: lookupValue
          description: >-
            Is the value you use to find the value you want in the array, a
            number, text, or logical value, or a reference to one of these.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: lookupArray
          description: >-
            Is a contiguous range of cells containing possible lookup values, an
            array of values, or a reference to an array.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: matchType
          description: 'Is a number 1, 0, or -1 indicating which value to return.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: max(values)
    uid: 'excel!Excel.Functions#max:member(1)'
    package: excel!
    fullName: max(values)
    summary: >-
      Returns the largest value in a set of values. Ignores logical values and
      text.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        max(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers, empty
            cells, logical values, or text numbers for which you want the
            maximum.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: maxA(values)
    uid: 'excel!Excel.Functions#maxA:member(1)'
    package: excel!
    fullName: maxA(values)
    summary: >-
      Returns the largest value in a set of values. Does not ignore logical
      values and text.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        maxA(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers, empty
            cells, logical values, or text numbers for which you want the
            maximum.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'mduration(settlement, maturity, coupon, yld, frequency, basis)'
    uid: 'excel!Excel.Functions#mduration:member(1)'
    package: excel!
    fullName: 'mduration(settlement, maturity, coupon, yld, frequency, basis)'
    summary: >-
      Returns the Macauley modified duration for a security with an assumed par
      value of $100.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        mduration(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, coupon: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yld:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: coupon
          description: Is the security's annual coupon rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: yld
          description: Is the security's annual yield.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: median(values)
    uid: 'excel!Excel.Functions#median:member(1)'
    package: excel!
    fullName: median(values)
    summary: >-
      Returns the median, or the number in the middle of the set of given
      numbers.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        median(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers or names,
            arrays, or references that contain numbers for which you want the
            median.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'mid(text, startNum, numChars)'
    uid: 'excel!Excel.Functions#mid:member(1)'
    package: excel!
    fullName: 'mid(text, startNum, numChars)'
    summary: >-
      Returns the characters from the middle of a text string, given a starting
      position and length.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        mid(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, startNum: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, numChars: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: text
          description: Is the text string from which you want to extract the characters.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: startNum
          description: >-
            Is the position of the first character you want to extract. The
            first character in Text is 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numChars
          description: Specifies how many characters to return from Text.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'midb(text, startNum, numBytes)'
    uid: 'excel!Excel.Functions#midb:member(1)'
    package: excel!
    fullName: 'midb(text, startNum, numBytes)'
    summary: >-
      Returns characters from the middle of a text string, given a starting
      position and length. Use with double-byte character sets (DBCS).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        midb(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, startNum: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, numBytes: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: text
          description: Is the text string containing the characters you want to extract.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: startNum
          description: Is the position of the first character you want to extract in text.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numBytes
          description: Specifies how many characters to return from text.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: min(values)
    uid: 'excel!Excel.Functions#min:member(1)'
    package: excel!
    fullName: min(values)
    summary: >-
      Returns the smallest number in a set of values. Ignores logical values and
      text.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        min(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers, empty
            cells, logical values, or text numbers for which you want the
            minimum.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: minA(values)
    uid: 'excel!Excel.Functions#minA:member(1)'
    package: excel!
    fullName: minA(values)
    summary: >-
      Returns the smallest value in a set of values. Does not ignore logical
      values and text.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        minA(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers, empty
            cells, logical values, or text numbers for which you want the
            minimum.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: minute(serialNumber)
    uid: 'excel!Excel.Functions#minute:member(1)'
    package: excel!
    fullName: minute(serialNumber)
    summary: >-
      Returns the minute, a number from 0 to 59.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        minute(serialNumber: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: serialNumber
          description: >-
            Is a number in the date-time code used by Microsoft Excel or text in
            time format, such as 16:48:00 or 4:48:00 PM.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'mirr(values, financeRate, reinvestRate)'
    uid: 'excel!Excel.Functions#mirr:member(1)'
    package: excel!
    fullName: 'mirr(values, financeRate, reinvestRate)'
    summary: >-
      Returns the internal rate of return for a series of periodic cash flows,
      considering both cost of investment and interest on reinvestment of cash.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        mirr(values: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, financeRate: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, reinvestRate: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            Is an array or a reference to cells that contain numbers that
            represent a series of payments (negative) and income (positive) at
            regular periods.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: financeRate
          description: Is the interest rate you pay on the money used in the cash flows.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: reinvestRate
          description: >-
            Is the interest rate you receive on the cash flows as you reinvest
            them.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'mod(number, divisor)'
    uid: 'excel!Excel.Functions#mod:member(1)'
    package: excel!
    fullName: 'mod(number, divisor)'
    summary: >-
      Returns the remainder after a number is divided by a divisor.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        mod(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, divisor: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: >-
            Is the number for which you want to find the remainder after the
            division is performed.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: divisor
          description: Is the number by which you want to divide Number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: month(serialNumber)
    uid: 'excel!Excel.Functions#month:member(1)'
    package: excel!
    fullName: month(serialNumber)
    summary: >-
      Returns the month, a number from 1 (January) to 12 (December).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        month(serialNumber: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: serialNumber
          description: Is a number in the date-time code used by Microsoft Excel.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'mround(number, multiple)'
    uid: 'excel!Excel.Functions#mround:member(1)'
    package: excel!
    fullName: 'mround(number, multiple)'
    summary: >-
      Returns a number rounded to the desired multiple.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        mround(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, multiple: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value to round.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: multiple
          description: Is the multiple to which you want to round number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: multiNomial(values)
    uid: 'excel!Excel.Functions#multiNomial:member(1)'
    package: excel!
    fullName: multiNomial(values)
    summary: >-
      Returns the multinomial of a set of numbers.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        multiNomial(...values: Array<number | string | Excel.Range | boolean |
        Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 values for which you
            want the multinomial.
          type: >-
            Array&lt;number | string | <xref uid="excel!Excel.Range:class" /> |
            boolean | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: n(value)
    uid: 'excel!Excel.Functions#n:member(1)'
    package: excel!
    fullName: n(value)
    summary: >-
      Converts non-number value to a number, dates to serial numbers, TRUE to 1,
      anything else to 0 (zero).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        n(value: number | string | boolean | Excel.Range | Excel.RangeReference
        | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: value
          description: Is the value you want converted.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: na()
    uid: 'excel!Excel.Functions#na:member(1)'
    package: excel!
    fullName: na()
    summary: >-
      Returns the error value \#N/A (value not available).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'na(): FunctionResult<number | string>;'
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number | string&gt;'
        description: ''
  - name: 'negBinom_Dist(numberF, numberS, probabilityS, cumulative)'
    uid: 'excel!Excel.Functions#negBinom_Dist:member(1)'
    package: excel!
    fullName: 'negBinom_Dist(numberF, numberS, probabilityS, cumulative)'
    summary: >-
      Returns the negative binomial distribution, the probability that there
      will be Number\_f failures before the Number\_s-th success, with
      Probability\_s probability of a success.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        negBinom_Dist(numberF: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numberS: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, probabilityS: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: numberF
          description: Is the number of failures.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberS
          description: Is the threshold number of successes.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: probabilityS
          description: Is the probability of a success; a number between 0 and 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability mass function, use FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'networkDays_Intl(startDate, endDate, weekend, holidays)'
    uid: 'excel!Excel.Functions#networkDays_Intl:member(1)'
    package: excel!
    fullName: 'networkDays_Intl(startDate, endDate, weekend, holidays)'
    summary: >-
      Returns the number of whole workdays between two dates with custom weekend
      parameters.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        networkDays_Intl(startDate: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, endDate: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, weekend?: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, holidays?: number |
        string | Excel.Range | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: endDate
          description: Is a serial date number that represents the end date.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: weekend
          description: Is a number or string specifying when weekends occur.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: holidays
          description: >-
            Is an optional set of one or more serial date numbers to exclude
            from the working calendar, such as state and federal holidays and
            floating holidays.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | boolean |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'networkDays(startDate, endDate, holidays)'
    uid: 'excel!Excel.Functions#networkDays:member(1)'
    package: excel!
    fullName: 'networkDays(startDate, endDate, holidays)'
    summary: >-
      Returns the number of whole workdays between two dates.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        networkDays(startDate: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, endDate: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, holidays?: number | string | Excel.Range |
        boolean | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: endDate
          description: Is a serial date number that represents the end date.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: holidays
          description: >-
            Is an optional set of one or more serial date numbers to exclude
            from the working calendar, such as state and federal holidays and
            floating holidays.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | boolean |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'nominal(effectRate, npery)'
    uid: 'excel!Excel.Functions#nominal:member(1)'
    package: excel!
    fullName: 'nominal(effectRate, npery)'
    summary: >-
      Returns the annual nominal interest rate.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        nominal(effectRate: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, npery: number | string
        | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: effectRate
          description: Is the effective interest rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: npery
          description: Is the number of compounding periods per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'norm_Dist(x, mean, standardDev, cumulative)'
    uid: 'excel!Excel.Functions#norm_Dist:member(1)'
    package: excel!
    fullName: 'norm_Dist(x, mean, standardDev, cumulative)'
    summary: >-
      Returns the normal distribution for the specified mean and standard
      deviation.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        norm_Dist(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, mean: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value for which you want the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: mean
          description: Is the arithmetic mean of the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: standardDev
          description: 'Is the standard deviation of the distribution, a positive number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability density function, use FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'norm_Inv(probability, mean, standardDev)'
    uid: 'excel!Excel.Functions#norm_Inv:member(1)'
    package: excel!
    fullName: 'norm_Inv(probability, mean, standardDev)'
    summary: >-
      Returns the inverse of the normal cumulative distribution for the
      specified mean and standard deviation.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        norm_Inv(probability: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, mean: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: probability
          description: >-
            Is a probability corresponding to the normal distribution, a number
            between 0 and 1 inclusive.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: mean
          description: Is the arithmetic mean of the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: standardDev
          description: 'Is the standard deviation of the distribution, a positive number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'norm_S_Dist(z, cumulative)'
    uid: 'excel!Excel.Functions#norm_S_Dist:member(1)'
    package: excel!
    fullName: 'norm_S_Dist(z, cumulative)'
    summary: >-
      Returns the standard normal distribution (has a mean of zero and a
      standard deviation of one).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        norm_S_Dist(z: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, cumulative: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: z
          description: Is the value for which you want the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value for the function to return: the cumulative
            distribution function = TRUE; the probability density function =
            FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: norm_S_Inv(probability)
    uid: 'excel!Excel.Functions#norm_S_Inv:member(1)'
    package: excel!
    fullName: norm_S_Inv(probability)
    summary: >-
      Returns the inverse of the standard normal cumulative distribution (has a
      mean of zero and a standard deviation of one).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        norm_S_Inv(probability: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: probability
          description: >-
            Is a probability corresponding to the normal distribution, a number
            between 0 and 1 inclusive.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: not(logical)
    uid: 'excel!Excel.Functions#not:member(1)'
    package: excel!
    fullName: not(logical)
    summary: >-
      Changes FALSE to TRUE, or TRUE to FALSE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        not(logical: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<boolean>;
      parameters:
        - id: logical
          description: Is a value or expression that can be evaluated to TRUE or FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: now()
    uid: 'excel!Excel.Functions#now:member(1)'
    package: excel!
    fullName: now()
    summary: >-
      Returns the current date and time formatted as a date and time.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'now(): FunctionResult<number>;'
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'nper(rate, pmt, pv, fv, type)'
    uid: 'excel!Excel.Functions#nper:member(1)'
    package: excel!
    fullName: 'nper(rate, pmt, pv, fv, type)'
    summary: >-
      Returns the number of periods for an investment based on periodic,
      constant payments and a constant interest rate.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        nper(rate: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pmt: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, pv: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        type?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: rate
          description: >-
            Is the interest rate per period. For example, use 6%/4 for quarterly
            payments at 6% APR.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pmt
          description: >-
            Is the payment made each period; it cannot change over the life of
            the investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pv
          description: >-
            Is the present value, or the lump-sum amount that a series of future
            payments is worth now.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fv
          description: >-
            Is the future value, or a cash balance you want to attain after the
            last payment is made. If omitted, zero is used.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: type
          description: >-
            Is a logical value: payment at the beginning of the period = 1;
            payment at the end of the period = 0 or omitted.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'npv(rate, values)'
    uid: 'excel!Excel.Functions#npv:member(1)'
    package: excel!
    fullName: 'npv(rate, values)'
    summary: >-
      Returns the net present value of an investment based on a discount rate
      and a series of future payments (negative values) and income (positive
      values).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        npv(rate: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, ...values: Array<number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      parameters:
        - id: rate
          description: Is the rate of discount over the length of one period.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 254 payments and income,
            equally spaced in time and occurring at the end of each period.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'numberValue(text, decimalSeparator, groupSeparator)'
    uid: 'excel!Excel.Functions#numberValue:member(1)'
    package: excel!
    fullName: 'numberValue(text, decimalSeparator, groupSeparator)'
    summary: >-
      Converts text to number in a locale-independent manner.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        numberValue(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, decimalSeparator?: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, groupSeparator?:
        string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: text
          description: Is the string representing the number you want to convert.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: decimalSeparator
          description: Is the character used as the decimal separator in the string.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: groupSeparator
          description: Is the character used as the group separator in the string.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'oct2Bin(number, places)'
    uid: 'excel!Excel.Functions#oct2Bin:member(1)'
    package: excel!
    fullName: 'oct2Bin(number, places)'
    summary: >-
      Converts an octal number to binary.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        oct2Bin(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, places?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the octal number you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: oct2Dec(number)
    uid: 'excel!Excel.Functions#oct2Dec:member(1)'
    package: excel!
    fullName: oct2Dec(number)
    summary: >-
      Converts an octal number to decimal.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        oct2Dec(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the octal number you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'oct2Hex(number, places)'
    uid: 'excel!Excel.Functions#oct2Hex:member(1)'
    package: excel!
    fullName: 'oct2Hex(number, places)'
    summary: >-
      Converts an octal number to hexadecimal.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        oct2Hex(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, places?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the octal number you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: odd(number)
    uid: 'excel!Excel.Functions#odd:member(1)'
    package: excel!
    fullName: odd(number)
    summary: >-
      Rounds a positive number up and negative number down to the nearest odd
      integer.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        odd(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: >-
      oddFPrice(settlement, maturity, issue, firstCoupon, rate, yld, redemption,
      frequency, basis)
    uid: 'excel!Excel.Functions#oddFPrice:member(1)'
    package: excel!
    fullName: >-
      oddFPrice(settlement, maturity, issue, firstCoupon, rate, yld, redemption,
      frequency, basis)
    summary: >-
      Returns the price per $100 face value of a security with an odd first
      period.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        oddFPrice(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, issue: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        firstCoupon: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string
        | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, yld: number | string | boolean | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: firstCoupon
          description: >-
            Is the security's first coupon date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the security's interest rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: yld
          description: Is the security's annual yield.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: >-
      oddFYield(settlement, maturity, issue, firstCoupon, rate, pr, redemption,
      frequency, basis)
    uid: 'excel!Excel.Functions#oddFYield:member(1)'
    package: excel!
    fullName: >-
      oddFYield(settlement, maturity, issue, firstCoupon, rate, pr, redemption,
      frequency, basis)
    summary: >-
      Returns the yield of a security with an odd first period.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        oddFYield(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, issue: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        firstCoupon: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, rate: number | string
        | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, redemption: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: firstCoupon
          description: >-
            Is the security's first coupon date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the security's interest rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pr
          description: Is the security's price.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: >-
      oddLPrice(settlement, maturity, lastInterest, rate, yld, redemption,
      frequency, basis)
    uid: 'excel!Excel.Functions#oddLPrice:member(1)'
    package: excel!
    fullName: >-
      oddLPrice(settlement, maturity, lastInterest, rate, yld, redemption,
      frequency, basis)
    summary: >-
      Returns the price per $100 face value of a security with an odd last
      period.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        oddLPrice(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, lastInterest: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, yld: number | string | boolean | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: lastInterest
          description: >-
            Is the security's last coupon date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the security's interest rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: yld
          description: Is the security's annual yield.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: >-
      oddLYield(settlement, maturity, lastInterest, rate, pr, redemption,
      frequency, basis)
    uid: 'excel!Excel.Functions#oddLYield:member(1)'
    package: excel!
    fullName: >-
      oddLYield(settlement, maturity, lastInterest, rate, pr, redemption,
      frequency, basis)
    summary: >-
      Returns the yield of a security with an odd last period.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        oddLYield(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, lastInterest: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, redemption: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: lastInterest
          description: >-
            Is the security's last coupon date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the security's interest rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pr
          description: Is the security's price.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: or(values)
    uid: 'excel!Excel.Functions#or:member(1)'
    package: excel!
    fullName: or(values)
    summary: >-
      Checks whether any of the arguments are TRUE, and returns TRUE or FALSE.
      Returns FALSE only if all arguments are FALSE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        or(...values: Array<boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<boolean>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 conditions that you
            want to test that can be either TRUE or FALSE.
          type: >-
            Array&lt;boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: 'pduration(rate, pv, fv)'
    uid: 'excel!Excel.Functions#pduration:member(1)'
    package: excel!
    fullName: 'pduration(rate, pv, fv)'
    summary: >-
      Returns the number of periods required by an investment to reach a
      specified value.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        pduration(rate: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pv: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, fv: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: rate
          description: Is the interest rate per period.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pv
          description: Is the present value of the investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fv
          description: Is the desired future value of the investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'percentile_Exc(array, k)'
    uid: 'excel!Excel.Functions#percentile_Exc:member(1)'
    package: excel!
    fullName: 'percentile_Exc(array, k)'
    summary: >-
      Returns the k-th percentile of values in a range, where k is in the range
      0..1, exclusive.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        percentile_Exc(array: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, k: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: array
          description: Is the array or range of data that defines relative standing.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: k
          description: 'Is the percentile value that is between 0 through 1, inclusive.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'percentile_Inc(array, k)'
    uid: 'excel!Excel.Functions#percentile_Inc:member(1)'
    package: excel!
    fullName: 'percentile_Inc(array, k)'
    summary: >-
      Returns the k-th percentile of values in a range, where k is in the range
      0..1, inclusive.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        percentile_Inc(array: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, k: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: array
          description: Is the array or range of data that defines relative standing.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: k
          description: 'Is the percentile value that is between 0 through 1, inclusive.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'percentRank_Exc(array, x, significance)'
    uid: 'excel!Excel.Functions#percentRank_Exc:member(1)'
    package: excel!
    fullName: 'percentRank_Exc(array, x, significance)'
    summary: >-
      Returns the rank of a value in a data set as a percentage of the data set
      as a percentage (0..1, exclusive) of the data set.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        percentRank_Exc(array: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, x: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, significance?: number
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: array
          description: >-
            Is the array or range of data with numeric values that defines
            relative standing.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: x
          description: Is the value for which you want to know the rank.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: significance
          description: >-
            Is an optional value that identifies the number of significant
            digits for the returned percentage, three digits if omitted
            (0.xxx%).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'percentRank_Inc(array, x, significance)'
    uid: 'excel!Excel.Functions#percentRank_Inc:member(1)'
    package: excel!
    fullName: 'percentRank_Inc(array, x, significance)'
    summary: >-
      Returns the rank of a value in a data set as a percentage of the data set
      as a percentage (0..1, inclusive) of the data set.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        percentRank_Inc(array: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, x: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, significance?: number
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: array
          description: >-
            Is the array or range of data with numeric values that defines
            relative standing.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: x
          description: Is the value for which you want to know the rank.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: significance
          description: >-
            Is an optional value that identifies the number of significant
            digits for the returned percentage, three digits if omitted
            (0.xxx%).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'permut(number, numberChosen)'
    uid: 'excel!Excel.Functions#permut:member(1)'
    package: excel!
    fullName: 'permut(number, numberChosen)'
    summary: >-
      Returns the number of permutations for a given number of objects that can
      be selected from the total objects.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        permut(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numberChosen: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the total number of objects.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberChosen
          description: Is the number of objects in each permutation.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'permutationa(number, numberChosen)'
    uid: 'excel!Excel.Functions#permutationa:member(1)'
    package: excel!
    fullName: 'permutationa(number, numberChosen)'
    summary: >-
      Returns the number of permutations for a given number of objects (with
      repetitions) that can be selected from the total objects.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        permutationa(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numberChosen: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the total number of objects.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberChosen
          description: Is the number of objects in each permutation.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: phi(x)
    uid: 'excel!Excel.Functions#phi:member(1)'
    package: excel!
    fullName: phi(x)
    summary: >-
      Returns the value of the density function for a standard normal
      distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        phi(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: >-
            Is the number for which you want the density of the standard normal
            distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: pi()
    uid: 'excel!Excel.Functions#pi:member(1)'
    package: excel!
    fullName: pi()
    summary: >-
      Returns the value of Pi, 3.14159265358979, accurate to 15 digits.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'pi(): FunctionResult<number>;'
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'pmt(rate, nper, pv, fv, type)'
    uid: 'excel!Excel.Functions#pmt:member(1)'
    package: excel!
    fullName: 'pmt(rate, nper, pv, fv, type)'
    summary: >-
      Calculates the payment for a loan based on constant payments and a
      constant interest rate.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        pmt(rate: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, nper: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, pv: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        type?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: rate
          description: >-
            Is the interest rate per period for the loan. For example, use 6%/4
            for quarterly payments at 6% APR.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: nper
          description: Is the total number of payments for the loan.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pv
          description: >-
            Is the present value: the total amount that a series of future
            payments is worth now.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fv
          description: >-
            Is the future value, or a cash balance you want to attain after the
            last payment is made, 0 (zero) if omitted.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: type
          description: >-
            Is a logical value: payment at the beginning of the period = 1;
            payment at the end of the period = 0 or omitted.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'poisson_Dist(x, mean, cumulative)'
    uid: 'excel!Excel.Functions#poisson_Dist:member(1)'
    package: excel!
    fullName: 'poisson_Dist(x, mean, cumulative)'
    summary: >-
      Returns the Poisson distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        poisson_Dist(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, mean: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: x
          description: Is the number of events.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: mean
          description: 'Is the expected numeric value, a positive number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative Poisson probability, use
            TRUE; for the Poisson probability mass function, use FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'power(number, power)'
    uid: 'excel!Excel.Functions#power:member(1)'
    package: excel!
    fullName: 'power(number, power)'
    summary: >-
      Returns the result of a number raised to a power.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        power(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, power: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: 'Is the base number, any real number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: power
          description: 'Is the exponent, to which the base number is raised.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'ppmt(rate, per, nper, pv, fv, type)'
    uid: 'excel!Excel.Functions#ppmt:member(1)'
    package: excel!
    fullName: 'ppmt(rate, per, nper, pv, fv, type)'
    summary: >-
      Returns the payment on the principal for a given investment based on
      periodic, constant payments and a constant interest rate.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        ppmt(rate: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, per: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, nper: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        fv?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, type?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: rate
          description: >-
            Is the interest rate per period. For example, use 6%/4 for quarterly
            payments at 6% APR.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: per
          description: Specifies the period and must be in the range 1 to nper.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: nper
          description: Is the total number of payment periods in an investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pv
          description: >-
            Is the present value: the total amount that a series of future
            payments is worth now.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fv
          description: >-
            Is the future value, or cash balance you want to attain after the
            last payment is made.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: type
          description: >-
            Is a logical value: payment at the beginning of the period = 1;
            payment at the end of the period = 0 or omitted.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'price(settlement, maturity, rate, yld, redemption, frequency, basis)'
    uid: 'excel!Excel.Functions#price:member(1)'
    package: excel!
    fullName: 'price(settlement, maturity, rate, yld, redemption, frequency, basis)'
    summary: >-
      Returns the price per $100 face value of a security that pays periodic
      interest.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        price(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, yld: number | string
        | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, redemption: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        frequency: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the security's annual coupon rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: yld
          description: Is the security's annual yield.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'priceDisc(settlement, maturity, discount, redemption, basis)'
    uid: 'excel!Excel.Functions#priceDisc:member(1)'
    package: excel!
    fullName: 'priceDisc(settlement, maturity, discount, redemption, basis)'
    summary: >-
      Returns the price per $100 face value of a discounted security.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        priceDisc(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, discount: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        redemption: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: discount
          description: Is the security's discount rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'priceMat(settlement, maturity, issue, rate, yld, basis)'
    uid: 'excel!Excel.Functions#priceMat:member(1)'
    package: excel!
    fullName: 'priceMat(settlement, maturity, issue, rate, yld, basis)'
    summary: >-
      Returns the price per $100 face value of a security that pays interest at
      maturity.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        priceMat(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, issue: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, yld: number | string | boolean | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the security's interest rate at date of issue.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: yld
          description: Is the security's annual yield.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: product(values)
    uid: 'excel!Excel.Functions#product:member(1)'
    package: excel!
    fullName: product(values)
    summary: >-
      Multiplies all the numbers given as arguments.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        product(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers, logical
            values, or text representations of numbers that you want to
            multiply.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: proper(text)
    uid: 'excel!Excel.Functions#proper:member(1)'
    package: excel!
    fullName: proper(text)
    summary: >-
      Converts a text string to proper case; the first letter in each word to
      uppercase, and all other letters to lowercase.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        proper(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: text
          description: >-
            Is text enclosed in quotation marks, a formula that returns text, or
            a reference to a cell containing text to partially capitalize.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'pv(rate, nper, pmt, fv, type)'
    uid: 'excel!Excel.Functions#pv:member(1)'
    package: excel!
    fullName: 'pv(rate, nper, pmt, fv, type)'
    summary: >-
      Returns the present value of an investment: the total amount that a series
      of future payments is worth now.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        pv(rate: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, nper: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, pmt: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        type?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: rate
          description: >-
            Is the interest rate per period. For example, use 6%/4 for quarterly
            payments at 6% APR.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: nper
          description: Is the total number of payment periods in an investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pmt
          description: >-
            Is the payment made each period and cannot change over the life of
            the investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fv
          description: >-
            Is the future value, or a cash balance you want to attain after the
            last payment is made.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: type
          description: >-
            Is a logical value: payment at the beginning of the period = 1;
            payment at the end of the period = 0 or omitted.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'quartile_Exc(array, quart)'
    uid: 'excel!Excel.Functions#quartile_Exc:member(1)'
    package: excel!
    fullName: 'quartile_Exc(array, quart)'
    summary: >-
      Returns the quartile of a data set, based on percentile values from 0..1,
      exclusive.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        quartile_Exc(array: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, quart: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: array
          description: >-
            Is the array or cell range of numeric values for which you want the
            quartile value.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: quart
          description: >-
            Is a number: minimum value = 0; 1st quartile = 1; median value = 2;
            3rd quartile = 3; maximum value = 4.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'quartile_Inc(array, quart)'
    uid: 'excel!Excel.Functions#quartile_Inc:member(1)'
    package: excel!
    fullName: 'quartile_Inc(array, quart)'
    summary: >-
      Returns the quartile of a data set, based on percentile values from 0..1,
      inclusive.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        quartile_Inc(array: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, quart: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: array
          description: >-
            Is the array or cell range of numeric values for which you want the
            quartile value.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: quart
          description: >-
            Is a number: minimum value = 0; 1st quartile = 1; median value = 2;
            3rd quartile = 3; maximum value = 4.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'quotient(numerator, denominator)'
    uid: 'excel!Excel.Functions#quotient:member(1)'
    package: excel!
    fullName: 'quotient(numerator, denominator)'
    summary: >-
      Returns the integer portion of a division.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        quotient(numerator: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, denominator: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: numerator
          description: Is the dividend.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: denominator
          description: Is the divisor.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: radians(angle)
    uid: 'excel!Excel.Functions#radians:member(1)'
    package: excel!
    fullName: radians(angle)
    summary: >-
      Converts degrees to radians.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        radians(angle: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: angle
          description: Is an angle in degrees that you want to convert.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: rand()
    uid: 'excel!Excel.Functions#rand:member(1)'
    package: excel!
    fullName: rand()
    summary: >-
      Returns a random number greater than or equal to 0 and less than 1, evenly
      distributed (changes on recalculation).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rand(): FunctionResult<number>;'
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'randBetween(bottom, top)'
    uid: 'excel!Excel.Functions#randBetween:member(1)'
    package: excel!
    fullName: 'randBetween(bottom, top)'
    summary: >-
      Returns a random number between the numbers you specify.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        randBetween(bottom: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, top: number | string |
        boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: bottom
          description: Is the smallest integer RANDBETWEEN will return.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: top
          description: Is the largest integer RANDBETWEEN will return.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'rank_Avg(number, ref, order)'
    uid: 'excel!Excel.Functions#rank_Avg:member(1)'
    package: excel!
    fullName: 'rank_Avg(number, ref, order)'
    summary: >-
      Returns the rank of a number in a list of numbers: its size relative to
      other values in the list; if more than one value has the same rank, the
      average rank is returned.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        rank_Avg(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, ref: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, order?: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the number for which you want to find the rank.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: ref
          description: >-
            Is an array of, or a reference to, a list of numbers. Nonnumeric
            values are ignored.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: order
          description: >-
            Is a number: rank in the list sorted descending = 0 or omitted; rank
            in the list sorted ascending = any nonzero value.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'rank_Eq(number, ref, order)'
    uid: 'excel!Excel.Functions#rank_Eq:member(1)'
    package: excel!
    fullName: 'rank_Eq(number, ref, order)'
    summary: >-
      Returns the rank of a number in a list of numbers: its size relative to
      other values in the list; if more than one value has the same rank, the
      top rank of that set of values is returned.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        rank_Eq(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, ref: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, order?: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the number for which you want to find the rank.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: ref
          description: >-
            Is an array of, or a reference to, a list of numbers. Nonnumeric
            values are ignored.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: order
          description: >-
            Is a number: rank in the list sorted descending = 0 or omitted; rank
            in the list sorted ascending = any nonzero value.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'rate(nper, pmt, pv, fv, type, guess)'
    uid: 'excel!Excel.Functions#rate:member(1)'
    package: excel!
    fullName: 'rate(nper, pmt, pv, fv, type, guess)'
    summary: >-
      Returns the interest rate per period of a loan or an investment. For
      example, use 6%/4 for quarterly payments at 6% APR.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        rate(nper: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pmt: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, pv: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        type?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, guess?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: nper
          description: Is the total number of payment periods for the loan or investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pmt
          description: >-
            Is the payment made each period and cannot change over the life of
            the loan or investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pv
          description: >-
            Is the present value: the total amount that a series of future
            payments is worth now.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fv
          description: >-
            Is the future value, or a cash balance you want to attain after the
            last payment is made. If omitted, uses Fv = 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: type
          description: >-
            Is a logical value: payment at the beginning of the period = 1;
            payment at the end of the period = 0 or omitted.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: guess
          description: >-
            Is your guess for what the rate will be; if omitted, Guess = 0.1 (10
            percent).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'received(settlement, maturity, investment, discount, basis)'
    uid: 'excel!Excel.Functions#received:member(1)'
    package: excel!
    fullName: 'received(settlement, maturity, investment, discount, basis)'
    summary: >-
      Returns the amount received at maturity for a fully invested security.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        received(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, investment: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        discount: number | string | boolean | Excel.Range | Excel.RangeReference
        | Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: investment
          description: Is the amount invested in the security.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: discount
          description: Is the security's discount rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'replace(oldText, startNum, numChars, newText)'
    uid: 'excel!Excel.Functions#replace:member(1)'
    package: excel!
    fullName: 'replace(oldText, startNum, numChars, newText)'
    summary: >-
      Replaces part of a text string with a different text string.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        replace(oldText: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, startNum: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, numChars: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, newText:
        string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: oldText
          description: Is text in which you want to replace some characters.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: startNum
          description: >-
            Is the position of the character in oldText that you want to replace
            with newText.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numChars
          description: Is the number of characters in oldText that you want to replace.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: newText
          description: Is the text that will replace characters in oldText.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'replaceB(oldText, startNum, numBytes, newText)'
    uid: 'excel!Excel.Functions#replaceB:member(1)'
    package: excel!
    fullName: 'replaceB(oldText, startNum, numBytes, newText)'
    summary: >-
      Replaces part of a text string with a different text string. Use with
      double-byte character sets (DBCS).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        replaceB(oldText: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, startNum: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, numBytes: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, newText:
        string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: oldText
          description: Is text in which you want to replace some characters.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: startNum
          description: >-
            Is the position of the character in oldText that you want to replace
            with newText.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numBytes
          description: >-
            Is the number of characters in oldText that you want to replace with
            newText.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: newText
          description: Is the text that will replace characters in oldText.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'rept(text, numberTimes)'
    uid: 'excel!Excel.Functions#rept:member(1)'
    package: excel!
    fullName: 'rept(text, numberTimes)'
    summary: >-
      Repeats text a given number of times. Use REPT to fill a cell with a
      number of instances of a text string.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        rept(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numberTimes: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: text
          description: Is the text you want to repeat.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberTimes
          description: Is a positive number specifying the number of times to repeat text.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'right(text, numChars)'
    uid: 'excel!Excel.Functions#right:member(1)'
    package: excel!
    fullName: 'right(text, numChars)'
    summary: >-
      Returns the specified number of characters from the end of a text string.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        right(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numChars?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: text
          description: Is the text string that contains the characters you want to extract.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numChars
          description: 'Specifies how many characters you want to extract, 1 if omitted.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'rightb(text, numBytes)'
    uid: 'excel!Excel.Functions#rightb:member(1)'
    package: excel!
    fullName: 'rightb(text, numBytes)'
    summary: >-
      Returns the specified number of characters from the end of a text string.
      Use with double-byte character sets (DBCS).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        rightb(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numBytes?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: text
          description: Is the text string containing the characters you want to extract.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numBytes
          description: Specifies how many characters you want to extract.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'roman(number, form)'
    uid: 'excel!Excel.Functions#roman:member(1)'
    package: excel!
    fullName: 'roman(number, form)'
    summary: >-
      Converts an Arabic numeral to Roman, as text.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        roman(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, form?: boolean | number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: number
          description: Is the Arabic numeral you want to convert.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: form
          description: Is the number specifying the type of Roman numeral you want.
          type: >-
            boolean | number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'round(number, numDigits)'
    uid: 'excel!Excel.Functions#round:member(1)'
    package: excel!
    fullName: 'round(number, numDigits)'
    summary: >-
      Rounds a number to a specified number of digits.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        round(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numDigits: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the number you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numDigits
          description: >-
            Is the number of digits to which you want to round. Negative rounds
            to the left of the decimal point; zero to the nearest integer.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'roundDown(number, numDigits)'
    uid: 'excel!Excel.Functions#roundDown:member(1)'
    package: excel!
    fullName: 'roundDown(number, numDigits)'
    summary: >-
      Rounds a number down, toward zero.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        roundDown(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numDigits: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is any real number that you want rounded down.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numDigits
          description: >-
            Is the number of digits to which you want to round. Negative rounds
            to the left of the decimal point; zero or omitted, to the nearest
            integer.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'roundUp(number, numDigits)'
    uid: 'excel!Excel.Functions#roundUp:member(1)'
    package: excel!
    fullName: 'roundUp(number, numDigits)'
    summary: >-
      Rounds a number up, away from zero.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        roundUp(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numDigits: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is any real number that you want rounded up.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numDigits
          description: >-
            Is the number of digits to which you want to round. Negative rounds
            to the left of the decimal point; zero or omitted, to the nearest
            integer.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: rows(array)
    uid: 'excel!Excel.Functions#rows:member(1)'
    package: excel!
    fullName: rows(array)
    summary: >-
      Returns the number of rows in a reference or array.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        rows(array: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: array
          description: >-
            Is an array, an array formula, or a reference to a range of cells
            for which you want the number of rows.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'rri(nper, pv, fv)'
    uid: 'excel!Excel.Functions#rri:member(1)'
    package: excel!
    fullName: 'rri(nper, pv, fv)'
    summary: >-
      Returns an equivalent interest rate for the growth of an investment.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        rri(nper: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pv: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, fv: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: nper
          description: Is the number of periods for the investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pv
          description: Is the present value of the investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fv
          description: Is the future value of the investment.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: sec(number)
    uid: 'excel!Excel.Functions#sec:member(1)'
    package: excel!
    fullName: sec(number)
    summary: >-
      Returns the secant of an angle.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sec(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the angle in radians for which you want the secant.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: sech(number)
    uid: 'excel!Excel.Functions#sech:member(1)'
    package: excel!
    fullName: sech(number)
    summary: >-
      Returns the hyperbolic secant of an angle.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sech(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the angle in radians for which you want the hyperbolic secant.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: second(serialNumber)
    uid: 'excel!Excel.Functions#second:member(1)'
    package: excel!
    fullName: second(serialNumber)
    summary: >-
      Returns the second, a number from 0 to 59.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        second(serialNumber: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: serialNumber
          description: >-
            Is a number in the date-time code used by Microsoft Excel or text in
            time format, such as 16:48:23 or 4:48:47 PM.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'seriesSum(x, n, m, coefficients)'
    uid: 'excel!Excel.Functions#seriesSum:member(1)'
    package: excel!
    fullName: 'seriesSum(x, n, m, coefficients)'
    summary: >-
      Returns the sum of a power series based on the formula.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        seriesSum(x: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, n: number | string |
        boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, m: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, coefficients:
        Excel.Range | string | number | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the input value to the power series.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: 'n'
          description: Is the initial power to which you want to raise x.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: m
          description: Is the step by which to increase n for each term in the series.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: coefficients
          description: >-
            Is a set of coefficients by which each successive power of x is
            multiplied.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | string | number | boolean |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: sheet(value)
    uid: 'excel!Excel.Functions#sheet:member(1)'
    package: excel!
    fullName: sheet(value)
    summary: >-
      Returns the sheet number of the referenced sheet.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sheet(value?: Excel.Range | string | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: value
          description: >-
            Is the name of a sheet or a reference that you want the sheet number
            of. If omitted the number of the sheet containing the function is
            returned.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | string | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: sheets(reference)
    uid: 'excel!Excel.Functions#sheets:member(1)'
    package: excel!
    fullName: sheets(reference)
    summary: >-
      Returns the number of sheets in a reference.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sheets(reference?: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: reference
          description: >-
            Is a reference for which you want to know the number of sheets it
            contains. If omitted the number of sheets in the workbook containing
            the function is returned.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: sign(number)
    uid: 'excel!Excel.Functions#sign:member(1)'
    package: excel!
    fullName: sign(number)
    summary: >-
      Returns the sign of a number: 1 if the number is positive, zero if the
      number is zero, or -1 if the number is negative.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sign(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is any real number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: sin(number)
    uid: 'excel!Excel.Functions#sin:member(1)'
    package: excel!
    fullName: sin(number)
    summary: >-
      Returns the sine of an angle.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sin(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: >-
            Is the angle in radians for which you want the sine. Degrees *
            PI()/180 = radians.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: sinh(number)
    uid: 'excel!Excel.Functions#sinh:member(1)'
    package: excel!
    fullName: sinh(number)
    summary: >-
      Returns the hyperbolic sine of a number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sinh(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is any real number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: skew_p(values)
    uid: 'excel!Excel.Functions#skew_p:member(1)'
    package: excel!
    fullName: skew_p(values)
    summary: >-
      Returns the skewness of a distribution based on a population: a
      characterization of the degree of asymmetry of a distribution around its
      mean.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        skew_p(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 254 numbers or names,
            arrays, or references that contain numbers for which you want the
            population skewness.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: skew(values)
    uid: 'excel!Excel.Functions#skew:member(1)'
    package: excel!
    fullName: skew(values)
    summary: >-
      Returns the skewness of a distribution: a characterization of the degree
      of asymmetry of a distribution around its mean.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        skew(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers or names,
            arrays, or references that contain numbers for which you want the
            skewness.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'sln(cost, salvage, life)'
    uid: 'excel!Excel.Functions#sln:member(1)'
    package: excel!
    fullName: 'sln(cost, salvage, life)'
    summary: >-
      Returns the straight-line depreciation of an asset for one period.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sln(cost: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, salvage: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, life: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: cost
          description: Is the initial cost of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: salvage
          description: Is the salvage value at the end of the life of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: life
          description: >-
            Is the number of periods over which the asset is being depreciated
            (sometimes called the useful life of the asset).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'small(array, k)'
    uid: 'excel!Excel.Functions#small:member(1)'
    package: excel!
    fullName: 'small(array, k)'
    summary: >-
      Returns the k-th smallest value in a data set. For example, the fifth
      smallest number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        small(array: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, k: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: array
          description: >-
            Is an array or range of numerical data for which you want to
            determine the k-th smallest value.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: k
          description: >-
            Is the position (from the smallest) in the array or range of the
            value to return.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: sqrt(number)
    uid: 'excel!Excel.Functions#sqrt:member(1)'
    package: excel!
    fullName: sqrt(number)
    summary: >-
      Returns the square root of a number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sqrt(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the number for which you want the square root.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: sqrtPi(number)
    uid: 'excel!Excel.Functions#sqrtPi:member(1)'
    package: excel!
    fullName: sqrtPi(number)
    summary: >-
      Returns the square root of (number * Pi).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sqrtPi(number: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the number by which p is multiplied.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'standardize(x, mean, standardDev)'
    uid: 'excel!Excel.Functions#standardize:member(1)'
    package: excel!
    fullName: 'standardize(x, mean, standardDev)'
    summary: >-
      Returns a normalized value from a distribution characterized by a mean and
      standard deviation.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        standardize(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, mean: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value you want to normalize.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: mean
          description: Is the arithmetic mean of the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: standardDev
          description: 'Is the standard deviation of the distribution, a positive number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: stDev_P(values)
    uid: 'excel!Excel.Functions#stDev_P:member(1)'
    package: excel!
    fullName: stDev_P(values)
    summary: >-
      Calculates standard deviation based on the entire population given as
      arguments (ignores logical values and text).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        stDev_P(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers
            corresponding to a population and can be numbers or references that
            contain numbers.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: stDev_S(values)
    uid: 'excel!Excel.Functions#stDev_S:member(1)'
    package: excel!
    fullName: stDev_S(values)
    summary: >-
      Estimates standard deviation based on a sample (ignores logical values and
      text in the sample).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        stDev_S(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers
            corresponding to a sample of a population and can be numbers or
            references that contain numbers.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: stDevA(values)
    uid: 'excel!Excel.Functions#stDevA:member(1)'
    package: excel!
    fullName: stDevA(values)
    summary: >-
      Estimates standard deviation based on a sample, including logical values
      and text. Text and the logical value FALSE have the value 0; the logical
      value TRUE has the value 1.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        stDevA(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 values corresponding
            to a sample of a population and can be values or names or references
            to values.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: stDevPA(values)
    uid: 'excel!Excel.Functions#stDevPA:member(1)'
    package: excel!
    fullName: stDevPA(values)
    summary: >-
      Calculates standard deviation based on an entire population, including
      logical values and text. Text and the logical value FALSE have the value
      0; the logical value TRUE has the value 1.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        stDevPA(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 values corresponding
            to a population and can be values, names, arrays, or references that
            contain values.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'substitute(text, oldText, newText, instanceNum)'
    uid: 'excel!Excel.Functions#substitute:member(1)'
    package: excel!
    fullName: 'substitute(text, oldText, newText, instanceNum)'
    summary: >-
      Replaces existing text with new text in a text string.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        substitute(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, oldText: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, newText: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        instanceNum?: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: text
          description: >-
            Is the text or the reference to a cell containing text in which you
            want to substitute characters.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: oldText
          description: >-
            Is the existing text you want to replace. If the case of oldText
            does not match the case of text, SUBSTITUTE will not replace the
            text.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: newText
          description: Is the text you want to replace oldText with.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: instanceNum
          description: >-
            Specifies which occurrence of oldText you want to replace. If
            omitted, every instance of oldText is replaced.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'subtotal(functionNum, values)'
    uid: 'excel!Excel.Functions#subtotal:member(1)'
    package: excel!
    fullName: 'subtotal(functionNum, values)'
    summary: >-
      Returns a subtotal in a list or database.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        subtotal(functionNum: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, ...values: Array<Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      parameters:
        - id: functionNum
          description: >-
            Is the number 1 to 11 that specifies the summary function for the
            subtotal.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 254 ranges or references
            for which you want the subtotal.
          type: >-
            Array&lt;<xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: sum(values)
    uid: 'excel!Excel.Functions#sum:member(1)'
    package: excel!
    fullName: sum(values)
    summary: >-
      Adds all the numbers in a range of cells.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sum(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers to sum.
            Logical values and text are ignored in cells, included if typed as
            arguments.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'sumIf(range, criteria, sumRange)'
    uid: 'excel!Excel.Functions#sumIf:member(1)'
    package: excel!
    fullName: 'sumIf(range, criteria, sumRange)'
    summary: >-
      Adds the cells specified by a given condition or criteria.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sumIf(range: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, criteria: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        sumRange?: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: range
          description: Is the range of cells you want evaluated.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the condition or criteria in the form of a number, expression, or
            text that defines which cells will be added.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: sumRange
          description: >-
            Are the actual cells to sum. If omitted, the cells in range are
            used.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'sumIfs(sumRange, values)'
    uid: 'excel!Excel.Functions#sumIfs:member(1)'
    package: excel!
    fullName: 'sumIfs(sumRange, values)'
    summary: >-
      Adds the cells specified by a given set of conditions or criteria.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sumIfs(sumRange: Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, ...values: Array<Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any> | number | string |
        boolean>): FunctionResult<number>;
      parameters:
        - id: sumRange
          description: Are the actual cells to sum.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: values
          description: >-
            List of parameters, where the first element of each pair is the Is
            the range of cells you want evaluated for the particular condition ,
            and the second element is is the condition or criteria in the form
            of a number, expression, or text that defines which cells will be
            added.
          type: >-
            Array&lt;<xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt; | number |
            string | boolean&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: sumSq(values)
    uid: 'excel!Excel.Functions#sumSq:member(1)'
    package: excel!
    fullName: sumSq(values)
    summary: >-
      Returns the sum of the squares of the arguments. The arguments can be
      numbers, arrays, names, or references to cells that contain numbers.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        sumSq(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers, arrays,
            names, or references to arrays for which you want the sum of the
            squares.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'syd(cost, salvage, life, per)'
    uid: 'excel!Excel.Functions#syd:member(1)'
    package: excel!
    fullName: 'syd(cost, salvage, life, per)'
    summary: >-
      Returns the sum-of-years' digits depreciation of an asset for a specified
      period.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        syd(cost: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, salvage: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, life: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, per:
        number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: cost
          description: Is the initial cost of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: salvage
          description: Is the salvage value at the end of the life of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: life
          description: >-
            Is the number of periods over which the asset is being depreciated
            (sometimes called the useful life of the asset).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: per
          description: Is the period and must use the same units as Life.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 't_Dist_2T(x, degFreedom)'
    uid: 'excel!Excel.Functions#t_Dist_2T:member(1)'
    package: excel!
    fullName: 't_Dist_2T(x, degFreedom)'
    summary: >-
      Returns the two-tailed Student's t-distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        t_Dist_2T(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, degFreedom: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: x
          description: Is the numeric value at which to evaluate the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom
          description: >-
            Is an integer indicating the number of degrees of freedom that
            characterize the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 't_Dist_RT(x, degFreedom)'
    uid: 'excel!Excel.Functions#t_Dist_RT:member(1)'
    package: excel!
    fullName: 't_Dist_RT(x, degFreedom)'
    summary: >-
      Returns the right-tailed Student's t-distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        t_Dist_RT(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, degFreedom: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: x
          description: Is the numeric value at which to evaluate the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom
          description: >-
            Is an integer indicating the number of degrees of freedom that
            characterize the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 't_Dist(x, degFreedom, cumulative)'
    uid: 'excel!Excel.Functions#t_Dist:member(1)'
    package: excel!
    fullName: 't_Dist(x, degFreedom, cumulative)'
    summary: >-
      Returns the left-tailed Student's t-distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        t_Dist(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, degFreedom: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: x
          description: Is the numeric value at which to evaluate the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom
          description: >-
            Is an integer indicating the number of degrees of freedom that
            characterize the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability density function, use FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 't_Inv_2T(probability, degFreedom)'
    uid: 'excel!Excel.Functions#t_Inv_2T:member(1)'
    package: excel!
    fullName: 't_Inv_2T(probability, degFreedom)'
    summary: >-
      Returns the two-tailed inverse of the Student's t-distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        t_Inv_2T(probability: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, degFreedom: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: probability
          description: >-
            Is the probability associated with the two-tailed Student's
            t-distribution, a number between 0 and 1 inclusive.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom
          description: >-
            Is a positive integer indicating the number of degrees of freedom to
            characterize the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 't_Inv(probability, degFreedom)'
    uid: 'excel!Excel.Functions#t_Inv:member(1)'
    package: excel!
    fullName: 't_Inv(probability, degFreedom)'
    summary: >-
      Returns the left-tailed inverse of the Student's t-distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        t_Inv(probability: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, degFreedom: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: probability
          description: >-
            Is the probability associated with the two-tailed Student's
            t-distribution, a number between 0 and 1 inclusive.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom
          description: >-
            Is a positive integer indicating the number of degrees of freedom to
            characterize the distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: t(value)
    uid: 'excel!Excel.Functions#t:member(1)'
    package: excel!
    fullName: t(value)
    summary: >-
      Checks whether a value is text, and returns the text if it is, or returns
      double quotes (empty text) if it is not.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        t(value: number | string | boolean | Excel.Range | Excel.RangeReference
        | Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: value
          description: Is the value to test.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: tan(number)
    uid: 'excel!Excel.Functions#tan:member(1)'
    package: excel!
    fullName: tan(number)
    summary: >-
      Returns the tangent of an angle.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        tan(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: >-
            Is the angle in radians for which you want the tangent. Degrees *
            PI()/180 = radians.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: tanh(number)
    uid: 'excel!Excel.Functions#tanh:member(1)'
    package: excel!
    fullName: tanh(number)
    summary: >-
      Returns the hyperbolic tangent of a number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        tanh(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is any real number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'tbillEq(settlement, maturity, discount)'
    uid: 'excel!Excel.Functions#tbillEq:member(1)'
    package: excel!
    fullName: 'tbillEq(settlement, maturity, discount)'
    summary: >-
      Returns the bond-equivalent yield for a treasury bill.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        tbillEq(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, discount: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the Treasury bill's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: >-
            Is the Treasury bill's maturity date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: discount
          description: Is the Treasury bill's discount rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'tbillPrice(settlement, maturity, discount)'
    uid: 'excel!Excel.Functions#tbillPrice:member(1)'
    package: excel!
    fullName: 'tbillPrice(settlement, maturity, discount)'
    summary: >-
      Returns the price per $100 face value for a treasury bill.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        tbillPrice(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, discount: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the Treasury bill's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: >-
            Is the Treasury bill's maturity date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: discount
          description: Is the Treasury bill's discount rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'tbillYield(settlement, maturity, pr)'
    uid: 'excel!Excel.Functions#tbillYield:member(1)'
    package: excel!
    fullName: 'tbillYield(settlement, maturity, pr)'
    summary: >-
      Returns the yield for a treasury bill.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        tbillYield(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the Treasury bill's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: >-
            Is the Treasury bill's maturity date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pr
          description: Is the Treasury Bill's price per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'text(value, formatText)'
    uid: 'excel!Excel.Functions#text:member(1)'
    package: excel!
    fullName: 'text(value, formatText)'
    summary: >-
      Converts a value to text in a specific number format.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        text(value: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, formatText: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: value
          description: >-
            Is a number, a formula that evaluates to a numeric value, or a
            reference to a cell containing a numeric value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: formatText
          description: >-
            Is a number format in text form from the Category box on the Number
            tab in the Format Cells dialog box (not General).
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'time(hour, minute, second)'
    uid: 'excel!Excel.Functions#time:member(1)'
    package: excel!
    fullName: 'time(hour, minute, second)'
    summary: >-
      Converts hours, minutes, and seconds given as numbers to an Excel serial
      number, formatted with a time format.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        time(hour: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, minute: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, second: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: hour
          description: Is a number from 0 to 23 representing the hour.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: minute
          description: Is a number from 0 to 59 representing the minute.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: second
          description: Is a number from 0 to 59 representing the second.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: timevalue(timeText)
    uid: 'excel!Excel.Functions#timevalue:member(1)'
    package: excel!
    fullName: timevalue(timeText)
    summary: >-
      Converts a text time to an Excel serial number for a time, a number from 0
      (12:00:00 AM) to 0.999988426 (11:59:59 PM). Format the number with a time
      format after entering the formula.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        timevalue(timeText: string | number | Excel.Range | Excel.RangeReference
        | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: timeText
          description: >-
            Is a text string that gives a time in any one of the Microsoft Excel
            time formats (date information in the string is ignored).
          type: >-
            string | number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: today()
    uid: 'excel!Excel.Functions#today:member(1)'
    package: excel!
    fullName: today()
    summary: >-
      Returns the current date formatted as a date.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'today(): FunctionResult<number>;'
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.Functions#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Excel.Functions object
      is an API object, the `toJSON` method returns a plain JavaScript object
      (typed as `Excel.Interfaces.FunctionsData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        toJSON(): {
                    [key: string]: string;
                };
      return:
        type: |-
          {
                      [key: string]: string;
                  }
        description: ''
  - name: trim(text)
    uid: 'excel!Excel.Functions#trim:member(1)'
    package: excel!
    fullName: trim(text)
    summary: >-
      Removes all spaces from a text string except for single spaces between
      words.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        trim(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: text
          description: Is the text from which you want spaces removed.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'trimMean(array, percent)'
    uid: 'excel!Excel.Functions#trimMean:member(1)'
    package: excel!
    fullName: 'trimMean(array, percent)'
    summary: >-
      Returns the mean of the interior portion of a set of data values.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        trimMean(array: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, percent: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: array
          description: Is the range or array of values to trim and average.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: percent
          description: >-
            Is the fractional number of data points to exclude from the top and
            bottom of the data set.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: true()
    uid: 'excel!Excel.Functions#true:member(1)'
    package: excel!
    fullName: true()
    summary: >-
      Returns the logical value TRUE.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'true(): FunctionResult<boolean>;'
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: 'trunc(number, numDigits)'
    uid: 'excel!Excel.Functions#trunc:member(1)'
    package: excel!
    fullName: 'trunc(number, numDigits)'
    summary: >-
      Truncates a number to an integer by removing the decimal, or fractional,
      part of the number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        trunc(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, numDigits?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the number you want to truncate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numDigits
          description: >-
            Is a number specifying the precision of the truncation, 0 (zero) if
            omitted.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: type(value)
    uid: 'excel!Excel.Functions#type:member(1)'
    package: excel!
    fullName: type(value)
    summary: >-
      Returns an integer representing the data type of a value: number = 1; text
      = 2; logical value = 4; error value = 16; array = 64.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        type(value: boolean | string | number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: value
          description: Can be any value.
          type: >-
            boolean | string | number | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: unichar(number)
    uid: 'excel!Excel.Functions#unichar:member(1)'
    package: excel!
    fullName: unichar(number)
    summary: >-
      Returns the Unicode character referenced by the given numeric value.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        unichar(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: number
          description: Is the Unicode number representing a character.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: unicode(text)
    uid: 'excel!Excel.Functions#unicode:member(1)'
    package: excel!
    fullName: unicode(text)
    summary: >-
      Returns the number (code point) corresponding to the first character of
      the text.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        unicode(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: text
          description: Is the character that you want the Unicode value of.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: upper(text)
    uid: 'excel!Excel.Functions#upper:member(1)'
    package: excel!
    fullName: upper(text)
    summary: >-
      Converts a text string to all uppercase letters.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        upper(text: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: text
          description: >-
            Is the text you want converted to uppercase, a reference or a text
            string.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'usdollar(number, decimals)'
    uid: 'excel!Excel.Functions#usdollar:member(1)'
    package: excel!
    fullName: 'usdollar(number, decimals)'
    summary: >-
      Converts a number to text, using currency format.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        usdollar(number: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, decimals?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: number
          description: >-
            Is a number, a reference to a cell containing a number, or a formula
            that evaluates to a number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: decimals
          description: Is the number of digits to the right of the decimal point.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: value(text)
    uid: 'excel!Excel.Functions#value:member(1)'
    package: excel!
    fullName: value(text)
    summary: >-
      Converts a text string that represents a number to a number.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        value(text: string | boolean | number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: text
          description: >-
            Is the text enclosed in quotation marks or a reference to a cell
            containing the text you want to convert.
          type: >-
            string | boolean | number | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: var_P(values)
    uid: 'excel!Excel.Functions#var_P:member(1)'
    package: excel!
    fullName: var_P(values)
    summary: >-
      Calculates variance based on the entire population (ignores logical values
      and text in the population).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        var_P(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numeric arguments
            corresponding to a population.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: var_S(values)
    uid: 'excel!Excel.Functions#var_S:member(1)'
    package: excel!
    fullName: var_S(values)
    summary: >-
      Estimates variance based on a sample (ignores logical values and text in
      the sample).


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        var_S(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numeric arguments
            corresponding to a sample of a population.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: varA(values)
    uid: 'excel!Excel.Functions#varA:member(1)'
    package: excel!
    fullName: varA(values)
    summary: >-
      Estimates variance based on a sample, including logical values and text.
      Text and the logical value FALSE have the value 0; the logical value TRUE
      has the value 1.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        varA(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 value arguments
            corresponding to a sample of a population.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: varPA(values)
    uid: 'excel!Excel.Functions#varPA:member(1)'
    package: excel!
    fullName: varPA(values)
    summary: >-
      Calculates variance based on the entire population, including logical
      values and text. Text and the logical value FALSE have the value 0; the
      logical value TRUE has the value 1.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        varPA(...values: Array<number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 value arguments
            corresponding to a population.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'vdb(cost, salvage, life, startPeriod, endPeriod, factor, noSwitch)'
    uid: 'excel!Excel.Functions#vdb:member(1)'
    package: excel!
    fullName: 'vdb(cost, salvage, life, startPeriod, endPeriod, factor, noSwitch)'
    summary: >-
      Returns the depreciation of an asset for any period you specify, including
      partial periods, using the double-declining balance method or some other
      method you specify.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        vdb(cost: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, salvage: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, life: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        startPeriod: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, endPeriod: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, factor?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        noSwitch?: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: cost
          description: Is the initial cost of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: salvage
          description: Is the salvage value at the end of the life of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: life
          description: >-
            Is the number of periods over which the asset is being depreciated
            (sometimes called the useful life of the asset).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: startPeriod
          description: >-
            Is the starting period for which you want to calculate the
            depreciation, in the same units as Life.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: endPeriod
          description: >-
            Is the ending period for which you want to calculate the
            depreciation, in the same units as Life.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: factor
          description: >-
            Is the rate at which the balance declines, 2 (double-declining
            balance) if omitted.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: noSwitch
          description: >-
            Switch to straight-line depreciation when depreciation is greater
            than the declining balance = FALSE or omitted; do not switch = TRUE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'vlookup(lookupValue, tableArray, colIndexNum, rangeLookup)'
    uid: 'excel!Excel.Functions#vlookup:member(1)'
    package: excel!
    fullName: 'vlookup(lookupValue, tableArray, colIndexNum, rangeLookup)'
    summary: >-
      Looks for a value in the leftmost column of a table, and then returns a
      value in the same row from a column you specify. By default, the table
      must be sorted in an ascending order.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        vlookup(lookupValue: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, tableArray:
        Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>,
        colIndexNum: Excel.Range | number | Excel.RangeReference |
        Excel.FunctionResult<any>, rangeLookup?: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number
        | string | boolean>;
      parameters:
        - id: lookupValue
          description: >-
            Is the value to be found in the first column of the table, and can
            be a value, a reference, or a text string.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: tableArray
          description: >-
            Is a table of text, numbers, or logical values, in which data is
            retrieved. tableArray can be a reference to a range or a range name.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | number | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: colIndexNum
          description: >-
            Is the column number in tableArray from which the matching value
            should be returned. The first column of values in the table is
            column 1.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | number | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rangeLookup
          description: >-
            Is a logical value: to find the closest match in the first column
            (sorted in ascending order) = TRUE or omitted; find an exact match =
            FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: >-
          <xref uid="excel!Excel.FunctionResult:class" />&lt;number | string |
          boolean&gt;
        description: ''
  - name: 'weekday(serialNumber, returnType)'
    uid: 'excel!Excel.Functions#weekday:member(1)'
    package: excel!
    fullName: 'weekday(serialNumber, returnType)'
    summary: >-
      Returns a number from 1 to 7 identifying the day of the week of a date.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        weekday(serialNumber: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, returnType?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: serialNumber
          description: Is a number that represents a date.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: returnType
          description: >-
            Is a number: for Sunday=1 through Saturday=7, use 1; for Monday=1
            through Sunday=7, use 2; for Monday=0 through Sunday=6, use 3.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'weekNum(serialNumber, returnType)'
    uid: 'excel!Excel.Functions#weekNum:member(1)'
    package: excel!
    fullName: 'weekNum(serialNumber, returnType)'
    summary: >-
      Returns the week number in the year.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        weekNum(serialNumber: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, returnType?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: serialNumber
          description: >-
            Is the date-time code used by Microsoft Excel for date and time
            calculation.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: returnType
          description: Is a number (1 or 2) that determines the type of the return value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'weibull_Dist(x, alpha, beta, cumulative)'
    uid: 'excel!Excel.Functions#weibull_Dist:member(1)'
    package: excel!
    fullName: 'weibull_Dist(x, alpha, beta, cumulative)'
    summary: >-
      Returns the Weibull distribution.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        weibull_Dist(x: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, alpha: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, beta: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: >-
            Is the value at which to evaluate the function, a nonnegative
            number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: alpha
          description: 'Is a parameter to the distribution, a positive number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: beta
          description: 'Is a parameter to the distribution, a positive number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability mass function, use FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'workDay_Intl(startDate, days, weekend, holidays)'
    uid: 'excel!Excel.Functions#workDay_Intl:member(1)'
    package: excel!
    fullName: 'workDay_Intl(startDate, days, weekend, holidays)'
    summary: >-
      Returns the serial number of the date before or after a specified number
      of workdays with custom weekend parameters.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        workDay_Intl(startDate: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, days: number | string
        | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, weekend?: number | string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, holidays?: number |
        string | Excel.Range | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: days
          description: >-
            Is the number of nonweekend and non-holiday days before or after
            startDate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: weekend
          description: Is a number or string specifying when weekends occur.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: holidays
          description: >-
            Is an optional array of one or more serial date numbers to exclude
            from the working calendar, such as state and federal holidays and
            floating holidays.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | boolean |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'workDay(startDate, days, holidays)'
    uid: 'excel!Excel.Functions#workDay:member(1)'
    package: excel!
    fullName: 'workDay(startDate, days, holidays)'
    summary: >-
      Returns the serial number of the date before or after a specified number
      of workdays.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        workDay(startDate: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, days: number | string
        | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, holidays?: number | string | Excel.Range |
        boolean | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: days
          description: >-
            Is the number of nonweekend and non-holiday days before or after
            startDate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: holidays
          description: >-
            Is an optional array of one or more serial date numbers to exclude
            from the working calendar, such as state and federal holidays and
            floating holidays.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | boolean |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'xirr(values, dates, guess)'
    uid: 'excel!Excel.Functions#xirr:member(1)'
    package: excel!
    fullName: 'xirr(values, dates, guess)'
    summary: >-
      Returns the internal rate of return for a schedule of cash flows.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        xirr(values: number | string | Excel.Range | boolean |
        Excel.RangeReference | Excel.FunctionResult<any>, dates: number | string
        | Excel.Range | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>, guess?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            Is a series of cash flows that correspond to a schedule of payments
            in dates.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | boolean |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: dates
          description: >-
            Is a schedule of payment dates that corresponds to the cash flow
            payments.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | boolean |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: guess
          description: Is a number that you guess is close to the result of XIRR.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'xnpv(rate, values, dates)'
    uid: 'excel!Excel.Functions#xnpv:member(1)'
    package: excel!
    fullName: 'xnpv(rate, values, dates)'
    summary: >-
      Returns the net present value for a schedule of cash flows.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        xnpv(rate: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, values: number |
        string | Excel.Range | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>, dates: number | string | Excel.Range |
        boolean | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: rate
          description: Is the discount rate to apply to the cash flows.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: values
          description: >-
            Is a series of cash flows that correspond to a schedule of payments
            in dates.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | boolean |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: dates
          description: >-
            Is a schedule of payment dates that corresponds to the cash flow
            payments.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | boolean |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: xor(values)
    uid: 'excel!Excel.Functions#xor:member(1)'
    package: excel!
    fullName: xor(values)
    summary: >-
      Returns a logical 'Exclusive Or' of all arguments.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        xor(...values: Array<boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<boolean>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 254 conditions you want
            to test that can be either TRUE or FALSE and can be logical values,
            arrays, or references.
          type: >-
            Array&lt;boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: year(serialNumber)
    uid: 'excel!Excel.Functions#year:member(1)'
    package: excel!
    fullName: year(serialNumber)
    summary: >-
      Returns the year of a date, an integer in the range 1900 - 9999.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        year(serialNumber: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: serialNumber
          description: Is a number in the date-time code used by Microsoft Excel.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'yearFrac(startDate, endDate, basis)'
    uid: 'excel!Excel.Functions#yearFrac:member(1)'
    package: excel!
    fullName: 'yearFrac(startDate, endDate, basis)'
    summary: >-
      Returns the year fraction representing the number of whole days between
      start\_date and end\_date.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        yearFrac(startDate: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, endDate: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: endDate
          description: Is a serial date number that represents the end date.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'yield(settlement, maturity, rate, pr, redemption, frequency, basis)'
    uid: 'excel!Excel.Functions#yield:member(1)'
    package: excel!
    fullName: 'yield(settlement, maturity, rate, pr, redemption, frequency, basis)'
    summary: >-
      Returns the yield on a security that pays periodic interest.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        yield(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, pr: number | string
        | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, redemption: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        frequency: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the security's annual coupon rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pr
          description: Is the security's price per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'yieldDisc(settlement, maturity, pr, redemption, basis)'
    uid: 'excel!Excel.Functions#yieldDisc:member(1)'
    package: excel!
    fullName: 'yieldDisc(settlement, maturity, pr, redemption, basis)'
    summary: >-
      Returns the annual yield for a discounted security. For example, a
      treasury bill.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        yieldDisc(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, redemption: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pr
          description: Is the security's price per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'yieldMat(settlement, maturity, issue, rate, pr, basis)'
    uid: 'excel!Excel.Functions#yieldMat:member(1)'
    package: excel!
    fullName: 'yieldMat(settlement, maturity, issue, rate, pr, basis)'
    summary: >-
      Returns the annual yield of a security that pays interest at maturity.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        yieldMat(settlement: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, maturity: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, issue: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate:
        number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the security's interest rate at date of issue.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pr
          description: Is the security's price per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> |
            <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'z_Test(array, x, sigma)'
    uid: 'excel!Excel.Functions#z_Test:member(1)'
    package: excel!
    fullName: 'z_Test(array, x, sigma)'
    summary: >-
      Returns the one-tailed P-value of a z-test.


      \[ [API set: ExcelApi
      1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        z_Test(array: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, x: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, sigma?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: array
          description: Is the array or range of data against which to test X.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: x
          description: Is the value to test.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: sigma
          description: >-
            Is the population (known) standard deviation. If omitted, the sample
            standard deviation is used.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
