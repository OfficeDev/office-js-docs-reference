### YamlMime:TSType
name: OfficeExtension.ClientObject
uid: 'office!OfficeExtension.ClientObject:class'
package: office!
fullName: OfficeExtension.ClientObject
summary: >-
  An abstract proxy object that represents an object in an Office document. You create proxy objects from the context
  (or from other proxy objects), add commands to a queue to act on the object, and then synchronize the proxy object
  state with the document by calling `context.sync()`<!-- -->.
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'office!OfficeExtension.ClientObject#context:member'
    package: office!
    fullName: context
    summary: The request context associated with the object
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: ClientRequestContext;'
      return:
        type: '<xref uid="office!OfficeExtension.ClientRequestContext:class" />'
        description: |-


          #### Examples

          ```TypeScript
          // *.run methods automatically create an OfficeExtension.ClientRequestContext
          // object to work with the Office file.
          await Excel.run(async (context: Excel.RequestContext) => {
            // `context` is the Excel-specific extension of OfficeExtension.ClientRequestContext.
            
            const workbook = context.workbook;
            // Interact with the Excel workbook...
          });
          ```
  - name: isNullObject
    uid: 'office!OfficeExtension.ClientObject#isNullObject:member'
    package: office!
    fullName: isNullObject
    summary: >-
      Returns a boolean value for whether the corresponding object is a null object. You must call `context.sync()`
      before reading the isNullObject property.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isNullObject: boolean;'
      return:
        type: boolean
        description: |-


          #### Examples

          ```TypeScript
          // This Word snippet sets the hyperlink URL of a selected image. 
          await Word.run(async (context) => {
              const selection = context.document.getSelection();
              const firstImage = selection.inlinePictures.getFirstOrNullObject();
              await context.sync();

              // Check if an image was selected before changing its property.
              if (!firstImage.isNullObject) {
                  firstImage.hyperlink = "https://www.microsoft.com";
              } else {
                  console.log("No image selected");
              }

              await context.sync();
          });
          ```
