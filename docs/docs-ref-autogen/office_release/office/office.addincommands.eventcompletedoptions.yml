### YamlMime:TSType
name: Office.AddinCommands.EventCompletedOptions
uid: 'office!Office.AddinCommands.EventCompletedOptions:interface'
package: office!
fullName: Office.AddinCommands.EventCompletedOptions
summary: >-
  Specifies the behavior of an [on-send](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-on-send-addins)
  add-in in Outlook when it completes processing an `ItemSend` event.
remarks: >-
  \[ [API set: Mailbox 1.8](/office/dev/add-ins/reference/javascript-api-for-office) \]


  **[Minimum permission
  level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
  **restricted**


  **[Applicable Outlook
  mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
  Compose
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: allowEvent
    uid: 'office!Office.AddinCommands.EventCompletedOptions#allowEvent:member'
    package: office!
    fullName: allowEvent
    summary: >-
      When you use the [completed
      method](https://learn.microsoft.com/javascript/api/office/office.addincommands.event#office-office-addincommands-event-completed-member(1))
      to signal completion of an event handler, this value indicates if the handled event should continue execution or
      be canceled. For example, an on-send add-in that handles the `ItemSend` event can set `allowEvent` to `false` to
      cancel the sending of a message.
    remarks: >-
      \[ [API set: Mailbox 1.8](/office/dev/add-ins/reference/javascript-api-for-office) \]


      **[Minimum permission level
      (Outlook)](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **restricted**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose


      #### Examples


      ```TypeScript

      // In this example, the checkMessage function was registered as an event handler for ItemSend.

      function checkMessage(event) {
          // Get the item being sent.
          const outgoingMsg = Office.context.mailbox.item;

          // Check if subject contains "BLOCK".
          outgoingMsg.subject.getAsync(function (result) {
              // Subject is in `result.value`.
              // If search term "BLOCK" is found, don't send the message.
              const notFound = -1;
              const allowEvent = (result.value.indexOf('BLOCK') === notFound);
              event.completed({ allowEvent: allowEvent });
          });
      }

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allowEvent: boolean;'
      return:
        type: boolean
