### YamlMime:TSType
name: Word.IndexCollection
uid: word!Word.IndexCollection:class
package: word!
fullName: Word.IndexCollection
summary: >-
  A collection of [Word.Index](xref:word!Word.Index:class) objects that
  represents all the indexes in the document.
remarks: >-
  \[ [API set: WordApiDesktop
  1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: word!Word.IndexCollection#context:member
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: <xref uid="word!Word.RequestContext:class" />
  - name: items
    uid: word!Word.IndexCollection#items:member
    package: word!
    fullName: items
    summary: Gets the loaded child items in this collection.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly items: Word.Index[];'
      return:
        type: <xref uid="word!Word.Index:class" />[]
methods:
  - name: add(range, indexAddOptions)
    uid: word!Word.IndexCollection#add:member(1)
    package: word!
    fullName: add(range, indexAddOptions)
    summary: >-
      Returns an `Index` object that represents a new index added to the
      document.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        add(range: Word.Range, indexAddOptions?: Word.IndexAddOptions):
        Word.Index;
      parameters:
        - id: range
          description: >-
            The range where you want the index to appear. The index replaces the
            range, if the range is not collapsed.
          type: <xref uid="word!Word.Range:class" />
        - id: indexAddOptions
          description: Optional. The options for adding the index.
          type: <xref uid="word!Word.IndexAddOptions:interface" />
      return:
        type: <xref uid="word!Word.Index:class" />
        description: ''
  - name: getFormat()
    uid: word!Word.IndexCollection#getFormat:member(1)
    package: word!
    fullName: getFormat()
    summary: >-
      Gets the `IndexFormat` value that represents the formatting for the
      indexes in the document.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFormat(): OfficeExtension.ClientResult<Word.IndexFormat>;'
      return:
        type: >-
          <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref
          uid="word!Word.IndexFormat:enum" />&gt;
        description: ''
  - name: load(options)
    uid: word!Word.IndexCollection#load:member(1)
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Word.Interfaces.IndexCollectionLoadOptions &
        Word.Interfaces.CollectionLoadOptions): Word.IndexCollection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref
            uid="word!Word.Interfaces.IndexCollectionLoadOptions:interface" /> &
            <xref uid="word!Word.Interfaces.CollectionLoadOptions:interface" />
      return:
        type: <xref uid="word!Word.IndexCollection:class" />
        description: ''
  - name: load(propertyNames)
    uid: word!Word.IndexCollection#load:member(2)
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.IndexCollection;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: string | string[]
      return:
        type: <xref uid="word!Word.IndexCollection:class" />
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: word!Word.IndexCollection#load:member(3)
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption):
        Word.IndexCollection;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: <xref uid="office!OfficeExtension.LoadOption:interface" />
      return:
        type: <xref uid="word!Word.IndexCollection:class" />
        description: ''
  - name: markAllEntries(range, markAllEntriesOptions)
    uid: word!Word.IndexCollection#markAllEntries:member(1)
    package: word!
    fullName: markAllEntries(range, markAllEntriesOptions)
    summary: >-
      Inserts an [XE (Index Entry)
      field](https://support.microsoft.com/office/abaf7c78-6e21-418d-bf8b-f8186d2e4d08)
      after all instances of the text in the range.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        markAllEntries(range: Word.Range, markAllEntriesOptions?:
        Word.IndexMarkAllEntriesOptions): void;
      parameters:
        - id: range
          description: >-
            The range whose text is marked with an `XE` field throughout the
            document.
          type: <xref uid="word!Word.Range:class" />
        - id: markAllEntriesOptions
          description: Optional. The options for marking all entries.
          type: <xref uid="word!Word.IndexMarkAllEntriesOptions:interface" />
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: word!Word.IndexCollection#toJSON:member(1)
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that's passed to it.) Whereas the original `Word.IndexCollection`
      object is an API object, the `toJSON` method returns a plain JavaScript
      object (typed as `Word.Interfaces.IndexCollectionData`<!-- -->) that
      contains an "items" array with shallow copies of any loaded properties
      from the collection's items.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.IndexCollectionData;'
      return:
        type: <xref uid="word!Word.Interfaces.IndexCollectionData:interface" />
        description: ''
  - name: track()
    uid: word!Word.IndexCollection#track:member(1)
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in
      the document. This call is a shorthand for
      [context.trackedObjects.add(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you're using this object across `.sync` calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath"
      error when setting a property or invoking a method on the object, you need
      to add the object to the tracked object collection when the object was
      first created. If this object is part of a collection, you should also
      track the parent collection.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.IndexCollection;'
      return:
        type: <xref uid="word!Word.IndexCollection:class" />
        description: ''
  - name: untrack()
    uid: word!Word.IndexCollection#untrack:member(1)
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been
      tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so
      please remember to free any objects you add, once you're done using them.
      You'll need to call `context.sync()` before the memory release takes
      effect.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.IndexCollection;'
      return:
        type: <xref uid="word!Word.IndexCollection:class" />
        description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
