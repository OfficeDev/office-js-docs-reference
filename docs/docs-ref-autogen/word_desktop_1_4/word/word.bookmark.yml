### YamlMime:TSType
name: Word.Bookmark
uid: word!Word.Bookmark:class
package: word!
fullName: Word.Bookmark
summary: >-
  Represents a single bookmark in a document, selection, or range. The
  `Bookmark` object is a member of the `Bookmark` collection. The
  [Word.BookmarkCollection](xref:word!Word.BookmarkCollection:class) includes
  all the bookmarks listed in the **Bookmark** dialog box (**Insert**
  menu).
remarks: >-
  \[ [API set: WordApiDesktop
  1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: word!Word.Bookmark#context:member
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: <xref uid="word!Word.RequestContext:class" />
  - name: end
    uid: word!Word.Bookmark#end:member
    package: word!
    fullName: end
    summary: Specifies the ending character position of the bookmark.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'end: number;'
      return:
        type: number
  - name: isColumn
    uid: word!Word.Bookmark#isColumn:member
    package: word!
    fullName: isColumn
    summary: Returns `true` if the bookmark is a table column.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly isColumn: boolean;'
      return:
        type: boolean
  - name: isEmpty
    uid: word!Word.Bookmark#isEmpty:member
    package: word!
    fullName: isEmpty
    summary: Returns `true` if the bookmark is empty.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly isEmpty: boolean;'
      return:
        type: boolean
  - name: name
    uid: word!Word.Bookmark#name:member
    package: word!
    fullName: name
    summary: Returns the name of the `Bookmark` object.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly name: string;'
      return:
        type: string
  - name: range
    uid: word!Word.Bookmark#range:member
    package: word!
    fullName: range
    summary: >-
      Returns a `Range` object that represents the portion of the document
      that's contained in the `Bookmark` object.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly range: Word.Range;'
      return:
        type: <xref uid="word!Word.Range:class" />
  - name: start
    uid: word!Word.Bookmark#start:member
    package: word!
    fullName: start
    summary: Specifies the starting character position of the bookmark.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'start: number;'
      return:
        type: number
  - name: storyType
    uid: word!Word.Bookmark#storyType:member
    package: word!
    fullName: storyType
    summary: Returns the story type for the bookmark.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        readonly storyType: Word.StoryType | "MainText" | "Footnotes" |
        "Endnotes" | "Comments" | "TextFrame" | "EvenPagesHeader" |
        "PrimaryHeader" | "EvenPagesFooter" | "PrimaryFooter" |
        "FirstPageHeader" | "FirstPageFooter" | "FootnoteSeparator" |
        "FootnoteContinuationSeparator" | "FootnoteContinuationNotice" |
        "EndnoteSeparator" | "EndnoteContinuationSeparator" |
        "EndnoteContinuationNotice";
      return:
        type: >-
          <xref uid="word!Word.StoryType:enum" /> | "MainText" | "Footnotes" |
          "Endnotes" | "Comments" | "TextFrame" | "EvenPagesHeader" |
          "PrimaryHeader" | "EvenPagesFooter" | "PrimaryFooter" |
          "FirstPageHeader" | "FirstPageFooter" | "FootnoteSeparator" |
          "FootnoteContinuationSeparator" | "FootnoteContinuationNotice" |
          "EndnoteSeparator" | "EndnoteContinuationSeparator" |
          "EndnoteContinuationNotice"
methods:
  - name: copyTo(name)
    uid: word!Word.Bookmark#copyTo:member(1)
    package: word!
    fullName: copyTo(name)
    summary: >-
      Copies this bookmark to the new bookmark specified in the `name` argument
      and returns a `Bookmark` object.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'copyTo(name: string): Word.Bookmark;'
      parameters:
        - id: name
          description: The name of the new bookmark.
          type: string
      return:
        type: <xref uid="word!Word.Bookmark:class" />
        description: ''
  - name: delete()
    uid: word!Word.Bookmark#delete:member(1)
    package: word!
    fullName: delete()
    summary: Deletes the bookmark.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: ''
  - name: load(options)
    uid: word!Word.Bookmark#load:member(1)
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Word.Interfaces.BookmarkLoadOptions): Word.Bookmark;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: <xref uid="word!Word.Interfaces.BookmarkLoadOptions:interface" />
      return:
        type: <xref uid="word!Word.Bookmark:class" />
        description: ''
  - name: load(propertyNames)
    uid: word!Word.Bookmark#load:member(2)
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Bookmark;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: string | string[]
      return:
        type: <xref uid="word!Word.Bookmark:class" />
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: word!Word.Bookmark#load:member(3)
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.Bookmark;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: <xref uid="word!Word.Bookmark:class" />
        description: ''
  - name: select()
    uid: word!Word.Bookmark#select:member(1)
    package: word!
    fullName: select()
    summary: Selects the bookmark.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'select(): void;'
      return:
        type: void
        description: ''
  - name: set(properties, options)
    uid: word!Word.Bookmark#set:member(1)
    package: word!
    fullName: set(properties, options)
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.BookmarkUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: <xref uid="word!Word.Interfaces.BookmarkUpdateData:interface" />
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: word!Word.Bookmark#set:member(2)
    package: word!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Word.Bookmark): void;'
      parameters:
        - id: properties
          description: ''
          type: <xref uid="word!Word.Bookmark:class" />
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: word!Word.Bookmark#toJSON:member(1)
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that's passed to it.) Whereas the original `Word.Bookmark` object
      is an API object, the `toJSON` method returns a plain JavaScript object
      (typed as `Word.Interfaces.BookmarkData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.BookmarkData;'
      return:
        type: <xref uid="word!Word.Interfaces.BookmarkData:interface" />
        description: ''
  - name: track()
    uid: word!Word.Bookmark#track:member(1)
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in
      the document. This call is a shorthand for
      [context.trackedObjects.add(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you're using this object across `.sync` calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath"
      error when setting a property or invoking a method on the object, you need
      to add the object to the tracked object collection when the object was
      first created. If this object is part of a collection, you should also
      track the parent collection.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.Bookmark;'
      return:
        type: <xref uid="word!Word.Bookmark:class" />
        description: ''
  - name: untrack()
    uid: word!Word.Bookmark#untrack:member(1)
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been
      tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so
      please remember to free any objects you add, once you're done using them.
      You'll need to call `context.sync()` before the memory release takes
      effect.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.Bookmark;'
      return:
        type: <xref uid="word!Word.Bookmark:class" />
        description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
