### YamlMime:TSType
name: Word.ParagraphCollection
uid: word!Word.ParagraphCollection:class
package: word!
fullName: Word.ParagraphCollection
summary: >-
  Contains a collection of [Word.Paragraph](xref:word!Word.Paragraph:class)
  objects.
remarks: >-
  \[ [API set: WordApi
  1.1](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/15-images/insert-and-get-pictures.yaml


  // Inserts an image anchored to the last paragraph.

  await Word.run(async (context) => {
    context.document.body.paragraphs
      .getLast()
      .insertParagraph("", "After")
      .insertInlinePictureFromBase64(base64Image, "End");

    await context.sync();
  });

  ```

isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: word!Word.ParagraphCollection#context:member
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: <xref uid="word!Word.RequestContext:class" />
  - name: items
    uid: word!Word.ParagraphCollection#items:member
    package: word!
    fullName: items
    summary: Gets the loaded child items in this collection.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly items: Word.Paragraph[];'
      return:
        type: <xref uid="word!Word.Paragraph:class" />[]
        description: >-


          #### Examples


          ```TypeScript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/20-lists/insert-list.yaml


          // This example starts a new list with the second paragraph.

          await Word.run(async (context) => {
            const paragraphs: Word.ParagraphCollection = context.document.body.paragraphs;
            paragraphs.load("$none");

            await context.sync();

            // Start new list using the second paragraph.
            const list: Word.List = paragraphs.items[1].startNewList();
            list.load("$none");

            await context.sync();

            // To add new items to the list, use Start or End on the insertLocation parameter.
            list.insertParagraph("New list item at the start of the list", "Start");
            const paragraph: Word.Paragraph = list.insertParagraph("New list item at the end of the list (set to list level 5)", "End");

            // Set up list level for the list item.
            paragraph.listItem.level = 4;

            // To add paragraphs outside the list, use Before or After.
            list.insertParagraph("New paragraph goes after (not part of the list)", "After");

            await context.sync();
          });

          ```
methods:
  - name: add(range)
    uid: word!Word.ParagraphCollection#add:member(1)
    package: word!
    fullName: add(range)
    summary: >-
      Returns a `Paragraph` object that represents a new, blank paragraph added
      to the document.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'add(range: Word.Range): Word.Paragraph;'
      parameters:
        - id: range
          description: >-
            The range before which you want the new paragraph to be added. The
            new paragraph doesn't replace the range.
          type: <xref uid="word!Word.Range:class" />
      return:
        type: <xref uid="word!Word.Paragraph:class" />
        description: ''
  - name: closeUp()
    uid: word!Word.ParagraphCollection#closeUp:member(1)
    package: word!
    fullName: closeUp()
    summary: Removes any spacing before the specified paragraphs.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'closeUp(): void;'
      return:
        type: void
        description: ''
  - name: decreaseSpacing()
    uid: word!Word.ParagraphCollection#decreaseSpacing:member(1)
    package: word!
    fullName: decreaseSpacing()
    summary: Decreases the spacing before and after paragraphs in six-point increments.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'decreaseSpacing(): void;'
      return:
        type: void
        description: ''
  - name: getFirst()
    uid: word!Word.ParagraphCollection#getFirst:member(1)
    package: word!
    fullName: getFirst()
    summary: >-
      Gets the first paragraph in this collection. Throws an `ItemNotFound`
      error if the collection is empty.
    remarks: >-
      \[ [API set: WordApi
      1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-annotations.yaml


      // Gets annotations found in the selected paragraph.

      await Word.run(async (context) => {
        const paragraph: Word.Paragraph = context.document.getSelection().paragraphs.getFirst();
        const annotations: Word.AnnotationCollection = paragraph.getAnnotations();
        annotations.load("id,state,critiqueAnnotation");

        await context.sync();

        console.log("Annotations found:");

        for (let i = 0; i < annotations.items.length; i++) {
          const annotation: Word.Annotation = annotations.items[i];

          console.log(`ID ${annotation.id} - state '${annotation.state}':`, annotation.critiqueAnnotation.critique);
        }
      });

      ```

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFirst(): Word.Paragraph;'
      return:
        type: <xref uid="word!Word.Paragraph:class" />
        description: ''
  - name: getFirstOrNullObject()
    uid: word!Word.ParagraphCollection#getFirstOrNullObject:member(1)
    package: word!
    fullName: getFirstOrNullObject()
    summary: >-
      Gets the first paragraph in this collection. If the collection is empty,
      then this method will return an object with its `isNullObject` property
      set to `true`<!-- -->. For further information, see [*OrNullObject
      methods and
      properties](https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: >-
      \[ [API set: WordApi
      1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFirstOrNullObject(): Word.Paragraph;'
      return:
        type: <xref uid="word!Word.Paragraph:class" />
        description: ''
  - name: getLast()
    uid: word!Word.ParagraphCollection#getLast:member(1)
    package: word!
    fullName: getLast()
    summary: >-
      Gets the last paragraph in this collection. Throws an `ItemNotFound` error
      if the collection is empty.
    remarks: >-
      \[ [API set: WordApi
      1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/15-images/insert-and-get-pictures.yaml


      // Inserts an image anchored to the last paragraph.

      await Word.run(async (context) => {
        context.document.body.paragraphs
          .getLast()
          .insertParagraph("", "After")
          .insertInlinePictureFromBase64(base64Image, "End");

        await context.sync();
      });

      ```

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getLast(): Word.Paragraph;'
      return:
        type: <xref uid="word!Word.Paragraph:class" />
        description: ''
  - name: getLastOrNullObject()
    uid: word!Word.ParagraphCollection#getLastOrNullObject:member(1)
    package: word!
    fullName: getLastOrNullObject()
    summary: >-
      Gets the last paragraph in this collection. If the collection is empty,
      then this method will return an object with its `isNullObject` property
      set to `true`<!-- -->. For further information, see [*OrNullObject
      methods and
      properties](https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: >-
      \[ [API set: WordApi
      1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getLastOrNullObject(): Word.Paragraph;'
      return:
        type: <xref uid="word!Word.Paragraph:class" />
        description: ''
  - name: increaseSpacing()
    uid: word!Word.ParagraphCollection#increaseSpacing:member(1)
    package: word!
    fullName: increaseSpacing()
    summary: Increases the spacing before and after paragraphs in six-point increments.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'increaseSpacing(): void;'
      return:
        type: void
        description: ''
  - name: indent()
    uid: word!Word.ParagraphCollection#indent:member(1)
    package: word!
    fullName: indent()
    summary: Indents the paragraphs by one level.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'indent(): void;'
      return:
        type: void
        description: ''
  - name: indentCharacterWidth(count)
    uid: word!Word.ParagraphCollection#indentCharacterWidth:member(1)
    package: word!
    fullName: indentCharacterWidth(count)
    summary: >-
      Indents the paragraphs in the collection by the specified number of
      characters.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'indentCharacterWidth(count: number): void;'
      parameters:
        - id: count
          description: >-
            The number of characters by which the specified paragraphs are to be
            indented.
          type: number
      return:
        type: void
        description: ''
  - name: indentFirstLineCharacterWidth(count)
    uid: word!Word.ParagraphCollection#indentFirstLineCharacterWidth:member(1)
    package: word!
    fullName: indentFirstLineCharacterWidth(count)
    summary: >-
      Indents the first line of the paragraphs in the collection by the
      specified number of characters.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'indentFirstLineCharacterWidth(count: number): void;'
      parameters:
        - id: count
          description: >-
            The number of characters by which the first line of each specified
            paragraph is to be indented.
          type: number
      return:
        type: void
        description: ''
  - name: load(options)
    uid: word!Word.ParagraphCollection#load:member(1)
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Word.Interfaces.ParagraphCollectionLoadOptions &
        Word.Interfaces.CollectionLoadOptions): Word.ParagraphCollection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref
            uid="word!Word.Interfaces.ParagraphCollectionLoadOptions:interface"
            /> & <xref
            uid="word!Word.Interfaces.CollectionLoadOptions:interface" />
      return:
        type: <xref uid="word!Word.ParagraphCollection:class" />
        description: |-


          #### Examples

          ```TypeScript
          // This example shows how to get the paragraphs in the Word document
          // along with their text and font size properties.
          // 
          // Run a batch operation against the Word object model.
          await Word.run(async (context) => {

              // Create a proxy object for the paragraphs collection.
              const paragraphs = context.document.body.paragraphs;

              // Queue a command to load the text and font properties.
              // It is best practice to always specify the property set. Otherwise, all properties are
              // returned in on the object.
              paragraphs.load('text, font/size');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              await context.sync();

              // Insert code that works with the paragraphs loaded by paragraphs.load().
          });
          ```
  - name: load(propertyNames)
    uid: word!Word.ParagraphCollection#load:member(2)
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.ParagraphCollection;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: string | string[]
      return:
        type: <xref uid="word!Word.ParagraphCollection:class" />
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: word!Word.ParagraphCollection#load:member(3)
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(propertyNamesAndPaths?: OfficeExtension.LoadOption):
        Word.ParagraphCollection;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: <xref uid="office!OfficeExtension.LoadOption:interface" />
      return:
        type: <xref uid="word!Word.ParagraphCollection:class" />
        description: ''
  - name: openOrCloseUp()
    uid: word!Word.ParagraphCollection#openOrCloseUp:member(1)
    package: word!
    fullName: openOrCloseUp()
    summary: Toggles spacing before paragraphs.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'openOrCloseUp(): void;'
      return:
        type: void
        description: ''
  - name: openUp()
    uid: word!Word.ParagraphCollection#openUp:member(1)
    package: word!
    fullName: openUp()
    summary: Sets spacing before the specified paragraphs to 12 points.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'openUp(): void;'
      return:
        type: void
        description: ''
  - name: outdent()
    uid: word!Word.ParagraphCollection#outdent:member(1)
    package: word!
    fullName: outdent()
    summary: Removes one level of indent for the paragraphs.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'outdent(): void;'
      return:
        type: void
        description: ''
  - name: outlineDemote()
    uid: word!Word.ParagraphCollection#outlineDemote:member(1)
    package: word!
    fullName: outlineDemote()
    summary: >-
      Applies the next heading level style (Heading 1 through Heading 8) to the
      specified paragraphs.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'outlineDemote(): void;'
      return:
        type: void
        description: ''
  - name: outlineDemoteToBody()
    uid: word!Word.ParagraphCollection#outlineDemoteToBody:member(1)
    package: word!
    fullName: outlineDemoteToBody()
    summary: >-
      Demotes the specified paragraphs to body text by applying the Normal
      style.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'outlineDemoteToBody(): void;'
      return:
        type: void
        description: ''
  - name: outlinePromote()
    uid: word!Word.ParagraphCollection#outlinePromote:member(1)
    package: word!
    fullName: outlinePromote()
    summary: >-
      Applies the previous heading level style (Heading 1 through Heading 8) to
      the paragraphs in the collection.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'outlinePromote(): void;'
      return:
        type: void
        description: ''
  - name: space1()
    uid: word!Word.ParagraphCollection#space1:member(1)
    package: word!
    fullName: space1()
    summary: Sets the specified paragraphs to single spacing.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'space1(): void;'
      return:
        type: void
        description: ''
  - name: space1Pt5()
    uid: word!Word.ParagraphCollection#space1Pt5:member(1)
    package: word!
    fullName: space1Pt5()
    summary: Sets the specified paragraphs to 1.5-line spacing.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'space1Pt5(): void;'
      return:
        type: void
        description: ''
  - name: space2()
    uid: word!Word.ParagraphCollection#space2:member(1)
    package: word!
    fullName: space2()
    summary: Sets the specified paragraphs to double spacing.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'space2(): void;'
      return:
        type: void
        description: ''
  - name: tabHangingIndent(count)
    uid: word!Word.ParagraphCollection#tabHangingIndent:member(1)
    package: word!
    fullName: tabHangingIndent(count)
    summary: Sets a hanging indent to the specified number of tab stops.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tabHangingIndent(count: number): void;'
      parameters:
        - id: count
          description: >-
            The number of tab stops to indent (if positive) or the number of tab
            stops to remove from the indent (if negative).
          type: number
      return:
        type: void
        description: ''
  - name: tabIndent(count)
    uid: word!Word.ParagraphCollection#tabIndent:member(1)
    package: word!
    fullName: tabIndent(count)
    summary: >-
      Sets the left indent for the specified paragraphs to the specified number
      of tab stops.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tabIndent(count: number): void;'
      parameters:
        - id: count
          description: >-
            The number of tab stops to indent (if positive) or the number of tab
            stops to remove from the indent (if negative).
          type: number
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: word!Word.ParagraphCollection#toJSON:member(1)
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that's passed to it.) Whereas the original
      `Word.ParagraphCollection` object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as
      `Word.Interfaces.ParagraphCollectionData`<!-- -->) that contains an
      "items" array with shallow copies of any loaded properties from the
      collection's items.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphCollectionData;'
      return:
        type: <xref uid="word!Word.Interfaces.ParagraphCollectionData:interface" />
        description: ''
  - name: track()
    uid: word!Word.ParagraphCollection#track:member(1)
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in
      the document. This call is a shorthand for
      [context.trackedObjects.add(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you're using this object across `.sync` calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath"
      error when setting a property or invoking a method on the object, you need
      to add the object to the tracked object collection when the object was
      first created. If this object is part of a collection, you should also
      track the parent collection.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.ParagraphCollection;'
      return:
        type: <xref uid="word!Word.ParagraphCollection:class" />
        description: ''
  - name: untrack()
    uid: word!Word.ParagraphCollection#untrack:member(1)
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been
      tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so
      please remember to free any objects you add, once you're done using them.
      You'll need to call `context.sync()` before the memory release takes
      effect.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.ParagraphCollection;'
      return:
        type: <xref uid="word!Word.ParagraphCollection:class" />
        description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
