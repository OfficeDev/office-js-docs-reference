### YamlMime:TSType
name: Office.Sensitivity
uid: 'outlook!Office.Sensitivity:interface'
package: outlook!
fullName: Office.Sensitivity
summary: >-
  Provides methods to get and set the sensitivity level of an appointment. To learn more about sensitivity levels, see
  [Mark your email as Normal, Personal, Private, or
  Confidential](https://support.microsoft.com/office/4a76d05b-6c29-4a0d-9096-71784a6b12c1)<!-- -->.
remarks: >-
  \[ [API set: Mailbox 1.14](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


  **[Minimum permission
  level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
  **read item**


  **[Applicable Outlook
  mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
  Compose
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'getAsync(options, callback)'
    uid: 'outlook!Office.Sensitivity#getAsync:member(1)'
    package: outlook!
    fullName: 'getAsync(options, callback)'
    summary: Gets the sensitivity level of an appointment.
    remarks: >-
      \[ [API set: Mailbox 1.14](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose


      **Important**: Outlook on the web, [new Outlook on
      Windows](https://support.microsoft.com/office/656bb8d9-5a60-49b2-a98b-ba7822bc7627)<!-- -->, and Outlook on Mac
      only support Normal and Private sensitivity levels. If you call `getAsync` on an appointment that has a
      Confidential or Personal sensitivity level from these clients, the Normal sensitivity level is returned in the
      `asyncResult.value` property.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getAsync(options: Office.AsyncContextOptions, callback: (asyncResult:
        Office.AsyncResult<MailboxEnums.AppointmentSensitivityType>) => void): void;
      parameters:
        - id: options
          description: >-
            An object literal that contains one or more of the following properties:- `asyncContext`<!-- -->: Developers
            can provide any object they wish to access in the callback function.
          type: '<xref uid="office!Office.AsyncContextOptions:interface" />'
        - id: callback
          description: >-
            When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object. The sensitivity level of the
            appointment is returned in the `asyncResult.value` property.
          type: >-
            (asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref
            uid="outlook!Office.MailboxEnums.AppointmentSensitivityType:enum" />&gt;) =&gt; void
      return:
        type: void
        description: ''
  - name: getAsync(callback)
    uid: 'outlook!Office.Sensitivity#getAsync:member(2)'
    package: outlook!
    fullName: getAsync(callback)
    summary: Gets the sensitivity level of an appointment.
    remarks: >-
      \[ [API set: Mailbox 1.14](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose


      **Important**: Outlook on the web, [new Outlook on
      Windows](https://support.microsoft.com/office/656bb8d9-5a60-49b2-a98b-ba7822bc7627)<!-- -->, and Outlook on Mac
      only support Normal and Private sensitivity levels. If you call `getAsync` on an appointment that has a
      Confidential or Personal sensitivity level from these clients, the Normal sensitivity level is returned in the
      `asyncResult.value` property.


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/90-other-item-apis/get-set-sensitivity-level.yaml


      Office.context.mailbox.item.sensitivity.getAsync(function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("Sensitivity: " + asyncResult.value);
        } else {
          console.log("Failed to get sensitivity: " + JSON.stringify(asyncResult.error));
        }
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<MailboxEnums.AppointmentSensitivityType>) => void): void;'
      parameters:
        - id: callback
          description: >-
            When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object. The sensitivity level of the
            appointment is returned in the `asyncResult.value` property.
          type: >-
            (asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref
            uid="outlook!Office.MailboxEnums.AppointmentSensitivityType:enum" />&gt;) =&gt; void
      return:
        type: void
        description: ''
  - name: 'setAsync(sensitivity, options, callback)'
    uid: 'outlook!Office.Sensitivity#setAsync:member(1)'
    package: outlook!
    fullName: 'setAsync(sensitivity, options, callback)'
    summary: Sets the sensitivity level of an appointment.
    remarks: >-
      \[ [API set: Mailbox 1.14](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose


      **Important**: Outlook on the web, [new Outlook on
      Windows](https://support.microsoft.com/office/656bb8d9-5a60-49b2-a98b-ba7822bc7627)<!-- -->, and Outlook on Mac
      only support Normal and Private sensitivity levels.


      **Errors**:


      - `Unsupported API parameter`<!-- -->: Setting the sensitivity level of an appointment isn't supported.


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/90-other-item-apis/get-set-sensitivity-level.yaml


      Office.context.mailbox.item.sensitivity.setAsync(
        Office.MailboxEnums.AppointmentSensitivityType.Private,
        function callback(asyncResult) {
          if (asyncResult.status === Office.AsyncResultStatus.Failed) {
            console.log("Failed to set appointment sensitivity: " + JSON.stringify(asyncResult.error));
          } else {
            console.log("Successfully set appointment sensitivity.");
          }
        }
      );

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        setAsync(sensitivity: MailboxEnums.AppointmentSensitivityType | string, options: Office.AsyncContextOptions,
        callback?: (asyncResult: Office.AsyncResult<void>) => void): void;
      parameters:
        - id: sensitivity
          description: The sensitivity level as an enum or string.
          type: '<xref uid="outlook!Office.MailboxEnums.AppointmentSensitivityType:enum" /> | string'
        - id: options
          description: >-
            An object literal that contains one or more of the following properties:- `asyncContext`<!-- -->: Developers
            can provide any object they wish to access in the callback function.
          type: '<xref uid="office!Office.AsyncContextOptions:interface" />'
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object.
          type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
      return:
        type: void
        description: ''
  - name: 'setAsync(sensitivity, callback)'
    uid: 'outlook!Office.Sensitivity#setAsync:member(2)'
    package: outlook!
    fullName: 'setAsync(sensitivity, callback)'
    summary: Sets the sensitivity level of an appointment.
    remarks: >-
      \[ [API set: Mailbox 1.14](/javascript/api/requirement-sets/outlook/outlook-api-requirement-sets) \]


      **[Minimum permission
      level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: **read/write item**


      **[Applicable Outlook
      mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose


      **Important**: Outlook on the web, [new Outlook on
      Windows](https://support.microsoft.com/office/656bb8d9-5a60-49b2-a98b-ba7822bc7627)<!-- -->, and Outlook on Mac
      only support Normal and Private sensitivity levels.


      **Errors**:


      - `Unsupported API parameter`<!-- -->: Setting the sensitivity level of an appointment isn't supported.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        setAsync(sensitivity: MailboxEnums.AppointmentSensitivityType | string, callback?: (asyncResult:
        Office.AsyncResult<void>) => void): void;
      parameters:
        - id: sensitivity
          description: The sensitivity level as an enum or string.
          type: '<xref uid="outlook!Office.MailboxEnums.AppointmentSensitivityType:enum" /> | string'
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the `callback` parameter is called with a single
            parameter, `asyncResult`<!-- -->, which is an `Office.AsyncResult` object.
          type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
      return:
        type: void
        description: ''
