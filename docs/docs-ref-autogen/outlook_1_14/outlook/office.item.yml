### YamlMime:TSType
name: Office.Item
uid: 'outlook!Office.Item:interface'
package: outlook!
fullName: Office.Item
summary: >-
  The item namespace is used to access the currently selected message, meeting request, or appointment. You can
  determine the type of the item by using the `itemType` property.


  To see the full member list, refer to the [Object
  Model](https://learn.microsoft.com/javascript/api/requirement-sets/outlook/requirement-set-1.14/office.context.mailbox.item)
  page.


  If you want to see IntelliSense for only a specific type or mode, cast this item to one of the following:


  - [AppointmentCompose](xref:outlook!Office.AppointmentCompose:interface)


  - [AppointmentRead](xref:outlook!Office.AppointmentRead:interface)


  - [MessageCompose](xref:outlook!Office.MessageCompose:interface)


  - [MessageRead](xref:outlook!Office.MessageRead:interface)
remarks: >-
  **[Minimum permission
  level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
  **restricted**


  **[Applicable Outlook
  mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
  Appointment Organizer, Appointment Attendee, Message Compose, Message Read


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/90-other-item-apis/get-item-type.yaml


  const itemType = Office.context.mailbox.item.itemType;

  switch (itemType) {
      case Office.MailboxEnums.ItemType.Appointment:
          console.log(`Current item is an ${itemType}.`);
          break;
      case Office.MailboxEnums.ItemType.Message:
          console.log(`Current item is a ${itemType}. A message could be an email, meeting request, meeting response, or meeting cancellation.`);
          break;
  }

  ```
isPreview: false
isDeprecated: false
type: interface
