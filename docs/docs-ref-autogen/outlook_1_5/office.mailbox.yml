### YamlMime:UniversalReference
items:
  - uid: Outlook_1_5.Office.Mailbox
    summary: |-
      Provides access to the Outlook Add-in object model for Microsoft Outlook and Microsoft Outlook on the web.

      Namespaces:

      - diagnostics: Provides diagnostic information to an Outlook add-in.

      - item: Provides methods and properties for accessing a message or appointment in an Outlook add-in.

      - userProfile: Provides information about the user in an Outlook add-in.

      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: |-
      Minimum permission level: Restricted

      Applicable Outlook mode: Compose or read
    name: Office.Mailbox
    fullName: Outlook_1_5.Office.Mailbox
    langs:
      - typeScript
    type: interface
    package: Outlook_1_5
    children:
      - Outlook_1_5.Office.Mailbox.addHandlerAsync
      - Outlook_1_5.Office.Mailbox.convertToEwsId
      - Outlook_1_5.Office.Mailbox.convertToLocalClientTime
      - Outlook_1_5.Office.Mailbox.convertToRestId
      - Outlook_1_5.Office.Mailbox.convertToUtcClientTime
      - Outlook_1_5.Office.Mailbox.displayAppointmentForm
      - Outlook_1_5.Office.Mailbox.displayMessageForm
      - Outlook_1_5.Office.Mailbox.displayNewAppointmentForm
      - Outlook_1_5.Office.Mailbox.ewsUrl
      - Outlook_1_5.Office.Mailbox.getCallbackTokenAsync
      - Outlook_1_5.Office.Mailbox.getUserIdentityTokenAsync
      - Outlook_1_5.Office.Mailbox.item
      - Outlook_1_5.Office.Mailbox.makeEwsRequestAsync
      - Outlook_1_5.Office.Mailbox.restUrl
  - uid: Outlook_1_5.Office.Mailbox.addHandlerAsync
    summary: >-
      Adds an event handler for a supported event.


      Currently the only supported event type is Office.EventType.ItemChanged, which is invoked when the user selects a
      new item. This event is used by add-ins that implement a pinnable taskpane, and allows the add-in to refresh the
      taskpane UI based on the currently selected item.


      \[ [API set: Mailbox 1.5](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: |-
      Minimum permission level: ReadItem

      Applicable Outlook mode: Compose or read
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: Outlook_1_5.Office.Mailbox.addHandlerAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addHandlerAsync(eventType: Office.EventType, handler: (type: Office.EventType) => void, options?:
        AsyncContextOptions, callback?: (result: AsyncResult) => void): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: The event that should invoke the handler.
          type:
            - Office.EventType
        - id: handler
          description: >-
            The function to handle the event. The function must accept a single parameter, which is an object literal.
            The type property on the parameter will match the eventType parameter passed to addHandlerAsync.
          type:
            - '(type: Office.EventType) => void'
        - id: options
          description: 'Optional. Provides an option for preserving context data of any type, unchanged, for use in a callback.'
          type:
            - AsyncContextOptions
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the callback parameter is called with a single
            parameter of type AsyncResult.
          type:
            - '(result: AsyncResult) => void'
  - uid: Outlook_1_5.Office.Mailbox.convertToEwsId
    summary: >-
      Converts an item ID formatted for REST into EWS format.


      Item IDs retrieved via a REST API (such as the Outlook Mail API or the Microsoft Graph) use a different format
      than the format used by Exchange Web Services (EWS). The convertToEwsId method converts a REST-formatted ID into
      the proper format for EWS.


      Note: This method is not supported in Outlook for iOS or Outlook for Android.


      \[ [API set: Mailbox 1.3](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: |-
      Minimum permission level: Restricted

      Applicable Outlook mode: Compose or read
    name: 'convertToEwsId(itemId, restVersion)'
    fullName: Outlook_1_5.Office.Mailbox.convertToEwsId
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToEwsId(itemId: string, restVersion: Office.MailboxEnums.RestVersion): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: itemId
          description: An item ID formatted for the Outlook REST APIs.
          type:
            - string
        - id: restVersion
          description: A value indicating the version of the Outlook REST API used to retrieve the item ID.
          type:
            - Office.MailboxEnums.RestVersion
  - uid: Outlook_1_5.Office.Mailbox.convertToLocalClientTime
    summary: >-
      Gets a dictionary containing time information in local client time.


      The dates and times used by a mail app for Outlook or Outlook Web App can use different time zones. Outlook uses
      the client computer time zone; Outlook Web App uses the time zone set on the Exchange Admin Center (EAC). You
      should handle date and time values so that the values you display on the user interface are always consistent with
      the time zone that the user expects.


      If the mail app is running in Outlook, the convertToLocalClientTime method will return a dictionary object with
      the values set to the client computer time zone. If the mail app is running in Outlook Web App, the
      convertToLocalClientTime method will return a dictionary object with the values set to the time zone specified in
      the EAC.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: |-
      Minimum permission level: ReadItem

      Applicable Outlook mode: Compose or read
    name: convertToLocalClientTime(timeValue)
    fullName: Outlook_1_5.Office.Mailbox.convertToLocalClientTime
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToLocalClientTime(timeValue: Date): LocalClientTime;'
      return:
        type:
          - LocalClientTime
        description: ''
      parameters:
        - id: timeValue
          description: A Date object.
          type:
            - Date
  - uid: Outlook_1_5.Office.Mailbox.convertToRestId
    summary: |-
      Converts an item ID formatted for EWS into REST format.

      Note: This method is not supported in Outlook for iOS or Outlook for Android.

      \[ [API set: Mailbox 1.3](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      Item IDs retrieved via EWS or via the itemId property use a different format than the format used by REST APIs
      (such as the \[Outlook Mail API\](https://msdn.microsoft.com/office/office365/APi/mail-rest-operations) or the
      \[Microsoft Graph\](http://graph.microsoft.io/)). The convertToRestId method converts an EWS-formatted ID into the
      proper format for REST.


      Minimum permission level: Restricted


      Applicable Outlook mode: Compose or read
    name: 'convertToRestId(itemId, restVersion)'
    fullName: Outlook_1_5.Office.Mailbox.convertToRestId
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToRestId(itemId: string, restVersion: Office.MailboxEnums.RestVersion): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: itemId
          description: An item ID formatted for Exchange Web Services (EWS)
          type:
            - string
        - id: restVersion
          description: A value indicating the version of the Outlook REST API that the converted ID will be used with.
          type:
            - Office.MailboxEnums.RestVersion
  - uid: Outlook_1_5.Office.Mailbox.convertToUtcClientTime
    summary: >-
      Gets a Date object from a dictionary containing time information.


      The convertToUtcClientTime method converts a dictionary containing a local date and time to a Date object with the
      correct values for the local date and time.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: |-
      Minimum permission level: ReadItem

      Applicable Outlook mode: Compose or read
    name: convertToUtcClientTime(input)
    fullName: Outlook_1_5.Office.Mailbox.convertToUtcClientTime
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToUtcClientTime(input: LocalClientTime): Date;'
      return:
        type:
          - Date
        description: A Date object with the time expressed in UTC.
      parameters:
        - id: input
          description: The local time value to convert.
          type:
            - LocalClientTime
  - uid: Outlook_1_5.Office.Mailbox.displayAppointmentForm
    summary: >-
      Displays an existing calendar appointment.


      The displayAppointmentForm method opens an existing calendar appointment in a new window on the desktop or in a
      dialog box on mobile devices.


      In Outlook for Mac, you can use this method to display a single appointment that is not part of a recurring
      series, or the master appointment of a recurring series, but you cannot display an instance of the series. This is
      because in Outlook for Mac, you cannot access the properties (including the item ID) of instances of a recurring
      series.


      In Outlook Web App, this method opens the specified form only if the body of the form is less than or equal to
      32KB number of characters.


      If the specified item identifier does not identify an existing appointment, a blank pane opens on the client
      computer or device, and no error message will be returned.


      Note: This method is not supported in Outlook for iOS or Outlook for Android.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: |-
      Minimum permission level: ReadItem

      Applicable Outlook mode: Compose or read
    name: displayAppointmentForm(itemId)
    fullName: Outlook_1_5.Office.Mailbox.displayAppointmentForm
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayAppointmentForm(itemId: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: The Exchange Web Services (EWS) identifier for an existing calendar appointment.
          type:
            - string
  - uid: Outlook_1_5.Office.Mailbox.displayMessageForm
    summary: >-
      Displays an existing message.


      The displayMessageForm method opens an existing message in a new window on the desktop or in a dialog box on
      mobile devices.


      In Outlook Web App, this method opens the specified form only if the body of the form is less than or equal to 32
      KB number of characters.


      If the specified item identifier does not identify an existing message, no message will be displayed on the client
      computer, and no error message will be returned.


      Do not use the displayMessageForm with an itemId that represents an appointment. Use the displayAppointmentForm
      method to display an existing appointment, and displayNewAppointmentForm to display a form to create a new
      appointment.


      Note: This method is not supported in Outlook for iOS or Outlook for Android.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: |-
      Minimum permission level: ReadItem

      Applicable Outlook mode: Compose or read
    name: displayMessageForm(itemId)
    fullName: Outlook_1_5.Office.Mailbox.displayMessageForm
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayMessageForm(itemId: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: The Exchange Web Services (EWS) identifier for an existing message.
          type:
            - string
  - uid: Outlook_1_5.Office.Mailbox.displayNewAppointmentForm
    summary: >-
      Displays a form for creating a new calendar appointment.


      The displayNewAppointmentForm method opens a form that enables the user to create a new appointment or meeting. If
      parameters are specified, the appointment form fields are automatically populated with the contents of the
      parameters.


      In Outlook Web App and OWA for Devices, this method always displays a form with an attendees field. If you do not
      specify any attendees as input arguments, the method displays a form with a Save button. If you have specified
      attendees, the form would include the attendees and a Send button.


      In the Outlook rich client and Outlook RT, if you specify any attendees or resources in the requiredAttendees,
      optionalAttendees, or resources parameter, this method displays a meeting form with a Send button. If you don't
      specify any recipients, this method displays an appointment form with a Save &amp; Close button.


      If any of the parameters exceed the specified size limits, or if an unknown parameter name is specified, an
      exception is thrown.


      Note: This method is not supported in Outlook for iOS or Outlook for Android.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: |-
      Minimum permission level: ReadItem

      Applicable Outlook mode: Read
    name: displayNewAppointmentForm(parameters)
    fullName: Outlook_1_5.Office.Mailbox.displayNewAppointmentForm
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayNewAppointmentForm(parameters: AppointmentForm): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: parameters
          description: An AppointmentForm describing the new appointment. All properties are optional.
          type:
            - AppointmentForm
  - uid: Outlook_1_5.Office.Mailbox.ewsUrl
    summary: >-
      Gets the URL of the Exchange Web Services (EWS) endpoint for this email account. Read mode only.


      Your app must have the ReadItem permission specified in its manifest to call the ewsUrl member in read mode.


      In compose mode you must call the saveAsync method before you can use the ewsUrl member. Your app must have
      ReadWriteItem permissions to call the saveAsync method.


      Note: This member is not supported in Outlook for iOS or Outlook for Android.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      The ewsUrl value can be used by a remote service to make EWS calls to the user's mailbox. For example, you can
      create a remote service to \[get attachments from the selected
      item\](https://msdn.microsoft.com/library/office/dn148008.aspx).


      Minimum permission level: ReadItem


      Applicable Outlook mode: Compose or read
    name: ewsUrl
    fullName: Outlook_1_5.Office.Mailbox.ewsUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ewsUrl: string;'
      return:
        type:
          - string
  - uid: Outlook_1_5.Office.Mailbox.getCallbackTokenAsync
    summary: >-
      Gets a string that contains a token used to call REST APIs or Exchange Web Services.


      The getCallbackTokenAsync method makes an asynchronous call to get an opaque token from the Exchange Server that
      hosts the user's mailbox. The lifetime of the callback token is 5 minutes.


      \*REST Tokens\*


      When a REST token is requested (options.isRest = true), the resulting token will not work to authenticate Exchange
      Web Services calls. The token will be limited in scope to read-only access to the current item and its
      attachments, unless the add-in has specified the ReadWriteMailbox permission in its manifest. If the
      ReadWriteMailbox permission is specified, the resulting token will grant read/write access to mail, calendar, and
      contacts, including the ability to send mail.


      The add-in should use the restUrl property to determine the correct URL to use when making REST API calls.


      \*EWS Tokens\*


      When an EWS token is requested (options.isRest = false), the resulting token will not work to authenticate REST
      API calls. The token will be limited in scope to accessing the current item.


      The add-in should use the ewsUrl property to determine the correct URL to use when making EWS calls.


      Note: It is recommended that add-ins use the REST APIs instead of Exchange Web Services whenever possible.


      \[ [API set: Mailbox 1.5](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: |-
      Minimum permission level: ReadItem

      Applicable Outlook mode: Compose and read
    name: 'getCallbackTokenAsync(options, callback)'
    fullName: Outlook_1_5.Office.Mailbox.getCallbackTokenAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCallbackTokenAsync(options: AsyncContextOptions, callback: (result: AsyncResult) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: >-
            An object literal that contains one or more of the following properties. isRest: Determines if the token
            provided will be used for the Outlook REST APIs or Exchange Web Services. Default value is false.
            asyncContext: Any state data that is passed to the asynchronous method.
          type:
            - AsyncContextOptions
        - id: callback
          description: >-
            When the method completes, the function passed in the callback parameter is called with a single parameter
            of type AsyncResult. The token is provided as a string in the asyncResult.value property.
          type:
            - '(result: AsyncResult) => void'
  - uid: Outlook_1_5.Office.Mailbox.getUserIdentityTokenAsync
    summary: |-
      Gets a token identifying the user and the Office Add-in.

      The token is provided as a string in the asyncResult.value property.

      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      The getUserIdentityTokenAsync method returns a token that you can use to identify and \[authenticate the add-in
      and user with a third-party system\](https://msdn.microsoft.com/library/office/fp179828.aspx).


      Minimum permission level: ReadItem


      Applicable Outlook mode: Compose and read
    name: 'getUserIdentityTokenAsync(callback, userContext)'
    fullName: Outlook_1_5.Office.Mailbox.getUserIdentityTokenAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUserIdentityTokenAsync(callback: (result: AsyncResult) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: >-
            When the method completes, the function passed in the callback parameter is called with a single parameter
            of type AsyncResult.
          type:
            - '(result: AsyncResult) => void'
        - id: userContext
          description: Optional. Any state data that is passed to the asynchronous method.\|
          type:
            - any
  - uid: Outlook_1_5.Office.Mailbox.item
    summary: >-
      The mailbox item. Depending on the context in which the add-in opened, the item may be of any number of types. If
      you want to see IntelliSense for only a specific type, you should cast this item to one of the following:
      \`ItemCompose\`, \`ItemRead\`, \`MessageCompose\`, \`MessageRead\`, \`AppointmentCompose\`, \`AppointmentRead\`
    name: item
    fullName: Outlook_1_5.Office.Mailbox.item
    langs:
      - typeScript
    type: property
    syntax:
      content: 'item: Item & ItemCompose & ItemRead & MessageRead & MessageCompose & AppointmentRead & AppointmentCompose;'
      return:
        type:
          - Item & ItemCompose & ItemRead & MessageRead & MessageCompose & AppointmentRead & AppointmentCompose
  - uid: Outlook_1_5.Office.Mailbox.makeEwsRequestAsync
    summary: >-
      Makes an asynchronous request to an Exchange Web Services (EWS) service on the Exchange server that hosts the
      user's mailbox.


      In these cases, add-ins should use REST APIs to access the user's mailbox instead.


      The makeEwsRequestAsync method sends an EWS request on behalf of the add-in to Exchange.


      You cannot request Folder Associated Items with the makeEwsRequestAsync method.


      The XML request must specify UTF-8 encoding. &lt;?xml version="1.0" encoding="utf-8"?&gt;


      Your add-in must have the ReadWriteMailbox permission to use the makeEwsRequestAsync method. For information about
      using the ReadWriteMailbox permission and the EWS operations that you can call with the makeEwsRequestAsync
      method, see Specify permissions for mail add-in access to the user's mailbox.


      The XML result of the EWS call is provided as a string in the asyncResult.value property. If the result exceeds 1
      MB in size, an error message is returned instead.


      Note: This method is not supported in the following scenarios. - In Outlook for iOS or Outlook for Android - When
      the add-in is loaded in a Gmail mailbox


      Note: The server administrator must set OAuthAuthentication to true on the Client Access Server EWS directory to
      enable the makeEwsRequestAsync method to make EWS requests.


      \*Version differences\*


      When you use the makeEwsRequestAsync method in mail apps running in Outlook versions earlier than version
      15.0.4535.1004, you should set the encoding value to ISO-8859-1.


      &lt;?xml version="1.0" encoding="iso-8859-1"?&gt;


      You do not need to set the encoding value when your mail app is running in Outlook on the web. You can determine
      whether your mail app is running in Outlook or Outlook on the web by using the mailbox.diagnostics.hostName
      property. You can determine what version of Outlook is running by using the mailbox.diagnostics.hostVersion
      property.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: |-
      Minimum permission level: ReadWriteMailbox

      Applicable Outlook mode: Compose and read
    name: 'makeEwsRequestAsync(data, callback, userContext)'
    fullName: Outlook_1_5.Office.Mailbox.makeEwsRequestAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'makeEwsRequestAsync(data: any, callback: (result: AsyncResult) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: The EWS request.
          type:
            - any
        - id: callback
          description: >-
            When the method completes, the function passed in the callback parameter is called with a single parameter
            of type AsyncResult.
          type:
            - '(result: AsyncResult) => void'
        - id: userContext
          description: Optional. Any state data that is passed to the asynchronous method.
          type:
            - any
  - uid: Outlook_1_5.Office.Mailbox.restUrl
    summary: >-
      Gets the URL of the REST endpoint for this email account.


      Your app must have the ReadItem permission specified in its manifest to call the restUrl member in read mode.


      In compose mode you must call the saveAsync method before you can use the restUrl member. Your app must have
      ReadWriteItem permissions to call the saveAsync method.


      \[ [API set: Mailbox 1.5](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      The restUrl value can be used to make \[REST API\](https://docs.microsoft.com/outlook/rest/) calls to the user's
      mailbox.


      Minimum permission level: ReadItem


      Applicable Outlook mode: Compose or read
    name: restUrl
    fullName: Outlook_1_5.Office.Mailbox.restUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'restUrl: string;'
      return:
        type:
          - string
