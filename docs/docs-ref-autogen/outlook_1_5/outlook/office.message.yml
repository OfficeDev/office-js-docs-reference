### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.Message:interface'
    summary: >-
      A subclass of [Item](xref:outlook!Office.Item:interface) for messages.


      **Important**: This is an internal Outlook object, not directly exposed through existing interfaces. You should
      treat this as a mode of Office.context.mailbox.item. Refer to the [Object
      Model](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.5/office.context.mailbox.item)
      page for more information.


      Child interfaces:


      - [MessageCompose](xref:outlook!Office.MessageCompose:interface)


      - [MessageRead](xref:outlook!Office.MessageRead:interface)
    name: Office.Message
    fullName: Office.Message
    langs:
      - typeScript
    type: interface
    extends:
      - 'outlook!Office.Item:interface'
    package: outlook!
    children:
      - 'outlook!Office.Message#body:member'
      - 'outlook!Office.Message#cc:member'
      - 'outlook!Office.Message#conversationId:member'
      - 'outlook!Office.Message#itemType:member'
      - 'outlook!Office.Message#loadCustomPropertiesAsync:member(1)'
      - 'outlook!Office.Message#notificationMessages:member'
      - 'outlook!Office.Message#subject:member'
      - 'outlook!Office.Message#to:member'
  - uid: 'outlook!Office.Message#body:member'
    summary: |-
      Gets an object that provides methods for manipulating the body of an item.

      \[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment
      Organizer, Appointment Attendee, Message Compose, or Message Read
    name: body
    fullName: body
    langs:
      - typeScript
    type: property
    syntax:
      content: 'body: Body;'
      return:
        type:
          - 'outlook!Office.Body:interface'
  - uid: 'outlook!Office.Message#cc:member'
    summary: >-
      Provides access to the Cc (carbon copy) recipients of a message. The type of object and level of access depends on
      the mode of the current item.


      *Read mode*


      The cc property returns an array that contains an EmailAddressDetails object for each recipient listed on the Cc
      line of the message. By default, the collection is limited to a maximum of 100 members. However, on Windows and
      Mac, you can get 500 members maximum.


      *Compose mode*


      The cc property returns a [Recipients](xref:outlook!Office.Recipients:interface) object that provides methods to
      get or update the recipients on the Cc line of the message. By default, the collection is limited to a maximum of
      100 members. However, on Windows and Mac, the following limits apply.


      - Get 500 members maximum.


      - Set a maximum of 100 members per call, up to 500 members total.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message
      Compose or Message Read
    name: cc
    fullName: cc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cc: Recipients | EmailAddressDetails[];'
      return:
        type:
          - 'outlook!Office.Message#cc~0:complex'
  - uid: 'outlook!Office.Message#conversationId:member'
    summary: >-
      Gets an identifier for the email conversation that contains a particular message.


      You can get an integer for this property if your mail app is activated in read forms or responses in compose
      forms. If subsequently the user changes the subject of the reply message, upon sending the reply, the conversation
      ID for that message will change and that value you obtained earlier will no longer apply.


      You get null for this property for a new item in a compose form. If the user sets a subject and saves the item,
      the conversationId property will return a value.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message
      Compose or Message Read
    name: conversationId
    fullName: conversationId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'conversationId: string;'
      return:
        type:
          - string
  - uid: 'outlook!Office.Message#itemType:member'
    summary: >-
      Gets the type of item that an instance represents.


      The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance
      is a message or an appointment.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment
      Organizer, Appointment Attendee, Message Compose, or Message Read
    name: itemType
    fullName: itemType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemType: MailboxEnums.ItemType | string;'
      return:
        type:
          - 'outlook!Office.Message#itemType~0:complex'
  - uid: 'outlook!Office.Message#loadCustomPropertiesAsync:member(1)'
    summary: >-
      Asynchronously loads custom properties for this add-in on the selected item.


      Custom properties are stored as key/value pairs on a per-app, per-item basis. This method returns a
      CustomProperties object in the callback, which provides methods to access the custom properties specific to the
      current item and the current add-in. Custom properties are not encrypted on the item, so this should not be used
      as secure storage.


      The custom properties are provided as a CustomProperties object in the asyncResult.value property. This object can
      be used to get, set, and remove custom properties from the item and save changes to the custom property set back
      to the server.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment
      Organizer, Appointment Attendee, Message Compose, or Message Read
    name: 'loadCustomPropertiesAsync(callback, userContext)'
    fullName: 'loadCustomPropertiesAsync(callback, userContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void,
        userContext?: any): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: >-
            When the method completes, the function passed in the callback parameter is called with a single parameter
            of type Office.AsyncResult.
          type:
            - 'outlook!Office.Message#loadCustomPropertiesAsync~0:complex'
        - id: userContext
          description: >-
            Optional. Developers can provide any object they wish to access in the callback function. This object can be
            accessed by the asyncResult.asyncContext property in the callback function.
          type:
            - any
  - uid: 'outlook!Office.Message#notificationMessages:member'
    summary: |-
      Gets the notification messages for an item.

      \[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment
      Organizer, Appointment Attendee, Message Compose, or Message Read
    name: notificationMessages
    fullName: notificationMessages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'notificationMessages: NotificationMessages;'
      return:
        type:
          - 'outlook!Office.NotificationMessages:interface'
  - uid: 'outlook!Office.Message#subject:member'
    summary: >-
      Gets or sets the description that appears in the subject field of an item.


      The subject property gets or sets the entire subject of the item, as sent by the email server.


      **Read mode**


      The subject property returns a string. Use the normalizedSubject property to get the subject minus any leading
      prefixes such as RE: and FW:.


      **Compose mode**


      The subject property returns a Subject object that provides methods to get and set the subject.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment
      Organizer, Appointment Attendee, Message Compose, or Message Read
    name: subject
    fullName: subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: Subject | string;'
      return:
        type:
          - 'outlook!Office.Message#subject~0:complex'
  - uid: 'outlook!Office.Message#to:member'
    summary: >-
      Provides access to the recipients on the To line of a message. The type of object and level of access depends on
      the mode of the current item.


      **Read mode**


      The to property returns an array that contains an EmailAddressDetails object for each recipient listed on the To
      line of the message. By default, the collection is limited to a maximum of 100 members. However, on Windows and
      Mac, you can get 500 members maximum.


      **Compose mode**


      The to property returns a Recipients object that provides methods to get or update the recipients on the To line
      of the message. By default, the collection is limited to a maximum of 100 members. However, on Windows and Mac,
      the following limits apply.


      - Get 500 members maximum.


      - Set a maximum of 100 members per call, up to 500 members total.
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem


      **[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message
      Compose or Message Read
    name: to
    fullName: to
    langs:
      - typeScript
    type: property
    syntax:
      content: 'to: Recipients | EmailAddressDetails[];'
      return:
        type:
          - 'outlook!Office.Message#to~0:complex'
references:
  - uid: 'outlook!Office.Item:interface'
    name: Item
  - uid: 'outlook!Office.Body:interface'
    name: Body
  - uid: 'outlook!Office.Message#cc~0:complex'
    name: 'Recipients | EmailAddressDetails[]'
    fullName: 'Office.Recipients | Office.EmailAddressDetails[]'
    spec.typeScript:
      - uid: 'outlook!Office.Recipients:interface'
        name: Recipients
        fullName: Office.Recipients
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: '[]'
        fullName: '[]'
  - uid: 'outlook!Office.Message#itemType~0:complex'
    name: MailboxEnums.ItemType | string
    fullName: Office.MailboxEnums.ItemType | string
    spec.typeScript:
      - uid: 'outlook!Office.MailboxEnums.ItemType:enum'
        name: MailboxEnums.ItemType
        fullName: Office.MailboxEnums.ItemType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.Message#loadCustomPropertiesAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.CustomProperties>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.CustomProperties:interface'
        name: CustomProperties
        fullName: Office.CustomProperties
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'outlook!Office.NotificationMessages:interface'
    name: NotificationMessages
  - uid: 'outlook!Office.Message#subject~0:complex'
    name: Subject | string
    fullName: Office.Subject | string
    spec.typeScript:
      - uid: 'outlook!Office.Subject:interface'
        name: Subject
        fullName: Office.Subject
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.Message#to~0:complex'
    name: 'Recipients | EmailAddressDetails[]'
    fullName: 'Office.Recipients | Office.EmailAddressDetails[]'
    spec.typeScript:
      - uid: 'outlook!Office.Recipients:interface'
        name: Recipients
        fullName: Office.Recipients
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: '[]'
        fullName: '[]'
