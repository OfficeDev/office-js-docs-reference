### YamlMime:TSType
name: Office.Organizer
uid: 'outlook!Office.Organizer:interface'
package: outlook!
fullName: Office.Organizer
summary: >-
  Represents the appointment organizer, even if an alias or a delegate was used
  to create the appointment. This object provides a method to get the organizer
  value of an appointment in an Outlook add-in.


  \[ [API set: Mailbox
  1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)
  \]
remarks: >-
  **[Minimum permission
  level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
  -->**: `ReadItem`


  **[Applicable Outlook
  mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
  -->**: Compose
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'getAsync(options, callback)'
    uid: 'outlook!Office.Organizer#getAsync:member(1)'
    package: outlook!
    fullName: 'getAsync(options, callback)'
    summary: >-
      Gets the organizer value of an appointment as an
      [EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface)
      object in the `asyncResult.value` property.


      \[ [API set: Mailbox
      1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)
      \]
    remarks: >-
      **[Minimum permission
      level](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!--
      -->**: `ReadItem`


      **[Applicable Outlook
      mode](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!--
      -->**: Compose


      #### Examples


      ```javascript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/30-recipients-and-attendees/get-organizer-appointment-organizer.yaml

      Office.context.mailbox.item.organizer.getAsync(function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          var apptOrganizer = asyncResult.value;
          console.log("Organizer: " + apptOrganizer.displayName + " (" + apptOrganizer.emailAddress + ")");
        } else {
          console.error(asyncResult.error);
        }
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult:
        Office.AsyncResult<EmailAddressDetails>) => void): void;
      parameters:
        - id: options
          description: >-
            Optional. An object literal that contains one or more of the
            following properties. `asyncContext`<!-- -->: Developers can provide
            any object they wish to access in the callback method.
          type: '<xref uid="office!Office.AsyncContextOptions:interface" />'
        - id: callback
          description: >-
            Optional. When the method completes, the function passed in the
            `callback` parameter is called with a single parameter,
            `asyncResult`<!-- -->, which is an `AsyncResult` object. The `value`
            property of the result is the appointment's organizer value, as an
            `EmailAddressDetails` object.
          type: >-
            (asyncResult: <xref uid="office!Office.AsyncResult:interface"
            />&lt;<xref uid="outlook!Office.EmailAddressDetails:interface"
            />&gt;) =&gt; void
      return:
        type: void
        description: ''
