### YamlMime:TSType
name: Office.Entities
uid: 'outlook!Office.Entities:interface'
package: outlook!
fullName: Office.Entities
summary: >-
  Represents a collection of entities found in an email message or appointment. Read mode only.


  The `Entities` object is a container for the entity arrays returned by the `getEntities` and `getEntitiesByType`
  methods when the item (either an email message or an appointment) contains one or more entities that have been found
  by the server. You can use these entities in your code to provide additional context information to the viewer, such
  as a map to an address found in the item, or to open a dialer for a phone number found in the item.


  If no entities of the type specified in the property are present in the item, the property associated with that entity
  is null. For example, if a message contains a street address and a phone number, the addresses property and
  phoneNumbers property would contain information, and the other properties would be null.


  To be recognized as an address, the string must contain a United States postal address that has at least a subset of
  the elements of a street number, street name, city, state, and zip code.


  To be recognized as a phone number, the string must contain a North American phone number format.


  Entity recognition relies on natural language recognition that is based on machine learning of large amounts of data.
  The recognition of an entity is non-deterministic and success sometimes relies on the particular context in the item.


  When the property arrays are returned by the `getEntitiesByType` method, only the property for the specified entity
  contains data; all other properties are null.


  **Warning**: Entity-based contextual Outlook add-ins are now retired. However, regular expression rules are still
  supported. We recommend updating your contextual add-in to use regular expression rules as an alternative solution.
  For guidance on how to implement these rules, see [Contextual Outlook
  add-ins](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)<!-- -->.
remarks: >-
  **[Minimum permission
  level](https://learn.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:
  **read item**


  **[Applicable Outlook
  mode](https://learn.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**:
  Read
isPreview: false
isDeprecated: true
customDeprecatedMessage: >-
  Use [regular expression rules](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)
  instead.
type: interface
properties:
  - name: addresses
    uid: 'outlook!Office.Entities#addresses:member'
    package: outlook!
    fullName: addresses
    summary: >-
      Gets the physical addresses (street or mailing addresses) found in an email message or appointment.


      **Warning**: Entity-based contextual Outlook add-ins are now retired. However, regular expression rules are
      still supported. We recommend updating your contextual add-in to use regular expression rules as an alternative
      solution. For guidance on how to implement these rules, see [Contextual Outlook
      add-ins](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: >-
      Use [regular expression rules](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)
      instead.
    syntax:
      content: 'addresses: string[];'
      return:
        type: 'string[]'
        description: |-


          #### Examples

          ```TypeScript
          const item = Office.context.mailbox.item;
          const addresses = item.getEntitiesByType(Office.MailboxEnums.EntityType.Address);
          ```
  - name: contacts
    uid: 'outlook!Office.Entities#contacts:member'
    package: outlook!
    fullName: contacts
    summary: >-
      Gets the contacts found in an email address or appointment.


      **Warning**: Entity-based contextual Outlook add-ins are now retired. However, regular expression rules are
      still supported. We recommend updating your contextual add-in to use regular expression rules as an alternative
      solution. For guidance on how to implement these rules, see [Contextual Outlook
      add-ins](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: >-
      Use [regular expression rules](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)
      instead.
    syntax:
      content: 'contacts: Contact[];'
      return:
        type: '<xref uid="outlook!Office.Contact:interface" />[]'
        description: |-


          #### Examples

          ```TypeScript
          const item = Office.context.mailbox.item;
          const contacts = item.getEntitiesByType(Office.MailboxEnums.EntityType.Contact);
          ```
  - name: emailAddresses
    uid: 'outlook!Office.Entities#emailAddresses:member'
    package: outlook!
    fullName: emailAddresses
    summary: >-
      Gets the email addresses found in an email message or appointment.


      **Warning**: Entity-based contextual Outlook add-ins are now retired. However, regular expression rules are
      still supported. We recommend updating your contextual add-in to use regular expression rules as an alternative
      solution. For guidance on how to implement these rules, see [Contextual Outlook
      add-ins](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: >-
      Use [regular expression rules](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)
      instead.
    syntax:
      content: 'emailAddresses: string[];'
      return:
        type: 'string[]'
        description: |-


          #### Examples

          ```TypeScript
          const item = Office.context.mailbox.item;
          const emailAddresses = item.getEntitiesByType(Office.MailboxEnums.EntityType.EmailAddress);
          ```
  - name: meetingSuggestions
    uid: 'outlook!Office.Entities#meetingSuggestions:member'
    package: outlook!
    fullName: meetingSuggestions
    summary: >-
      Gets the meeting suggestions found in an email message.


      **Warning**: Entity-based contextual Outlook add-ins are now retired. However, regular expression rules are
      still supported. We recommend updating your contextual add-in to use regular expression rules as an alternative
      solution. For guidance on how to implement these rules, see [Contextual Outlook
      add-ins](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: >-
      Use [regular expression rules](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)
      instead.
    syntax:
      content: 'meetingSuggestions: MeetingSuggestion[];'
      return:
        type: '<xref uid="outlook!Office.MeetingSuggestion:interface" />[]'
        description: |-


          #### Examples

          ```TypeScript
          const item = Office.context.mailbox.item;
          const meetingSuggestions = item.getEntitiesByType(Office.MailboxEnums.EntityType.MeetingSuggestion);
          ```
  - name: phoneNumbers
    uid: 'outlook!Office.Entities#phoneNumbers:member'
    package: outlook!
    fullName: phoneNumbers
    summary: >-
      Gets the phone numbers found in an email message or appointment.


      **Warning**: Entity-based contextual Outlook add-ins are now retired. However, regular expression rules are
      still supported. We recommend updating your contextual add-in to use regular expression rules as an alternative
      solution. For guidance on how to implement these rules, see [Contextual Outlook
      add-ins](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: >-
      Use [regular expression rules](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)
      instead.
    syntax:
      content: 'phoneNumbers: PhoneNumber[];'
      return:
        type: '<xref uid="outlook!Office.PhoneNumber:interface" />[]'
        description: |-


          #### Examples

          ```TypeScript
          const item = Office.context.mailbox.item;
          const phoneNumbers = item.getEntitiesByType(Office.MailboxEnums.EntityType.PhoneNumber);
          ```
  - name: taskSuggestions
    uid: 'outlook!Office.Entities#taskSuggestions:member'
    package: outlook!
    fullName: taskSuggestions
    summary: >-
      Gets the task suggestions found in an email message or appointment.


      **Warning**: Entity-based contextual Outlook add-ins are now retired. However, regular expression rules are
      still supported. We recommend updating your contextual add-in to use regular expression rules as an alternative
      solution. For guidance on how to implement these rules, see [Contextual Outlook
      add-ins](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: >-
      Use [regular expression rules](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)
      instead.
    syntax:
      content: 'taskSuggestions: string[];'
      return:
        type: 'string[]'
        description: |-


          #### Examples

          ```TypeScript
          const item = Office.context.mailbox.item;
          const taskSuggestions = item.getEntitiesByType(Office.MailboxEnums.EntityType.TaskSuggestion);
          ```
  - name: urls
    uid: 'outlook!Office.Entities#urls:member'
    package: outlook!
    fullName: urls
    summary: >-
      Gets the Internet URLs present in an email message or appointment.


      **Warning**: Entity-based contextual Outlook add-ins are now retired. However, regular expression rules are
      still supported. We recommend updating your contextual add-in to use regular expression rules as an alternative
      solution. For guidance on how to implement these rules, see [Contextual Outlook
      add-ins](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: >-
      Use [regular expression rules](https://learn.microsoft.com/office/dev/add-ins/outlook/contextual-outlook-add-ins)
      instead.
    syntax:
      content: 'urls: string[];'
      return:
        type: 'string[]'
        description: |-


          #### Examples

          ```TypeScript
          const item = Office.context.mailbox.item;
          const urls = item.getEntitiesByType(Office.MailboxEnums.EntityType.Url);
          ```
