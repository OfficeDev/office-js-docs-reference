### YamlMime:TSType
name: Excel.ConditionalCellValueRule
uid: 'excel!Excel.ConditionalCellValueRule:interface'
package: excel!
fullName: Excel.ConditionalCellValueRule
summary: Represents a cell value conditional format rule.
remarks: '\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: formula1
    uid: 'excel!Excel.ConditionalCellValueRule#formula1:member'
    package: excel!
    fullName: formula1
    summary: 'The formula, if required, on which to evaluate the conditional format rule.'
    remarks: >-
      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml

      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Sample");
          const range = sheet.getRange("B21:E23");
          const conditionalFormat = range.conditionalFormats
              .add(Excel.ConditionalFormatType.cellValue);
          conditionalFormat.cellValue.format.font.color = "red";
          conditionalFormat.cellValue.rule = { formula1: "=0", operator: "LessThan" };

          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formula1: string;'
      return:
        type: string
  - name: formula2
    uid: 'excel!Excel.ConditionalCellValueRule#formula2:member'
    package: excel!
    fullName: formula2
    summary: 'The formula, if required, on which to evaluate the conditional format rule.'
    remarks: '\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formula2?: string;'
      return:
        type: string
  - name: operator
    uid: 'excel!Excel.ConditionalCellValueRule#operator:member'
    package: excel!
    fullName: operator
    summary: The operator of the cell value conditional format.
    remarks: >-
      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml

      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Sample");
          const range = sheet.getRange("B21:E23");
          const conditionalFormat = range.conditionalFormats
              .add(Excel.ConditionalFormatType.cellValue);
          conditionalFormat.cellValue.format.font.color = "red";
          conditionalFormat.cellValue.rule = { formula1: "=0", operator: "LessThan" };

          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        operator: Excel.ConditionalCellValueOperator | "Invalid" | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" |
        "GreaterThan" | "LessThan" | "GreaterThanOrEqual" | "LessThanOrEqual";
      return:
        type: >-
          <xref uid="excel!Excel.ConditionalCellValueOperator:enum" /> | "Invalid" | "Between" | "NotBetween" |
          "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" | "GreaterThanOrEqual" | "LessThanOrEqual"
