### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData:interface'
    summary: >-
      An interface for updating data on the DataBarConditionalFormat object, for use in `dataBarConditionalFormat.set({
      ... })`<!-- -->.
    name: Excel.Interfaces.DataBarConditionalFormatUpdateData
    fullName: Excel.Interfaces.DataBarConditionalFormatUpdateData
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#axisColor:member'
      - 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#axisFormat:member'
      - 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#barDirection:member'
      - 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#lowerBoundRule:member'
      - 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#negativeFormat:member'
      - 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#positiveFormat:member'
      - 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#showDataBarOnly:member'
      - 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#upperBoundRule:member'
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#axisColor:member'
    summary: >-
      HTML color code representing the color of the Axis line, of the form \#RRGGBB (e.g., "FFA500") or as a named HTML
      color (e.g., "orange"). "" (empty string) if no axis is present or set.


      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: axisColor
    fullName: axisColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisColor?: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#axisFormat:member'
    summary: |-
      Representation of how the axis is determined for an Excel data bar.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: axisFormat
    fullName: axisFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisFormat?: Excel.ConditionalDataBarAxisFormat | "Automatic" | "None" | "CellMidPoint";'
      return:
        type:
          - 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#axisFormat~0:complex'
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#barDirection:member'
    summary: |-
      Specifies the direction that the data bar graphic should be based on.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: barDirection
    fullName: barDirection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'barDirection?: Excel.ConditionalDataBarDirection | "Context" | "LeftToRight" | "RightToLeft";'
      return:
        type:
          - 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#barDirection~0:complex'
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#lowerBoundRule:member'
    summary: >-
      The rule for what consistutes the lower bound (and how to calculate it, if applicable) for a data bar. The
      `ConditionalDataBarRule` object must be set as a JSON object (use `x.lowerBoundRule = {...}` instead of
      `x.lowerBoundRule.formula = ...`<!-- -->).


      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: lowerBoundRule
    fullName: lowerBoundRule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lowerBoundRule?: Excel.ConditionalDataBarRule;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarRule:interface'
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#negativeFormat:member'
    summary: |-
      Representation of all values to the left of the axis in an Excel data bar.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: negativeFormat
    fullName: negativeFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'negativeFormat?: Excel.Interfaces.ConditionalDataBarNegativeFormatUpdateData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalDataBarNegativeFormatUpdateData:interface'
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#positiveFormat:member'
    summary: |-
      Representation of all values to the right of the axis in an Excel data bar.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: positiveFormat
    fullName: positiveFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'positiveFormat?: Excel.Interfaces.ConditionalDataBarPositiveFormatUpdateData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalDataBarPositiveFormatUpdateData:interface'
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#showDataBarOnly:member'
    summary: |-
      If true, hides the values from the cells where the data bar is applied.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: showDataBarOnly
    fullName: showDataBarOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showDataBarOnly?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#upperBoundRule:member'
    summary: >-
      The rule for what constitutes the upper bound (and how to calculate it, if applicable) for a data bar. The
      `ConditionalDataBarRule` object must be set as a JSON object (use `x.upperBoundRule = {...}` instead of
      `x.upperBoundRule.formula = ...`<!-- -->).


      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: upperBoundRule
    fullName: upperBoundRule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'upperBoundRule?: Excel.ConditionalDataBarRule;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarRule:interface'
references:
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#axisFormat~0:complex'
    name: Excel.ConditionalDataBarAxisFormat | "Automatic" | "None" | "CellMidPoint"
    fullName: Excel.ConditionalDataBarAxisFormat | "Automatic" | "None" | "CellMidPoint"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalDataBarAxisFormat:enum'
        name: Excel.ConditionalDataBarAxisFormat
        fullName: Excel.ConditionalDataBarAxisFormat
      - name: ' | "Automatic" | "None" | "CellMidPoint"'
        fullName: ' | "Automatic" | "None" | "CellMidPoint"'
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData#barDirection~0:complex'
    name: Excel.ConditionalDataBarDirection | "Context" | "LeftToRight" | "RightToLeft"
    fullName: Excel.ConditionalDataBarDirection | "Context" | "LeftToRight" | "RightToLeft"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalDataBarDirection:enum'
        name: Excel.ConditionalDataBarDirection
        fullName: Excel.ConditionalDataBarDirection
      - name: ' | "Context" | "LeftToRight" | "RightToLeft"'
        fullName: ' | "Context" | "LeftToRight" | "RightToLeft"'
  - uid: 'excel!Excel.ConditionalDataBarRule:interface'
    name: Excel.ConditionalDataBarRule
  - uid: 'excel!Excel.Interfaces.ConditionalDataBarNegativeFormatUpdateData:interface'
    name: Excel.Interfaces.ConditionalDataBarNegativeFormatUpdateData
  - uid: 'excel!Excel.Interfaces.ConditionalDataBarPositiveFormatUpdateData:interface'
    name: Excel.Interfaces.ConditionalDataBarPositiveFormatUpdateData
