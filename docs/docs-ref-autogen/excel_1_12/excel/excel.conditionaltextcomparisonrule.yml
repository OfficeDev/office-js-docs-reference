### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalTextComparisonRule:interface'
    summary: |-
      Represents a Cell Value Conditional Format Rule

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.ConditionalTextComparisonRule
    fullName: Excel.ConditionalTextComparisonRule
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.ConditionalTextComparisonRule#operator:member'
      - 'excel!Excel.ConditionalTextComparisonRule#text:member'
  - uid: 'excel!Excel.ConditionalTextComparisonRule#operator:member'
    summary: |-
      The operator of the text conditional format.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: operator
    fullName: operator
    langs:
      - typeScript
    type: property
    syntax:
      content: 'operator: Excel.ConditionalTextOperator | "Invalid" | "Contains" | "NotContains" | "BeginsWith" | "EndsWith";'
      return:
        type:
          - 'excel!Excel.ConditionalTextComparisonRule#operator~0:complex'
  - uid: 'excel!Excel.ConditionalTextComparisonRule#text:member'
    summary: |-
      The Text value of conditional format.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'text: string;'
      return:
        type:
          - string
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml

          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B16:D18");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.containsText);
              conditionalFormat.textComparison.format.font.color = "red";
              conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: "Delayed" };

              await context.sync();
          });

          ```
references:
  - uid: 'excel!Excel.ConditionalTextComparisonRule#operator~0:complex'
    name: Excel.ConditionalTextOperator | "Invalid" | "Contains" | "NotContains" | "BeginsWith" | "EndsWith"
    fullName: Excel.ConditionalTextOperator | "Invalid" | "Contains" | "NotContains" | "BeginsWith" | "EndsWith"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalTextOperator:enum'
        name: Excel.ConditionalTextOperator
        fullName: Excel.ConditionalTextOperator
      - name: ' | "Invalid" | "Contains" | "NotContains" | "BeginsWith" | "EndsWith"'
        fullName: ' | "Invalid" | "Contains" | "NotContains" | "BeginsWith" | "EndsWith"'
