### YamlMime:TSType
name: Excel.CommentReply
uid: 'excel!Excel.CommentReply:class'
package: excel!
fullName: Excel.CommentReply
summary: >-
  Represents a comment reply in the workbook.


  \[ [API set: ExcelApi
  1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: authorEmail
    uid: 'excel!Excel.CommentReply#authorEmail:member'
    package: excel!
    fullName: authorEmail
    summary: >-
      Gets the email of the comment reply's author.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly authorEmail: string;'
      return:
        type: string
  - name: authorName
    uid: 'excel!Excel.CommentReply#authorName:member'
    package: excel!
    fullName: authorName
    summary: >-
      Gets the name of the comment reply's author.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly authorName: string;'
      return:
        type: string
  - name: content
    uid: 'excel!Excel.CommentReply#content:member'
    package: excel!
    fullName: content
    summary: >-
      The comment reply's content. The string is plain text.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'content: string;'
      return:
        type: string
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/12-comment/comment-replies.yaml

          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Comments");
              const comment = sheet.comments.getItemAt(0);
              const reply = comment.replies.getItemAt(0);
              reply.load("content");
              // Sync to load the content of the comment reply.
              await context.sync();

              // Append "Please!" to the end of the comment reply.
              reply.content += " Please!";
              await context.sync();
          });

          ```
  - name: contentType
    uid: 'excel!Excel.CommentReply#contentType:member'
    package: excel!
    fullName: contentType
    summary: >-
      The content type of the reply.


      \[ [API set: ExcelApi
      1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly contentType: Excel.ContentType | "Plain" | "Mention";'
      return:
        type: '<xref uid="excel!Excel.ContentType:enum" /> | "Plain" | "Mention"'
  - name: context
    uid: 'excel!Excel.CommentReply#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: creationDate
    uid: 'excel!Excel.CommentReply#creationDate:member'
    package: excel!
    fullName: creationDate
    summary: >-
      Gets the creation time of the comment reply.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly creationDate: Date;'
      return:
        type: Date
  - name: id
    uid: 'excel!Excel.CommentReply#id:member'
    package: excel!
    fullName: id
    summary: >-
      Specifies the comment reply identifier.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: string;'
      return:
        type: string
  - name: mentions
    uid: 'excel!Excel.CommentReply#mentions:member'
    package: excel!
    fullName: mentions
    summary: >-
      The entities (e.g., people) that are mentioned in comments.


      \[ [API set: ExcelApi
      1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly mentions: Excel.CommentMention[];'
      return:
        type: '<xref uid="excel!Excel.CommentMention:interface" />[]'
  - name: resolved
    uid: 'excel!Excel.CommentReply#resolved:member'
    package: excel!
    fullName: resolved
    summary: >-
      The comment reply status. A value of "true" means the reply is in the
      resolved state.


      \[ [API set: ExcelApi
      1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly resolved: boolean;'
      return:
        type: boolean
  - name: richContent
    uid: 'excel!Excel.CommentReply#richContent:member'
    package: excel!
    fullName: richContent
    summary: >-
      The rich comment content (e.g., mentions in comments). This string is not
      meant to be displayed to end-users. Your add-in should only use this to
      parse rich comment content.


      \[ [API set: ExcelApi
      1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly richContent: string;'
      return:
        type: string
methods:
  - name: delete()
    uid: 'excel!Excel.CommentReply#delete:member(1)'
    package: excel!
    fullName: delete()
    summary: >-
      Deletes the comment reply.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/12-comment/comment-replies.yaml

          await Excel.run(async (context) => {
              // Remove the first comment reply from this worksheet's first comment.
              const sheet = context.workbook.worksheets.getItem("Comments");
              const comment = sheet.comments.getItemAt(0);
              comment.replies.getItemAt(0).delete();
              await context.sync();
          });

          ```
  - name: getLocation()
    uid: 'excel!Excel.CommentReply#getLocation:member(1)'
    package: excel!
    fullName: getLocation()
    summary: >-
      Gets the cell where this comment reply is located.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getLocation(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: ''
  - name: getParentComment()
    uid: 'excel!Excel.CommentReply#getParentComment:member(1)'
    package: excel!
    fullName: getParentComment()
    summary: >-
      Gets the parent comment of this reply.


      \[ [API set: ExcelApi
      1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getParentComment(): Excel.Comment;'
      return:
        type: '<xref uid="excel!Excel.Comment:class" />'
        description: ''
  - name: load(options)
    uid: 'excel!Excel.CommentReply#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.CommentReplyLoadOptions):
        Excel.CommentReply;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="excel!Excel.Interfaces.CommentReplyLoadOptions:interface"
            />
      return:
        type: '<xref uid="excel!Excel.CommentReply:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.CommentReply#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CommentReply;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.CommentReply:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.CommentReply#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.CommentReply;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.CommentReply:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'excel!Excel.CommentReply#set:member(1)'
    package: excel!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.CommentReply): void`
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.CommentReplyUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: >-
            <xref uid="excel!Excel.Interfaces.CommentReplyUpdateData:interface"
            />
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'excel!Excel.CommentReply#set:member(2)'
    package: excel!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.CommentReply): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="excel!Excel.CommentReply:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.CommentReply#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Excel.CommentReply
      object is an API object, the `toJSON` method returns a plain JavaScript
      object (typed as `Excel.Interfaces.CommentReplyData`<!-- -->) that
      contains shallow copies of any loaded child properties from the original
      object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.CommentReplyData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.CommentReplyData:interface" />'
        description: ''
  - name: updateMentions(contentWithMentions)
    uid: 'excel!Excel.CommentReply#updateMentions:member(1)'
    package: excel!
    fullName: updateMentions(contentWithMentions)
    summary: >-
      Updates the comment content with a specially formatted string and a list
      of mentions.


      \[ [API set: ExcelApi
      1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'updateMentions(contentWithMentions: Excel.CommentRichContent): void;'
      parameters:
        - id: contentWithMentions
          description: >-
            The content for the comment. This contains a specially formatted
            string and a list of mentions that will be parsed into the string
            when displayed by Excel.
          type: '<xref uid="excel!Excel.CommentRichContent:interface" />'
      return:
        type: void
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
