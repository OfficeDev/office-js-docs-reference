### YamlMime:TSType
name: Excel.BasicDataValidation
uid: 'excel!Excel.BasicDataValidation:interface'
package: excel!
fullName: Excel.BasicDataValidation
summary: >-
  Represents the Basic Type data validation criteria.


  \[ [API set: ExcelApi
  1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: formula1
    uid: 'excel!Excel.BasicDataValidation#formula1:member'
    package: excel!
    fullName: formula1
    summary: >-
      Specifies the right-hand operand when the operator property is set to a
      binary operator such as GreaterThan (the left-hand operand is the value
      the user tries to enter in the cell). With the ternary operators Between
      and NotBetween, specifies the lower bound operand. For example, setting
      formula1 to 10 and operator to GreaterThan means that valid data for the
      range must be greater than 10. When setting the value, it can be passed in
      as a number, a range object, or a string formula (where the string is
      either a stringified number, a cell reference like "=A1", or a formula
      like "=MIN(A1, B1)"). When retrieving the value, it will always be
      returned as a string formula, for example: "=10", "=A1", "=SUM(A1:B5)",
      etc.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formula1: string | number | Range;'
      return:
        type: 'string | number | <xref uid="excel!Excel.Range:class" />'
  - name: formula2
    uid: 'excel!Excel.BasicDataValidation#formula2:member'
    package: excel!
    fullName: formula2
    summary: >-
      With the ternary operators Between and NotBetween, specifies the upper
      bound operand. Is not used with the binary operators, such as GreaterThan.
      When setting the value, it can be passed in as a number, a range object,
      or a string formula (where the string is either a stringified number, a
      cell reference like "=A1", or a formula like "=MIN(A1, B1)"). When
      retrieving the value, it will always be returned as a string formula, for
      example: "=10", "=A1", "=SUM(A1:B5)", etc.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formula2?: string | number | Range;'
      return:
        type: 'string | number | <xref uid="excel!Excel.Range:class" />'
  - name: operator
    uid: 'excel!Excel.BasicDataValidation#operator:member'
    package: excel!
    fullName: operator
    summary: >-
      The operator to use for validating the data.


      \[ [API set: ExcelApi
      1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        operator: Excel.DataValidationOperator | "Between" | "NotBetween" |
        "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" |
        "GreaterThanOrEqualTo" | "LessThanOrEqualTo";
      return:
        type: >-
          <xref uid="excel!Excel.DataValidationOperator:enum" /> | "Between" |
          "NotBetween" | "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" |
          "GreaterThanOrEqualTo" | "LessThanOrEqualTo"
