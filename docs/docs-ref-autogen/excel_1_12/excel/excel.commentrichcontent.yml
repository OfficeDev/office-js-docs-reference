### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CommentRichContent:interface'
    summary: >-
      Represents the content contained within a comment or comment reply. Rich content incudes the text string and any
      other objects contained within the comment body, such as mentions.


      \[ [API set: ExcelApi 1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.CommentRichContent
    fullName: Excel.CommentRichContent
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.CommentRichContent#mentions:member'
      - 'excel!Excel.CommentRichContent#richContent:member'
  - uid: 'excel!Excel.CommentRichContent#mentions:member'
    summary: |-
      An array containing all the entities (e.g., people) mentioned within the comment.

      \[ [API set: ExcelApi 1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: mentions
    fullName: mentions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'mentions?: Excel.CommentMention[];'
      return:
        type:
          - 'excel!Excel.CommentRichContent#mentions~0:complex'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/12-comment/comment-mentions.yaml

          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Comments");
              const mention = {
                  email: "kakri@contoso.com",
                  id: 0,
                  name: "Kate Kristensen"
              };

              // This will tag the mention's name using the '@' syntax.
              // They will be notified via email.
              const commentBody = {
                  mentions: [mention],
                  richContent: '<at id="0">' + mention.name + "</at> -  Can you take a look?"
              };

              // Note that an InvalidArgument error will be thrown if multiple cells passed to `comment.add`.
              sheet.comments.add("A1", commentBody, Excel.ContentType.mention);
              await context.sync();
          });

          ```
  - uid: 'excel!Excel.CommentRichContent#richContent:member'
    summary: >-
      Specifies the rich content of the comment (e.g., comment content with mentions, the first mentioned entity has an
      id attribute of 0, and the second mentioned entity has an id attribute of 1).


      \[ [API set: ExcelApi 1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: richContent
    fullName: richContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'richContent: string;'
      return:
        type:
          - string
references:
  - uid: 'excel!Excel.CommentRichContent#mentions~0:complex'
    name: 'Excel.CommentMention[]'
    fullName: 'Excel.CommentMention[]'
    spec.typeScript:
      - uid: 'excel!Excel.CommentMention:interface'
        name: Excel.CommentMention
        fullName: Excel.CommentMention
      - name: '[]'
        fullName: '[]'
