### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CellPropertiesFill:interface'
    summary: >-
      Represents the `format.fill` properties of `getCellProperties`<!-- -->, `getRowProperties`<!-- -->, and
      `getColumnProperties` or the `format.fill` input parameter of `setCellProperties`<!-- -->, `setRowProperties`<!--
      -->, and `setColumnProperties`<!-- -->.


      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.CellPropertiesFill
    fullName: Excel.CellPropertiesFill
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.CellPropertiesFill#color:member'
      - 'excel!Excel.CellPropertiesFill#pattern:member'
      - 'excel!Excel.CellPropertiesFill#patternColor:member'
      - 'excel!Excel.CellPropertiesFill#patternTintAndShade:member'
      - 'excel!Excel.CellPropertiesFill#tintAndShade:member'
  - uid: 'excel!Excel.CellPropertiesFill#color:member'
    summary: |-
      Represents the `format.fill.color` property.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color?: string;'
      return:
        type:
          - string
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/cell-properties.yaml

          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();

              // Creating the SettableCellProperties objects to use for the range.
              // In your add-in, these should be created once, outside the function.
              const topHeaderProps: Excel.SettableCellProperties = {
                  // The style property takes a string matching the name of an Excel style.
                  // Built-in style names are listed in the `BuiltInStyle` enum.
                  // Note that a style will overwrite any formatting,
                  // so do not use the format property with the style property.
                  style: "Heading1"
              };

              const headerProps: Excel.SettableCellProperties = {
                  // Any subproperties of format that are not set will not be changed when these cell properties are set.
                  format: {
                      fill: {
                          color: "Blue"
                      },
                      font: {
                          color: "White",
                          bold: true
                      }
                  }
              };

              const nonApplicableProps: Excel.SettableCellProperties = {
                  format: {
                      fill: {
                          pattern: Excel.FillPattern.gray25
                      },
                      font: {
                          color: "Gray",
                          italic: true
                      }
                  }
              };

              const matchupScoreProps: Excel.SettableCellProperties = {
                  format: {
                      borders: {
                          bottom: {
                              style: Excel.BorderLineStyle.continuous
                          },
                          left: {
                              style: Excel.BorderLineStyle.continuous
                          },
                          right: {
                              style: Excel.BorderLineStyle.continuous
                          },
                          top: {
                              style: Excel.BorderLineStyle.continuous
                          }
                      }
                  }
              };

              const range = sheet.getRange("A1:E5");

              // You can use empty JSON objects to avoid changing a cell's properties.
              range.setCellProperties([
                  [topHeaderProps, {}, {}, {}, {}],
                  [{}, {}, headerProps, headerProps, headerProps],
                  [{}, headerProps, nonApplicableProps, matchupScoreProps, matchupScoreProps],
                  [{}, headerProps, matchupScoreProps, nonApplicableProps, matchupScoreProps],
                  [{}, headerProps, matchupScoreProps, matchupScoreProps, nonApplicableProps]
              ]);

              sheet.getUsedRange().format.autofitColumns();
              await context.sync();
          });

          ```
  - uid: 'excel!Excel.CellPropertiesFill#pattern:member'
    summary: |-
      Represents the `format.fill.pattern` property.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: pattern
    fullName: pattern
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        pattern?: Excel.FillPattern | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" |
        "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" |
        "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient";
      return:
        type:
          - 'excel!Excel.CellPropertiesFill#pattern~0:complex'
  - uid: 'excel!Excel.CellPropertiesFill#patternColor:member'
    summary: |-
      Represents the `format.fill.patternColor` property.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: patternColor
    fullName: patternColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'patternColor?: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.CellPropertiesFill#patternTintAndShade:member'
    summary: |-
      Represents the `format.fill.patternTintAndShade` property.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: patternTintAndShade
    fullName: patternTintAndShade
    langs:
      - typeScript
    type: property
    syntax:
      content: 'patternTintAndShade?: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.CellPropertiesFill#tintAndShade:member'
    summary: |-
      Represents the `format.fill.tintAndShade` property.

      \[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: tintAndShade
    fullName: tintAndShade
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tintAndShade?: number;'
      return:
        type:
          - number
references:
  - uid: 'excel!Excel.CellPropertiesFill#pattern~0:complex'
    name: >-
      Excel.FillPattern | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up"
      | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross"
      | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient"
    fullName: >-
      Excel.FillPattern | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up"
      | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross"
      | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient"
    spec.typeScript:
      - uid: 'excel!Excel.FillPattern:enum'
        name: Excel.FillPattern
        fullName: Excel.FillPattern
      - name: ' | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient"'
        fullName: ' | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient"'
