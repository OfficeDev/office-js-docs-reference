### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.NumberFormatInfo:class'
    summary: |-
      Defines the culturally appropriate format of displaying numbers. This is based on current system culture settings.

      \[ [API set: ExcelApi 1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.NumberFormatInfo
    fullName: Excel.NumberFormatInfo
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.NumberFormatInfo#context:member'
      - 'excel!Excel.NumberFormatInfo#load:member(1)'
      - 'excel!Excel.NumberFormatInfo#load:member(2)'
      - 'excel!Excel.NumberFormatInfo#load:member(3)'
      - 'excel!Excel.NumberFormatInfo#numberDecimalSeparator:member'
      - 'excel!Excel.NumberFormatInfo#numberGroupSeparator:member'
      - 'excel!Excel.NumberFormatInfo#toJSON:member(1)'
  - uid: 'excel!Excel.NumberFormatInfo#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.NumberFormatInfo#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.NumberFormatInfoLoadOptions): Excel.NumberFormatInfo;'
      return:
        type:
          - 'excel!Excel.NumberFormatInfo:class'
        description: ''
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type:
            - 'excel!Excel.Interfaces.NumberFormatInfoLoadOptions:interface'
  - uid: 'excel!Excel.NumberFormatInfo#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NumberFormatInfo;'
      return:
        type:
          - 'excel!Excel.NumberFormatInfo:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.NumberFormatInfo#load:member(3)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.NumberFormatInfo;
      return:
        type:
          - 'excel!Excel.NumberFormatInfo:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.NumberFormatInfo#numberDecimalSeparator:member'
    summary: |-
      Gets the string used as the decimal separator for numeric values. This is based on current system settings.

      \[ [API set: ExcelApi 1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: numberDecimalSeparator
    fullName: numberDecimalSeparator
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly numberDecimalSeparator: string;'
      return:
        type:
          - string
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/culture-info.yaml

          // This will convert a number like "14,37" to "14.37"

          // (assuming the system decimal separator is ".").
            await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Sample");

          const decimalSource = sheet.getRange("B2");

          decimalSource.load("values");

          context.application.cultureInfo.numberFormat.load("numberDecimalSeparator");

          await context.sync();


          const systemDecimalSeparator = context.application.cultureInfo.numberFormat.numberDecimalSeparator;

          const oldDecimalString: string = decimalSource.values[0][0];


          // This assumes the input column is standardized to use "," as the decimal separator. 

          const newDecimalString = oldDecimalString.replace(",", systemDecimalSeparator);


          const resultRange = sheet.getRange("C2");

          resultRange.values = [[newDecimalString]];

          resultRange.format.autofitColumns();

          await context.sync();
            });
          ```
  - uid: 'excel!Excel.NumberFormatInfo#numberGroupSeparator:member'
    summary: >-
      Gets the string used to separate groups of digits to the left of the decimal for numeric values. This is based on
      current system settings.


      \[ [API set: ExcelApi 1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: numberGroupSeparator
    fullName: numberGroupSeparator
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly numberGroupSeparator: string;'
      return:
        type:
          - string
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/culture-info.yaml

          await Excel.run(async (context) => {
            // This will convert a number like "123-456-789" to "123,456,789"
            // (assuming the system thousands separator is ",").
            const sheet = context.workbook.worksheets.getItem("Sample");
            const bigNumberSource = sheet.getRange("B3");
            bigNumberSource.load("values");
            context.application.cultureInfo.numberFormat.load("numberGroupSeparator");
            await context.sync();

            const systemThousandsSeparator = context.application.cultureInfo.numberFormat.numberGroupSeparator;
            const oldBigNumberString: string = bigNumberSource.values[0][0];
            
            // This assumes the input column is standardized to use "-" as the number group separator. 
            const newBigNumberString = oldBigNumberString.replace(/-/g, systemThousandsSeparator);

            const resultRange = sheet.getRange("C3");
            resultRange.values = [[newBigNumberString]];
            resultRange.format.autofitColumns();
            await context.sync();
          });

          ```
  - uid: 'excel!Excel.NumberFormatInfo#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.NumberFormatInfo object is an API object, the `toJSON` method returns a
      plain JavaScript object (typed as `Excel.Interfaces.NumberFormatInfoData`<!-- -->) that contains shallow copies of
      any loaded child properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NumberFormatInfoData;'
      return:
        type:
          - 'excel!Excel.Interfaces.NumberFormatInfoData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.NumberFormatInfo:class'
    name: Excel.NumberFormatInfo
  - uid: 'excel!Excel.Interfaces.NumberFormatInfoLoadOptions:interface'
    name: Excel.Interfaces.NumberFormatInfoLoadOptions
  - uid: 'excel!Excel.Interfaces.NumberFormatInfoData:interface'
    name: Excel.Interfaces.NumberFormatInfoData
