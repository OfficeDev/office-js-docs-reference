### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalCellValueRule:interface'
    summary: |-
      Represents a cell value conditional format rule.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.ConditionalCellValueRule
    fullName: Excel.ConditionalCellValueRule
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.ConditionalCellValueRule#formula1:member'
      - 'excel!Excel.ConditionalCellValueRule#formula2:member'
      - 'excel!Excel.ConditionalCellValueRule#operator:member'
  - uid: 'excel!Excel.ConditionalCellValueRule#formula1:member'
    summary: |-
      The formula, if required, to evaluate the conditional format rule on.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: formula1
    fullName: formula1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula1: string;'
      return:
        type:
          - string
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml

          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B21:E23");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.cellValue);
              conditionalFormat.cellValue.format.font.color = "red";
              conditionalFormat.cellValue.rule = { formula1: "=0", operator: "LessThan" };

              await context.sync();
          });

          ```
  - uid: 'excel!Excel.ConditionalCellValueRule#formula2:member'
    summary: |-
      The formula, if required, to evaluate the conditional format rule on.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: formula2
    fullName: formula2
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula2?: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalCellValueRule#operator:member'
    summary: |-
      The operator of the cell value conditional format.

      \[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: operator
    fullName: operator
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        operator: Excel.ConditionalCellValueOperator | "Invalid" | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" |
        "GreaterThan" | "LessThan" | "GreaterThanOrEqual" | "LessThanOrEqual";
      return:
        type:
          - 'excel!Excel.ConditionalCellValueRule#operator~0:complex'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml

          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B21:E23");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.cellValue);
              conditionalFormat.cellValue.format.font.color = "red";
              conditionalFormat.cellValue.rule = { formula1: "=0", operator: "LessThan" };

              await context.sync();
          });

          ```
references:
  - uid: 'excel!Excel.ConditionalCellValueRule#operator~0:complex'
    name: >-
      Excel.ConditionalCellValueOperator | "Invalid" | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" |
      "GreaterThan" | "LessThan" | "GreaterThanOrEqual" | "LessThanOrEqual"
    fullName: >-
      Excel.ConditionalCellValueOperator | "Invalid" | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" |
      "GreaterThan" | "LessThan" | "GreaterThanOrEqual" | "LessThanOrEqual"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalCellValueOperator:enum'
        name: Excel.ConditionalCellValueOperator
        fullName: Excel.ConditionalCellValueOperator
      - name: ' | "Invalid" | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" | "GreaterThanOrEqual" | "LessThanOrEqual"'
        fullName: ' | "Invalid" | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" | "GreaterThanOrEqual" | "LessThanOrEqual"'
