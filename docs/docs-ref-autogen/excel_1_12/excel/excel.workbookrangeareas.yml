### YamlMime:TSType
name: Excel.WorkbookRangeAreas
uid: 'excel!Excel.WorkbookRangeAreas:class'
package: excel!
fullName: Excel.WorkbookRangeAreas
summary: >-
  Represents a collection of one or more rectangular ranges in multiple
  worksheets.


  \[ [API set: ExcelApi
  1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: addresses
    uid: 'excel!Excel.WorkbookRangeAreas#addresses:member'
    package: excel!
    fullName: addresses
    summary: >-
      Returns an array of address in A1-style. Address value will contain the
      worksheet name for each rectangular block of cells (e.g., "Sheet1!A1:B4,
      Sheet1!D1:D4"). Read-only.


      \[ [API set: ExcelApi
      1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly addresses: string[];'
      return:
        type: 'string[]'
  - name: areas
    uid: 'excel!Excel.WorkbookRangeAreas#areas:member'
    package: excel!
    fullName: areas
    summary: >-
      Returns the `RangeAreasCollection` object. Each `RangeAreas` object in the
      collection represents one or more rectangle ranges in one worksheet.


      \[ [API set: ExcelApi
      1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly areas: Excel.RangeAreasCollection;'
      return:
        type: '<xref uid="excel!Excel.RangeAreasCollection:class" />'
        description: >-


          #### Examples


          ```typescript

          // Link to full sample:
          https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/direct-precedents.yaml

          await Excel.run(async (context) => {
            // Precedents are cells referenced by the formula in a cell.
            let range = context.workbook.getActiveCell();
            let directPrecedents = range.getDirectPrecedents();
            range.load("address");
            directPrecedents.areas.load("address");
            await context.sync();

            console.log(`Direct precedentâ€¯cells of ${range.address}:`);

            // Use the direct precedents API to loop through precedents of the active cell. 
            for (var i = 0; i < directPrecedents.areas.items.length; i++) {
              // Highlight and console the address of each precedent cell.
              directPrecedents.areas.items[i].format.fill.color = "Yellow";
              console.log(`  ${directPrecedents.areas.items[i].address}`);
            }
            await context.sync();
          });

          ```
  - name: context
    uid: 'excel!Excel.WorkbookRangeAreas#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: ranges
    uid: 'excel!Excel.WorkbookRangeAreas#ranges:member'
    package: excel!
    fullName: ranges
    summary: >-
      Returns ranges that comprise this object in a `RangeCollection` object.


      \[ [API set: ExcelApi
      1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly ranges: Excel.RangeCollection;'
      return:
        type: '<xref uid="excel!Excel.RangeCollection:class" />'
methods:
  - name: getRangeAreasBySheet(key)
    uid: 'excel!Excel.WorkbookRangeAreas#getRangeAreasBySheet:member(1)'
    package: excel!
    fullName: getRangeAreasBySheet(key)
    summary: >-
      Returns the `RangeAreas` object based on worksheet id or name in the
      collection.


      \[ [API set: ExcelApi
      1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRangeAreasBySheet(key: string): Excel.RangeAreas;'
      parameters:
        - id: key
          description: The name or id of the worksheet.
          type: string
      return:
        type: '<xref uid="excel!Excel.RangeAreas:class" />'
        description: ''
  - name: getRangeAreasOrNullObjectBySheet(key)
    uid: 'excel!Excel.WorkbookRangeAreas#getRangeAreasOrNullObjectBySheet:member(1)'
    package: excel!
    fullName: getRangeAreasOrNullObjectBySheet(key)
    summary: >-
      Returns the `RangeAreas` object based on worksheet name or id in the
      collection. If the worksheet does not exist, will return a null object.


      \[ [API set: ExcelApi
      1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRangeAreasOrNullObjectBySheet(key: string): Excel.RangeAreas;'
      parameters:
        - id: key
          description: The name or id of the worksheet.
          type: string
      return:
        type: '<xref uid="excel!Excel.RangeAreas:class" />'
        description: ''
  - name: load(options)
    uid: 'excel!Excel.WorkbookRangeAreas#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.WorkbookRangeAreasLoadOptions):
        Excel.WorkbookRangeAreas;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref
            uid="excel!Excel.Interfaces.WorkbookRangeAreasLoadOptions:interface"
            />
      return:
        type: '<xref uid="excel!Excel.WorkbookRangeAreas:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.WorkbookRangeAreas#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorkbookRangeAreas;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.WorkbookRangeAreas:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.WorkbookRangeAreas#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.WorkbookRangeAreas;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.WorkbookRangeAreas:class" />'
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.WorkbookRangeAreas#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original
      Excel.WorkbookRangeAreas object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as
      `Excel.Interfaces.WorkbookRangeAreasData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookRangeAreasData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.WorkbookRangeAreasData:interface" />'
        description: ''
  - name: track()
    uid: 'excel!Excel.WorkbookRangeAreas#track:member(1)'
    package: excel!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in
      the document. This call is a shorthand for
      `context.trackedObjects.add(thisObject)`<!-- -->. If you are using this
      object across `.sync` calls and outside the sequential execution of a
      ".run" batch, and get an "InvalidObjectPath" error when setting a property
      or invoking a method on the object, you needed to have added the object to
      the tracked object collection when the object was first created.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Excel.WorkbookRangeAreas;'
      return:
        type: '<xref uid="excel!Excel.WorkbookRangeAreas:class" />'
        description: ''
  - name: untrack()
    uid: 'excel!Excel.WorkbookRangeAreas#untrack:member(1)'
    package: excel!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been
      tracked. This call is shorthand for
      `context.trackedObjects.remove(thisObject)`<!-- -->. Having many tracked
      objects slows down the host application, so please remember to free any
      objects you add, once you're done using them. You will need to call
      `context.sync()` before the memory release takes effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Excel.WorkbookRangeAreas;'
      return:
        type: '<xref uid="excel!Excel.WorkbookRangeAreas:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
