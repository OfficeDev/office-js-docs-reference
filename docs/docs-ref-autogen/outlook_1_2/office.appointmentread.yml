### YamlMime:UniversalReference
items:
  - uid: Outlook_1_2.Office.AppointmentRead
    summary: >-
      The appointment attendee mode of [Office.context.mailbox.item](xref:Outlook_1_2.Office.Item)<!-- -->.


      Important: This is an internal Outlook object, not directly exposed through existing interfaces. You should treat
      this as a mode of 'Office.context.mailbox.item'. Refer to the Object Model pages for more information.
    name: Office.AppointmentRead
    fullName: Outlook_1_2.Office.AppointmentRead
    langs:
      - typeScript
    type: interface
    extends:
      - Appointment
    package: Outlook_1_2
    children:
      - Outlook_1_2.Office.AppointmentRead.attachments
      - Outlook_1_2.Office.AppointmentRead.body
      - Outlook_1_2.Office.AppointmentRead.dateTimeCreated
      - Outlook_1_2.Office.AppointmentRead.dateTimeModifed
      - Outlook_1_2.Office.AppointmentRead.displayReplyAllForm
      - Outlook_1_2.Office.AppointmentRead.displayReplyForm
      - Outlook_1_2.Office.AppointmentRead.end
      - Outlook_1_2.Office.AppointmentRead.getEntities
      - Outlook_1_2.Office.AppointmentRead.getEntitiesByType
      - Outlook_1_2.Office.AppointmentRead.getFilteredEntitiesByName
      - Outlook_1_2.Office.AppointmentRead.getRegExMatches
      - Outlook_1_2.Office.AppointmentRead.getRegExMatchesByName
      - Outlook_1_2.Office.AppointmentRead.itemClass
      - Outlook_1_2.Office.AppointmentRead.itemId
      - Outlook_1_2.Office.AppointmentRead.itemType
      - Outlook_1_2.Office.AppointmentRead.loadCustomPropertiesAsync
      - Outlook_1_2.Office.AppointmentRead.location
      - Outlook_1_2.Office.AppointmentRead.normalizedSubject
      - Outlook_1_2.Office.AppointmentRead.optionalAttendees
      - Outlook_1_2.Office.AppointmentRead.organizer
      - Outlook_1_2.Office.AppointmentRead.requiredAttendees
      - Outlook_1_2.Office.AppointmentRead.start
      - Outlook_1_2.Office.AppointmentRead.subject
  - uid: Outlook_1_2.Office.AppointmentRead.attachments
    summary: |-
      Gets an array of attachments for the item.

      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>


      Note: Certain types of files are blocked by Outlook due to potential security issues and are therefore not
      returned. For more information, see [Blocked attachments in
      Outlook](https://support.office.com/article/Blocked-attachments-in-Outlook-434752E1-02D3-4E90-9124-8B81E49A8519)<!--
      -->.
    name: attachments
    fullName: Outlook_1_2.Office.AppointmentRead.attachments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'attachments: Office.AttachmentDetails[];'
      return:
        type:
          - 'Office.AttachmentDetails[]'
  - uid: Outlook_1_2.Office.AppointmentRead.body
    summary: |-
      Gets an object that provides methods for manipulating the body of an item.

      \[ [API set: Mailbox 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: body
    fullName: Outlook_1_2.Office.AppointmentRead.body
    langs:
      - typeScript
    type: property
    syntax:
      content: 'body: Office.Body;'
      return:
        type:
          - outlook.Office.Body
  - uid: Outlook_1_2.Office.AppointmentRead.dateTimeCreated
    summary: |-
      Gets the date and time that an item was created. Read mode only.

      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: dateTimeCreated
    fullName: Outlook_1_2.Office.AppointmentRead.dateTimeCreated
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dateTimeCreated: Date;'
      return:
        type:
          - Date
  - uid: Outlook_1_2.Office.AppointmentRead.dateTimeModifed
    summary: |-
      Gets the date and time that an item was last modified. Read mode only.

      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>


      Note: This member is not supported in Outlook for iOS or Outlook for Android.
    name: dateTimeModifed
    fullName: Outlook_1_2.Office.AppointmentRead.dateTimeModifed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dateTimeModifed: Date;'
      return:
        type:
          - Date
  - uid: Outlook_1_2.Office.AppointmentRead.displayReplyAllForm
    summary: >-
      Displays a reply form that includes the sender and all recipients of the selected message or the organizer and all
      attendees of the selected appointment.


      In Outlook Web App, the reply form is displayed as a pop-out form in the 3-column view and a pop-up form in the 2-
      or 1-column view.


      If any of the string parameters exceed their limits, displayReplyAllForm throws an exception.


      When attachments are specified in the formData.attachments parameter, Outlook and Outlook Web App attempt to
      download all attachments and attach them to the reply form. If any attachments fail to be added, an error is shown
      in the form UI. If this isn't possible, then no error message is thrown.


      Note: This method is not supported in Outlook for iOS or Outlook for Android.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: displayReplyAllForm(formData)
    fullName: Outlook_1_2.Office.AppointmentRead.displayReplyAllForm
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayReplyAllForm(formData: string | ReplyFormData): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formData
          description: >-
            A string that contains text and HTML and that represents the body of the reply form. The string is limited
            to 32 KB OR An[Office.ReplyFormData](xref:Outlook_1_2.Office.ReplyFormData) object that contains body or
            attachment data and a callback function
          type:
            - string | ReplyFormData
  - uid: Outlook_1_2.Office.AppointmentRead.displayReplyForm
    summary: >-
      Displays a reply form that includes only the sender of the selected message or the organizer of the selected
      appointment.


      In Outlook Web App, the reply form is displayed as a pop-out form in the 3-column view and a pop-up form in the 2-
      or 1-column view.


      If any of the string parameters exceed their limits, displayReplyForm throws an exception.


      When attachments are specified in the formData.attachments parameter, Outlook and Outlook Web App attempt to
      download all attachments and attach them to the reply form. If any attachments fail to be added, an error is shown
      in the form UI. If this isn't possible, then no error message is thrown.


      Note: This method is not supported in Outlook for iOS or Outlook for Android.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: displayReplyForm(formData)
    fullName: Outlook_1_2.Office.AppointmentRead.displayReplyForm
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayReplyForm(formData: string | ReplyFormData): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formData
          description: >-
            A string that contains text and HTML and that represents the body of the reply form. The string is limited
            to 32 KB. OR An[Office.ReplyFormData](xref:Outlook_1_2.Office.ReplyFormData) object that contains body or
            attachment data and a callback function.
          type:
            - string | ReplyFormData
  - uid: Outlook_1_2.Office.AppointmentRead.end
    summary: >-
      Gets the date and time that the appointment is to end.


      The end property is a Date object expressed as a Coordinated Universal Time (UTC) date and time value. You can use
      the convertToLocalClientTime method to convert the end property value to the client's local date and time.


      When you use the Time.setAsync method to set the end time, you should use the convertToUtcClientTime method to
      convert the local time on the client to UTC for the server.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: end
    fullName: Outlook_1_2.Office.AppointmentRead.end
    langs:
      - typeScript
    type: property
    syntax:
      content: 'end: Date;'
      return:
        type:
          - Date
  - uid: Outlook_1_2.Office.AppointmentRead.getEntities
    summary: |-
      Gets the entities found in the selected item.

      Note: This method is not supported in Outlook for iOS or Outlook for Android.

      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: getEntities()
    fullName: Outlook_1_2.Office.AppointmentRead.getEntities
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntities(): Entities;'
      return:
        type:
          - Entities
        description: ''
  - uid: Outlook_1_2.Office.AppointmentRead.getEntitiesByType
    summary: |-
      Gets an array of all the entities of the specified entity type found in the selected item.

      Note: This method is not supported in Outlook for iOS or Outlook for Android.

      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>Restricted</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>


      While the minimum permission level to use this method is Restricted, some entity types require ReadItem to access,
      as specified in the following table.


      <table> <tr> <th>Value of entityType</th> <th>Type of objects in returned array</th> <th>Required Permission
      Leve</th> </tr> <tr> <td>Address</td> <td>String</td> <td>Restricted</td> </tr> <tr> <td>Contact</td>
      <td>Contact</td> <td>ReadItem</td> </tr> <tr> <td>EmailAddress</td> <td>String</td> <td>ReadItem</td> </tr> <tr>
      <td>MeetingSuggestion</td> <td>MeetingSuggestion</td> <td>ReadItem</td> </tr> <tr> <td>PhoneNumber</td>
      <td>PhoneNumber</td> <td>Restricted</td> </tr> <tr> <td>TaskSuggestion</td> <td>TaskSuggestion</td>
      <td>ReadItem</td> </tr> <tr> <td>URL</td> <td>String</td> <td>Restricted</td> </tr> </table>
    name: getEntitiesByType(entityType)
    fullName: Outlook_1_2.Office.AppointmentRead.getEntitiesByType
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getEntitiesByType(entityType: Office.MailboxEnums.EntityType): (string | Contact | MeetingSuggestion |
        PhoneNumber | TaskSuggestion)[];
      return:
        type:
          - '(string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[]'
        description: >-
          If the value passed in entityType is not a valid member of the EntityType enumeration, the method returns
          null. If no entities of the specified type are present on the item, the method returns an empty array.
          Otherwise, the type of the objects in the returned array depends on the type of entity requested in the
          entityType parameter.
      parameters:
        - id: entityType
          description: One of the EntityType enumeration values.
          type:
            - outlook.Office.MailboxEnums.EntityType
  - uid: Outlook_1_2.Office.AppointmentRead.getFilteredEntitiesByName
    summary: >-
      Returns well-known entities in the selected item that pass the named filter defined in the manifest XML file.


      The getFilteredEntitiesByName method returns the entities that match the regular expression defined in the
      ItemHasKnownEntity rule element in the manifest XML file with the specified FilterName element value.


      Note: This method is not supported in Outlook for iOS or Outlook for Android.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: getFilteredEntitiesByName(name)
    fullName: Outlook_1_2.Office.AppointmentRead.getFilteredEntitiesByName
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        getFilteredEntitiesByName(name: string): (string | Contact | MeetingSuggestion | PhoneNumber |
        TaskSuggestion)[];
      return:
        type:
          - '(string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[]'
        description: >-
          If there is no ItemHasKnownEntity element in the manifest with a FilterName element value that matches the
          name parameter, the method returns null. If the name parameter does match an ItemHasKnownEntity element in the
          manifest, but there are no entities in the current item that match, the method return an empty array.
      parameters:
        - id: name
          description: The name of the ItemHasKnownEntity rule element that defines the filter to match.
          type:
            - string
  - uid: Outlook_1_2.Office.AppointmentRead.getRegExMatches
    summary: >-
      Returns string values in the selected item that match the regular expressions defined in the manifest XML file.


      The getRegExMatches method returns the strings that match the regular expression defined in each
      ItemHasRegularExpressionMatch or ItemHasKnownEntity rule element in the manifest XML file. For an
      ItemHasRegularExpressionMatch rule, a matching string has to occur in the property of the item that is specified
      by that rule. The PropertyName simple type defines the supported properties.


      If you specify an ItemHasRegularExpressionMatch rule on the body property of an item, the regular expression
      should further filter the body and should not attempt to return the entire body of the item. Using a regular
      expression such as .* to obtain the entire body of an item does not always return the expected results. Instead,
      use the Body.getAsync method to retrieve the entire body.


      Note: This method is not supported in Outlook for iOS or Outlook for Android.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: getRegExMatches()
    fullName: Outlook_1_2.Office.AppointmentRead.getRegExMatches
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRegExMatches(): any;'
      return:
        type:
          - any
        description: >-
          An object that contains arrays of strings that match the regular expressions defined in the manifest XML file.
          The name of each array is equal to the corresponding value of the RegExName attribute of the matching
          ItemHasRegularExpressionMatch rule or the FilterName attribute of the matching ItemHasKnownEntity rule.
  - uid: Outlook_1_2.Office.AppointmentRead.getRegExMatchesByName
    summary: >-
      Returns string values in the selected item that match the named regular expression defined in the manifest XML
      file.


      The getRegExMatchesByName method returns the strings that match the regular expression defined in the
      ItemHasRegularExpressionMatch rule element in the manifest XML file with the specified RegExName element value.


      If you specify an ItemHasRegularExpressionMatch rule on the body property of an item, the regular expression
      should further filter the body and should not attempt to return the entire body of the item. Using a regular
      expression such as .* to obtain the entire body of an item does not always return the expected results.


      Note: This method is not supported in Outlook for iOS or Outlook for Android.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: getRegExMatchesByName(name)
    fullName: Outlook_1_2.Office.AppointmentRead.getRegExMatchesByName
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRegExMatchesByName(name: string): string[];'
      return:
        type:
          - 'string[]'
        description: An array that contains the strings that match the regular expression defined in the manifest XML file.
      parameters:
        - id: name
          description: The name of the ItemHasRegularExpressionMatch rule element that defines the filter to match.
          type:
            - string
  - uid: Outlook_1_2.Office.AppointmentRead.itemClass
    summary: >-
      Gets the Exchange Web Services item class of the selected item.


      You can create custom message classes that extends a default message class, for example, a custom appointment
      message class IPM.Appointment.Contoso.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>


      The itemClass property specifies the message class of the selected item. The following are the default message
      classes for the message or appointment item.


      <table> <tr> <th>Type</th> <th>Description</th> <th>Item Class</th> </tr> <tr> <td>Appointment items</td>
      <td>These are calendar items of the item class IPM.Appointment or IPM.Appointment.Occurence.</td>
      <td>IPM.Appointment,IPM.Appointment.Occurence</td> </tr> <tr> <td>Message items</td> <td>These include email
      messages that have the default message class IPM.Note, and meeting requests, responses, and cancellations, that
      use IPM.Schedule.Meeting as the base message class.</td>
      <td>IPM.Note,IPM.Schedule.Meeting.Request,IPM.Schedule.Meeting.Neg,IPM.Schedule.Meeting.Pos,IPM.Schedule.Meeting.Tent,IPM.Schedule.Meeting.Canceled</td>
      </tr> </table>
    name: itemClass
    fullName: Outlook_1_2.Office.AppointmentRead.itemClass
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemClass: string;'
      return:
        type:
          - string
  - uid: Outlook_1_2.Office.AppointmentRead.itemId
    summary: >-
      Gets the Exchange Web Services item identifier for the current item.


      The itemId property is not available in compose mode. If an item identifier is required, the saveAsync method can
      be used to save the item to the store, which will return the item identifier in the AsyncResult.value parameter in
      the callback function.


      Note: The identifier returned by the itemId property is the same as the Exchange Web Services item identifier. The
      itemId property is not identical to the Outlook Entry ID or the ID used by the Outlook REST API. Before making
      REST API calls using this value, it should be converted using Office.context.mailbox.convertToRestId. For more
      details, see Use the Outlook REST APIs from an Outlook add-in.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: itemId
    fullName: Outlook_1_2.Office.AppointmentRead.itemId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemId: string;'
      return:
        type:
          - string
  - uid: Outlook_1_2.Office.AppointmentRead.itemType
    summary: >-
      Gets the type of item that an instance represents.


      The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance
      is a message or an appointment.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: itemType
    fullName: Outlook_1_2.Office.AppointmentRead.itemType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemType: Office.MailboxEnums.ItemType;'
      return:
        type:
          - outlook.Office.MailboxEnums.ItemType
  - uid: Outlook_1_2.Office.AppointmentRead.loadCustomPropertiesAsync
    summary: >-
      Asynchronously loads custom properties for this add-in on the selected item.


      Custom properties are stored as key/value pairs on a per-app, per-item basis. This method returns a
      CustomProperties object in the callback, which provides methods to access the custom properties specific to the
      current item and the current add-in. Custom properties are not encrypted on the item, so this should not be used
      as secure storage.


      The custom properties are provided as a CustomProperties object in the asyncResult.value property. This object can
      be used to get, set, and remove custom properties from the item and save changes to the custom property set back
      to the server.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: 'loadCustomPropertiesAsync(callback, userContext)'
    fullName: Outlook_1_2.Office.AppointmentRead.loadCustomPropertiesAsync
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadCustomPropertiesAsync(callback: (result: AsyncResult) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: >-
            When the method completes, the function passed in the callback parameter is called with a single parameter
            of type AsyncResult.
          type:
            - '(result: AsyncResult) => void'
        - id: userContext
          description: >-
            Optional. Developers can provide any object they wish to access in the callback function. This object can be
            accessed by the asyncResult.asyncContext property in the callback function.
          type:
            - any
  - uid: Outlook_1_2.Office.AppointmentRead.location
    summary: |-
      Gets the location of an appointment.

      The location property returns a string that contains the location of the appointment.

      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: location
    fullName: Outlook_1_2.Office.AppointmentRead.location
    langs:
      - typeScript
    type: property
    syntax:
      content: 'location: string;'
      return:
        type:
          - string
  - uid: Outlook_1_2.Office.AppointmentRead.normalizedSubject
    summary: >-
      Gets the subject of an item, with all prefixes removed (including RE: and FWD:).


      The normalizedSubject property gets the subject of the item, with any standard prefixes (such as RE: and FW:) that
      are added by email programs. To get the subject of the item with the prefixes intact, use the subject property.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: normalizedSubject
    fullName: Outlook_1_2.Office.AppointmentRead.normalizedSubject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'normalizedSubject: string;'
      return:
        type:
          - string
  - uid: Outlook_1_2.Office.AppointmentRead.optionalAttendees
    summary: >-
      Provides access to the optional attendees of an event. The type of object and level of access depends on the mode
      of the current item.


      The optionalAttendees property returns an array that contains an
      [Office.EmailAddressDetails](xref:Outlook_1_2.Office.EmailAddressDetails) object for each optional attendee to the
      meeting.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: optionalAttendees
    fullName: Outlook_1_2.Office.AppointmentRead.optionalAttendees
    langs:
      - typeScript
    type: property
    syntax:
      content: 'optionalAttendees: EmailAddressDetails[];'
      return:
        type:
          - 'EmailAddressDetails[]'
  - uid: Outlook_1_2.Office.AppointmentRead.organizer
    summary: |-
      Gets the email address of the meeting organizer for a specified meeting. Read mode only.

      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: organizer
    fullName: Outlook_1_2.Office.AppointmentRead.organizer
    langs:
      - typeScript
    type: property
    syntax:
      content: 'organizer: EmailAddressDetails;'
      return:
        type:
          - EmailAddressDetails
  - uid: Outlook_1_2.Office.AppointmentRead.requiredAttendees
    summary: >-
      Provides access to the required attendees of an event. The type of object and level of access depends on the mode
      of the current item.


      The requiredAttendees property returns an array that contains an
      [Office.EmailAddressDetails](xref:Outlook_1_2.Office.EmailAddressDetails) object for each required attendee to the
      meeting.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: requiredAttendees
    fullName: Outlook_1_2.Office.AppointmentRead.requiredAttendees
    langs:
      - typeScript
    type: property
    syntax:
      content: 'requiredAttendees: EmailAddressDetails[];'
      return:
        type:
          - 'EmailAddressDetails[]'
  - uid: Outlook_1_2.Office.AppointmentRead.start
    summary: >-
      Gets the date and time that the appointment is to begin.


      The start property is a Date object expressed as a Coordinated Universal Time (UTC) date and time value. You can
      use the convertToLocalClientTime method to convert the value to the client's local date and time.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: start
    fullName: Outlook_1_2.Office.AppointmentRead.start
    langs:
      - typeScript
    type: property
    syntax:
      content: 'start: Date;'
      return:
        type:
          - Date
  - uid: Outlook_1_2.Office.AppointmentRead.subject
    summary: >-
      Gets the description that appears in the subject field of an item.


      The subject property gets or sets the entire subject of the item, as sent by the email server.


      The subject property returns a string. Use the normalizedSubject property to get the subject minus any leading
      prefixes such as RE: and FW:.


      \[ [API set: Mailbox 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]
    remarks: >-
      <table><tr><td>[Minimum permission
      level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


      <tr><td>Applicable Outlook mode</td><td>Appointment Attendee</td></tr></table>
    name: subject
    fullName: Outlook_1_2.Office.AppointmentRead.subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: string;'
      return:
        type:
          - string
