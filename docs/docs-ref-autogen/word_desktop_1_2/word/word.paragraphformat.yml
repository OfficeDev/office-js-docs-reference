### YamlMime:TSType
name: Word.ParagraphFormat
uid: 'word!Word.ParagraphFormat:class'
package: word!
fullName: Word.ParagraphFormat
summary: Represents a style of paragraph in a document.
remarks: >-
  \[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-styles.yaml


  // Sets certain aspects of the specified style's paragraph format e.g., the left indent size and the alignment.

  await Word.run(async (context) => {
    const styleName = $("#style-name").val() as string;
    if (styleName == "") {
      console.warn("Enter a style name to update its paragraph format.");
      return;
    }

    const style: Word.Style = context.document.getStyles().getByNameOrNullObject(styleName);
    style.load();
    await context.sync();

    if (style.isNullObject) {
      console.warn(`There's no existing style with the name '${styleName}'.`);
    } else {
      style.paragraphFormat.leftIndent = 30;
      style.paragraphFormat.alignment = Word.Alignment.centered;
      console.log(`Successfully the paragraph format of the '${styleName}' style.`);
    }
  });

  ```
isPreview: false
isDeprecated: false
type: class
properties:
  - name: alignment
    uid: 'word!Word.ParagraphFormat#alignment:member'
    package: word!
    fullName: alignment
    summary: Specifies the alignment for the specified paragraphs.
    remarks: >-
      \[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-styles.yaml


      // Sets certain aspects of the specified style's paragraph format e.g., the left indent size and the alignment.

      await Word.run(async (context) => {
        const styleName = $("#style-name").val() as string;
        if (styleName == "") {
          console.warn("Enter a style name to update its paragraph format.");
          return;
        }

        const style: Word.Style = context.document.getStyles().getByNameOrNullObject(styleName);
        style.load();
        await context.sync();

        if (style.isNullObject) {
          console.warn(`There's no existing style with the name '${styleName}'.`);
        } else {
          style.paragraphFormat.leftIndent = 30;
          style.paragraphFormat.alignment = Word.Alignment.centered;
          console.log(`Successfully the paragraph format of the '${styleName}' style.`);
        }
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type: '<xref uid="word!Word.Alignment:enum" /> | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - name: context
    uid: 'word!Word.ParagraphFormat#context:member'
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="word!Word.RequestContext:class" />'
  - name: firstLineIndent
    uid: 'word!Word.ParagraphFormat#firstLineIndent:member'
    package: word!
    fullName: firstLineIndent
    summary: >-
      Specifies the value (in points) for a first line or hanging indent. Use a positive value to set a first-line
      indent, and use a negative value to set a hanging indent.
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'firstLineIndent: number;'
      return:
        type: number
  - name: keepTogether
    uid: 'word!Word.ParagraphFormat#keepTogether:member'
    package: word!
    fullName: keepTogether
    summary: >-
      Specifies whether all lines in the specified paragraphs remain on the same page when Microsoft Word repaginates
      the document.
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'keepTogether: boolean;'
      return:
        type: boolean
  - name: keepWithNext
    uid: 'word!Word.ParagraphFormat#keepWithNext:member'
    package: word!
    fullName: keepWithNext
    summary: >-
      Specifies whether the specified paragraph remains on the same page as the paragraph that follows it when Microsoft
      Word repaginates the document.
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'keepWithNext: boolean;'
      return:
        type: boolean
  - name: leftIndent
    uid: 'word!Word.ParagraphFormat#leftIndent:member'
    package: word!
    fullName: leftIndent
    summary: Specifies the left indent.
    remarks: >-
      \[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```TypeScript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-styles.yaml


      // Sets certain aspects of the specified style's paragraph format e.g., the left indent size and the alignment.

      await Word.run(async (context) => {
        const styleName = $("#style-name").val() as string;
        if (styleName == "") {
          console.warn("Enter a style name to update its paragraph format.");
          return;
        }

        const style: Word.Style = context.document.getStyles().getByNameOrNullObject(styleName);
        style.load();
        await context.sync();

        if (style.isNullObject) {
          console.warn(`There's no existing style with the name '${styleName}'.`);
        } else {
          style.paragraphFormat.leftIndent = 30;
          style.paragraphFormat.alignment = Word.Alignment.centered;
          console.log(`Successfully the paragraph format of the '${styleName}' style.`);
        }
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'leftIndent: number;'
      return:
        type: number
  - name: lineSpacing
    uid: 'word!Word.ParagraphFormat#lineSpacing:member'
    package: word!
    fullName: lineSpacing
    summary: Specifies the line spacing (in points) for the specified paragraphs.
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'lineSpacing: number;'
      return:
        type: number
  - name: lineUnitAfter
    uid: 'word!Word.ParagraphFormat#lineUnitAfter:member'
    package: word!
    fullName: lineUnitAfter
    summary: Specifies the amount of spacing (in gridlines) after the specified paragraphs.
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'lineUnitAfter: number;'
      return:
        type: number
  - name: lineUnitBefore
    uid: 'word!Word.ParagraphFormat#lineUnitBefore:member'
    package: word!
    fullName: lineUnitBefore
    summary: Specifies the amount of spacing (in gridlines) before the specified paragraphs.
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'lineUnitBefore: number;'
      return:
        type: number
  - name: mirrorIndents
    uid: 'word!Word.ParagraphFormat#mirrorIndents:member'
    package: word!
    fullName: mirrorIndents
    summary: Specifies whether left and right indents are the same width.
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'mirrorIndents: boolean;'
      return:
        type: boolean
  - name: outlineLevel
    uid: 'word!Word.ParagraphFormat#outlineLevel:member'
    package: word!
    fullName: outlineLevel
    summary: Specifies the outline level for the specified paragraphs.
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        outlineLevel: Word.OutlineLevel | "OutlineLevel1" | "OutlineLevel2" | "OutlineLevel3" | "OutlineLevel4" |
        "OutlineLevel5" | "OutlineLevel6" | "OutlineLevel7" | "OutlineLevel8" | "OutlineLevel9" |
        "OutlineLevelBodyText";
      return:
        type: >-
          <xref uid="word!Word.OutlineLevel:enum" /> | "OutlineLevel1" | "OutlineLevel2" | "OutlineLevel3" |
          "OutlineLevel4" | "OutlineLevel5" | "OutlineLevel6" | "OutlineLevel7" | "OutlineLevel8" | "OutlineLevel9" |
          "OutlineLevelBodyText"
  - name: rightIndent
    uid: 'word!Word.ParagraphFormat#rightIndent:member'
    package: word!
    fullName: rightIndent
    summary: Specifies the right indent (in points) for the specified paragraphs.
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rightIndent: number;'
      return:
        type: number
  - name: spaceAfter
    uid: 'word!Word.ParagraphFormat#spaceAfter:member'
    package: word!
    fullName: spaceAfter
    summary: Specifies the amount of spacing (in points) after the specified paragraph or text column.
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'spaceAfter: number;'
      return:
        type: number
  - name: spaceBefore
    uid: 'word!Word.ParagraphFormat#spaceBefore:member'
    package: word!
    fullName: spaceBefore
    summary: Specifies the spacing (in points) before the specified paragraphs.
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'spaceBefore: number;'
      return:
        type: number
  - name: widowControl
    uid: 'word!Word.ParagraphFormat#widowControl:member'
    package: word!
    fullName: widowControl
    summary: >-
      Specifies whether the first and last lines in the specified paragraph remain on the same page as the rest of the
      paragraph when Microsoft Word repaginates the document.
    remarks: '\[ [API set: WordApi 1.5](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'widowControl: boolean;'
      return:
        type: boolean
methods:
  - name: load(options)
    uid: 'word!Word.ParagraphFormat#load:member(1)'
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Word.Interfaces.ParagraphFormatLoadOptions): Word.ParagraphFormat;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="word!Word.Interfaces.ParagraphFormatLoadOptions:interface" />'
      return:
        type: '<xref uid="word!Word.ParagraphFormat:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'word!Word.ParagraphFormat#load:member(2)'
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.ParagraphFormat;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="word!Word.ParagraphFormat:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'word!Word.ParagraphFormat#load:member(3)'
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.ParagraphFormat;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="word!Word.ParagraphFormat:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'word!Word.ParagraphFormat#set:member(1)'
    package: word!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.ParagraphFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="word!Word.Interfaces.ParagraphFormatUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'word!Word.ParagraphFormat#set:member(2)'
    package: word!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Word.ParagraphFormat): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="word!Word.ParagraphFormat:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'word!Word.ParagraphFormat#toJSON:member(1)'
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that's
      passed to it.) Whereas the original `Word.ParagraphFormat` object is an API object, the `toJSON` method returns a
      plain JavaScript object (typed as `Word.Interfaces.ParagraphFormatData`<!-- -->) that contains shallow copies of
      any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphFormatData;'
      return:
        type: '<xref uid="word!Word.Interfaces.ParagraphFormatData:interface" />'
        description: ''
  - name: track()
    uid: 'word!Word.ParagraphFormat#track:member(1)'
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for
      [context.trackedObjects.add(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and
      get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the
      object to the tracked object collection when the object was first created. If this object is part of a collection,
      you should also track the parent collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.ParagraphFormat;'
      return:
        type: '<xref uid="word!Word.ParagraphFormat:class" />'
        description: ''
  - name: untrack()
    uid: 'word!Word.ParagraphFormat#untrack:member(1)'
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so please remember to free any objects you add,
      once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.ParagraphFormat;'
      return:
        type: '<xref uid="word!Word.ParagraphFormat:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
