name: Word.Page
uid: word!Word.Page:class
package: word!
fullName: Word.Page
summary: >-
  Represents a page in the document. `Page` objects manage the page layout and
  content.
remarks: >-
  \[ [API set: WordApiDesktop
  1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: word!Word.Page#context:member
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: <xref uid="word!Word.RequestContext:class" />
  - name: height
    uid: word!Word.Page#height:member
    package: word!
    fullName: height
    summary: >-
      Gets the height, in points, of the paper defined in the Page Setup dialog
      box.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly height: number;'
      return:
        type: number
  - name: index
    uid: word!Word.Page#index:member
    package: word!
    fullName: index
    summary: >-
      Gets the index of the page. The page index is 1-based and independent of
      the user's custom page numbering.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly index: number;'
      return:
        type: number
  - name: width
    uid: word!Word.Page#width:member
    package: word!
    fullName: width
    summary: >-
      Gets the width, in points, of the paper defined in the Page Setup dialog
      box.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly width: number;'
      return:
        type: number
methods:
  - name: getNext()
    uid: word!Word.Page#getNext:member(1)
    package: word!
    fullName: getNext()
    summary: >-
      Gets the next page in the pane. Throws an `ItemNotFound` error if this
      page is the last one.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getNext(): Word.Page;'
      return:
        type: <xref uid="word!Word.Page:class" />
        description: ''
  - name: getNextOrNullObject()
    uid: word!Word.Page#getNextOrNullObject:member(1)
    package: word!
    fullName: getNextOrNullObject()
    summary: >-
      Gets the next page. If this page is the last one, then this method will
      return an object with its `isNullObject` property set to `true`<!-- -->.
      For further information, see [*OrNullObject methods and
      properties](https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getNextOrNullObject(): Word.Page;'
      return:
        type: <xref uid="word!Word.Page:class" />
        description: ''
  - name: getRange(rangeLocation)
    uid: word!Word.Page#getRange:member(1)
    package: word!
    fullName: getRange(rangeLocation)
    summary: >-
      Gets the whole page, or the starting or ending point of the page, as a
      range.
    remarks: >-
      \[ [API set: WordApiDesktop
      1.2](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]

    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getRange(rangeLocation?: Word.RangeLocation.whole |
        Word.RangeLocation.start | Word.RangeLocation.end | "Whole" | "Start" |
        "End"): Word.Range;
      parameters:
        - id: rangeLocation
          description: Optional. The range location must be 'Whole', 'Start', or 'End'.
          type: >-
            <xref uid="word!Word.RangeLocation.whole:member" /> | <xref
            uid="word!Word.RangeLocation.start:member" /> | <xref
            uid="word!Word.RangeLocation.end:member" /> | "Whole" | "Start" |
            "End"
      return:
        type: <xref uid="word!Word.Range:class" />
        description: ''
  - name: load(options)
    uid: word!Word.Page#load:member(1)
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Word.Interfaces.PageLoadOptions): Word.Page;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: <xref uid="word!Word.Interfaces.PageLoadOptions:interface" />
      return:
        type: <xref uid="word!Word.Page:class" />
        description: ''
  - name: load(propertyNames)
    uid: word!Word.Page#load:member(2)
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Page;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: string | string[]
      return:
        type: <xref uid="word!Word.Page:class" />
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: word!Word.Page#load:member(3)
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.Page;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: <xref uid="word!Word.Page:class" />
        description: ''
  - name: toJSON()
    uid: word!Word.Page#toJSON:member(1)
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that's passed to it.) Whereas the original `Word.Page` object is an
      API object, the `toJSON` method returns a plain JavaScript object (typed
      as `Word.Interfaces.PageData`<!-- -->) that contains shallow copies of any
      loaded child properties from the original object.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.PageData;'
      return:
        type: <xref uid="word!Word.Interfaces.PageData:interface" />
        description: ''
  - name: track()
    uid: word!Word.Page#track:member(1)
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in
      the document. This call is a shorthand for
      [context.trackedObjects.add(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you're using this object across `.sync` calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath"
      error when setting a property or invoking a method on the object, you need
      to add the object to the tracked object collection when the object was
      first created. If this object is part of a collection, you should also
      track the parent collection.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.Page;'
      return:
        type: <xref uid="word!Word.Page:class" />
        description: ''
  - name: untrack()
    uid: word!Word.Page#untrack:member(1)
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been
      tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so
      please remember to free any objects you add, once you're done using them.
      You'll need to call `context.sync()` before the memory release takes
      effect.
    remarks: ''

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.Page;'
      return:
        type: <xref uid="word!Word.Page:class" />
        description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
