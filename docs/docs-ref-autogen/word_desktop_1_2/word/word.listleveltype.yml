### YamlMime:TSEnum
name: Word.ListLevelType
uid: 'word!Word.ListLevelType:enum'
package: word!
fullName: Word.ListLevelType
summary: ''
remarks: >-
  \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/20-lists/organize-list.yaml


  // Gets information about the first list in the document.

  await Word.run(async (context) => {
    const lists: Word.ListCollection = context.document.body.lists;
    lists.load("items");

    await context.sync();

    if (lists.items.length === 0) {
      console.warn("There are no lists in this document.");
      return;
    }
    
    // Get the first list.
    const list: Word.List = lists.getFirst();
    list.load("levelTypes,levelExistences");

    await context.sync();

    const levelTypes  = list.levelTypes;
    console.log("Level types of the first list:");
    for (let i = 0; i < levelTypes.length; i++) {
      console.log(`- Level ${i + 1} (index ${i}): ${levelTypes[i]}`);
    }

    const levelExistences = list.levelExistences;
    console.log("Level existences of the first list:");
    for (let i = 0; i < levelExistences.length; i++) {
      console.log(`- Level ${i + 1} (index ${i}): ${levelExistences[i]}`);
    }
  });

  ```
isPreview: false
isDeprecated: false
fields:
  - name: bullet
    uid: 'word!Word.ListLevelType.bullet:member'
    package: word!
    summary: '* \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    value: '"Bullet"'
  - name: number
    uid: 'word!Word.ListLevelType.number:member'
    package: word!
    summary: '* \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    value: '"Number"'
  - name: picture
    uid: 'word!Word.ListLevelType.picture:member'
    package: word!
    summary: '* \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    value: '"Picture"'
