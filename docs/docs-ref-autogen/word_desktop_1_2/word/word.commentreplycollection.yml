### YamlMime:TSType
name: Word.CommentReplyCollection
uid: 'word!Word.CommentReplyCollection:class'
package: word!
fullName: Word.CommentReplyCollection
summary: >-
  Contains a collection of [Word.CommentReply](xref:word!Word.CommentReply:class) objects. Represents all comment
  replies in one comment thread.
remarks: >-
  \[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


  #### Examples


  ```TypeScript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-comments.yaml


  // Gets the replies to the first comment in the selected content.

  await Word.run(async (context) => {
    const comment: Word.Comment = context.document.getSelection().getComments().getFirstOrNullObject();
    comment.load("replies");
    await context.sync();

    if (comment.isNullObject) {
      console.warn("No comments in the selection, so no replies to get.");
      return;
    }

    const replies: Word.CommentReplyCollection = comment.replies;
    console.log("Replies to the first comment:", replies);
  });

  ```
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'word!Word.CommentReplyCollection#context:member'
    package: word!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="word!Word.RequestContext:class" />'
  - name: items
    uid: 'word!Word.CommentReplyCollection#items:member'
    package: word!
    fullName: items
    summary: Gets the loaded child items in this collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly items: Word.CommentReply[];'
      return:
        type: '<xref uid="word!Word.CommentReply:class" />[]'
methods:
  - name: getFirst()
    uid: 'word!Word.CommentReplyCollection#getFirst:member(1)'
    package: word!
    fullName: getFirst()
    summary: Gets the first comment reply in the collection. Throws an `ItemNotFound` error if this collection is empty.
    remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFirst(): Word.CommentReply;'
      return:
        type: '<xref uid="word!Word.CommentReply:class" />'
        description: ''
  - name: getFirstOrNullObject()
    uid: 'word!Word.CommentReplyCollection#getFirstOrNullObject:member(1)'
    package: word!
    fullName: getFirstOrNullObject()
    summary: >-
      Gets the first comment reply in the collection. If the collection is empty, then this method will return an object
      with its `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject methods and
      properties](https://learn.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFirstOrNullObject(): Word.CommentReply;'
      return:
        type: '<xref uid="word!Word.CommentReply:class" />'
        description: ''
  - name: load(options)
    uid: 'word!Word.CommentReplyCollection#load:member(1)'
    package: word!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Word.Interfaces.CommentReplyCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions):
        Word.CommentReplyCollection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="word!Word.Interfaces.CommentReplyCollectionLoadOptions:interface" /> & <xref
            uid="word!Word.Interfaces.CollectionLoadOptions:interface" />
      return:
        type: '<xref uid="word!Word.CommentReplyCollection:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'word!Word.CommentReplyCollection#load:member(2)'
    package: word!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.CommentReplyCollection;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="word!Word.CommentReplyCollection:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'word!Word.CommentReplyCollection#load:member(3)'
    package: word!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.CommentReplyCollection;'
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: '<xref uid="office!OfficeExtension.LoadOption:interface" />'
      return:
        type: '<xref uid="word!Word.CommentReplyCollection:class" />'
        description: ''
  - name: toJSON()
    uid: 'word!Word.CommentReplyCollection#toJSON:member(1)'
    package: word!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that's
      passed to it.) Whereas the original `Word.CommentReplyCollection` object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `Word.Interfaces.CommentReplyCollectionData`<!-- -->) that contains an
      "items" array with shallow copies of any loaded properties from the collection's items.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.CommentReplyCollectionData;'
      return:
        type: '<xref uid="word!Word.Interfaces.CommentReplyCollectionData:interface" />'
        description: ''
  - name: track()
    uid: 'word!Word.CommentReplyCollection#track:member(1)'
    package: word!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for
      [context.trackedObjects.add(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you're using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and
      get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the
      object to the tracked object collection when the object was first created. If this object is part of a collection,
      you should also track the parent collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.CommentReplyCollection;'
      return:
        type: '<xref uid="word!Word.CommentReplyCollection:class" />'
        description: ''
  - name: untrack()
    uid: 'word!Word.CommentReplyCollection#untrack:member(1)'
    package: word!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://learn.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so please remember to free any objects you add,
      once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.CommentReplyCollection;'
      return:
        type: '<xref uid="word!Word.CommentReplyCollection:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
