### YamlMime:TSType
name: Excel.RangeFormat
uid: 'excel!Excel.RangeFormat:class'
package: excel!
fullName: Excel.RangeFormat
summary: >-
  A format object encapsulating the range's font, fill, borders, alignment, and
  other properties.


  \[ [API set: ExcelApi
  1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: borders
    uid: 'excel!Excel.RangeFormat#borders:member'
    package: excel!
    fullName: borders
    summary: >-
      Collection of border objects that apply to the overall range.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly borders: Excel.RangeBorderCollection;'
      return:
        type: '<xref uid="excel!Excel.RangeBorderCollection:class" />'
  - name: context
    uid: 'excel!Excel.RangeFormat#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: fill
    uid: 'excel!Excel.RangeFormat#fill:member'
    package: excel!
    fullName: fill
    summary: >-
      Returns the fill object defined on the overall range.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly fill: Excel.RangeFill;'
      return:
        type: '<xref uid="excel!Excel.RangeFill:class" />'
  - name: font
    uid: 'excel!Excel.RangeFormat#font:member'
    package: excel!
    fullName: font
    summary: >-
      Returns the font object defined on the overall range.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly font: Excel.RangeFont;'
      return:
        type: '<xref uid="excel!Excel.RangeFont:class" />'
  - name: horizontalAlignment
    uid: 'excel!Excel.RangeFormat#horizontalAlignment:member'
    package: excel!
    fullName: horizontalAlignment
    summary: >-
      Represents the horizontal alignment for the specified object. See
      Excel.HorizontalAlignment for details.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        horizontalAlignment: Excel.HorizontalAlignment | "General" | "Left" |
        "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" |
        "Distributed";
      return:
        type: >-
          <xref uid="excel!Excel.HorizontalAlignment:enum" /> | "General" |
          "Left" | "Center" | "Right" | "Fill" | "Justify" |
          "CenterAcrossSelection" | "Distributed"
  - name: verticalAlignment
    uid: 'excel!Excel.RangeFormat#verticalAlignment:member'
    package: excel!
    fullName: verticalAlignment
    summary: >-
      Represents the vertical alignment for the specified object. See
      Excel.VerticalAlignment for details.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        verticalAlignment: Excel.VerticalAlignment | "Top" | "Center" | "Bottom"
        | "Justify" | "Distributed";
      return:
        type: >-
          <xref uid="excel!Excel.VerticalAlignment:enum" /> | "Top" | "Center" |
          "Bottom" | "Justify" | "Distributed"
  - name: wrapText
    uid: 'excel!Excel.RangeFormat#wrapText:member'
    package: excel!
    fullName: wrapText
    summary: >-
      Specifies if Excel wraps the text in the object. A null value indicates
      that the entire range doesn't have uniform wrap setting


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'wrapText: boolean;'
      return:
        type: boolean
methods:
  - name: load(options)
    uid: 'excel!Excel.RangeFormat#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.RangeFormatLoadOptions):
        Excel.RangeFormat;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="excel!Excel.Interfaces.RangeFormatLoadOptions:interface"
            />
      return:
        type: '<xref uid="excel!Excel.RangeFormat:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.RangeFormat#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeFormat;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.RangeFormat:class" />'
        description: |-


          #### Examples

          ```javascript
          // Below example selects all of the Range's format properties. 
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              range.load(["format/*", "format/fill", "format/borders", "format/font"]);
              return ctx.sync().then(function() {
                  console.log(range.format.wrapText);
                  console.log(range.format.fill.color);
                  console.log(range.format.font.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below sets font name, fill color and wraps text. 
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.wrapText = true;
              range.format.font.name = 'Times New Roman';
              range.format.fill.color = '0000FF';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below adds grid border around the range.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.borders.getItem('InsideHorizontal').style = 'Continuous';
              range.format.borders.getItem('InsideVertical').style = 'Continuous';
              range.format.borders.getItem('EdgeBottom').style = 'Continuous';
              range.format.borders.getItem('EdgeLeft').style = 'Continuous';
              range.format.borders.getItem('EdgeRight').style = 'Continuous';
              range.format.borders.getItem('EdgeTop').style = 'Continuous';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.RangeFormat#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.RangeFormat;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.RangeFormat:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'excel!Excel.RangeFormat#set:member(1)'
    package: excel!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.RangeFormat): void`
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.RangeFormatUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: >-
            <xref uid="excel!Excel.Interfaces.RangeFormatUpdateData:interface"
            />
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'excel!Excel.RangeFormat#set:member(2)'
    package: excel!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.RangeFormat): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="excel!Excel.RangeFormat:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.RangeFormat#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Excel.RangeFormat
      object is an API object, the `toJSON` method returns a plain JavaScript
      object (typed as `Excel.Interfaces.RangeFormatData`<!-- -->) that contains
      shallow copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeFormatData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.RangeFormatData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
