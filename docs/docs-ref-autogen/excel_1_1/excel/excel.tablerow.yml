### YamlMime:TSType
name: Excel.TableRow
uid: 'excel!Excel.TableRow:class'
package: excel!
fullName: Excel.TableRow
summary: >-
  Represents a row in a table.


  Note that unlike Ranges or Columns, which will adjust if new rows/columns are
  added before them, a TableRow object represent the physical location of the
  table row, but not the data. That is, if the data is sorted or if new rows are
  added, a table row will continue to point at the index for which it was
  created.


  \[ [API set: ExcelApi
  1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
  \]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'excel!Excel.TableRow#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's
      process to the Office host application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
  - name: index
    uid: 'excel!Excel.TableRow#index:member'
    package: excel!
    fullName: index
    summary: >-
      Returns the index number of the row within the rows collection of the
      table. Zero-indexed.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly index: number;'
      return:
        type: number
  - name: values
    uid: 'excel!Excel.TableRow#values:member'
    package: excel!
    fullName: values
    summary: >-
      Represents the raw values of the specified range. The data returned could
      be of type string, number, or a boolean. Cells that contain an error will
      return the error string.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'values: any[][];'
      return:
        type: 'any[][]'
methods:
  - name: delete()
    uid: 'excel!Excel.TableRow#delete:member(1)'
    package: excel!
    fullName: delete()
    summary: >-
      Deletes the row from the table.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: |-


          #### Examples

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);
              row.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - name: getRange()
    uid: 'excel!Excel.TableRow#getRange:member(1)'
    package: excel!
    fullName: getRange()
    summary: >-
      Returns the range object associated with the entire row.


      \[ [API set: ExcelApi
      1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)
      \]
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type: '<xref uid="excel!Excel.Range:class" />'
        description: |-


          #### Examples

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(0);
              var rowRange = row.getRange();
              rowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(rowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - name: load(options)
    uid: 'excel!Excel.TableRow#load:member(1)'
    package: excel!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.TableRowLoadOptions): Excel.TableRow;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="excel!Excel.Interfaces.TableRowLoadOptions:interface" />'
      return:
        type: '<xref uid="excel!Excel.TableRow:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.TableRow#load:member(2)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableRow;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="excel!Excel.TableRow:class" />'
        description: |-


          #### Examples

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItem(0);
              row.load('index');
              return ctx.sync().then(function() {
                  console.log(row.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - name: load(propertyNamesAndPaths)
    uid: 'excel!Excel.TableRow#load:member(3)'
    package: excel!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.TableRow;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that
            specifies the properties to load, and `propertyNamesAndPaths.expand`
            is a comma-delimited string that specifies the navigation properties
            to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="excel!Excel.TableRow:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'excel!Excel.TableRow#set:member(1)'
    package: excel!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass
      either a plain object with the appropriate properties, or another API
      object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Excel.TableRow): void`
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        set(properties: Interfaces.TableRowUpdateData, options?:
        OfficeExtension.UpdateOptions): void;
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured
            isomorphically to the properties of the object on which the method
            is called.
          type: '<xref uid="excel!Excel.Interfaces.TableRowUpdateData:interface" />'
        - id: options
          description: >-
            Provides an option to suppress errors if the properties object tries
            to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'excel!Excel.TableRow#set:member(2)'
    package: excel!
    fullName: set(properties)
    summary: >-
      Sets multiple properties on the object at the same time, based on an
      existing loaded object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.TableRow): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="excel!Excel.TableRow:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'excel!Excel.TableRow#toJSON:member(1)'
    package: excel!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful
      output when an API object is passed to `JSON.stringify()`<!-- -->.
      (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the
      object that is passed to it.) Whereas the original Excel.TableRow object
      is an API object, the `toJSON` method returns a plain JavaScript object
      (typed as `Excel.Interfaces.TableRowData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableRowData;'
      return:
        type: '<xref uid="excel!Excel.Interfaces.TableRowData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
