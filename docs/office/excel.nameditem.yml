### YamlMime:UniversalReference
items:
  - uid: office.Excel.NamedItem
    summary: >-
      Represents a defined name for a range of cells or value. Names can be primitive named objects (as seen in the type
      below), range object, reference to a range. This object can be used to obtain range object associated with names.


      \[ [Api set: ExcelApi 1.1](http://bing.com) \]
    name: Excel.NamedItem
    fullName: office.Excel.NamedItem
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: office
    children:
      - office.Excel.NamedItem.comment
      - office.Excel.NamedItem.delete
      - office.Excel.NamedItem.getRange
      - office.Excel.NamedItem.getRangeOrNullObject
      - office.Excel.NamedItem.load
      - office.Excel.NamedItem.name
      - office.Excel.NamedItem.scope
      - office.Excel.NamedItem.set
      - office.Excel.NamedItem.toJSON
      - office.Excel.NamedItem.type
      - office.Excel.NamedItem.value
      - office.Excel.NamedItem.visible
      - office.Excel.NamedItem.worksheet
      - office.Excel.NamedItem.worksheetOrNullObject
  - uid: office.Excel.NamedItem.comment
    summary: |-
      Represents the comment associated with this name.

      \[ [Api set: ExcelApi 1.4](http://bing.com) \]
    name: comment
    fullName: office.Excel.NamedItem.comment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'comment: string;'
      return:
        type:
          - string
  - uid: office.Excel.NamedItem.delete
    summary: |-
      Deletes the given name.

      \[ [Api set: ExcelApi 1.4](http://bing.com) \]
    name: delete()
    fullName: office.Excel.NamedItem.delete
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
    remarks: |


      ## Snippets

      ```typescript
      try {
          await Excel.run(async (context) => {

              const sheet = context.workbook.worksheets.getItem("Sample");

              sheet.names.getItem("TotalAmount").delete();

              // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.
              sheet.getRange("D11").values = [["=SUM(ExpensesTable[AMOUNT])"]];

              await context.sync();

          });
      }
      catch (error) {
          OfficeHelpers.UI.notify(error);
          OfficeHelpers.Utilities.log(error);
      }
      ```
  - uid: office.Excel.NamedItem.getRange
    summary: >-
      Returns the range object that is associated with the name. Throws an error if the named item's type is not a
      range.


      \[ [Api set: ExcelApi 1.1](http://bing.com) \]
    name: getRange()
    fullName: office.Excel.NamedItem.getRange
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - Excel.Range
        description: ''
  - uid: office.Excel.NamedItem.getRangeOrNullObject
    summary: >-
      Returns the range object that is associated with the name. Returns a null object if the named item's type is not a
      range.


      \[ [Api set: ExcelApi 1.4](http://bing.com) \]
    name: getRangeOrNullObject()
    fullName: office.Excel.NamedItem.getRangeOrNullObject
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - Excel.Range
        description: ''
  - uid: office.Excel.NamedItem.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: office.Excel.NamedItem.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[] | OfficeExtension.LoadOption): Excel.NamedItem;'
      return:
        type:
          - Excel.NamedItem
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'string | string[] | OfficeExtension.LoadOption'
  - uid: office.Excel.NamedItem.name
    summary: |-
      The name of the object. Read-only.

      \[ [Api set: ExcelApi 1.1](http://bing.com) \]
    name: name
    fullName: office.Excel.NamedItem.name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: office.Excel.NamedItem.scope
    summary: |-
      Indicates whether the name is scoped to the workbook or to a specific worksheet. Read-only.

      \[ [Api set: ExcelApi 1.4](http://bing.com) \]
    name: scope
    fullName: office.Excel.NamedItem.scope
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly scope: string;'
      return:
        type:
          - string
  - uid: office.Excel.NamedItem.set
    summary: 'Sets multiple properties on the object at the same time, based on JSON input.'
    name: 'set(properties, options)'
    fullName: office.Excel.NamedItem.set
    langs:
      - typeScript
    type: method
    syntax:
      content: "set(properties: Interfaces.NamedItemUpdateData, options?: {\r\n            throwOnReadOnly?: boolean;\r\n        }): void;"
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Interfaces.NamedItemUpdateData
        - id: options
          description: ''
          type:
            - "{\r\n            /**\r\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\r\n             */\r\n            throwOnReadOnly?: boolean;\r\n        }"
  - uid: office.Excel.NamedItem.toJSON
    name: toJSON()
    fullName: office.Excel.NamedItem.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON:'
      return:
        type:
          - "{\r\n            \"comment\": string;\r\n            \"name\": string;\r\n            \"scope\": string;\r\n            \"type\": string;\r\n            \"value\": any;\r\n            \"visible\": boolean;\r\n        }"
        description: ''
  - uid: office.Excel.NamedItem.type
    summary: |-
      Indicates the type of the value returned by the name's formula. See Excel.NamedItemType for details. Read-only.

      \[ [Api set: ExcelApi 1.1](http://bing.com) \]
    name: type
    fullName: office.Excel.NamedItem.type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: string;'
      return:
        type:
          - string
  - uid: office.Excel.NamedItem.value
    summary: |-
      Represents the value computed by the name's formula. For a named range, will return the range address. Read-only.

      \[ [Api set: ExcelApi 1.1](http://bing.com) \]
    name: value
    fullName: office.Excel.NamedItem.value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: any;'
      return:
        type:
          - any
  - uid: office.Excel.NamedItem.visible
    summary: |-
      Specifies whether the object is visible or not.

      \[ [Api set: ExcelApi 1.1](http://bing.com) \]
    name: visible
    fullName: office.Excel.NamedItem.visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
  - uid: office.Excel.NamedItem.worksheet
    summary: >-
      Returns the worksheet on which the named item is scoped to. Throws an error if the items is scoped to the workbook
      instead.


      \[ [Api set: ExcelApi 1.4](http://bing.com) \]
    name: worksheet
    fullName: office.Excel.NamedItem.worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - Excel.Worksheet
  - uid: office.Excel.NamedItem.worksheetOrNullObject
    summary: >-
      Returns the worksheet on which the named item is scoped to. Returns a null object if the item is scoped to the
      workbook instead.


      \[ [Api set: ExcelApi 1.4](http://bing.com) \]
    name: worksheetOrNullObject
    fullName: office.Excel.NamedItem.worksheetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
      return:
        type:
          - Excel.Worksheet
