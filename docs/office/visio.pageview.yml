### YamlMime:UniversalReference
items:
  - uid: office.Visio.PageView
    summary: |-
      Represents the PageView class.

      \[ [Api set: 1.1](http://bing.com) \]
    name: Visio.PageView
    fullName: office.Visio.PageView
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: office
    children:
      - office.Visio.PageView.centerViewportOnShape
      - office.Visio.PageView.fitToWindow
      - office.Visio.PageView.getPosition
      - office.Visio.PageView.getSelection
      - office.Visio.PageView.isShapeInViewport
      - office.Visio.PageView.load
      - office.Visio.PageView.set
      - office.Visio.PageView.setPosition
      - office.Visio.PageView.toJSON
      - office.Visio.PageView.zoom
  - uid: office.Visio.PageView.centerViewportOnShape
    summary: |-
      Pans the Visio drawing to place the specified shape in the center of the view.

      \[ [Api set: 1.1](http://bing.com) \]
    name: centerViewportOnShape(ShapeId)
    fullName: office.Visio.PageView.centerViewportOnShape
    langs:
      - typeScript
    type: method
    syntax:
      content: 'centerViewportOnShape(ShapeId: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: ShapeId
          description: ShapeId to be seen in the center.
          type:
            - number
  - uid: office.Visio.PageView.fitToWindow
    summary: |-
      Fit Page to current window.

      \[ [Api set: 1.1](http://bing.com) \]
    name: fitToWindow()
    fullName: office.Visio.PageView.fitToWindow
    langs:
      - typeScript
    type: method
    syntax:
      content: 'fitToWindow(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office.Visio.PageView.getPosition
    summary: |-
      Returns the position object that specifies the position of the page in the view.

      \[ [Api set: 1.1](http://bing.com) \]
    name: getPosition()
    fullName: office.Visio.PageView.getPosition
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPosition(): OfficeExtension.ClientResult<Visio.Position>;'
      return:
        type:
          - OfficeExtension.ClientResult<Visio.Position>
        description: ''
  - uid: office.Visio.PageView.getSelection
    summary: |-
      Represents the Selection in the page.

      \[ [Api set: 1.1](http://bing.com) \]
    name: getSelection()
    fullName: office.Visio.PageView.getSelection
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelection(): Visio.Selection;'
      return:
        type:
          - Visio.Selection
        description: ''
  - uid: office.Visio.PageView.isShapeInViewport
    summary: |-
      To check if the shape is in view of the page or not.

      \[ [Api set: 1.1](http://bing.com) \]
    name: isShapeInViewport(Shape)
    fullName: office.Visio.PageView.isShapeInViewport
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isShapeInViewport(Shape: Visio.Shape): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - OfficeExtension.ClientResult<boolean>
        description: ''
      parameters:
        - id: Shape
          description: Shape to be checked.
          type:
            - Visio.Shape
  - uid: office.Visio.PageView.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: office.Visio.PageView.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.PageViewLoadOptions): Visio.PageView;'
      return:
        type:
          - Visio.PageView
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.PageViewLoadOptions
  - uid: office.Visio.PageView.set
    summary: 'Sets multiple properties on the object at the same time, based on JSON input.'
    name: 'set(properties, options)'
    fullName: office.Visio.PageView.set
    langs:
      - typeScript
    type: method
    syntax:
      content: "set(properties: Interfaces.PageViewUpdateData, options?: {\r\n            throwOnReadOnly?: boolean;\r\n        }): void;"
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Interfaces.PageViewUpdateData
        - id: options
          description: ''
          type:
            - "{\r\n            /**\r\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\r\n             */\r\n            throwOnReadOnly?: boolean;\r\n        }"
  - uid: office.Visio.PageView.setPosition
    summary: |-
      Sets the position of the page in the view.

      \[ [Api set: 1.1](http://bing.com) \]
    name: setPosition(Position)
    fullName: office.Visio.PageView.setPosition
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPosition(Position: Visio.Position): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: Position
          description: Position object that specifies the new position of the page in the view.
          type:
            - Visio.Position
  - uid: office.Visio.PageView.toJSON
    name: toJSON()
    fullName: office.Visio.PageView.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.PageViewData;'
      return:
        type:
          - Visio.Interfaces.PageViewData
        description: ''
  - uid: office.Visio.PageView.zoom
    summary: |-
      Get/Set Page's Zoom level. The value can be between 10 and 400 and denotes the percentage of zoom.

      \[ [Api set: 1.1](http://bing.com) \]
    name: zoom
    fullName: office.Visio.PageView.zoom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'zoom: number;'
      return:
        type:
          - number
