### YamlMime:UniversalReference
items:
  - uid: office.Word.ContentControl
    summary: >-
      Represents a content control. Content controls are bounded and potentially labeled regions in a document that
      serve as containers for specific types of content. Individual content controls may contain contents such as
      images, tables, or paragraphs of formatted text. Currently, only rich text content controls are supported.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: Word.ContentControl
    fullName: office.Word.ContentControl
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: office
    children:
      - office.Word.ContentControl.appearance
      - office.Word.ContentControl.cannotDelete
      - office.Word.ContentControl.cannotEdit
      - office.Word.ContentControl.clear
      - office.Word.ContentControl.color
      - office.Word.ContentControl.contentControls
      - office.Word.ContentControl.delete
      - office.Word.ContentControl.font
      - office.Word.ContentControl.getHtml
      - office.Word.ContentControl.getOoxml
      - office.Word.ContentControl.getRange
      - office.Word.ContentControl.getTextRanges
      - office.Word.ContentControl.id
      - office.Word.ContentControl.inlinePictures
      - office.Word.ContentControl.insertBreak
      - office.Word.ContentControl.insertFileFromBase64
      - office.Word.ContentControl.insertHtml
      - office.Word.ContentControl.insertInlinePictureFromBase64
      - office.Word.ContentControl.insertOoxml
      - office.Word.ContentControl.insertParagraph
      - office.Word.ContentControl.insertTable
      - office.Word.ContentControl.insertText
      - office.Word.ContentControl.lists
      - office.Word.ContentControl.load
      - office.Word.ContentControl.paragraphs
      - office.Word.ContentControl.parentBody
      - office.Word.ContentControl.parentContentControl
      - office.Word.ContentControl.parentContentControlOrNullObject
      - office.Word.ContentControl.parentTable
      - office.Word.ContentControl.parentTableCell
      - office.Word.ContentControl.parentTableCellOrNullObject
      - office.Word.ContentControl.parentTableOrNullObject
      - office.Word.ContentControl.placeholderText
      - office.Word.ContentControl.removeWhenEdited
      - office.Word.ContentControl.search
      - office.Word.ContentControl.select
      - office.Word.ContentControl.set
      - office.Word.ContentControl.split
      - office.Word.ContentControl.style
      - office.Word.ContentControl.styleBuiltIn
      - office.Word.ContentControl.subtype
      - office.Word.ContentControl.tables
      - office.Word.ContentControl.tag
      - office.Word.ContentControl.text
      - office.Word.ContentControl.title
      - office.Word.ContentControl.toJSON
      - office.Word.ContentControl.track
      - office.Word.ContentControl.type
      - office.Word.ContentControl.untrack
  - uid: office.Word.ContentControl.appearance
    summary: |-
      Gets or sets the appearance of the content control. The value can be 'boundingBox', 'tags' or 'hidden'.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: appearance
    fullName: office.Word.ContentControl.appearance
    langs:
      - typeScript
    type: property
    syntax:
      content: 'appearance: string;'
      return:
        type:
          - string
  - uid: office.Word.ContentControl.cannotDelete
    summary: >-
      Gets or sets a value that indicates whether the user can delete the content control. Mutually exclusive with
      removeWhenEdited.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: cannotDelete
    fullName: office.Word.ContentControl.cannotDelete
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cannotDelete: boolean;'
      return:
        type:
          - boolean
  - uid: office.Word.ContentControl.cannotEdit
    summary: |-
      Gets or sets a value that indicates whether the user can edit the contents of the content control.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: cannotEdit
    fullName: office.Word.ContentControl.cannotEdit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cannotEdit: boolean;'
      return:
        type:
          - boolean
  - uid: office.Word.ContentControl.clear
    summary: |-
      Clears the contents of the content control. The user can perform the undo operation on the cleared content.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: clear()
    fullName: office.Word.ContentControl.clear
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office.Word.ContentControl.color
    summary: |-
      Gets or sets the color of the content control. Color is specified in '\#RRGGBB' format or by using the color name.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: color
    fullName: office.Word.ContentControl.color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: office.Word.ContentControl.contentControls
    summary: |-
      Gets the collection of content control objects in the content control. Read-only.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: contentControls
    fullName: office.Word.ContentControl.contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'contentControls: Word.ContentControlCollection;'
      return:
        type:
          - Word.ContentControlCollection
  - uid: office.Word.ContentControl.delete
    summary: |-
      Deletes the content control and its content. If keepContent is set to true, the content is not deleted.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: delete(keepContent)
    fullName: office.Word.ContentControl.delete
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(keepContent: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: keepContent
          description: >-
            Required. Indicates whether the content should be deleted with the content control. If keepContent is set to
            true, the content is not deleted.
          type:
            - boolean
  - uid: office.Word.ContentControl.font
    summary: >-
      Gets the text format of the content control. Use this to get and set font name, size, color, and other properties.
      Read-only.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: font
    fullName: office.Word.ContentControl.font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'font: Word.Font;'
      return:
        type:
          - Word.Font
  - uid: office.Word.ContentControl.getHtml
    summary: |-
      Gets the HTML representation of the content control object.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: getHtml()
    fullName: office.Word.ContentControl.getHtml
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: ''
  - uid: office.Word.ContentControl.getOoxml
    summary: |-
      Gets the Office Open XML (OOXML) representation of the content control object.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: getOoxml()
    fullName: office.Word.ContentControl.getOoxml
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: ''
  - uid: office.Word.ContentControl.getRange
    summary: |-
      Gets the whole content control, or the starting or ending point of the content control, as a range.

      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: getRange(rangeLocation)
    fullName: office.Word.ContentControl.getRange
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: string): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocation
          description: 'Optional. The range location can be ''Whole'', ''Before'', ''Start'', ''End'', ''After'' or ''Content''.'
          type:
            - string
  - uid: office.Word.ContentControl.getTextRanges
    summary: |-
      Gets the text ranges in the content control by using punctuation marks and/or other ending marks.

      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: 'getTextRanges(endingMarks, trimSpacing)'
    fullName: office.Word.ContentControl.getTextRanges
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextRanges(endingMarks: Array<string>, trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - Word.RangeCollection
        description: ''
      parameters:
        - id: endingMarks
          description: Required. The punctuation marks and/or other ending marks as an array of strings.
          type:
            - Array<string>
        - id: trimSpacing
          description: >-
            Optional. Indicates whether to trim spacing characters (spaces, tabs, column breaks and paragraph end marks)
            from the start and end of the ranges returned in the range collection. Default is false which indicates that
            spacing characters at the start and end of the ranges are included in the range collection.
          type:
            - boolean
  - uid: office.Word.ContentControl.id
    summary: |-
      Gets an integer that represents the content control identifier. Read-only.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: id
    fullName: office.Word.ContentControl.id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: number;'
      return:
        type:
          - number
  - uid: office.Word.ContentControl.inlinePictures
    summary: >-
      Gets the collection of inlinePicture objects in the content control. The collection does not include floating
      images. Read-only.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: inlinePictures
    fullName: office.Word.ContentControl.inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - Word.InlinePictureCollection
  - uid: office.Word.ContentControl.insertBreak
    summary: >-
      Inserts a break at the specified location in the main document. The insertLocation value can be 'Start', 'End',
      'Before' or 'After'. This method cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell'
      content controls.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: 'insertBreak(breakType, insertLocation)'
    fullName: office.Word.ContentControl.insertBreak
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: string, insertLocation: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakType
          description: Required. Type of break.
          type:
            - string
        - id: insertLocation
          description: 'Required. The value can be ''Start'', ''End'', ''Before'' or ''After''.'
          type:
            - string
  - uid: office.Word.ContentControl.insertFileFromBase64
    summary: >-
      Inserts a document into the content control at the specified location. The insertLocation value can be 'Replace',
      'Start' or 'End'.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: office.Word.ContentControl.insertFileFromBase64
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: string): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: base64File
          description: Required. The base64 encoded content of a .docx file.
          type:
            - string
        - id: insertLocation
          description: >-
            Required. The value can be 'Replace', 'Start' or 'End'. 'Replace' cannot be used with 'RichTextTable' and
            'RichTextTableRow' content controls.
          type:
            - string
  - uid: office.Word.ContentControl.insertHtml
    summary: >-
      Inserts HTML into the content control at the specified location. The insertLocation value can be 'Replace',
      'Start' or 'End'.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: 'insertHtml(html, insertLocation)'
    fullName: office.Word.ContentControl.insertHtml
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: string): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: html
          description: Required. The HTML to be inserted in to the content control.
          type:
            - string
        - id: insertLocation
          description: >-
            Required. The value can be 'Replace', 'Start' or 'End'. 'Replace' cannot be used with 'RichTextTable' and
            'RichTextTableRow' content controls.
          type:
            - string
  - uid: office.Word.ContentControl.insertInlinePictureFromBase64
    summary: >-
      Inserts an inline picture into the content control at the specified location. The insertLocation value can be
      'Replace', 'Start' or 'End'.


      \[ [Api set: WordApi 1.2](http://bing.com) \]
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: office.Word.ContentControl.insertInlinePictureFromBase64
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: string): Word.InlinePicture;'
      return:
        type:
          - Word.InlinePicture
        description: ''
      parameters:
        - id: base64EncodedImage
          description: Required. The base64 encoded image to be inserted in the content control.
          type:
            - string
        - id: insertLocation
          description: >-
            Required. The value can be 'Replace', 'Start' or 'End'. 'Replace' cannot be used with 'RichTextTable' and
            'RichTextTableRow' content controls.
          type:
            - string
  - uid: office.Word.ContentControl.insertOoxml
    summary: >-
      Inserts OOXML into the content control at the specified location. The insertLocation value can be 'Replace',
      'Start' or 'End'.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: office.Word.ContentControl.insertOoxml
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: string): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: Required. The OOXML to be inserted in to the content control.
          type:
            - string
        - id: insertLocation
          description: >-
            Required. The value can be 'Replace', 'Start' or 'End'. 'Replace' cannot be used with 'RichTextTable' and
            'RichTextTableRow' content controls.
          type:
            - string
  - uid: office.Word.ContentControl.insertParagraph
    summary: >-
      Inserts a paragraph at the specified location. The insertLocation value can be 'Start', 'End', 'Before' or
      'After'.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: office.Word.ContentControl.insertParagraph
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: string): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: Required. The paragrph text to be inserted.
          type:
            - string
        - id: insertLocation
          description: >-
            Required. The value can be 'Start', 'End', 'Before' or 'After'. 'Before' and 'After' cannot be used with
            'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.
          type:
            - string
  - uid: office.Word.ContentControl.insertTable
    summary: >-
      Inserts a table with the specified number of rows and columns into, or next to, a content control. The
      insertLocation value can be 'Start', 'End', 'Before' or 'After'.


      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: office.Word.ContentControl.insertTable
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        insertTable(rowCount: number, columnCount: number, insertLocation: string, values?: Array<Array<string>>):
        Word.Table;
      return:
        type:
          - Word.Table
        description: ''
      parameters:
        - id: rowCount
          description: Required. The number of rows in the table.
          type:
            - number
        - id: columnCount
          description: Required. The number of columns in the table.
          type:
            - number
        - id: insertLocation
          description: >-
            Required. The value can be 'Start', 'End', 'Before' or 'After'. 'Before' and 'After' cannot be used with
            'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.
          type:
            - string
        - id: values
          description: Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
          type:
            - Array<Array<string>>
  - uid: office.Word.ContentControl.insertText
    summary: >-
      Inserts text into the content control at the specified location. The insertLocation value can be 'Replace',
      'Start' or 'End'.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: 'insertText(text, insertLocation)'
    fullName: office.Word.ContentControl.insertText
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: string): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: text
          description: Required. The text to be inserted in to the content control.
          type:
            - string
        - id: insertLocation
          description: >-
            Required. The value can be 'Replace', 'Start' or 'End'. 'Replace' cannot be used with 'RichTextTable' and
            'RichTextTableRow' content controls.
          type:
            - string
  - uid: office.Word.ContentControl.lists
    summary: |-
      Gets the collection of list objects in the content control. Read-only.

      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: lists
    fullName: office.Word.ContentControl.lists
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lists: Word.ListCollection;'
      return:
        type:
          - Word.ListCollection
  - uid: office.Word.ContentControl.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: office.Word.ContentControl.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[] | OfficeExtension.LoadOption): Word.ContentControl;'
      return:
        type:
          - Word.ContentControl
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'string | string[] | OfficeExtension.LoadOption'
  - uid: office.Word.ContentControl.paragraphs
    summary: |-
      Get the collection of paragraph objects in the content control. Read-only.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: paragraphs
    fullName: office.Word.ContentControl.paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - Word.ParagraphCollection
  - uid: office.Word.ContentControl.parentBody
    summary: |-
      Gets the parent body of the content control. Read-only.

      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: parentBody
    fullName: office.Word.ContentControl.parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'parentBody: Word.Body;'
      return:
        type:
          - Word.Body
  - uid: office.Word.ContentControl.parentContentControl
    summary: >-
      Gets the content control that contains the content control. Throws if there isn't a parent content control.
      Read-only.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: parentContentControl
    fullName: office.Word.ContentControl.parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'parentContentControl: Word.ContentControl;'
      return:
        type:
          - Word.ContentControl
  - uid: office.Word.ContentControl.parentContentControlOrNullObject
    summary: >-
      Gets the content control that contains the content control. Returns a null object if there isn't a parent content
      control. Read-only.


      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: parentContentControlOrNullObject
    fullName: office.Word.ContentControl.parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - Word.ContentControl
  - uid: office.Word.ContentControl.parentTable
    summary: |-
      Gets the table that contains the content control. Throws if it is not contained in a table. Read-only.

      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: parentTable
    fullName: office.Word.ContentControl.parentTable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'parentTable: Word.Table;'
      return:
        type:
          - Word.Table
  - uid: office.Word.ContentControl.parentTableCell
    summary: |-
      Gets the table cell that contains the content control. Throws if it is not contained in a table cell. Read-only.

      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: parentTableCell
    fullName: office.Word.ContentControl.parentTableCell
    langs:
      - typeScript
    type: property
    syntax:
      content: 'parentTableCell: Word.TableCell;'
      return:
        type:
          - Word.TableCell
  - uid: office.Word.ContentControl.parentTableCellOrNullObject
    summary: >-
      Gets the table cell that contains the content control. Returns a null object if it is not contained in a table
      cell. Read-only.


      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: parentTableCellOrNullObject
    fullName: office.Word.ContentControl.parentTableCellOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'parentTableCellOrNullObject: Word.TableCell;'
      return:
        type:
          - Word.TableCell
  - uid: office.Word.ContentControl.parentTableOrNullObject
    summary: >-
      Gets the table that contains the content control. Returns a null object if it is not contained in a table.
      Read-only.


      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: parentTableOrNullObject
    fullName: office.Word.ContentControl.parentTableOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'parentTableOrNullObject: Word.Table;'
      return:
        type:
          - Word.Table
  - uid: office.Word.ContentControl.placeholderText
    summary: >-
      Gets or sets the placeholder text of the content control. Dimmed text will be displayed when the content control
      is empty.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: placeholderText
    fullName: office.Word.ContentControl.placeholderText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'placeholderText: string;'
      return:
        type:
          - string
  - uid: office.Word.ContentControl.removeWhenEdited
    summary: >-
      Gets or sets a value that indicates whether the content control is removed after it is edited. Mutually exclusive
      with cannotDelete.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: removeWhenEdited
    fullName: office.Word.ContentControl.removeWhenEdited
    langs:
      - typeScript
    type: property
    syntax:
      content: 'removeWhenEdited: boolean;'
      return:
        type:
          - boolean
  - uid: office.Word.ContentControl.search
    summary: >-
      Performs a search with the specified searchOptions on the scope of the content control object. The search results
      are a collection of range objects.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: 'search(searchText, searchOptions)'
    fullName: office.Word.ContentControl.search
    langs:
      - typeScript
    type: method
    syntax:
      content: "search(searchText: string, searchOptions?: Word.SearchOptions | {\r\n            ignorePunct?: boolean;\r\n            ignoreSpace?: boolean;\r\n            matchCase?: boolean;\r\n            matchPrefix?: boolean;\r\n            matchSuffix?: boolean;\r\n            matchWholeWord?: boolean;\r\n            matchWildcards?: boolean;\r\n        }): Word.RangeCollection;"
      return:
        type:
          - Word.RangeCollection
        description: ''
      parameters:
        - id: searchText
          description: Required. The search text.
          type:
            - string
        - id: searchOptions
          description: Optional. Options for the search.
          type:
            - "Word.SearchOptions | {\r\n            ignorePunct?: boolean;\r\n            ignoreSpace?: boolean;\r\n            matchCase?: boolean;\r\n            matchPrefix?: boolean;\r\n            matchSuffix?: boolean;\r\n            matchWholeWord?: boolean;\r\n            matchWildcards?: boolean;\r\n        }"
  - uid: office.Word.ContentControl.select
    summary: |-
      Selects the content control. This causes Word to scroll to the selection.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: select(selectionMode)
    fullName: office.Word.ContentControl.select
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionMode
          description: 'Optional. The selection mode can be ''Select'', ''Start'' or ''End''. ''Select'' is the default.'
          type:
            - string
  - uid: office.Word.ContentControl.set
    summary: 'Sets multiple properties on the object at the same time, based on JSON input.'
    name: 'set(properties, options)'
    fullName: office.Word.ContentControl.set
    langs:
      - typeScript
    type: method
    syntax:
      content: "set(properties: Interfaces.ContentControlUpdateData, options?: {\r\n            throwOnReadOnly?: boolean;\r\n        }): void;"
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Interfaces.ContentControlUpdateData
        - id: options
          description: ''
          type:
            - "{\r\n            /**\r\n             * Throw an error if the passed-in property list includes read-only properties (default = true).\r\n             */\r\n            throwOnReadOnly?: boolean;\r\n        }"
  - uid: office.Word.ContentControl.split
    summary: |-
      Splits the content control into child ranges by using delimiters.

      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: 'split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)'
    fullName: office.Word.ContentControl.split
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        split(delimiters: Array<string>, multiParagraphs?: boolean, trimDelimiters?: boolean, trimSpacing?: boolean):
        Word.RangeCollection;
      return:
        type:
          - Word.RangeCollection
        description: ''
      parameters:
        - id: delimiters
          description: Required. The delimiters as an array of strings.
          type:
            - Array<string>
        - id: multiParagraphs
          description: >-
            Optional. Indicates whether a returned child range can cover multiple paragraphs. Default is false which
            indicates that the paragraph boundaries are also used as delimiters.
          type:
            - boolean
        - id: trimDelimiters
          description: >-
            Optional. Indicates whether to trim delimiters from the ranges in the range collection. Default is false
            which indicates that the delimiters are included in the ranges returned in the range collection.
          type:
            - boolean
        - id: trimSpacing
          description: >-
            Optional. Indicates whether to trim spacing characters (spaces, tabs, column breaks and paragraph end marks)
            from the start and end of the ranges returned in the range collection. Default is false which indicates that
            spacing characters at the start and end of the ranges are included in the range collection.
          type:
            - boolean
  - uid: office.Word.ContentControl.style
    summary: >-
      Gets or sets the style name for the content control. Use this property for custom styles and localized style
      names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.


      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: style
    fullName: office.Word.ContentControl.style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: office.Word.ContentControl.styleBuiltIn
    summary: >-
      Gets or sets the built-in style name for the content control. Use this property for built-in styles that are
      portable between locales. To use custom styles or localized style names, see the "style" property.


      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: styleBuiltIn
    fullName: office.Word.ContentControl.styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBuiltIn: string;'
      return:
        type:
          - string
  - uid: office.Word.ContentControl.subtype
    summary: >-
      Gets the content control subtype. The subtype can be 'RichTextInline', 'RichTextParagraphs', 'RichTextTableCell',
      'RichTextTableRow' and 'RichTextTable' for rich text content controls. Read-only.


      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: subtype
    fullName: office.Word.ContentControl.subtype
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtype: string;'
      return:
        type:
          - string
  - uid: office.Word.ContentControl.tables
    summary: |-
      Gets the collection of table objects in the content control. Read-only.

      \[ [Api set: WordApi 1.3](http://bing.com) \]
    name: tables
    fullName: office.Word.ContentControl.tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tables: Word.TableCollection;'
      return:
        type:
          - Word.TableCollection
  - uid: office.Word.ContentControl.tag
    summary: |-
      Gets or sets a tag to identify a content control.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: tag
    fullName: office.Word.ContentControl.tag
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tag: string;'
      return:
        type:
          - string
  - uid: office.Word.ContentControl.text
    summary: |-
      Gets the text of the content control. Read-only.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: text
    fullName: office.Word.ContentControl.text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'text: string;'
      return:
        type:
          - string
  - uid: office.Word.ContentControl.title
    summary: |-
      Gets or sets the title for a content control.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: title
    fullName: office.Word.ContentControl.title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'title: string;'
      return:
        type:
          - string
  - uid: office.Word.ContentControl.toJSON
    name: toJSON()
    fullName: office.Word.ContentControl.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON:'
      return:
        type:
          - "{\r\n            \"appearance\": string;\r\n            \"cannotDelete\": boolean;\r\n            \"cannotEdit\": boolean;\r\n            \"color\": string;\r\n            \"font\": Font;\r\n            \"id\": number;\r\n            \"placeholderText\": string;\r\n            \"removeWhenEdited\": boolean;\r\n            \"style\": string;\r\n            \"styleBuiltIn\": string;\r\n            \"subtype\": string;\r\n            \"tag\": string;\r\n            \"text\": string;\r\n            \"title\": string;\r\n            \"type\": string;\r\n        }"
        description: ''
  - uid: office.Word.ContentControl.track
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: office.Word.ContentControl.track
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.ContentControl;'
      return:
        type:
          - Word.ContentControl
        description: ''
  - uid: office.Word.ContentControl.type
    summary: |-
      Gets the content control type. Only rich text content controls are supported currently. Read-only.

      \[ [Api set: WordApi 1.1](http://bing.com) \]
    name: type
    fullName: office.Word.ContentControl.type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type: string;'
      return:
        type:
          - string
  - uid: office.Word.ContentControl.untrack
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: office.Word.ContentControl.untrack
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.ContentControl;'
      return:
        type:
          - Word.ContentControl
        description: ''
